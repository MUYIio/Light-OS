exit:
	addi	sp,sp,-16
	sd	ra,8(sp)
	sd	s0,0(sp)
	mv	s0,a0
	jal	ra,0x2f9a8 # __funcs_on_exit>
	jal	ra,0x2f9aa # __libc_exit_fini>
	auipc	t1,0x3d
	ld	t1,608(t1) # 0x4d390 # _GLOBAL_OFFSET_TABLE_+0x88>
	jalr	t1
	mv	a0,s0
	jal	ra,0x37f1e # _Exit>

main:
	addi	sp,sp,-32
	sd	s1,8(sp)
	sd	s2,0(sp)
	sd	ra,24(sp)
	sd	s0,16(sp)
	mv	s2,a0
	mv	s1,a1
	jal	ra,0x230aa # luaL_newstate>
	beqz	a0,0x101b8 # main+0x78>
	li	a2,0
	auipc	a1,0x0
	addi	a1,a1,1816 # 0x1086e # pmain>
	mv	s0,a0
	jal	ra,0x11f4a # lua_pushcclosure>
	mv	a1,s2
	mv	a0,s0
	jal	ra,0x11e32 # lua_pushinteger>
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x11ff8 # lua_pushlightuserdata>
	li	a5,0
	li	a4,0
	li	a3,0
	li	a2,1
	li	a1,2
	mv	a0,s0
	jal	ra,0x1292a # lua_pcallk>
	mv	s2,a0
	li	a1,-1
	mv	a0,s0
	jal	ra,0x119ee # lua_toboolean>
	mv	s1,a0
	mv	a0,s0
	bnez	s2,0x101aa # main+0x6a>
	jal	ra,0x1bb26 # lua_close>
	seqz	a0,s1
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret
	jal	ra,0x10544 # report.part.0>
	mv	a0,s0
	jal	ra,0x1bb26 # lua_close>
	li	a0,1
	j	0x1019e # main+0x5e>
	ld	a2,0(s1)
	auipc	a5,0x3d
	ld	a5,502(a5) # 0x4d3b0 # _GLOBAL_OFFSET_TABLE_+0xa8>
	ld	s0,0(a5)
	beqz	a2,0x101da # main+0x9a>
	auipc	a1,0x31
	addi	a1,a1,-574 # 0x40f88 # __clzdi2+0xc0>
	mv	a0,s0
	jal	ra,0x33970 # fprintf>
	mv	a0,s0
	jal	ra,0x3362a # fflush>
	auipc	a2,0x31
	addi	a2,a2,182 # 0x41290 # __clzdi2+0x3c8>
	auipc	a1,0x31
	addi	a1,a1,-594 # 0x40f90 # __clzdi2+0xc8>
	mv	a0,s0
	jal	ra,0x33970 # fprintf>
	mv	a0,s0
	jal	ra,0x3362a # fflush>
	li	a0,1
	j	0x1019e # main+0x5e>

_start:
	auipc	gp,0x3e
	addi	gp,gp,-1650 # 0x4db88 # __global_pointer$>
	mv	a0,sp
	li	a1,0
	andi	sp,sp,-16
	j	0x1020e # _start_c>

_start_c:
	lw	a1,0(a0)
	addi	a2,a0,8
	li	a5,0
	auipc	a4,0x3d
	ld	a4,394(a4) # 0x4d3a0 # _GLOBAL_OFFSET_TABLE_+0x98>
	auipc	a3,0x3d
	ld	a3,314(a3) # 0x4d358 # _GLOBAL_OFFSET_TABLE_+0x50>
	auipc	a0,0x3d
	ld	a0,354(a0) # 0x4d388 # _GLOBAL_OFFSET_TABLE_+0x80>
	j	0x2f84e # __libc_start_main>

deregister_tm_clones:
	auipc	a0,0x3d
	addi	a0,a0,198 # 0x4d2f8 # __TMC_END__>
	auipc	a5,0x3d
	addi	a5,a5,190 # 0x4d2f8 # __TMC_END__>
	beq	a5,a0,0x10252 # deregister_tm_clones+0x20>
	auipc	a5,0x3d
	ld	a5,306(a5) # 0x4d378 # _GLOBAL_OFFSET_TABLE_+0x70>
	beqz	a5,0x10252 # deregister_tm_clones+0x20>
	jr	a5
	ret

register_tm_clones:
	auipc	a0,0x3d
	addi	a0,a0,164 # 0x4d2f8 # __TMC_END__>
	auipc	a1,0x3d
	addi	a1,a1,156 # 0x4d2f8 # __TMC_END__>
	sub	a1,a1,a0
	srai	a5,a1,0x3
	srli	a1,a1,0x3f
	add	a1,a1,a5
	srai	a1,a1,0x1
	beqz	a1,0x1027e # register_tm_clones+0x2a>
	auipc	a5,0x3d
	ld	a5,238(a5) # 0x4d360 # _GLOBAL_OFFSET_TABLE_+0x58>
	beqz	a5,0x1027e # register_tm_clones+0x2a>
	jr	a5
	ret

__do_global_dtors_aux:
	addi	sp,sp,-16
	sd	s0,0(sp)
	addi	s0,gp,-1968 # 0x4d3d8 # __SDATA_BEGIN__>
	lbu	a5,0(s0)
	sd	ra,8(sp)
	bnez	a5,0x102ae # __do_global_dtors_aux+0x2e>
	auipc	a5,0x3d
	ld	a5,176(a5) # 0x4d340 # _GLOBAL_OFFSET_TABLE_+0x38>
	beqz	a5,0x102a4 # __do_global_dtors_aux+0x24>
	auipc	a0,0x3d
	ld	a0,-666(a0) # 0x4d000 # __DATA_BEGIN__>
	jalr	a5
	jal	ra,0x10232 # deregister_tm_clones>
	li	a5,1
	sb	a5,0(s0)
	ld	ra,8(sp)
	ld	s0,0(sp)
	addi	sp,sp,16
	ret

frame_dummy:
	j	0x10254 # register_tm_clones>

lstop:
	addi	sp,sp,-16
	li	a1,0
	li	a3,0
	li	a2,0
	sd	s0,0(sp)
	sd	ra,8(sp)
	mv	s0,a0
	jal	ra,0x13780 # lua_sethook>
	mv	a0,s0
	ld	s0,0(sp)
	ld	ra,8(sp)
	auipc	a1,0x31
	addi	a1,a1,-960 # 0x40f10 # __clzdi2+0x48>
	addi	sp,sp,16
	j	0x21bdc # luaL_error>

msghandler:
	addi	sp,sp,-16
	li	a2,0
	li	a1,1
	sd	s0,0(sp)
	sd	ra,8(sp)
	mv	s0,a0
	jal	ra,0x11a62 # lua_tolstring>
	mv	a2,a0
	beqz	a0,0x10306 # msghandler+0x28>
	li	a3,1
	mv	a1,s0
	mv	a0,s0
	jal	ra,0x22bc0 # luaL_traceback>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret
	auipc	a2,0x31
	addi	a2,a2,-998 # 0x40f20 # __clzdi2+0x58>
	li	a1,1
	mv	a0,s0
	jal	ra,0x22692 # luaL_callmeta>
	beqz	a0,0x10326 # msghandler+0x48>
	li	a1,-1
	mv	a0,s0
	jal	ra,0x1144a # lua_type>
	li	a5,4
	beq	a0,a5,0x102fc # msghandler+0x1e>
	li	a1,1
	mv	a0,s0
	jal	ra,0x1144a # lua_type>
	mv	a1,a0
	mv	a0,s0
	jal	ra,0x114d0 # lua_typename>
	mv	a2,a0
	auipc	a1,0x31
	addi	a1,a1,-1032 # 0x40f30 # __clzdi2+0x68>
	mv	a0,s0
	jal	ra,0x11f0c # lua_pushfstring>
	mv	a2,a0
	j	0x102f2 # msghandler+0x14>

pushline:
	addi	sp,sp,-560
	sd	s0,544(sp)
	sd	s1,536(sp)
	sd	ra,552(sp)
	sd	s2,528(sp)
	sd	s3,520(sp)
	mv	s1,a1
	mv	s0,a0
	beqz	a1,0x1040a # pushline+0xc0>
	auipc	a1,0x31
	addi	a1,a1,-1016 # 0x40f70 # __clzdi2+0xa8>
	jal	ra,0x1202a # lua_getglobal>
	auipc	s2,0x31
	addi	s2,s2,-1060 # 0x40f50 # __clzdi2+0x88>
	bnez	a0,0x10420 # pushline+0xd6>
	auipc	a5,0x3d
	ld	a5,-102(a5) # 0x4d318 # _GLOBAL_OFFSET_TABLE_+0x10>
	ld	s3,0(a5)
	mv	a0,s2
	mv	s2,sp
	mv	a1,s3
	jal	ra,0x33abc # fputs>
	mv	a0,s3
	jal	ra,0x3362a # fflush>
	auipc	a5,0x3d
	ld	a5,-50(a5) # 0x4d368 # _GLOBAL_OFFSET_TABLE_+0x60>
	ld	a2,0(a5)
	li	a1,512
	mv	a0,s2
	jal	ra,0x3374e # fgets>
	li	a5,0
	beqz	a0,0x103ee # pushline+0xa4>
	li	a1,-2
	mv	a0,s0
	jal	ra,0x1110c # lua_settop>
	mv	a0,s2
	jal	ra,0x369fa # strlen>
	mv	a2,a0
	beqz	a0,0x103d6 # pushline+0x8c>
	addi	a5,a0,-1
	add	a4,s2,a5
	lbu	a1,0(a4)
	li	a3,10
	beq	a1,a3,0x10440 # pushline+0xf6>
	beqz	s1,0x103e4 # pushline+0x9a>
	lbu	a4,0(sp)
	li	a5,61
	beq	a4,a5,0x1044a # pushline+0x100>
	mv	a1,s2
	mv	a0,s0
	jal	ra,0x11e42 # lua_pushlstring>
	li	a5,1
	ld	ra,552(sp)
	ld	s0,544(sp)
	ld	s1,536(sp)
	ld	s2,528(sp)
	ld	s3,520(sp)
	mv	a0,a5
	addi	sp,sp,560
	ret
	auipc	a1,0x31
	addi	a1,a1,-1170 # 0x40f78 # __clzdi2+0xb0>
	jal	ra,0x1202a # lua_getglobal>
	auipc	s2,0x31
	addi	s2,s2,-1214 # 0x40f58 # __clzdi2+0x90>
	beqz	a0,0x1037e # pushline+0x34>
	li	a2,0
	li	a1,-1
	mv	a0,s0
	jal	ra,0x2272e # luaL_tolstring>
	mv	s2,a0
	li	a1,-2
	mv	a0,s0
	li	a2,-1
	jal	ra,0x111ea # lua_rotate>
	li	a1,-2
	mv	a0,s0
	jal	ra,0x1110c # lua_settop>
	j	0x1037e # pushline+0x34>
	sb	zero,0(a4)
	mv	a2,a5
	bnez	s1,0x103d8 # pushline+0x8e>
	j	0x103e4 # pushline+0x9a>
	addi	a2,sp,1
	auipc	a1,0x31
	addi	a1,a1,-1262 # 0x40f60 # __clzdi2+0x98>
	mv	a0,s0
	jal	ra,0x11f0c # lua_pushfstring>
	mv	a5,s1
	j	0x103ee # pushline+0xa4>

laction:
	addi	sp,sp,-176
	sd	s0,160(sp)
	mv	s0,a0
	addi	a0,sp,16
	sd	ra,168(sp)
	sd	zero,8(sp)
	sw	zero,144(sp)
	jal	ra,0x33494 # sigemptyset>
	addi	a1,sp,8
	li	a2,0
	mv	a0,s0
	jal	ra,0x333b2 # __sigaction>
	ld	s0,160(sp)
	ld	ra,168(sp)
	ld	a0,-1960(gp) # 0x4d3e0 # globalL>
	li	a3,1
	li	a2,15
	auipc	a1,0x0
	addi	a1,a1,-464 # 0x102b8 # lstop>
	addi	sp,sp,176
	j	0x13780 # lua_sethook>

docall:
	addi	sp,sp,-224
	sd	ra,216(sp)
	sd	s0,208(sp)
	sd	s1,200(sp)
	sd	s2,192(sp)
	sd	s3,184(sp)
	sd	s4,176(sp)
	sd	s5,168(sp)
	mv	s0,a0
	mv	s3,a1
	mv	s4,a2
	jal	ra,0x110fc # lua_gettop>
	mv	s1,a0
	li	a2,0
	mv	a0,s0
	auipc	a1,0x0
	addi	a1,a1,-472 # 0x102de # msghandler>
	jal	ra,0x11f4a # lua_pushcclosure>
	subw	s1,s1,s3
	mv	a1,s1
	li	a2,1
	mv	a0,s0
	jal	ra,0x111ea # lua_rotate>
	addi	s5,sp,16
	sd	s0,-1960(gp) # 0x4d3e0 # globalL>
	auipc	a5,0x0
	addi	a5,a5,-120 # 0x10460 # laction>
	mv	a0,s5
	sd	a5,8(sp)
	addi	s2,sp,8
	sw	zero,144(sp)
	jal	ra,0x33494 # sigemptyset>
	mv	a1,s2
	li	a2,0
	li	a0,2
	jal	ra,0x333b2 # __sigaction>
	mv	a3,s1
	li	a5,0
	li	a4,0
	mv	a2,s4
	mv	a1,s3
	mv	a0,s0
	jal	ra,0x1292a # lua_pcallk>
	mv	s3,a0
	mv	a0,s5
	sd	zero,8(sp)
	sw	zero,144(sp)
	jal	ra,0x33494 # sigemptyset>
	mv	a1,s2
	li	a2,0
	li	a0,2
	jal	ra,0x333b2 # __sigaction>
	mv	a1,s1
	mv	a0,s0
	li	a2,-1
	jal	ra,0x111ea # lua_rotate>
	mv	a0,s0
	li	a1,-2
	jal	ra,0x1110c # lua_settop>
	ld	ra,216(sp)
	ld	s0,208(sp)
	ld	s1,200(sp)
	ld	s2,192(sp)
	ld	s4,176(sp)
	ld	s5,168(sp)
	mv	a0,s3
	ld	s3,184(sp)
	addi	sp,sp,224
	ret

report.part.0:
	addi	sp,sp,-32
	li	a2,0
	li	a1,-1
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	s2,0(sp)
	sd	ra,24(sp)
	mv	s1,a0
	jal	ra,0x11a62 # lua_tolstring>
	auipc	a5,0x3d
	ld	a5,-424(a5) # 0x4d3b0 # _GLOBAL_OFFSET_TABLE_+0xa8>
	auipc	a2,0x3d
	ld	a2,-1368(a2) # 0x4d008 # progname>
	ld	s0,0(a5)
	mv	s2,a0
	beqz	a2,0x10582 # report.part.0+0x3e>
	auipc	a1,0x31
	addi	a1,a1,-1510 # 0x40f88 # __clzdi2+0xc0>
	mv	a0,s0
	jal	ra,0x33970 # fprintf>
	mv	a0,s0
	jal	ra,0x3362a # fflush>
	auipc	a1,0x31
	addi	a1,a1,-1522 # 0x40f90 # __clzdi2+0xc8>
	mv	a2,s2
	mv	a0,s0
	jal	ra,0x33970 # fprintf>
	mv	a0,s0
	jal	ra,0x3362a # fflush>
	ld	s0,16(sp)
	ld	ra,24(sp)
	ld	s2,0(sp)
	mv	a0,s1
	ld	s1,8(sp)
	li	a1,-2
	addi	sp,sp,32
	j	0x1110c # lua_settop>

dostring:
	addi	sp,sp,-32
	sd	s1,8(sp)
	mv	s1,a0
	mv	a0,a1
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s2,0(sp)
	mv	s0,a1
	mv	s2,a2
	jal	ra,0x369fa # strlen>
	mv	a2,a0
	mv	a1,s0
	li	a4,0
	mv	a3,s2
	mv	a0,s1
	jal	ra,0x22610 # luaL_loadbufferx>
	mv	s0,a0
	beqz	a0,0x105e6 # dostring+0x3c>
	mv	a0,s1
	jal	ra,0x10544 # report.part.0>
	ld	ra,24(sp)
	mv	a0,s0
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret
	li	a2,0
	li	a1,0
	mv	a0,s1
	jal	ra,0x10496 # docall>
	mv	s0,a0
	bnez	a0,0x105d2 # dostring+0x28>
	ld	ra,24(sp)
	mv	a0,s0
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret

doREPL:
	addi	sp,sp,-128
	sd	s9,40(sp)
	auipc	s9,0x3d
	addi	s9,s9,-1534 # 0x4d008 # progname>
	sd	s0,112(sp)
	sd	s4,80(sp)
	sd	s5,72(sp)
	sd	s6,64(sp)
	sd	s7,56(sp)
	sd	s8,48(sp)
	sd	s10,32(sp)
	sd	s11,24(sp)
	ld	s10,0(s9)
	sd	ra,120(sp)
	sd	s1,104(sp)
	sd	s2,96(sp)
	sd	s3,88(sp)
	mv	s0,a0
	auipc	a5,0x3d
	sd	zero,-1572(a5) # 0x4d008 # progname>
	mv	s4,sp
	addi	s8,sp,8
	li	s7,4
	auipc	s6,0x31
	addi	s6,s6,-1604 # 0x40ff8 # __clzdi2+0x130>
	auipc	s5,0x31
	addi	s5,s5,-1524 # 0x41050 # __clzdi2+0x188>
	auipc	s11,0x3d
	ld	s11,-668(s11) # 0x4d3b0 # _GLOBAL_OFFSET_TABLE_+0xa8>
	li	a1,0
	mv	a0,s0
	jal	ra,0x1110c # lua_settop>
	li	a1,1
	mv	a0,s0
	jal	ra,0x1034a # pushline>
	beqz	a0,0x10822 # doREPL+0x220>
	li	a1,-1
	li	a2,0
	mv	a0,s0
	jal	ra,0x11a62 # lua_tolstring>
	mv	a2,a0
	auipc	a1,0x31
	addi	a1,a1,-1684 # 0x40fe0 # __clzdi2+0x118>
	mv	a0,s0
	jal	ra,0x11f0c # lua_pushfstring>
	mv	s1,a0
	jal	ra,0x369fa # strlen>
	mv	a2,a0
	li	a4,0
	auipc	a3,0x31
	addi	a3,a3,-1692 # 0x40ff0 # __clzdi2+0x128>
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x22610 # luaL_loadbufferx>
	beqz	a0,0x106ea # doREPL+0xe8>
	li	a1,-3
	mv	a0,s0
	jal	ra,0x1110c # lua_settop>
	auipc	s3,0x31
	addi	s3,s3,-1718 # 0x40ff0 # __clzdi2+0x128>
	li	s2,3
	mv	a2,s4
	li	a1,1
	mv	a0,s0
	jal	ra,0x11a62 # lua_tolstring>
	ld	a2,0(sp)
	mv	a1,a0
	li	a4,0
	mv	a3,s3
	mv	a0,s0
	jal	ra,0x22610 # luaL_loadbufferx>
	mv	s1,a0
	beq	a0,s2,0x107ba # doREPL+0x1b8>
	li	a2,-1
	li	a1,1
	mv	a0,s0
	jal	ra,0x111ea # lua_rotate>
	li	a1,-2
	mv	a0,s0
	jal	ra,0x1110c # lua_settop>
	li	a5,-1
	beq	s1,a5,0x10822 # doREPL+0x220>
	beqz	s1,0x1070e # doREPL+0x10c>
	j	0x107ea # doREPL+0x1e8>
	li	a2,-1
	mv	a0,s0
	li	a1,-2
	jal	ra,0x111ea # lua_rotate>
	mv	a0,s0
	li	a1,-2
	jal	ra,0x1110c # lua_settop>
	mv	a0,s0
	li	a1,1
	li	a2,-1
	jal	ra,0x111ea # lua_rotate>
	li	a1,-2
	mv	a0,s0
	jal	ra,0x1110c # lua_settop>
	li	a2,-1
	li	a1,0
	mv	a0,s0
	jal	ra,0x10496 # docall>
	bnez	a0,0x107ea # doREPL+0x1e8>
	mv	a0,s0
	jal	ra,0x110fc # lua_gettop>
	mv	s1,a0
	blez	a0,0x10654 # doREPL+0x52>
	auipc	a2,0x31
	addi	a2,a2,-1936 # 0x40f98 # __clzdi2+0xd0>
	li	a1,20
	mv	a0,s0
	jal	ra,0x2207c # luaL_checkstack>
	auipc	a1,0x31
	addi	a1,a1,-1920 # 0x40fb8 # __clzdi2+0xf0>
	mv	a0,s0
	jal	ra,0x1202a # lua_getglobal>
	li	a2,1
	li	a1,1
	mv	a0,s0
	jal	ra,0x111ea # lua_rotate>
	li	a5,0
	li	a4,0
	li	a3,0
	li	a2,0
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x1292a # lua_pcallk>
	beqz	a0,0x10654 # doREPL+0x52>
	li	a1,-1
	li	a2,0
	mv	a0,s0
	ld	s3,0(s9)
	jal	ra,0x11a62 # lua_tolstring>
	mv	a2,a0
	auipc	a1,0x31
	addi	a1,a1,-1972 # 0x40fc0 # __clzdi2+0xf8>
	mv	a0,s0
	jal	ra,0x11f0c # lua_pushfstring>
	mv	s2,a0
	ld	s1,0(s11)
	beqz	s3,0x107a2 # doREPL+0x1a0>
	mv	a2,s3
	auipc	a1,0x30
	addi	a1,a1,2042 # 0x40f88 # __clzdi2+0xc0>
	mv	a0,s1
	jal	ra,0x33970 # fprintf>
	mv	a0,s1
	jal	ra,0x3362a # fflush>
	mv	a2,s2
	auipc	a1,0x30
	addi	a1,a1,2028 # 0x40f90 # __clzdi2+0xc8>
	mv	a0,s1
	jal	ra,0x33970 # fprintf>
	mv	a0,s1
	jal	ra,0x3362a # fflush>
	j	0x10654 # doREPL+0x52>
	li	a1,-1
	mv	a2,s8
	mv	a0,s0
	jal	ra,0x11a62 # lua_tolstring>
	ld	a5,8(sp)
	mv	a1,s6
	addi	a4,a5,-5
	add	a0,a0,a4
	bleu	a5,s7,0x107d8 # doREPL+0x1d6>
	jal	ra,0x369dc # strcmp>
	beqz	a0,0x107f2 # doREPL+0x1f0>
	mv	a0,s0
	li	a1,1
	li	a2,-1
	jal	ra,0x111ea # lua_rotate>
	li	a1,-2
	mv	a0,s0
	jal	ra,0x1110c # lua_settop>
	mv	a0,s0
	jal	ra,0x10544 # report.part.0>
	j	0x10654 # doREPL+0x52>
	mv	a0,s0
	li	a1,-2
	jal	ra,0x1110c # lua_settop>
	li	a1,0
	mv	a0,s0
	jal	ra,0x1034a # pushline>
	mv	a5,a0
	mv	a1,s5
	mv	a0,s0
	beqz	a5,0x107d8 # doREPL+0x1d6>
	jal	ra,0x11e96 # lua_pushstring>
	mv	a0,s0
	li	a2,1
	li	a1,-2
	jal	ra,0x111ea # lua_rotate>
	li	a1,3
	mv	a0,s0
	jal	ra,0x12d8e # lua_concat>
	j	0x106b0 # doREPL+0xae>
	mv	a0,s0
	li	a1,0
	jal	ra,0x1110c # lua_settop>
	auipc	a5,0x3d
	ld	a5,-1298(a5) # 0x4d318 # _GLOBAL_OFFSET_TABLE_+0x10>
	ld	s0,0(a5)
	li	a2,1
	li	a1,1
	mv	a3,s0
	auipc	a0,0x31
	addi	a0,a0,-2026 # 0x41050 # __clzdi2+0x188>
	jal	ra,0x34010 # fwrite>
	mv	a0,s0
	jal	ra,0x3362a # fflush>
	ld	ra,120(sp)
	ld	s0,112(sp)
	sd	s10,0(s9)
	ld	s1,104(sp)
	ld	s2,96(sp)
	ld	s3,88(sp)
	ld	s4,80(sp)
	ld	s5,72(sp)
	ld	s6,64(sp)
	ld	s7,56(sp)
	ld	s8,48(sp)
	ld	s9,40(sp)
	ld	s10,32(sp)
	ld	s11,24(sp)
	addi	sp,sp,128
	ret

pmain:
	addi	sp,sp,-112
	li	a2,0
	li	a1,1
	sd	ra,104(sp)
	sd	s0,96(sp)
	sd	s1,88(sp)
	sd	s3,72(sp)
	sd	s8,32(sp)
	mv	s1,a0
	sd	s2,80(sp)
	sd	s4,64(sp)
	sd	s5,56(sp)
	sd	s6,48(sp)
	sd	s7,40(sp)
	sd	s9,24(sp)
	sd	s10,16(sp)
	sd	s11,8(sp)
	jal	ra,0x11952 # lua_tointegerx>
	mv	s0,a0
	li	a1,2
	mv	a0,s1
	jal	ra,0x11c6a # lua_touserdata>
	ld	a4,8(a0)
	mv	s3,a0
	sext.w	s8,s0
	beqz	a4,0x10e04 # pmain+0x596>
	li	s7,0
	li	s2,1
	li	a3,45
	li	a7,118
	li	a6,86
	li	a0,31
	auipc	a2,0x31
	addi	a2,a2,-1536 # 0x412bc # __clzdi2+0x3f4>
	li	a1,69
	lbu	a5,0(a4)
	bne	a5,a3,0x1090e # pmain+0xa0>
	lbu	a5,1(a4)
	bltu	a7,a5,0x10aa8 # pmain+0x23a>
	bleu	a5,a6,0x10a82 # pmain+0x214>
	addiw	a5,a5,-87
	andi	a5,a5,255
	bltu	a0,a5,0x10aa8 # pmain+0x23a>
	slli	a5,a5,0x2
	add	a5,a5,a2
	lw	a5,0(a5)
	add	a5,a5,a2
	jr	a5
	ori	s7,s7,2
	lbu	a5,2(a4)
	bnez	a5,0x10aa8 # pmain+0x23a>
	addiw	s2,s2,1
	slli	a5,s2,0x3
	add	a5,a5,s3
	ld	a4,0(a5)
	ori	s7,s7,4
	bnez	a4,0x108c8 # pmain+0x5a>
	auipc	a5,0x31
	fld	fa0,-1486(a5) # 0x41340 # __clzdi2+0x478>
	li	a1,136
	mv	a0,s1
	jal	ra,0x230e8 # luaL_checkversion_>
	ld	a5,0(s3)
	beqz	a5,0x10934 # pmain+0xc6>
	lbu	a4,0(a5)
	beqz	a4,0x10934 # pmain+0xc6>
	auipc	a4,0x3c
	sd	a5,1756(a4) # 0x4d008 # progname>
	andi	a5,s7,4
	andi	s6,s7,16
	bnez	a5,0x10bf2 # pmain+0x384>
	bnez	s6,0x10bba # pmain+0x34c>
	mv	a0,s1
	li	s6,0
	jal	ra,0x23150 # luaL_openlibs>
	beq	s8,s2,0x10be2 # pmain+0x374>
	addiw	a2,s2,1
	subw	a1,s8,a2
	mv	a0,s1
	jal	ra,0x1228e # lua_createtable>
	mv	s4,s2
	blez	s8,0x10994 # pmain+0x126>
	addiw	s5,s0,-1
	slli	s5,s5,0x20
	srli	a5,s5,0x1d
	addi	s5,s3,8
	mv	s0,s3
	negw	s4,s4
	add	s5,s5,a5
	ld	a1,0(s0)
	mv	a0,s1
	addi	s0,s0,8
	jal	ra,0x11e96 # lua_pushstring>
	mv	a2,s4
	li	a1,-2
	mv	a0,s1
	jal	ra,0x126cc # lua_rawseti>
	addi	s4,s4,1
	bne	s5,s0,0x1097a # pmain+0x10c>
	auipc	a1,0x31
	addi	a1,a1,-1892 # 0x41230 # __clzdi2+0x368>
	mv	a0,s1
	jal	ra,0x12430 # lua_setglobal>
	li	a3,0
	li	a2,0
	li	a1,10
	mv	a0,s1
	jal	ra,0x12aba # lua_gc>
	beqz	s6,0x10b86 # pmain+0x318>
	li	s0,1
	beq	s2,s0,0x10b6a # pmain+0x2fc>
	li	s4,101
	auipc	s10,0x31
	addi	s10,s10,-1908 # 0x41248 # __clzdi2+0x380>
	li	s6,108
	li	s5,87
	auipc	s9,0x31
	addi	s9,s9,-1916 # 0x41250 # __clzdi2+0x388>
	j	0x109ea # pmain+0x17c>
	bne	a5,s5,0x109e4 # pmain+0x176>
	li	a2,0
	mv	a1,s9
	mv	a0,s1
	jal	ra,0x12e84 # lua_warning>
	addiw	s0,s0,1
	ble	s2,s0,0x10b6a # pmain+0x2fc>
	slli	a4,s0,0x3
	add	a4,a4,s3
	ld	a1,0(a4)
	lbu	a5,1(a1)
	beq	a5,s4,0x109fe # pmain+0x190>
	bne	a5,s6,0x109d6 # pmain+0x168>
	lbu	a3,2(a1)
	addi	s11,a1,2
	bnez	a3,0x10a0e # pmain+0x1a0>
	ld	s11,8(a4)
	addiw	s0,s0,1
	beq	a5,s4,0x10b44 # pmain+0x2d6>
	mv	a1,s10
	mv	a0,s1
	jal	ra,0x1202a # lua_getglobal>
	mv	a1,s11
	mv	a0,s1
	jal	ra,0x11e96 # lua_pushstring>
	li	a2,1
	li	a1,1
	mv	a0,s1
	jal	ra,0x10496 # docall>
	beqz	a0,0x10b5c # pmain+0x2ee>
	mv	a0,s1
	jal	ra,0x10544 # report.part.0>
	li	a0,0
	ld	ra,104(sp)
	ld	s0,96(sp)
	ld	s1,88(sp)
	ld	s2,80(sp)
	ld	s3,72(sp)
	ld	s4,64(sp)
	ld	s5,56(sp)
	ld	s6,48(sp)
	ld	s7,40(sp)
	ld	s8,32(sp)
	ld	s9,24(sp)
	ld	s10,16(sp)
	ld	s11,8(sp)
	addi	sp,sp,112
	ret
	ori	s7,s7,8
	lbu	t3,2(a4)
	addiw	t1,s2,1
	slli	a5,t1,0x3
	add	a5,a5,s3
	ld	a4,0(a5)
	bnez	t3,0x10c30 # pmain+0x3c2>
	beqz	a4,0x10aa8 # pmain+0x23a>
	lbu	a4,0(a4)
	beq	a4,a3,0x10aa8 # pmain+0x23a>
	ld	a4,8(a5)
	addiw	s2,s2,2
	bnez	a4,0x108c8 # pmain+0x5a>
	j	0x1090e # pmain+0xa0>
	beq	a5,a3,0x10c50 # pmain+0x3e2>
	bne	a5,a1,0x10aa4 # pmain+0x236>
	lbu	a5,2(a4)
	bnez	a5,0x10aa8 # pmain+0x23a>
	addiw	s2,s2,1
	slli	a5,s2,0x3
	add	a5,a5,s3
	ld	a4,0(a5)
	ori	s7,s7,16
	bnez	a4,0x108c8 # pmain+0x5a>
	j	0x1090e # pmain+0xa0>
	beqz	a5,0x1090e # pmain+0xa0>
	auipc	a5,0x31
	fld	fa0,-1896(a5) # 0x41340 # __clzdi2+0x478>
	mv	a0,s1
	li	a1,136
	jal	ra,0x230e8 # luaL_checkversion_>
	ld	a5,0(s3)
	auipc	s1,0x3c
	addi	s1,s1,1354 # 0x4d008 # progname>
	beqz	a5,0x10ad8 # pmain+0x26a>
	lbu	a4,0(a5)
	auipc	s1,0x3c
	addi	s1,s1,1340 # 0x4d008 # progname>
	beqz	a4,0x10ad8 # pmain+0x26a>
	sd	a5,0(s1)
	auipc	a5,0x3d
	ld	a5,-1832(a5) # 0x4d3b0 # _GLOBAL_OFFSET_TABLE_+0xa8>
	ld	s0,0(a5)
	ld	a2,0(s1)
	slli	s2,s2,0x3
	auipc	a1,0x30
	addi	a1,a1,1186 # 0x40f88 # __clzdi2+0xc0>
	add	s3,s3,s2
	mv	a0,s0
	ld	s2,0(s3)
	jal	ra,0x33970 # fprintf>
	mv	a0,s0
	jal	ra,0x3362a # fflush>
	lbu	a5,1(s2)
	li	a4,101
	mv	a2,s2
	beq	a5,a4,0x10b16 # pmain+0x2a8>
	li	a4,108
	bne	a5,a4,0x10dc8 # pmain+0x55a>
	auipc	a1,0x30
	addi	a1,a1,1290 # 0x41020 # __clzdi2+0x158>
	mv	a0,s0
	jal	ra,0x33970 # fprintf>
	mv	a0,s0
	jal	ra,0x3362a # fflush>
	ld	a2,0(s1)
	auipc	a1,0x30
	addi	a1,a1,1324 # 0x41058 # __clzdi2+0x190>
	mv	a0,s0
	jal	ra,0x33970 # fprintf>
	mv	a0,s0
	jal	ra,0x3362a # fflush>
	li	a0,0
	j	0x10a38 # pmain+0x1ca>
	auipc	a2,0x30
	addi	a2,a2,1780 # 0x41238 # __clzdi2+0x370>
	mv	a1,s11
	mv	a0,s1
	jal	ra,0x105aa # dostring>
	beqz	a0,0x109e4 # pmain+0x176>
	li	a0,0
	j	0x10a38 # pmain+0x1ca>
	mv	a1,s11
	mv	a0,s1
	addiw	s0,s0,1
	jal	ra,0x12430 # lua_setglobal>
	blt	s0,s2,0x109ea # pmain+0x17c>
	blt	s2,s8,0x10c76 # pmain+0x408>
	andi	a5,s7,2
	bnez	a5,0x10d32 # pmain+0x4c4>
	beq	s8,s2,0x10d44 # pmain+0x4d6>
	mv	a0,s1
	li	a1,1
	jal	ra,0x11fdc # lua_pushboolean>
	li	a0,1
	j	0x10a38 # pmain+0x1ca>
	auipc	a0,0x30
	addi	a0,a0,1147 # 0x41001 # __clzdi2+0x139>
	jal	ra,0x2f888 # getenv>
	auipc	a2,0x30
	addi	a2,a2,1134 # 0x41000 # __clzdi2+0x138>
	beqz	a0,0x10dae # pmain+0x540>
	lbu	a4,0(a0)
	li	a5,64
	beq	a4,a5,0x10d8e # pmain+0x520>
	mv	a1,a0
	mv	a0,s1
	jal	ra,0x105aa # dostring>
	beqz	a0,0x109b2 # pmain+0x144>
	li	a0,0
	j	0x10a38 # pmain+0x1ca>
	mv	a0,s1
	li	a1,1
	jal	ra,0x11fdc # lua_pushboolean>
	lui	a1,0xfff0c
	mv	a0,s1
	auipc	a2,0x30
	addi	a2,a2,1624 # 0x41220 # __clzdi2+0x358>
	addi	a1,a1,-1576 # 0xfffffffffff0b9d8 # __BSS_END__+0xffffffffffebd650>
	jal	ra,0x124d2 # lua_setfield>
	mv	a0,s1
	jal	ra,0x23150 # luaL_openlibs>
	bne	s8,s2,0x10950 # pmain+0xe2>
	li	a2,1
	addiw	a1,s8,-1
	mv	a0,s1
	jal	ra,0x1228e # lua_createtable>
	li	s4,0
	j	0x10964 # pmain+0xf6>
	auipc	a5,0x3c
	ld	a5,1830(a5) # 0x4d318 # _GLOBAL_OFFSET_TABLE_+0x10>
	ld	s4,0(a5)
	li	a2,51
	li	a1,1
	mv	a3,s4
	auipc	a0,0x30
	addi	a0,a0,1506 # 0x411e8 # __clzdi2+0x320>
	jal	ra,0x34010 # fwrite>
	mv	a3,s4
	li	a2,1
	li	a1,1
	auipc	a0,0x30
	addi	a0,a0,1080 # 0x41050 # __clzdi2+0x188>
	jal	ra,0x34010 # fwrite>
	mv	a0,s4
	jal	ra,0x3362a # fflush>
	beqz	s6,0x10944 # pmain+0xd6>
	j	0x10bba # pmain+0x34c>
	mv	s2,t1
	bnez	a4,0x108c8 # pmain+0x5a>
	j	0x1090e # pmain+0xa0>
	lbu	a5,2(a4)
	bnez	a5,0x10aa8 # pmain+0x23a>
	addiw	s2,s2,1
	slli	a5,s2,0x3
	add	a5,a5,s3
	ld	a4,0(a5)
	bnez	a4,0x108c8 # pmain+0x5a>
	j	0x1090e # pmain+0xa0>
	lbu	a5,2(a4)
	bnez	a5,0x10aa8 # pmain+0x23a>
	auipc	a5,0x30
	fld	fa0,1768(a5) # 0x41340 # __clzdi2+0x478>
	li	a1,136
	mv	a0,s1
	jal	ra,0x230e8 # luaL_checkversion_>
	ld	a5,0(s3)
	addiw	s2,s2,1
	bnez	a5,0x10926 # pmain+0xb8>
	j	0x10934 # pmain+0xc6>
	slli	s2,s2,0x3
	add	s3,s3,s2
	ld	a1,0(s3)
	lbu	a5,0(a1)
	addiw	a5,a5,-45
	bnez	a5,0x10ca8 # pmain+0x43a>
	lbu	a5,1(a1)
	bnez	a5,0x10ca8 # pmain+0x43a>
	ld	a4,-8(s3)
	lbu	a5,0(a4)
	addiw	a5,a5,-45
	beqz	a5,0x10dde # pmain+0x570>
	seqz	a5,a5
	neg	a5,a5
	and	a1,a1,a5
	li	a2,0
	mv	a0,s1
	jal	ra,0x2244e # luaL_loadfilex>
	bnez	a0,0x10a30 # pmain+0x1c2>
	auipc	a1,0x30
	addi	a1,a1,1404 # 0x41230 # __clzdi2+0x368>
	mv	a0,s1
	jal	ra,0x1202a # lua_getglobal>
	li	a5,5
	bne	a0,a5,0x10df0 # pmain+0x582>
	li	a1,-1
	mv	a0,s1
	jal	ra,0x226ec # luaL_len>
	sext.w	s3,a0
	addiw	a1,a0,3
	auipc	a2,0x30
	addi	a2,a2,1432 # 0x41270 # __clzdi2+0x3a8>
	mv	a0,s1
	jal	ra,0x2207c # luaL_checkstack>
	blez	s3,0x10e00 # pmain+0x592>
	li	s2,1
	li	s0,1
	mv	a2,s2
	negw	a1,s0
	mv	a0,s1
	addi	s2,s2,1
	jal	ra,0x121ea # lua_rawgeti>
	addiw	a5,s0,1
	sext.w	s0,s2
	ble	s0,s3,0x10cee # pmain+0x480>
	negw	a1,a5
	li	a2,-1
	mv	a0,s1
	jal	ra,0x111ea # lua_rotate>
	li	a1,-2
	mv	a0,s1
	jal	ra,0x1110c # lua_settop>
	li	a2,-1
	mv	a1,s3
	mv	a0,s1
	jal	ra,0x10496 # docall>
	bnez	a0,0x10a30 # pmain+0x1c2>
	andi	s7,s7,2
	beqz	s7,0x10b7a # pmain+0x30c>
	mv	a0,s1
	jal	ra,0x10602 # doREPL>
	mv	a0,s1
	li	a1,1
	jal	ra,0x11fdc # lua_pushboolean>
	li	a0,1
	j	0x10a38 # pmain+0x1ca>
	andi	s7,s7,12
	bnez	s7,0x10b7a # pmain+0x30c>
	li	a0,0
	jal	ra,0x37bc4 # isatty>
	beqz	a0,0x10e2a # pmain+0x5bc>
	auipc	a5,0x3c
	ld	a5,1474(a5) # 0x4d318 # _GLOBAL_OFFSET_TABLE_+0x10>
	ld	s0,0(a5)
	li	a2,51
	li	a1,1
	mv	a3,s0
	auipc	a0,0x30
	addi	a0,a0,1152 # 0x411e8 # __clzdi2+0x320>
	jal	ra,0x34010 # fwrite>
	mv	a3,s0
	li	a2,1
	li	a1,1
	auipc	a0,0x30
	addi	a0,a0,726 # 0x41050 # __clzdi2+0x188>
	jal	ra,0x34010 # fwrite>
	mv	a0,s0
	jal	ra,0x3362a # fflush>
	j	0x10d32 # pmain+0x4c4>
	addi	a1,a0,1
	li	a2,0
	mv	a0,s1
	jal	ra,0x2244e # luaL_loadfilex>
	bnez	a0,0x10a30 # pmain+0x1c2>
	li	a2,0
	li	a1,0
	mv	a0,s1
	jal	ra,0x10496 # docall>
	beqz	a0,0x109b2 # pmain+0x144>
	j	0x10a30 # pmain+0x1c2>
	auipc	a0,0x30
	addi	a0,a0,611 # 0x41011 # __clzdi2+0x149>
	jal	ra,0x2f888 # getenv>
	beqz	a0,0x109b2 # pmain+0x144>
	auipc	a2,0x30
	addi	a2,a2,594 # 0x41010 # __clzdi2+0x148>
	j	0x10b9e # pmain+0x330>
	auipc	a1,0x30
	addi	a1,a1,624 # 0x41038 # __clzdi2+0x170>
	mv	a0,s0
	jal	ra,0x33970 # fprintf>
	mv	a0,s0
	jal	ra,0x3362a # fflush>
	j	0x10b2a # pmain+0x2bc>
	lbu	a5,1(a4)
	addiw	a5,a5,-45
	bnez	a5,0x10c9e # pmain+0x430>
	lbu	a5,2(a4)
	j	0x10c9e # pmain+0x430>
	auipc	a1,0x30
	addi	a1,a1,1128 # 0x41258 # __clzdi2+0x390>
	mv	a0,s1
	jal	ra,0x21bdc # luaL_error>
	j	0x10cc8 # pmain+0x45a>
	li	a1,-1
	j	0x10d0c # pmain+0x49e>
	auipc	a5,0x30
	fld	fa0,1340(a5) # 0x41340 # __clzdi2+0x478>
	li	a1,136
	mv	a0,s1
	jal	ra,0x230e8 # luaL_checkversion_>
	ld	a5,0(s3)
	beqz	a5,0x10e4e # pmain+0x5e0>
	lbu	a4,0(a5)
	li	s7,0
	li	s2,1
	bnez	a4,0x1092c # pmain+0xbe>
	j	0x10944 # pmain+0xd6>
	li	a2,0
	li	a1,0
	mv	a0,s1
	jal	ra,0x2244e # luaL_loadfilex>
	beqz	a0,0x10e3e # pmain+0x5d0>
	mv	a0,s1
	jal	ra,0x10544 # report.part.0>
	j	0x10b7a # pmain+0x30c>
	li	a2,0
	li	a1,0
	mv	a0,s1
	jal	ra,0x10496 # docall>
	beqz	a0,0x10b7a # pmain+0x30c>
	j	0x10e36 # pmain+0x5c8>
	li	s7,0
	li	s2,1
	j	0x10944 # pmain+0xd6>

index2value:
	ld	a2,32(a0)
	mv	a4,a0
	blez	a1,0x10e72 # index2value+0x1e>
	ld	a5,0(a2)
	ld	a3,16(a0)
	slli	a1,a1,0x4
	add	a0,a5,a1
	bltu	a0,a3,0x10ea8 # index2value+0x54>
	ld	a1,24(a4)
	addi	a0,a1,80
	ret
	lui	a5,0xfff0c
	addi	a0,a5,-1575 # 0xfffffffffff0b9d9 # __BSS_END__+0xffffffffffebd651>
	ble	a0,a1,0x10eaa # index2value+0x56>
	addi	a3,a5,-1576
	beq	a1,a3,0x10eb2 # index2value+0x5e>
	ld	a5,0(a2)
	li	a2,22
	lbu	a6,8(a5)
	beq	a6,a2,0x10e6a # index2value+0x16>
	ld	a5,0(a5)
	subw	a3,a3,a1
	lbu	a2,10(a5)
	blt	a2,a3,0x10e6a # index2value+0x16>
	subw	a1,a0,a1
	slli	a1,a1,0x4
	add	a0,a5,a1
	ret
	ld	a0,16(a4)
	slli	a1,a1,0x4
	add	a0,a0,a1
	ret
	ld	a1,24(a4)
	addi	a0,a1,64
	ret

auxgetstr:
	addi	sp,sp,-32
	sd	s1,8(sp)
	mv	s1,a1
	mv	a1,a2
	sd	s0,16(sp)
	sd	s2,0(sp)
	sd	ra,24(sp)
	mv	s0,a0
	jal	ra,0x1c032 # luaS_new>
	lbu	a3,8(s1)
	li	a5,69
	mv	s2,a0
	li	a4,0
	beq	a3,a5,0x10f14 # auxgetstr+0x5a>
	ld	a3,16(s0)
	mv	a0,s0
	mv	a1,s1
	sd	s2,0(a3)
	lbu	a5,8(s2)
	addi	a2,a3,16
	ori	a5,a5,64
	sb	a5,8(a3)
	sd	a2,16(s0)
	mv	a2,a3
	jal	ra,0x1e74c # luaV_finishget>
	ld	a5,16(s0)
	ld	ra,24(sp)
	ld	s0,16(sp)
	lbu	a0,-8(a5)
	ld	s1,8(sp)
	ld	s2,0(sp)
	andi	a0,a0,15
	addi	sp,sp,32
	ret
	ld	a0,0(s1)
	mv	a1,s2
	jal	ra,0x1c660 # luaH_getstr>
	lbu	a5,8(a0)
	mv	a4,a0
	andi	a0,a5,15
	beqz	a0,0x10ede # auxgetstr+0x24>
	ld	a3,16(s0)
	ld	a2,0(a4)
	sb	a5,8(a3)
	sd	a2,0(a3)
	addi	a4,a3,16
	ld	ra,24(sp)
	sd	a4,16(s0)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret

auxsetstr:
	addi	sp,sp,-32
	sd	s1,8(sp)
	mv	s1,a1
	mv	a1,a2
	sd	s0,16(sp)
	sd	s2,0(sp)
	sd	ra,24(sp)
	mv	s0,a0
	jal	ra,0x1c032 # luaS_new>
	lbu	a3,8(s1)
	li	a5,69
	mv	s2,a0
	li	a4,0
	beq	a3,a5,0x10f9e # auxsetstr+0x5a>
	ld	a2,16(s0)
	mv	a1,s1
	sd	s2,0(a2)
	lbu	a5,8(s2)
	addi	a0,a2,16
	addi	a3,a2,-16
	ori	a5,a5,64
	sb	a5,8(a2)
	sd	a0,16(s0)
	mv	a0,s0
	jal	ra,0x1e86a # luaV_finishset>
	ld	a5,16(s0)
	ld	ra,24(sp)
	ld	s1,8(sp)
	addi	a5,a5,-32
	sd	a5,16(s0)
	ld	s0,16(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret
	ld	a0,0(s1)
	mv	a1,s2
	jal	ra,0x1c660 # luaH_getstr>
	lbu	a5,8(a0)
	mv	a4,a0
	andi	a5,a5,15
	beqz	a5,0x10f68 # auxsetstr+0x24>
	ld	a5,16(s0)
	ld	a3,-16(a5)
	sd	a3,0(a0)
	lbu	a3,-8(a5)
	sb	a3,8(a0)
	lbu	a4,-8(a5)
	andi	a4,a4,64
	beqz	a4,0x10fea # auxsetstr+0xa6>
	ld	a1,0(s1)
	lbu	a4,9(a1)
	andi	a4,a4,32
	beqz	a4,0x10fea # auxsetstr+0xa6>
	ld	a4,-16(a5)
	lbu	a4,9(a4)
	andi	a4,a4,24
	beqz	a4,0x10fea # auxsetstr+0xa6>
	mv	a0,s0
	jal	ra,0x170d0 # luaC_barrierback_>
	ld	a5,16(s0)
	addi	a5,a5,-16
	ld	ra,24(sp)
	sd	a5,16(s0)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret

f_call:
	lw	a2,8(a1)
	ld	a1,0(a1)
	j	0x14d70 # luaD_callnoyield>

lua_checkstack:
	ld	a5,16(a0)
	ld	a4,40(a0)
	addi	sp,sp,-32
	sd	s1,8(sp)
	sub	a4,a4,a5
	sd	s2,0(sp)
	sd	ra,24(sp)
	sd	s0,16(sp)
	srai	a4,a4,0x4
	ld	s2,32(a0)
	mv	s1,a1
	blt	a1,a4,0x11046 # lua_checkstack+0x44>
	ld	a4,48(a0)
	mv	s0,a0
	sub	a4,a5,a4
	lui	a5,0xf4
	srai	a4,a4,0x4
	addiw	a5,a5,576
	subw	a5,a5,a1
	addiw	a4,a4,5
	ble	a4,a5,0x11064 # lua_checkstack+0x62>
	li	a0,0
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret
	li	a0,1
	ld	a4,8(s2)
	slli	s1,s1,0x4
	add	a5,a5,s1
	bleu	a5,a4,0x1103a # lua_checkstack+0x38>
	ld	ra,24(sp)
	ld	s0,16(sp)
	sd	a5,8(s2)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret
	li	a2,0
	jal	ra,0x143e2 # luaD_growstack>
	beqz	a0,0x11038 # lua_checkstack+0x36>
	ld	a5,16(s0)
	j	0x11048 # lua_checkstack+0x46>

lua_xmove:
	beq	a0,a1,0x110be # lua_xmove+0x4e>
	ld	a4,16(a0)
	slli	a5,a2,0x4
	sub	a4,a4,a5
	sd	a4,16(a0)
	blez	a2,0x110be # lua_xmove+0x4e>
	ld	a7,16(a1)
	addiw	a3,a2,-1
	slli	a3,a3,0x20
	srli	a3,a3,0x1c
	add	a3,a3,a7
	li	a6,-16
	addi	a5,a7,16
	addi	a3,a3,32
	sub	a6,a6,a7
	j	0x110a2 # lua_xmove+0x32>
	ld	a4,16(a0)
	add	a2,a6,a5
	add	a4,a4,a2
	ld	a2,0(a4)
	sd	a2,-16(a5) # 0xf3ff0 # __BSS_END__+0xa5c68>
	lbu	a4,8(a4)
	sb	a4,-8(a5)
	sd	a5,16(a1)
	addi	a5,a5,16
	bne	a5,a3,0x110a0 # lua_xmove+0x30>
	ret

lua_atpanic:
	ld	a5,24(a0)
	ld	a0,256(a5)
	sd	a1,256(a5)
	ret

lua_version:
	auipc	a5,0x30
	fld	fa0,628(a5) # 0x41340 # __clzdi2+0x478>
	ret

lua_absindex:
	lui	a5,0xf4
	addiw	a5,a5,1575
	lui	a4,0xf4
	addw	a5,a5,a1
	addi	a4,a4,1575 # 0xf4627 # __BSS_END__+0xa629f>
	bltu	a4,a5,0x110f8 # lua_absindex+0x22>
	ld	a4,32(a0)
	ld	a5,16(a0)
	ld	a4,0(a4)
	sub	a5,a5,a4
	srai	a5,a5,0x4
	addw	a1,a1,a5
	mv	a0,a1
	ret

lua_gettop:
	ld	a5,32(a0)
	ld	a0,16(a0)
	ld	a5,0(a5)
	addi	a5,a5,16
	sub	a0,a0,a5
	srai	a0,a0,0x4
	sext.w	a0,a0
	ret

lua_settop:
	addi	sp,sp,-32
	sd	ra,24(sp)
	sd	s0,16(sp)
	ld	a2,16(a0)
	bltz	a1,0x1116e # lua_settop+0x62>
	ld	a5,32(a0)
	addi	a3,a1,1
	slli	a3,a3,0x4
	ld	a1,0(a5)
	add	a3,a3,a1
	sub	a1,a3,a2
	srai	a3,a1,0x4
	blez	a1,0x11158 # lua_settop+0x4c>
	addi	a4,a2,8
	mv	a5,a3
	sb	zero,0(a4)
	addi	a5,a5,-1
	addi	a4,a4,16
	bnez	a5,0x11136 # lua_settop+0x2a>
	li	a4,16
	blez	a1,0x11148 # lua_settop+0x3c>
	mv	a4,a1
	mv	a5,a3
	add	a2,a2,a4
	addi	a3,a3,-1
	blez	a5,0x1116a # lua_settop+0x5e>
	sub	a3,a3,a5
	addi	a3,a3,1
	sd	a2,16(a0)
	slli	s0,a3,0x4
	add	s0,s0,a2
	bnez	a3,0x1117a # lua_settop+0x6e>
	ld	ra,24(sp)
	sd	s0,16(a0)
	ld	s0,16(sp)
	addi	sp,sp,32
	ret
	li	a5,1
	j	0x11152 # lua_settop+0x46>
	addiw	a3,a1,1
	slli	s0,a3,0x4
	add	s0,s0,a2
	beqz	a3,0x11160 # lua_settop+0x54>
	ld	a5,64(a0)
	bltu	a5,s0,0x11160 # lua_settop+0x54>
	mv	a1,s0
	li	a3,0
	li	a2,-1
	sd	a0,8(sp)
	jal	ra,0x1587e # luaF_close>
	ld	a0,8(sp)
	ld	ra,24(sp)
	sd	s0,16(a0)
	ld	s0,16(sp)
	addi	sp,sp,32
	ret

lua_closeslot:
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	ra,24(sp)
	mv	s1,a0
	slli	s0,a1,0x4
	blez	a1,0x111cc # lua_closeslot+0x34>
	ld	a5,32(a0)
	li	a3,0
	li	a2,-1
	ld	a1,0(a5)
	add	a1,a1,s0
	jal	ra,0x1587e # luaF_close>
	ld	a5,32(s1)
	ld	ra,24(sp)
	ld	s1,8(sp)
	ld	a5,0(a5)
	add	s0,s0,a5
	sb	zero,8(s0)
	ld	s0,16(sp)
	addi	sp,sp,32
	ret
	ld	a1,16(a0)
	li	a3,0
	li	a2,-1
	add	a1,a1,s0
	jal	ra,0x1587e # luaF_close>
	ld	a5,16(s1)
	ld	ra,24(sp)
	ld	s1,8(sp)
	add	s0,s0,a5
	sb	zero,8(s0)
	ld	s0,16(sp)
	addi	sp,sp,32
	ret

lua_rotate:
	ld	a5,16(a0)
	slli	a4,a1,0x4
	addi	sp,sp,-16
	addi	a3,a5,-16 # 0xf3ff0 # __BSS_END__+0xa5c68>
	add	a5,a5,a4
	blez	a1,0x11202 # lua_rotate+0x18>
	ld	a5,32(a0)
	ld	a5,0(a5)
	add	a5,a5,a4
	slli	a4,a2,0x4
	bltz	a2,0x11294 # lua_rotate+0xaa>
	sub	a4,a3,a4
	mv	a1,a4
	mv	a2,a5
	bleu	a4,a5,0x1123c # lua_rotate+0x52>
	ld	a7,0(a1)
	ld	a0,0(a2)
	lbu	a6,8(a2)
	sd	a7,0(a2)
	lbu	a7,8(a1)
	addi	a2,a2,16
	sd	a0,0(sp)
	sb	a7,-8(a2)
	sd	a0,0(a1)
	sb	a6,8(a1)
	addi	a1,a1,-16
	bltu	a2,a1,0x11216 # lua_rotate+0x2c>
	addi	a4,a4,16
	mv	a2,a3
	bleu	a3,a4,0x1126a # lua_rotate+0x80>
	ld	a6,0(a2)
	ld	a1,0(a4)
	lbu	a0,8(a4)
	sd	a6,0(a4)
	lbu	a6,8(a2)
	addi	a4,a4,16
	sd	a1,0(sp)
	sb	a6,-8(a4)
	sd	a1,0(a2)
	sb	a0,8(a2)
	addi	a2,a2,-16
	bltu	a4,a2,0x11244 # lua_rotate+0x5a>
	bleu	a3,a5,0x11290 # lua_rotate+0xa6>
	ld	a1,0(a3)
	ld	a4,0(a5)
	lbu	a2,8(a5)
	sd	a1,0(a5)
	lbu	a1,8(a3)
	addi	a5,a5,16
	sd	a4,0(sp)
	sb	a1,-8(a5)
	sd	a4,0(a3)
	sb	a2,8(a3)
	addi	a3,a3,-16
	bltu	a5,a3,0x1126e # lua_rotate+0x84>
	addi	sp,sp,16
	ret
	sub	a4,a5,a4
	addi	a4,a4,-16
	j	0x1120e # lua_rotate+0x24>

lua_copy:
	ld	a4,32(a0)
	blez	a1,0x112d2 # lua_copy+0x36>
	ld	a5,0(a4)
	ld	a3,16(a0)
	slli	a1,a1,0x4
	add	a5,a5,a1
	bleu	a3,a5,0x112f2 # lua_copy+0x56>
	blez	a2,0x112fc # lua_copy+0x60>
	ld	a4,0(a4)
	ld	a3,16(a0)
	slli	a2,a2,0x4
	add	a2,a2,a4
	bltu	a2,a3,0x112c4 # lua_copy+0x28>
	ld	a2,24(a0)
	addi	a2,a2,80
	ld	a4,0(a5)
	sd	a4,0(a2)
	lbu	a5,8(a5)
	sb	a5,8(a2)
	ret
	lui	a3,0xfff0c
	addi	a6,a3,-1575 # 0xfffffffffff0b9d9 # __BSS_END__+0xffffffffffebd651>
	ble	a6,a1,0x113ac # lua_copy+0x110>
	addi	a3,a3,-1576
	beq	a1,a3,0x113bc # lua_copy+0x120>
	ld	a5,0(a4)
	li	a7,22
	lbu	t1,8(a5)
	bne	t1,a7,0x1134c # lua_copy+0xb0>
	ld	a5,24(a0)
	addi	a5,a5,80
	bgtz	a2,0x112b2 # lua_copy+0x16>
	lui	a3,0xfff0c
	addi	a1,a3,-1575 # 0xfffffffffff0b9d9 # __BSS_END__+0xffffffffffebd651>
	ble	a1,a2,0x11398 # lua_copy+0xfc>
	addi	a3,a3,-1576
	beq	a2,a3,0x113b4 # lua_copy+0x118>
	ld	a6,0(a4)
	li	a4,22
	lbu	a7,8(a6)
	beq	a7,a4,0x11362 # lua_copy+0xc6>
	ld	a4,0(a6)
	subw	a3,a3,a2
	lbu	a7,10(a4)
	blt	a7,a3,0x11362 # lua_copy+0xc6>
	subw	a2,a1,a2
	slli	a2,a2,0x4
	add	a2,a2,a4
	ld	a4,0(a5)
	sd	a4,0(a2)
	lbu	a4,8(a5)
	sb	a4,8(a2)
	lbu	a4,8(a5)
	andi	a4,a4,64
	bnez	a4,0x1137e # lua_copy+0xe2>
	ret
	ld	a5,0(a5)
	subw	a3,a3,a1
	lbu	a7,10(a5)
	blt	a7,a3,0x112f2 # lua_copy+0x56>
	subw	a1,a6,a1
	slli	a1,a1,0x4
	add	a5,a5,a1
	j	0x112ae # lua_copy+0x12>
	ld	a2,24(a0)
	ld	a4,0(a5)
	addi	a2,a2,80
	sd	a4,0(a2)
	lbu	a4,8(a5)
	sb	a4,8(a2)
	lbu	a4,8(a5)
	andi	a4,a4,64
	beqz	a4,0x1134a # lua_copy+0xae>
	ld	a1,0(a6)
	lbu	a4,9(a1)
	andi	a4,a4,32
	beqz	a4,0x11396 # lua_copy+0xfa>
	ld	a2,0(a5)
	lbu	a5,9(a2)
	andi	a5,a5,24
	bnez	a5,0x113c4 # lua_copy+0x128>
	ret
	ld	a4,16(a0)
	slli	a2,a2,0x4
	add	a4,a4,a2
	ld	a3,0(a5)
	sd	a3,0(a4)
	lbu	a5,8(a5)
	sb	a5,8(a4)
	ret
	ld	a5,16(a0)
	slli	a1,a1,0x4
	add	a5,a5,a1
	j	0x112ae # lua_copy+0x12>
	ld	a4,24(a0)
	addi	a4,a4,64
	j	0x1139e # lua_copy+0x102>
	ld	a5,24(a0)
	addi	a5,a5,64
	j	0x112ae # lua_copy+0x12>
	j	0x1706e # luaC_barrier_>

lua_pushvalue:
	ld	a4,16(a0)
	ld	a2,32(a0)
	blez	a1,0x113f4 # lua_pushvalue+0x2c>
	ld	a5,0(a2)
	slli	a1,a1,0x4
	add	a1,a1,a5
	bltu	a1,a4,0x113e0 # lua_pushvalue+0x18>
	ld	a1,24(a0)
	addi	a1,a1,80
	ld	a3,0(a1)
	addi	a5,a4,16
	sd	a3,0(a4)
	lbu	a3,8(a1)
	sb	a3,8(a4)
	sd	a5,16(a0)
	ret
	lui	a5,0xfff0c
	addi	a6,a5,-1575 # 0xfffffffffff0b9d9 # __BSS_END__+0xffffffffffebd651>
	ble	a6,a1,0x1142a # lua_pushvalue+0x62>
	addi	a3,a5,-1576
	beq	a1,a3,0x11442 # lua_pushvalue+0x7a>
	ld	a5,0(a2)
	li	a2,22
	lbu	a7,8(a5)
	beq	a7,a2,0x113da # lua_pushvalue+0x12>
	ld	a5,0(a5)
	subw	a3,a3,a1
	lbu	a2,10(a5)
	blt	a2,a3,0x113da # lua_pushvalue+0x12>
	subw	a1,a6,a1
	slli	a1,a1,0x4
	add	a1,a1,a5
	j	0x113e0 # lua_pushvalue+0x18>
	slli	a1,a1,0x4
	add	a1,a1,a4
	ld	a3,0(a1)
	addi	a5,a4,16
	sd	a3,0(a4)
	lbu	a3,8(a1)
	sb	a3,8(a4)
	sd	a5,16(a0)
	ret
	ld	a1,24(a0)
	addi	a1,a1,64
	j	0x113e0 # lua_pushvalue+0x18>

lua_type:
	ld	a2,32(a0)
	mv	a5,a0
	blez	a1,0x1148e # lua_type+0x44>
	ld	a4,0(a2)
	ld	a3,16(a0)
	slli	a1,a1,0x4
	add	a1,a1,a4
	bltu	a1,a3,0x11474 # lua_type+0x2a>
	ld	a5,24(a5)
	lbu	a0,88(a5)
	andi	a5,a0,15
	mv	a0,a5
	beqz	a5,0x114cc # lua_type+0x82>
	ret
	ld	a4,16(a5)
	slli	a1,a1,0x4
	add	a1,a1,a4
	lbu	a0,8(a1)
	andi	a4,a0,15
	mv	a0,a4
	bnez	a4,0x1146c # lua_type+0x22>
	ld	a5,24(a5)
	addi	a5,a5,80
	beq	a1,a5,0x114cc # lua_type+0x82>
	li	a0,0
	ret
	lui	a4,0xfff0c
	addi	a0,a4,-1575 # 0xfffffffffff0b9d9 # __BSS_END__+0xffffffffffebd651>
	ble	a0,a1,0x1146e # lua_type+0x24>
	addi	a3,a4,-1576
	beq	a1,a3,0x114c4 # lua_type+0x7a>
	ld	a4,0(a2)
	li	a2,22
	lbu	a6,8(a4)
	beq	a6,a2,0x1145e # lua_type+0x14>
	ld	a4,0(a4)
	subw	a3,a3,a1
	lbu	a2,10(a4)
	blt	a2,a3,0x1145e # lua_type+0x14>
	subw	a1,a0,a1
	slli	a1,a1,0x4
	add	a1,a1,a4
	j	0x11474 # lua_type+0x2a>
	ld	a1,24(a5)
	addi	a1,a1,64
	j	0x11474 # lua_type+0x2a>
	li	a0,-1
	ret

lua_typename:
	addiw	a1,a1,1
	auipc	a5,0x3b
	addi	a5,a5,-1898 # 0x4bd68 # luaT_typenames_>
	slli	a1,a1,0x3
	add	a1,a1,a5
	ld	a0,0(a1)
	ret

lua_iscfunction:
	ld	a3,32(a0)
	blez	a1,0x1150a # lua_iscfunction+0x28>
	ld	a5,0(a3)
	ld	a4,16(a0)
	slli	a1,a1,0x4
	add	a1,a1,a5
	bleu	a4,a1,0x1152a # lua_iscfunction+0x48>
	lbu	a5,8(a1)
	li	a4,22
	li	a0,1
	beq	a5,a4,0x11508 # lua_iscfunction+0x26>
	addi	a5,a5,-102
	seqz	a0,a5
	ret
	lui	a5,0xfff0c
	addi	a2,a5,-1575 # 0xfffffffffff0b9d9 # __BSS_END__+0xffffffffffebd651>
	ble	a2,a1,0x11548 # lua_iscfunction+0x66>
	addi	a4,a5,-1576
	beq	a1,a4,0x11550 # lua_iscfunction+0x6e>
	ld	a5,0(a3)
	li	a3,22
	lbu	a6,8(a5)
	bne	a6,a3,0x11532 # lua_iscfunction+0x50>
	ld	a1,24(a0)
	addi	a1,a1,80
	j	0x114f4 # lua_iscfunction+0x12>
	ld	a5,0(a5)
	subw	a4,a4,a1
	lbu	a3,10(a5)
	blt	a3,a4,0x1152a # lua_iscfunction+0x48>
	subw	a1,a2,a1
	slli	a1,a1,0x4
	add	a1,a1,a5
	j	0x114f4 # lua_iscfunction+0x12>
	ld	a5,16(a0)
	slli	a1,a1,0x4
	add	a1,a1,a5
	j	0x114f4 # lua_iscfunction+0x12>
	ld	a1,24(a0)
	addi	a1,a1,64
	j	0x114f4 # lua_iscfunction+0x12>

lua_isinteger:
	ld	a3,32(a0)
	blez	a1,0x1157c # lua_isinteger+0x24>
	ld	a5,0(a3)
	ld	a4,16(a0)
	slli	a1,a1,0x4
	add	a1,a1,a5
	bltu	a1,a4,0x11570 # lua_isinteger+0x18>
	ld	a1,24(a0)
	addi	a1,a1,80
	lbu	a0,8(a1)
	addi	a0,a0,-3
	seqz	a0,a0
	ret
	lui	a5,0xfff0c
	addi	a2,a5,-1575 # 0xfffffffffff0b9d9 # __BSS_END__+0xffffffffffebd651>
	ble	a2,a1,0x115b2 # lua_isinteger+0x5a>
	addi	a4,a5,-1576
	beq	a1,a4,0x115c4 # lua_isinteger+0x6c>
	ld	a5,0(a3)
	li	a3,22
	lbu	a6,8(a5)
	beq	a6,a3,0x1156a # lua_isinteger+0x12>
	ld	a5,0(a5)
	subw	a4,a4,a1
	lbu	a3,10(a5)
	blt	a3,a4,0x1156a # lua_isinteger+0x12>
	subw	a1,a2,a1
	slli	a1,a1,0x4
	add	a1,a1,a5
	j	0x11570 # lua_isinteger+0x18>
	ld	a5,16(a0)
	slli	a1,a1,0x4
	add	a1,a1,a5
	lbu	a0,8(a1)
	addi	a0,a0,-3
	seqz	a0,a0
	ret
	ld	a1,24(a0)
	addi	a1,a1,64
	j	0x11570 # lua_isinteger+0x18>

lua_isnumber:
	ld	a3,32(a0)
	blez	a1,0x115ec # lua_isnumber+0x20>
	ld	a5,0(a3)
	ld	a4,16(a0)
	slli	a1,a1,0x4
	add	a5,a5,a1
	bleu	a4,a5,0x1160c # lua_isnumber+0x40>
	lbu	a3,8(a5)
	li	a4,19
	li	a0,1
	bne	a3,a4,0x1161e # lua_isnumber+0x52>
	ret
	lui	a4,0xfff0c
	addi	a2,a4,-1575 # 0xfffffffffff0b9d9 # __BSS_END__+0xffffffffffebd651>
	ble	a2,a1,0x11646 # lua_isnumber+0x7a>
	addi	a4,a4,-1576
	beq	a1,a4,0x1164e # lua_isnumber+0x82>
	ld	a5,0(a3)
	li	a3,22
	lbu	a6,8(a5)
	bne	a6,a3,0x11630 # lua_isnumber+0x64>
	ld	a1,24(a0)
	li	a4,19
	li	a0,1
	lbu	a3,88(a1)
	addi	a5,a1,80
	beq	a3,a4,0x115ea # lua_isnumber+0x1e>
	addi	sp,sp,-32
	addi	a1,sp,8
	mv	a0,a5
	sd	ra,24(sp)
	jal	ra,0x1e4e4 # luaV_tonumber_>
	ld	ra,24(sp)
	addi	sp,sp,32
	ret
	ld	a5,0(a5)
	subw	a4,a4,a1
	lbu	a3,10(a5)
	blt	a3,a4,0x1160c # lua_isnumber+0x40>
	subw	a1,a2,a1
	slli	a1,a1,0x4
	add	a5,a5,a1
	j	0x115de # lua_isnumber+0x12>
	ld	a5,16(a0)
	slli	a1,a1,0x4
	add	a5,a5,a1
	j	0x115de # lua_isnumber+0x12>
	ld	a1,24(a0)
	addi	a5,a1,64
	j	0x115de # lua_isnumber+0x12>

lua_isstring:
	ld	a3,32(a0)
	blez	a1,0x1167c # lua_isstring+0x26>
	ld	a5,0(a3)
	ld	a4,16(a0)
	slli	a1,a1,0x4
	add	a1,a1,a5
	bltu	a1,a4,0x1166e # lua_isstring+0x18>
	ld	a1,24(a0)
	addi	a1,a1,80
	lbu	a0,8(a1)
	andi	a0,a0,15
	addiw	a0,a0,-3
	sltiu	a0,a0,2
	ret
	lui	a5,0xfff0c
	addi	a2,a5,-1575 # 0xfffffffffff0b9d9 # __BSS_END__+0xffffffffffebd651>
	ble	a2,a1,0x116b2 # lua_isstring+0x5c>
	addi	a4,a5,-1576
	beq	a1,a4,0x116c6 # lua_isstring+0x70>
	ld	a5,0(a3)
	li	a3,22
	lbu	a6,8(a5)
	beq	a6,a3,0x11668 # lua_isstring+0x12>
	ld	a5,0(a5)
	subw	a4,a4,a1
	lbu	a3,10(a5)
	blt	a3,a4,0x11668 # lua_isstring+0x12>
	subw	a1,a2,a1
	slli	a1,a1,0x4
	add	a1,a1,a5
	j	0x1166e # lua_isstring+0x18>
	ld	a5,16(a0)
	slli	a1,a1,0x4
	add	a1,a1,a5
	lbu	a0,8(a1)
	andi	a0,a0,15
	addiw	a0,a0,-3
	sltiu	a0,a0,2
	ret
	ld	a1,24(a0)
	addi	a1,a1,64
	j	0x1166e # lua_isstring+0x18>

lua_isuserdata:
	ld	a3,32(a0)
	blez	a1,0x116f6 # lua_isuserdata+0x28>
	ld	a5,0(a3)
	ld	a4,16(a0)
	slli	a1,a1,0x4
	add	a1,a1,a5
	bleu	a4,a1,0x11716 # lua_isuserdata+0x48>
	lbu	a5,8(a1)
	li	a4,71
	li	a0,1
	beq	a5,a4,0x116f4 # lua_isuserdata+0x26>
	addi	a5,a5,-2
	seqz	a0,a5
	ret
	lui	a5,0xfff0c
	addi	a2,a5,-1575 # 0xfffffffffff0b9d9 # __BSS_END__+0xffffffffffebd651>
	ble	a2,a1,0x11734 # lua_isuserdata+0x66>
	addi	a4,a5,-1576
	beq	a1,a4,0x1173c # lua_isuserdata+0x6e>
	ld	a5,0(a3)
	li	a3,22
	lbu	a6,8(a5)
	bne	a6,a3,0x1171e # lua_isuserdata+0x50>
	ld	a1,24(a0)
	addi	a1,a1,80
	j	0x116e0 # lua_isuserdata+0x12>
	ld	a5,0(a5)
	subw	a4,a4,a1
	lbu	a3,10(a5)
	blt	a3,a4,0x11716 # lua_isuserdata+0x48>
	subw	a1,a2,a1
	slli	a1,a1,0x4
	add	a1,a1,a5
	j	0x116e0 # lua_isuserdata+0x12>
	ld	a5,16(a0)
	slli	a1,a1,0x4
	add	a1,a1,a5
	j	0x116e0 # lua_isuserdata+0x12>
	ld	a1,24(a0)
	addi	a1,a1,64
	j	0x116e0 # lua_isuserdata+0x12>

lua_rawequal:
	addi	sp,sp,-32
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	s2,0(sp)
	mv	s1,a0
	mv	s2,a2
	jal	ra,0x10e54 # index2value>
	mv	s0,a0
	mv	a1,s2
	mv	a0,s1
	jal	ra,0x10e54 # index2value>
	lbu	a5,8(s0)
	mv	a2,a0
	andi	a5,a5,15
	bnez	a5,0x11774 # lua_rawequal+0x30>
	ld	a5,24(s1)
	addi	a5,a5,80
	beq	s0,a5,0x11798 # lua_rawequal+0x54>
	lbu	a5,8(a2)
	andi	a5,a5,15
	bnez	a5,0x11786 # lua_rawequal+0x42>
	ld	a5,24(s1)
	addi	a5,a5,80
	beq	a2,a5,0x11798 # lua_rawequal+0x54>
	mv	a1,s0
	ld	s0,16(sp)
	ld	ra,24(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	li	a0,0
	addi	sp,sp,32
	j	0x1eaae # luaV_equalobj>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	li	a0,0
	addi	sp,sp,32
	ret

lua_arith:
	addi	sp,sp,-16
	sd	s0,0(sp)
	sd	ra,8(sp)
	addiw	a4,a1,-12
	li	a5,1
	ld	a3,16(a0)
	mv	s0,a0
	bltu	a5,a4,0x117ce # lua_arith+0x28>
	ld	a4,-16(a3)
	lbu	a5,-8(a3)
	addi	a3,a3,16
	sd	a4,-16(a3)
	sb	a5,-8(a3)
	sd	a3,16(a0)
	addi	a4,a3,-32
	mv	a0,s0
	addi	a3,a3,-16
	mv	a2,a4
	jal	ra,0x180c8 # luaO_arith>
	ld	a5,16(s0)
	ld	ra,8(sp)
	addi	a5,a5,-16
	sd	a5,16(s0)
	ld	s0,0(sp)
	addi	sp,sp,16
	ret

lua_compare:
	addi	sp,sp,-48
	sd	ra,40(sp)
	sd	s0,32(sp)
	sd	s1,24(sp)
	sd	s2,16(sp)
	sd	s3,8(sp)
	mv	s0,a0
	mv	s3,a2
	mv	s1,a3
	jal	ra,0x10e54 # index2value>
	mv	s2,a0
	mv	a1,s3
	mv	a0,s0
	jal	ra,0x10e54 # index2value>
	lbu	a5,8(s2)
	mv	a2,a0
	andi	a5,a5,15
	bnez	a5,0x1181e # lua_compare+0x34>
	ld	a5,24(s0)
	addi	a5,a5,80
	beq	s2,a5,0x11834 # lua_compare+0x4a>
	lbu	a5,8(a2)
	andi	a5,a5,15
	beqz	a5,0x11844 # lua_compare+0x5a>
	li	a5,1
	beq	s1,a5,0x11854 # lua_compare+0x6a>
	li	a5,2
	beq	s1,a5,0x1187c # lua_compare+0x92>
	beqz	s1,0x11868 # lua_compare+0x7e>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	li	a0,0
	addi	sp,sp,48
	ret
	ld	a5,24(s0)
	addi	a5,a5,80
	beq	a2,a5,0x11834 # lua_compare+0x4a>
	li	a5,1
	bne	s1,a5,0x1182c # lua_compare+0x42>
	mv	a0,s0
	ld	s0,32(sp)
	ld	ra,40(sp)
	ld	s1,24(sp)
	ld	s3,8(sp)
	mv	a1,s2
	ld	s2,16(sp)
	addi	sp,sp,48
	j	0x1ea16 # luaV_lessthan>
	mv	a0,s0
	ld	s0,32(sp)
	ld	ra,40(sp)
	ld	s1,24(sp)
	ld	s3,8(sp)
	mv	a1,s2
	ld	s2,16(sp)
	addi	sp,sp,48
	j	0x1eaae # luaV_equalobj>
	mv	a0,s0
	ld	s0,32(sp)
	ld	ra,40(sp)
	ld	s1,24(sp)
	ld	s3,8(sp)
	mv	a1,s2
	ld	s2,16(sp)
	addi	sp,sp,48
	j	0x1ea62 # luaV_lessequal>

lua_stringtonumber:
	addi	sp,sp,-16
	sd	s0,0(sp)
	mv	s0,a0
	mv	a0,a1
	ld	a1,16(s0)
	sd	ra,8(sp)
	jal	ra,0x1813a # luaO_str2num>
	beqz	a0,0x118a8 # lua_stringtonumber+0x18>
	ld	a5,16(s0)
	addi	a5,a5,16
	sd	a5,16(s0)
	ld	ra,8(sp)
	ld	s0,0(sp)
	addi	sp,sp,16
	ret

lua_tonumberx:
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	ra,24(sp)
	sd	zero,8(sp)
	ld	a6,32(a0)
	mv	a4,a0
	mv	s0,a2
	blez	a1,0x118ee # lua_tonumberx+0x3e>
	ld	a5,0(a6)
	ld	a3,16(a0)
	slli	a1,a1,0x4
	add	a0,a5,a1
	bleu	a3,a0,0x11910 # lua_tonumberx+0x60>
	lbu	a4,8(a0)
	li	a5,19
	bne	a4,a5,0x11920 # lua_tonumberx+0x70>
	fld	fa0,0(a0)
	li	a0,1
	beqz	s0,0x118e6 # lua_tonumberx+0x36>
	sw	a0,0(s0)
	ld	ra,24(sp)
	ld	s0,16(sp)
	addi	sp,sp,32
	ret
	lui	a5,0xfff0c
	addi	a0,a5,-1575 # 0xfffffffffff0b9d9 # __BSS_END__+0xffffffffffebd651>
	ble	a0,a1,0x11942 # lua_tonumberx+0x92>
	addi	a3,a5,-1576
	beq	a1,a3,0x1194a # lua_tonumberx+0x9a>
	ld	a5,0(a6)
	li	a2,22
	lbu	a6,8(a5)
	bne	a6,a2,0x1192a # lua_tonumberx+0x7a>
	ld	a1,24(a4)
	li	a5,19
	lbu	a4,88(a1)
	addi	a0,a1,80
	beq	a4,a5,0x118de # lua_tonumberx+0x2e>
	addi	a1,sp,8
	jal	ra,0x1e4e4 # luaV_tonumber_>
	fld	fa0,8(sp)
	j	0x118e2 # lua_tonumberx+0x32>
	ld	a5,0(a5)
	subw	a3,a3,a1
	lbu	a2,10(a5)
	blt	a2,a3,0x11910 # lua_tonumberx+0x60>
	subw	a1,a0,a1
	slli	a1,a1,0x4
	add	a0,a5,a1
	j	0x118d4 # lua_tonumberx+0x24>
	ld	a0,16(a4)
	slli	a1,a1,0x4
	add	a0,a0,a1
	j	0x118d4 # lua_tonumberx+0x24>
	ld	a1,24(a4)
	addi	a0,a1,64
	j	0x118d4 # lua_tonumberx+0x24>

lua_tointegerx:
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	ra,24(sp)
	sd	zero,8(sp)
	ld	a3,32(a0)
	mv	s0,a2
	blez	a1,0x11988 # lua_tointegerx+0x36>
	ld	a5,0(a3)
	ld	a4,16(a0)
	slli	a1,a1,0x4
	add	a5,a5,a1
	bleu	a4,a5,0x119a8 # lua_tointegerx+0x56>
	lbu	a3,8(a5)
	li	a4,3
	bne	a3,a4,0x119b8 # lua_tointegerx+0x66>
	ld	a0,0(a5)
	li	a5,1
	beqz	s0,0x11980 # lua_tointegerx+0x2e>
	sw	a5,0(s0)
	ld	ra,24(sp)
	ld	s0,16(sp)
	addi	sp,sp,32
	ret
	lui	a4,0xfff0c
	addi	a2,a4,-1575 # 0xfffffffffff0b9d9 # __BSS_END__+0xffffffffffebd651>
	ble	a2,a1,0x119de # lua_tointegerx+0x8c>
	addi	a4,a4,-1576
	beq	a1,a4,0x119e6 # lua_tointegerx+0x94>
	ld	a5,0(a3)
	li	a3,22
	lbu	a6,8(a5)
	bne	a6,a3,0x119c8 # lua_tointegerx+0x76>
	ld	a1,24(a0)
	li	a4,3
	lbu	a3,88(a1)
	addi	a5,a1,80
	beq	a3,a4,0x11978 # lua_tointegerx+0x26>
	mv	a0,a5
	li	a2,0
	addi	a1,sp,8
	jal	ra,0x1e676 # luaV_tointeger>
	mv	a5,a0
	ld	a0,8(sp)
	j	0x1197c # lua_tointegerx+0x2a>
	ld	a5,0(a5)
	subw	a4,a4,a1
	lbu	a3,10(a5)
	blt	a3,a4,0x119a8 # lua_tointegerx+0x56>
	subw	a1,a2,a1
	slli	a1,a1,0x4
	add	a5,a5,a1
	j	0x1196e # lua_tointegerx+0x1c>
	ld	a5,16(a0)
	slli	a1,a1,0x4
	add	a5,a5,a1
	j	0x1196e # lua_tointegerx+0x1c>
	ld	a1,24(a0)
	addi	a5,a1,64
	j	0x1196e # lua_tointegerx+0x1c>

lua_toboolean:
	ld	a3,32(a0)
	blez	a1,0x11a14 # lua_toboolean+0x26>
	ld	a5,0(a3)
	ld	a4,16(a0)
	slli	a1,a1,0x4
	add	a1,a1,a5
	bleu	a4,a1,0x11a34 # lua_toboolean+0x46>
	lbu	a5,8(a1)
	li	a4,1
	li	a0,0
	beq	a5,a4,0x11a12 # lua_toboolean+0x24>
	andi	a5,a5,15
	snez	a0,a5
	ret
	lui	a5,0xfff0c
	addi	a2,a5,-1575 # 0xfffffffffff0b9d9 # __BSS_END__+0xffffffffffebd651>
	ble	a2,a1,0x11a52 # lua_toboolean+0x64>
	addi	a4,a5,-1576
	beq	a1,a4,0x11a5a # lua_toboolean+0x6c>
	ld	a5,0(a3)
	li	a3,22
	lbu	a6,8(a5)
	bne	a6,a3,0x11a3c # lua_toboolean+0x4e>
	ld	a1,24(a0)
	addi	a1,a1,80
	j	0x11a00 # lua_toboolean+0x12>
	ld	a5,0(a5)
	subw	a4,a4,a1
	lbu	a3,10(a5)
	blt	a3,a4,0x11a34 # lua_toboolean+0x46>
	subw	a1,a2,a1
	slli	a1,a1,0x4
	add	a1,a1,a5
	j	0x11a00 # lua_toboolean+0x12>
	ld	a5,16(a0)
	slli	a1,a1,0x4
	add	a1,a1,a5
	j	0x11a00 # lua_toboolean+0x12>
	ld	a1,24(a0)
	addi	a1,a1,64
	j	0x11a00 # lua_toboolean+0x12>

lua_tolstring:
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	s2,0(sp)
	sd	ra,24(sp)
	ld	a3,32(a0)
	mv	s0,a0
	mv	s1,a1
	mv	s2,a2
	blez	a1,0x11aee # lua_tolstring+0x8c>
	ld	a5,0(a3)
	ld	a4,16(a0)
	slli	a1,a1,0x4
	add	a1,a1,a5
	bleu	a4,a1,0x11b0e # lua_tolstring+0xac>
	lbu	a5,8(a1)
	li	a4,4
	andi	a5,a5,15
	beq	a5,a4,0x11ab4 # lua_tolstring+0x52>
	li	a4,3
	bne	a5,a4,0x11ad8 # lua_tolstring+0x76>
	mv	a0,s0
	jal	ra,0x183b6 # luaO_tostring>
	ld	a5,24(s0)
	ld	a5,24(a5)
	blez	a5,0x11aaa # lua_tolstring+0x48>
	mv	a0,s0
	jal	ra,0x17420 # luaC_step>
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x10e54 # index2value>
	mv	a1,a0
	ld	a0,0(a1)
	beqz	s2,0x11aca # lua_tolstring+0x68>
	lbu	a4,8(a0)
	li	a5,4
	beq	a4,a5,0x11b2a # lua_tolstring+0xc8>
	ld	a5,16(a0)
	sd	a5,0(s2)
	addi	a0,a0,24
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret
	li	a0,0
	beqz	s2,0x11acc # lua_tolstring+0x6a>
	ld	ra,24(sp)
	ld	s0,16(sp)
	sd	zero,0(s2)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret
	lui	a5,0xfff0c
	addi	a1,a5,-1575 # 0xfffffffffff0b9d9 # __BSS_END__+0xffffffffffebd651>
	ble	a1,s1,0x11b34 # lua_tolstring+0xd2>
	addi	a4,a5,-1576
	beq	s1,a4,0x11b3e # lua_tolstring+0xdc>
	ld	a5,0(a3)
	li	a3,22
	lbu	a2,8(a5)
	bne	a2,a3,0x11b16 # lua_tolstring+0xb4>
	ld	a5,24(s0)
	addi	a1,a5,80
	j	0x11a84 # lua_tolstring+0x22>
	ld	a5,0(a5)
	subw	a4,a4,s1
	lbu	a3,10(a5)
	blt	a3,a4,0x11b0e # lua_tolstring+0xac>
	subw	a1,a1,s1
	slli	a1,a1,0x4
	add	a1,a1,a5
	j	0x11a84 # lua_tolstring+0x22>
	lbu	a5,11(a0)
	sd	a5,0(s2)
	j	0x11aca # lua_tolstring+0x68>
	ld	a5,16(a0)
	slli	a1,s1,0x4
	add	a1,a1,a5
	j	0x11a84 # lua_tolstring+0x22>
	ld	a5,24(a0)
	addi	a1,a5,64
	j	0x11a84 # lua_tolstring+0x22>

lua_rawlen:
	ld	a3,32(a0)
	blez	a1,0x11b8a # lua_rawlen+0x44>
	ld	a5,0(a3)
	ld	a4,16(a0)
	slli	a1,a1,0x4
	add	a1,a1,a5
	bleu	a4,a1,0x11baa # lua_rawlen+0x64>
	lbu	a4,8(a1)
	li	a3,7
	andi	a5,a4,63
	beq	a5,a3,0x11b84 # lua_rawlen+0x3e>
	andi	a4,a4,56
	bnez	a4,0x11b7e # lua_rawlen+0x38>
	li	a4,4
	beq	a5,a4,0x11bb6 # lua_rawlen+0x70>
	li	a4,5
	bne	a5,a4,0x11bb2 # lua_rawlen+0x6c>
	ld	a0,0(a1)
	j	0x1cf2a # luaH_getn>
	li	a4,20
	bne	a5,a4,0x11bb2 # lua_rawlen+0x6c>
	ld	a5,0(a1)
	ld	a0,16(a5)
	ret
	lui	a5,0xfff0c
	addi	a2,a5,-1575 # 0xfffffffffff0b9d9 # __BSS_END__+0xffffffffffebd651>
	ble	a2,a1,0x11bd4 # lua_rawlen+0x8e>
	addi	a4,a5,-1576
	beq	a1,a4,0x11bdc # lua_rawlen+0x96>
	ld	a5,0(a3)
	li	a3,22
	lbu	a6,8(a5)
	bne	a6,a3,0x11bbe # lua_rawlen+0x78>
	ld	a1,24(a0)
	addi	a1,a1,80
	j	0x11b58 # lua_rawlen+0x12>
	li	a0,0
	ret
	ld	a5,0(a1)
	lbu	a0,11(a5)
	ret
	ld	a5,0(a5)
	subw	a4,a4,a1
	lbu	a3,10(a5)
	blt	a3,a4,0x11baa # lua_rawlen+0x64>
	subw	a1,a2,a1
	slli	a1,a1,0x4
	add	a1,a1,a5
	j	0x11b58 # lua_rawlen+0x12>
	ld	a5,16(a0)
	slli	a1,a1,0x4
	add	a1,a1,a5
	j	0x11b58 # lua_rawlen+0x12>
	ld	a1,24(a0)
	addi	a1,a1,64
	j	0x11b58 # lua_rawlen+0x12>

lua_tocfunction:
	ld	a3,32(a0)
	blez	a1,0x11c10 # lua_tocfunction+0x2c>
	ld	a5,0(a3)
	ld	a4,16(a0)
	slli	a1,a1,0x4
	add	a1,a1,a5
	bleu	a4,a1,0x11c30 # lua_tocfunction+0x4c>
	lbu	a5,8(a1)
	li	a4,22
	beq	a5,a4,0x11c40 # lua_tocfunction+0x5c>
	li	a4,102
	li	a0,0
	bne	a5,a4,0x11c0e # lua_tocfunction+0x2a>
	ld	a5,0(a1)
	ld	a0,24(a5)
	ret
	lui	a5,0xfff0c
	addi	a2,a5,-1575 # 0xfffffffffff0b9d9 # __BSS_END__+0xffffffffffebd651>
	ble	a2,a1,0x11c5a # lua_tocfunction+0x76>
	addi	a4,a5,-1576
	beq	a1,a4,0x11c62 # lua_tocfunction+0x7e>
	ld	a5,0(a3)
	li	a3,22
	lbu	a6,8(a5)
	bne	a6,a3,0x11c44 # lua_tocfunction+0x60>
	ld	a1,24(a0)
	li	a4,22
	lbu	a5,88(a1)
	addi	a1,a1,80
	bne	a5,a4,0x11c00 # lua_tocfunction+0x1c>
	ld	a0,0(a1)
	ret
	ld	a5,0(a5)
	subw	a4,a4,a1
	lbu	a3,10(a5)
	blt	a3,a4,0x11c30 # lua_tocfunction+0x4c>
	subw	a1,a2,a1
	slli	a1,a1,0x4
	add	a1,a1,a5
	j	0x11bf6 # lua_tocfunction+0x12>
	ld	a5,16(a0)
	slli	a1,a1,0x4
	add	a1,a1,a5
	j	0x11bf6 # lua_tocfunction+0x12>
	ld	a1,24(a0)
	addi	a1,a1,64
	j	0x11bf6 # lua_tocfunction+0x12>

lua_touserdata:
	ld	a3,32(a0)
	blez	a1,0x11ca8 # lua_touserdata+0x3e>
	ld	a5,0(a3)
	ld	a4,16(a0)
	slli	a1,a1,0x4
	add	a1,a1,a5
	bleu	a4,a1,0x11cc8 # lua_touserdata+0x5e>
	lbu	a5,8(a1)
	li	a4,2
	ld	a0,0(a1)
	andi	a5,a5,15
	beq	a5,a4,0x11ca6 # lua_touserdata+0x3c>
	li	a4,7
	bne	a5,a4,0x11ca4 # lua_touserdata+0x3a>
	lhu	a5,10(a0)
	li	a4,32
	beqz	a5,0x11ca0 # lua_touserdata+0x36>
	slli	a5,a5,0x4
	addi	a4,a5,40
	add	a0,a0,a4
	ret
	li	a0,0
	ret
	lui	a5,0xfff0c
	addi	a2,a5,-1575 # 0xfffffffffff0b9d9 # __BSS_END__+0xffffffffffebd651>
	ble	a2,a1,0x11ce6 # lua_touserdata+0x7c>
	addi	a4,a5,-1576
	beq	a1,a4,0x11cee # lua_touserdata+0x84>
	ld	a5,0(a3)
	li	a3,22
	lbu	a6,8(a5)
	bne	a6,a3,0x11cd0 # lua_touserdata+0x66>
	ld	a1,24(a0)
	addi	a1,a1,80
	j	0x11c7c # lua_touserdata+0x12>
	ld	a5,0(a5)
	subw	a4,a4,a1
	lbu	a3,10(a5)
	blt	a3,a4,0x11cc8 # lua_touserdata+0x5e>
	subw	a1,a2,a1
	slli	a1,a1,0x4
	add	a1,a1,a5
	j	0x11c7c # lua_touserdata+0x12>
	ld	a5,16(a0)
	slli	a1,a1,0x4
	add	a1,a1,a5
	j	0x11c7c # lua_touserdata+0x12>
	ld	a1,24(a0)
	addi	a1,a1,64
	j	0x11c7c # lua_touserdata+0x12>

lua_tothread:
	ld	a3,32(a0)
	blez	a1,0x11d1a # lua_tothread+0x24>
	ld	a5,0(a3)
	ld	a4,16(a0)
	slli	a1,a1,0x4
	add	a1,a1,a5
	bleu	a4,a1,0x11d3a # lua_tothread+0x44>
	lbu	a4,8(a1)
	li	a5,72
	li	a0,0
	bne	a4,a5,0x11d18 # lua_tothread+0x22>
	ld	a0,0(a1)
	ret
	lui	a5,0xfff0c
	addi	a2,a5,-1575 # 0xfffffffffff0b9d9 # __BSS_END__+0xffffffffffebd651>
	ble	a2,a1,0x11d58 # lua_tothread+0x62>
	addi	a4,a5,-1576
	beq	a1,a4,0x11d60 # lua_tothread+0x6a>
	ld	a5,0(a3)
	li	a3,22
	lbu	a6,8(a5)
	bne	a6,a3,0x11d42 # lua_tothread+0x4c>
	ld	a1,24(a0)
	addi	a1,a1,80
	j	0x11d08 # lua_tothread+0x12>
	ld	a5,0(a5)
	subw	a4,a4,a1
	lbu	a3,10(a5)
	blt	a3,a4,0x11d3a # lua_tothread+0x44>
	subw	a1,a2,a1
	slli	a1,a1,0x4
	add	a1,a1,a5
	j	0x11d08 # lua_tothread+0x12>
	ld	a5,16(a0)
	slli	a1,a1,0x4
	add	a1,a1,a5
	j	0x11d08 # lua_tothread+0x12>
	ld	a1,24(a0)
	addi	a1,a1,64
	j	0x11d08 # lua_tothread+0x12>

lua_topointer:
	ld	a3,32(a0)
	blez	a1,0x11db4 # lua_topointer+0x4c>
	ld	a5,0(a3)
	ld	a4,16(a0)
	slli	a1,a1,0x4
	add	a1,a1,a5
	bleu	a4,a1,0x11dd4 # lua_topointer+0x6c>
	lbu	a5,8(a1)
	li	a3,7
	andi	a4,a5,63
	beq	a4,a3,0x11da0 # lua_topointer+0x38>
	li	a3,22
	beq	a4,a3,0x11d9c # lua_topointer+0x34>
	li	a3,2
	beq	a4,a3,0x11da0 # lua_topointer+0x38>
	andi	a5,a5,64
	li	a0,0
	beqz	a5,0x11db2 # lua_topointer+0x4a>
	ld	a0,0(a1)
	ret
	andi	a5,a5,15
	li	a4,2
	ld	a0,0(a1)
	beq	a5,a4,0x11db2 # lua_topointer+0x4a>
	li	a4,7
	beq	a5,a4,0x11ddc # lua_topointer+0x74>
	li	a0,0
	ret
	lui	a5,0xfff0c
	addi	a2,a5,-1575 # 0xfffffffffff0b9d9 # __BSS_END__+0xffffffffffebd651>
	ble	a2,a1,0x11e06 # lua_topointer+0x9e>
	addi	a4,a5,-1576
	beq	a1,a4,0x11e0e # lua_topointer+0xa6>
	ld	a5,0(a3)
	li	a3,22
	lbu	a6,8(a5)
	bne	a6,a3,0x11df0 # lua_topointer+0x88>
	ld	a1,24(a0)
	addi	a1,a1,80
	j	0x11d7a # lua_topointer+0x12>
	lhu	a5,10(a0)
	li	a4,32
	beqz	a5,0x11dec # lua_topointer+0x84>
	slli	a5,a5,0x4
	addi	a4,a5,40
	add	a0,a0,a4
	ret
	ld	a5,0(a5)
	subw	a4,a4,a1
	lbu	a3,10(a5)
	blt	a3,a4,0x11dd4 # lua_topointer+0x6c>
	subw	a1,a2,a1
	slli	a1,a1,0x4
	add	a1,a1,a5
	j	0x11d7a # lua_topointer+0x12>
	ld	a5,16(a0)
	slli	a1,a1,0x4
	add	a1,a1,a5
	j	0x11d7a # lua_topointer+0x12>
	ld	a1,24(a0)
	addi	a1,a1,64
	j	0x11d7a # lua_topointer+0x12>

lua_pushnil:
	ld	a5,16(a0)
	sb	zero,8(a5)
	addi	a5,a5,16
	sd	a5,16(a0)
	ret

lua_pushnumber:
	ld	a5,16(a0)
	li	a4,19
	sb	a4,8(a5)
	fsd	fa0,0(a5)
	addi	a5,a5,16
	sd	a5,16(a0)
	ret

lua_pushinteger:
	ld	a5,16(a0)
	li	a4,3
	sd	a1,0(a5)
	sb	a4,8(a5)
	addi	a5,a5,16
	sd	a5,16(a0)
	ret

lua_pushlstring:
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	ra,24(sp)
	sd	s1,8(sp)
	mv	s0,a0
	bnez	a2,0x11e8e # lua_pushlstring+0x4c>
	auipc	a1,0x2f
	addi	a1,a1,914 # 0x411e0 # __clzdi2+0x318>
	jal	ra,0x1c032 # luaS_new>
	mv	s1,a0
	ld	a5,16(s0)
	sd	s1,0(a5)
	lbu	a4,8(s1)
	addi	a3,a5,16
	ori	a4,a4,64
	sb	a4,8(a5)
	ld	a5,24(s0)
	sd	a3,16(s0)
	ld	a5,24(a5)
	blez	a5,0x11e80 # lua_pushlstring+0x3e>
	mv	a0,s0
	jal	ra,0x17420 # luaC_step>
	ld	ra,24(sp)
	ld	s0,16(sp)
	addi	a0,s1,24
	ld	s1,8(sp)
	addi	sp,sp,32
	ret
	jal	ra,0x1bfce # luaS_newlstr>
	mv	s1,a0
	j	0x11e5c # lua_pushlstring+0x1a>

lua_pushstring:
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	ra,24(sp)
	sd	s1,8(sp)
	mv	s0,a0
	beqz	a1,0x11ed8 # lua_pushstring+0x42>
	jal	ra,0x1c032 # luaS_new>
	ld	a5,16(s0)
	addi	s1,a0,24
	sd	a0,0(a5)
	lbu	a4,8(a0)
	ori	a4,a4,64
	sb	a4,8(a5)
	ld	a4,24(s0)
	addi	a5,a5,16
	sd	a5,16(s0)
	ld	a5,24(a4)
	blez	a5,0x11ecc # lua_pushstring+0x36>
	mv	a0,s0
	jal	ra,0x17420 # luaC_step>
	ld	ra,24(sp)
	ld	s0,16(sp)
	mv	a0,s1
	ld	s1,8(sp)
	addi	sp,sp,32
	ret
	ld	a5,16(a0)
	li	s1,0
	sb	zero,8(a5)
	j	0x11eba # lua_pushstring+0x24>

lua_pushvfstring:
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	s1,8(sp)
	mv	s0,a0
	sd	ra,24(sp)
	jal	ra,0x18416 # luaO_pushvfstring>
	ld	a5,24(s0)
	mv	s1,a0
	ld	a5,24(a5)
	blez	a5,0x11f00 # lua_pushvfstring+0x1e>
	mv	a0,s0
	jal	ra,0x17420 # luaC_step>
	ld	ra,24(sp)
	ld	s0,16(sp)
	mv	a0,s1
	ld	s1,8(sp)
	addi	sp,sp,32
	ret

lua_pushfstring:
	addi	sp,sp,-96
	addi	t1,sp,48
	sd	a2,48(sp)
	mv	a2,t1
	sd	s0,32(sp)
	sd	s1,24(sp)
	mv	s0,a0
	sd	a5,72(sp)
	sd	ra,40(sp)
	sd	a3,56(sp)
	sd	a4,64(sp)
	sd	a6,80(sp)
	sd	a7,88(sp)
	sd	t1,8(sp)
	jal	ra,0x18416 # luaO_pushvfstring>
	ld	a5,24(s0)
	mv	s1,a0
	ld	a5,24(a5)
	blez	a5,0x11f3e # lua_pushfstring+0x32>
	mv	a0,s0
	jal	ra,0x17420 # luaC_step>
	ld	ra,40(sp)
	ld	s0,32(sp)
	mv	a0,s1
	ld	s1,24(sp)
	addi	sp,sp,96
	ret

lua_pushcclosure:
	addi	sp,sp,-32
	sd	s1,8(sp)
	sd	s2,0(sp)
	sd	ra,24(sp)
	sd	s0,16(sp)
	mv	s1,a0
	mv	s2,a1
	bnez	a2,0x11f74 # lua_pushcclosure+0x2a>
	ld	a5,16(a0)
	li	a4,22
	sd	a1,0(a5)
	sb	a4,8(a5)
	addi	a5,a5,16
	sd	a5,16(a0)
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret
	mv	a1,a2
	mv	s0,a2
	jal	ra,0x15606 # luaF_newCclosure>
	addiw	a3,s0,-1
	slli	a3,a3,0x20
	ld	a4,16(s1)
	srli	a3,a3,0x20
	slli	s0,s0,0x4
	slli	a3,a3,0x4
	addi	a5,s0,16
	sub	a3,s0,a3
	sd	s2,24(a0)
	sub	s0,a4,s0
	add	a5,a5,a0
	add	a3,a3,a0
	ld	a2,-16(a4)
	addi	a4,a4,-16
	addi	a5,a5,-16
	sd	a2,16(a5)
	lbu	a2,8(a4)
	sb	a2,24(a5)
	bne	a5,a3,0x11f9e # lua_pushcclosure+0x54>
	li	a5,102
	sb	a5,8(s0)
	ld	a5,24(s1)
	addi	s0,s0,16
	sd	a0,-16(s0)
	ld	a5,24(a5)
	sd	s0,16(s1)
	blez	a5,0x11f68 # lua_pushcclosure+0x1e>
	ld	s0,16(sp)
	ld	ra,24(sp)
	ld	s2,0(sp)
	mv	a0,s1
	ld	s1,8(sp)
	addi	sp,sp,32
	j	0x17420 # luaC_step>

lua_pushboolean:
	ld	a5,16(a0)
	beqz	a1,0x11fec # lua_pushboolean+0x10>
	li	a4,17
	sb	a4,8(a5)
	addi	a5,a5,16
	sd	a5,16(a0)
	ret
	li	a4,1
	sb	a4,8(a5)
	addi	a5,a5,16
	sd	a5,16(a0)
	ret

lua_pushlightuserdata:
	ld	a5,16(a0)
	li	a4,2
	sd	a1,0(a5)
	sb	a4,8(a5)
	addi	a5,a5,16
	sd	a5,16(a0)
	ret

lua_pushthread:
	ld	a5,16(a0)
	li	a4,72
	sb	a4,8(a5)
	ld	a4,24(a0)
	addi	a5,a5,16
	sd	a0,-16(a5)
	ld	a4,264(a4)
	sd	a5,16(a0)
	sub	a0,a4,a0
	seqz	a0,a0
	ret

lua_getglobal:
	ld	a5,24(a0)
	mv	a2,a1
	ld	a5,64(a5)
	ld	a1,16(a5)
	addi	a1,a1,16
	j	0x10eba # auxgetstr>

lua_gettable:
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	s1,8(sp)
	mv	s0,a0
	sd	ra,24(sp)
	jal	ra,0x10e54 # index2value>
	ld	a3,16(s0)
	lbu	a2,8(a0)
	li	a5,69
	mv	s1,a0
	addi	a3,a3,-16
	li	a4,0
	beq	a2,a5,0x12076 # lua_gettable+0x3e>
	mv	a0,s0
	mv	a1,s1
	mv	a2,a3
	jal	ra,0x1e74c # luaV_finishget>
	ld	a5,16(s0)
	ld	ra,24(sp)
	ld	s0,16(sp)
	lbu	a0,-8(a5)
	ld	s1,8(sp)
	andi	a0,a0,15
	addi	sp,sp,32
	ret
	ld	a0,0(a0)
	mv	a1,a3
	jal	ra,0x1c6d4 # luaH_get>
	lbu	a5,8(a0)
	mv	a4,a0
	ld	a3,16(s0)
	andi	a0,a5,15
	beqz	a0,0x120a0 # lua_gettable+0x68>
	ld	a4,0(a4)
	sb	a5,-8(a3)
	ld	ra,24(sp)
	ld	s0,16(sp)
	sd	a4,-16(a3)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret
	addi	a3,a3,-16
	j	0x1205a # lua_gettable+0x22>

lua_getfield:
	ld	a3,32(a0)
	blez	a1,0x120c0 # lua_getfield+0x1c>
	ld	a5,0(a3)
	ld	a4,16(a0)
	slli	a1,a1,0x4
	add	a1,a1,a5
	bltu	a1,a4,0x120bc # lua_getfield+0x18>
	ld	a1,24(a0)
	addi	a1,a1,80
	j	0x10eba # auxgetstr>
	lui	a5,0xfff0c
	addi	a6,a5,-1575 # 0xfffffffffff0b9d9 # __BSS_END__+0xffffffffffebd651>
	ble	a6,a1,0x120f6 # lua_getfield+0x52>
	addi	a4,a5,-1576
	beq	a1,a4,0x12100 # lua_getfield+0x5c>
	ld	a5,0(a3)
	li	a3,22
	lbu	a7,8(a5)
	beq	a7,a3,0x120b6 # lua_getfield+0x12>
	ld	a5,0(a5)
	subw	a4,a4,a1
	lbu	a3,10(a5)
	blt	a3,a4,0x120b6 # lua_getfield+0x12>
	subw	a1,a6,a1
	slli	a1,a1,0x4
	add	a1,a1,a5
	j	0x120bc # lua_getfield+0x18>
	ld	a5,16(a0)
	slli	a1,a1,0x4
	add	a1,a1,a5
	j	0x10eba # auxgetstr>
	ld	a1,24(a0)
	addi	a1,a1,64
	j	0x120bc # lua_getfield+0x18>

lua_geti:
	addi	sp,sp,-48
	sd	s0,32(sp)
	sd	s1,24(sp)
	sd	s2,16(sp)
	sd	ra,40(sp)
	mv	s0,a0
	mv	s2,a2
	jal	ra,0x10e54 # index2value>
	lbu	a4,8(a0)
	li	a5,69
	mv	s1,a0
	bne	a4,a5,0x12166 # lua_geti+0x5e>
	ld	a0,0(a0)
	addi	a5,s2,-1
	lwu	a4,12(a0)
	bleu	a4,a5,0x12194 # lua_geti+0x8c>
	ld	a4,16(a0)
	slli	a0,s2,0x4
	addi	a0,a0,-16
	add	a4,a4,a0
	lbu	a5,8(a4)
	ld	a3,16(s0)
	andi	a0,a5,15
	beqz	a0,0x1216a # lua_geti+0x62>
	ld	a4,0(a4)
	addi	a3,a3,16
	sb	a5,-8(a3)
	sd	a4,-16(a3)
	ld	ra,40(sp)
	sd	a3,16(s0)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	addi	sp,sp,48
	ret
	ld	a3,16(s0)
	li	a4,0
	mv	a0,s0
	mv	a2,sp
	mv	a1,s1
	li	a5,3
	sd	s2,0(sp)
	sb	a5,8(sp)
	jal	ra,0x1e74c # luaV_finishget>
	ld	a3,16(s0)
	ld	ra,40(sp)
	ld	s1,24(sp)
	lbu	a0,8(a3)
	addi	a3,a3,16
	sd	a3,16(s0)
	ld	s0,32(sp)
	ld	s2,16(sp)
	andi	a0,a0,15
	addi	sp,sp,48
	ret
	mv	a1,s2
	jal	ra,0x1c554 # luaH_getint>
	mv	a4,a0
	j	0x12140 # lua_geti+0x38>

lua_rawget:
	addi	sp,sp,-16
	sd	ra,8(sp)
	sd	s0,0(sp)
	mv	s0,a0
	jal	ra,0x10e54 # index2value>
	ld	a1,16(s0)
	ld	a0,0(a0)
	addi	a1,a1,-16
	jal	ra,0x1c6d4 # luaH_get>
	ld	a5,16(s0)
	ld	a3,0(a0)
	addi	a4,a5,-16
	sd	a4,16(s0)
	lbu	a4,8(a0)
	andi	a0,a4,15
	bnez	a0,0x121d6 # lua_rawget+0x38>
	sb	zero,-8(a5)
	ld	ra,8(sp)
	sd	a5,16(s0)
	ld	s0,0(sp)
	addi	sp,sp,16
	ret
	sb	a4,-8(a5)
	sd	a3,-16(a5)
	ld	ra,8(sp)
	sd	a5,16(s0)
	ld	s0,0(sp)
	sext.w	a0,a0
	addi	sp,sp,16
	ret

lua_rawgeti:
	addi	sp,sp,-32
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	mv	s0,a0
	mv	s1,a2
	jal	ra,0x10e54 # index2value>
	ld	a0,0(a0)
	mv	a1,s1
	jal	ra,0x1c554 # luaH_getint>
	lbu	a4,8(a0)
	ld	a3,0(a0)
	ld	a5,16(s0)
	andi	a0,a4,15
	bnez	a0,0x12222 # lua_rawgeti+0x38>
	sb	zero,8(a5)
	addi	a5,a5,16
	ld	ra,24(sp)
	sd	a5,16(s0)
	ld	s0,16(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret
	sb	a4,8(a5)
	sd	a3,0(a5)
	addi	a5,a5,16
	ld	ra,24(sp)
	sd	a5,16(s0)
	ld	s0,16(sp)
	ld	s1,8(sp)
	sext.w	a0,a0
	addi	sp,sp,32
	ret

lua_rawgetp:
	addi	sp,sp,-48
	sd	ra,40(sp)
	sd	s0,32(sp)
	sd	s1,24(sp)
	mv	s0,a0
	mv	s1,a2
	jal	ra,0x10e54 # index2value>
	ld	a0,0(a0)
	li	a5,2
	mv	a1,sp
	sb	a5,8(sp)
	sd	s1,0(sp)
	jal	ra,0x1c6d4 # luaH_get>
	lbu	a4,8(a0)
	ld	a3,0(a0)
	ld	a5,16(s0)
	andi	a0,a4,15
	bnez	a0,0x12278 # lua_rawgetp+0x40>
	sb	zero,8(a5)
	addi	a5,a5,16
	ld	ra,40(sp)
	sd	a5,16(s0)
	ld	s0,32(sp)
	ld	s1,24(sp)
	addi	sp,sp,48
	ret
	sb	a4,8(a5)
	sd	a3,0(a5)
	addi	a5,a5,16
	ld	ra,40(sp)
	sd	a5,16(s0)
	ld	s0,32(sp)
	ld	s1,24(sp)
	sext.w	a0,a0
	addi	sp,sp,48
	ret

lua_createtable:
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	s1,8(sp)
	mv	s0,a0
	sd	s2,0(sp)
	mv	s1,a1
	sd	ra,24(sp)
	mv	s2,a2
	jal	ra,0x1c4ce # luaH_new>
	ld	a5,16(s0)
	li	a4,69
	mv	a1,a0
	sd	a0,0(a5)
	sb	a4,8(a5)
	addi	a5,a5,16
	sd	a5,16(s0)
	bgtz	s1,0x122bc # lua_createtable+0x2e>
	blez	s2,0x122c6 # lua_createtable+0x38>
	mv	a3,s2
	mv	a2,s1
	mv	a0,s0
	jal	ra,0x1cb1e # luaH_resize>
	ld	a5,24(s0)
	ld	a5,24(a5)
	bgtz	a5,0x122da # lua_createtable+0x4c>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret
	mv	a0,s0
	ld	s0,16(sp)
	ld	ra,24(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	j	0x17420 # luaC_step>

lua_getmetatable:
	ld	a2,32(a0)
	mv	a5,a0
	blez	a1,0x12334 # lua_getmetatable+0x4a>
	ld	a4,0(a2)
	ld	a3,16(a0)
	slli	a1,a1,0x4
	add	a1,a1,a4
	bleu	a3,a1,0x12354 # lua_getmetatable+0x6a>
	lbu	a4,8(a1)
	li	a3,5
	andi	a4,a4,15
	beq	a4,a3,0x12366 # lua_getmetatable+0x7c>
	li	a3,7
	beq	a4,a3,0x1236c # lua_getmetatable+0x82>
	ld	a3,24(a5)
	addi	a4,a4,60
	slli	a4,a4,0x3
	add	a4,a4,a3
	ld	a3,0(a4)
	li	a0,0
	beqz	a3,0x12332 # lua_getmetatable+0x48>
	ld	a4,16(a5)
	li	a0,1
	sd	a3,0(a4)
	li	a3,69
	sb	a3,8(a4)
	addi	a4,a4,16
	sd	a4,16(a5)
	ret
	lui	a4,0xfff0c
	addi	a0,a4,-1575 # 0xfffffffffff0b9d9 # __BSS_END__+0xffffffffffebd651>
	ble	a0,a1,0x12388 # lua_getmetatable+0x9e>
	addi	a3,a4,-1576
	beq	a1,a3,0x12390 # lua_getmetatable+0xa6>
	ld	a4,0(a2)
	li	a2,22
	lbu	a6,8(a4)
	bne	a6,a2,0x12372 # lua_getmetatable+0x88>
	ld	a1,24(a5)
	li	a3,5
	lbu	a4,88(a1)
	addi	a1,a1,80
	andi	a4,a4,15
	bne	a4,a3,0x1230a # lua_getmetatable+0x20>
	ld	a4,0(a1)
	ld	a3,40(a4)
	j	0x1231c # lua_getmetatable+0x32>
	ld	a4,0(a1)
	ld	a3,24(a4)
	j	0x1231c # lua_getmetatable+0x32>
	ld	a4,0(a4)
	subw	a3,a3,a1
	lbu	a2,10(a4)
	blt	a2,a3,0x12354 # lua_getmetatable+0x6a>
	subw	a1,a0,a1
	slli	a1,a1,0x4
	add	a1,a1,a4
	j	0x122fe # lua_getmetatable+0x14>
	ld	a4,16(a5)
	slli	a1,a1,0x4
	add	a1,a1,a4
	j	0x122fe # lua_getmetatable+0x14>
	ld	a1,24(a5)
	addi	a1,a1,64
	j	0x122fe # lua_getmetatable+0x14>

lua_getiuservalue:
	ld	a6,32(a0)
	ld	a5,16(a0)
	mv	a4,a0
	blez	a1,0x123da # lua_getiuservalue+0x42>
	ld	a3,0(a6)
	slli	a1,a1,0x4
	add	a1,a1,a3
	bleu	a5,a1,0x123fc # lua_getiuservalue+0x64>
	blez	a2,0x12428 # lua_getiuservalue+0x90>
	ld	a3,0(a1)
	lhu	a1,10(a3)
	blt	a1,a2,0x12428 # lua_getiuservalue+0x90>
	addiw	a2,a2,-1
	addi	a2,a2,2
	slli	a2,a2,0x4
	add	a2,a2,a3
	ld	a3,8(a2)
	sd	a3,0(a5)
	lbu	a0,16(a2)
	sb	a0,8(a5)
	andi	a0,a0,15
	addi	a5,a5,16
	sd	a5,16(a4)
	ret
	lui	a3,0xfff0c
	addi	a7,a3,-1575 # 0xfffffffffff0b9d9 # __BSS_END__+0xffffffffffebd651>
	ble	a7,a1,0x1241a # lua_getiuservalue+0x82>
	addi	a0,a3,-1576
	beq	a1,a0,0x12420 # lua_getiuservalue+0x88>
	ld	a3,0(a6)
	li	a6,22
	lbu	t1,8(a3)
	bne	t1,a6,0x12404 # lua_getiuservalue+0x6c>
	ld	a1,24(a4)
	addi	a1,a1,80
	j	0x123b0 # lua_getiuservalue+0x18>
	ld	a3,0(a3)
	subw	a0,a0,a1
	lbu	a6,10(a3)
	blt	a6,a0,0x123fc # lua_getiuservalue+0x64>
	subw	a1,a7,a1
	slli	a1,a1,0x4
	add	a1,a1,a3
	j	0x123b0 # lua_getiuservalue+0x18>
	slli	a1,a1,0x4
	add	a1,a1,a5
	j	0x123b0 # lua_getiuservalue+0x18>
	ld	a1,24(a4)
	addi	a1,a1,64
	j	0x123b0 # lua_getiuservalue+0x18>
	sb	zero,8(a5)
	li	a0,-1
	j	0x123d4 # lua_getiuservalue+0x3c>

lua_setglobal:
	ld	a5,24(a0)
	mv	a2,a1
	ld	a5,64(a5)
	ld	a1,16(a5)
	addi	a1,a1,16
	j	0x10f44 # auxsetstr>

lua_settable:
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	s1,8(sp)
	mv	s0,a0
	sd	ra,24(sp)
	jal	ra,0x10e54 # index2value>
	ld	a3,16(s0)
	lbu	a1,8(a0)
	li	a5,69
	mv	s1,a0
	addi	a2,a3,-32
	li	a4,0
	beq	a1,a5,0x1247c # lua_settable+0x3e>
	addi	a3,a3,-16
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x1e86a # luaV_finishset>
	ld	a5,16(s0)
	addi	a5,a5,-32
	ld	ra,24(sp)
	sd	a5,16(s0)
	ld	s0,16(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret
	ld	a0,0(a0)
	mv	a1,a2
	jal	ra,0x1c6d4 # luaH_get>
	lbu	a5,8(a0)
	mv	a4,a0
	andi	a5,a5,15
	beqz	a5,0x124ca # lua_settable+0x8c>
	ld	a5,16(s0)
	ld	a3,-16(a5)
	sd	a3,0(a0)
	lbu	a3,-8(a5)
	sb	a3,8(a0)
	lbu	a4,-8(a5)
	andi	a4,a4,64
	beqz	a4,0x1246e # lua_settable+0x30>
	ld	a1,0(s1)
	lbu	a4,9(a1)
	andi	a4,a4,32
	beqz	a4,0x1246e # lua_settable+0x30>
	ld	a4,-16(a5)
	lbu	a4,9(a4)
	andi	a4,a4,24
	beqz	a4,0x1246e # lua_settable+0x30>
	mv	a0,s0
	jal	ra,0x170d0 # luaC_barrierback_>
	ld	a5,16(s0)
	j	0x1246e # lua_settable+0x30>
	ld	a3,16(s0)
	addi	a2,a3,-32
	j	0x12462 # lua_settable+0x24>

lua_setfield:
	ld	a3,32(a0)
	blez	a1,0x124ee # lua_setfield+0x1c>
	ld	a5,0(a3)
	ld	a4,16(a0)
	slli	a1,a1,0x4
	add	a1,a1,a5
	bltu	a1,a4,0x124ea # lua_setfield+0x18>
	ld	a1,24(a0)
	addi	a1,a1,80
	j	0x10f44 # auxsetstr>
	lui	a5,0xfff0c
	addi	a6,a5,-1575 # 0xfffffffffff0b9d9 # __BSS_END__+0xffffffffffebd651>
	ble	a6,a1,0x12524 # lua_setfield+0x52>
	addi	a4,a5,-1576
	beq	a1,a4,0x1252e # lua_setfield+0x5c>
	ld	a5,0(a3)
	li	a3,22
	lbu	a7,8(a5)
	beq	a7,a3,0x124e4 # lua_setfield+0x12>
	ld	a5,0(a5)
	subw	a4,a4,a1
	lbu	a3,10(a5)
	blt	a3,a4,0x124e4 # lua_setfield+0x12>
	subw	a1,a6,a1
	slli	a1,a1,0x4
	add	a1,a1,a5
	j	0x124ea # lua_setfield+0x18>
	ld	a5,16(a0)
	slli	a1,a1,0x4
	add	a1,a1,a5
	j	0x10f44 # auxsetstr>
	ld	a1,24(a0)
	addi	a1,a1,64
	j	0x124ea # lua_setfield+0x18>

lua_seti:
	addi	sp,sp,-48
	sd	s0,32(sp)
	sd	s1,24(sp)
	sd	s2,16(sp)
	sd	ra,40(sp)
	mv	s0,a0
	mv	s2,a2
	jal	ra,0x10e54 # index2value>
	lbu	a4,8(a0)
	li	a5,69
	mv	s1,a0
	bne	a4,a5,0x125b8 # lua_seti+0x82>
	ld	a0,0(a0)
	addi	a5,s2,-1
	lwu	a4,12(a0)
	bleu	a4,a5,0x125e2 # lua_seti+0xac>
	ld	a4,16(a0)
	slli	a0,s2,0x4
	addi	a0,a0,-16
	add	a4,a4,a0
	lbu	a5,8(a4)
	ld	a3,16(s0)
	andi	a5,a5,15
	beqz	a5,0x125bc # lua_seti+0x86>
	ld	a5,-16(a3)
	sd	a5,0(a4)
	lbu	a5,-8(a3)
	sb	a5,8(a4)
	lbu	a5,-8(a3)
	andi	a5,a5,64
	beqz	a5,0x125a8 # lua_seti+0x72>
	ld	a1,0(s1)
	lbu	a5,9(a1)
	andi	a5,a5,32
	beqz	a5,0x125a8 # lua_seti+0x72>
	ld	a5,-16(a3)
	lbu	a5,9(a5)
	andi	a5,a5,24
	bnez	a5,0x125ec # lua_seti+0xb6>
	addi	a3,a3,-16
	ld	ra,40(sp)
	sd	a3,16(s0)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	addi	sp,sp,48
	ret
	ld	a3,16(s0)
	li	a4,0
	addi	a3,a3,-16
	mv	a2,sp
	mv	a1,s1
	mv	a0,s0
	li	a5,3
	sd	s2,0(sp)
	sb	a5,8(sp)
	jal	ra,0x1e86a # luaV_finishset>
	ld	a3,16(s0)
	ld	ra,40(sp)
	ld	s1,24(sp)
	addi	a3,a3,-16
	sd	a3,16(s0)
	ld	s0,32(sp)
	ld	s2,16(sp)
	addi	sp,sp,48
	ret
	mv	a1,s2
	jal	ra,0x1c554 # luaH_getint>
	mv	a4,a0
	j	0x1256e # lua_seti+0x38>
	mv	a0,s0
	jal	ra,0x170d0 # luaC_barrierback_>
	ld	a3,16(s0)
	j	0x125a8 # lua_seti+0x72>

lua_rawset:
	addi	sp,sp,-32
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	mv	s0,a0
	jal	ra,0x10e54 # index2value>
	ld	s1,0(a0)
	ld	a2,16(s0)
	mv	a0,s0
	mv	a1,s1
	addi	a3,a2,-16
	addi	a2,a2,-32
	jal	ra,0x1ce6e # luaH_set>
	lbu	a5,10(s1)
	andi	a5,a5,-64
	sb	a5,10(s1)
	ld	a5,16(s0)
	lbu	a4,-8(a5)
	andi	a4,a4,64
	beqz	a4,0x12644 # lua_rawset+0x4e>
	lbu	a4,9(s1)
	andi	a4,a4,32
	beqz	a4,0x12644 # lua_rawset+0x4e>
	ld	a4,-16(a5)
	lbu	a4,9(a4)
	andi	a4,a4,24
	bnez	a4,0x12652 # lua_rawset+0x5c>
	addi	a5,a5,-32
	ld	ra,24(sp)
	sd	a5,16(s0)
	ld	s0,16(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x170d0 # luaC_barrierback_>
	ld	a5,16(s0)
	j	0x12644 # lua_rawset+0x4e>

lua_rawsetp:
	addi	sp,sp,-48
	li	a5,2
	sb	a5,8(sp)
	sd	ra,40(sp)
	sd	s0,32(sp)
	sd	s1,24(sp)
	mv	s0,a0
	sd	a2,0(sp)
	jal	ra,0x10e54 # index2value>
	ld	s1,0(a0)
	ld	a3,16(s0)
	mv	a2,sp
	mv	a1,s1
	addi	a3,a3,-16
	mv	a0,s0
	jal	ra,0x1ce6e # luaH_set>
	lbu	a5,10(s1)
	andi	a5,a5,-64
	sb	a5,10(s1)
	ld	a5,16(s0)
	lbu	a4,-8(a5)
	andi	a4,a4,64
	beqz	a4,0x126b2 # lua_rawsetp+0x54>
	lbu	a4,9(s1)
	andi	a4,a4,32
	beqz	a4,0x126b2 # lua_rawsetp+0x54>
	ld	a4,-16(a5)
	lbu	a4,9(a4)
	andi	a4,a4,24
	bnez	a4,0x126c0 # lua_rawsetp+0x62>
	addi	a5,a5,-16
	ld	ra,40(sp)
	sd	a5,16(s0)
	ld	s0,32(sp)
	ld	s1,24(sp)
	addi	sp,sp,48
	ret
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x170d0 # luaC_barrierback_>
	ld	a5,16(s0)
	j	0x126b2 # lua_rawsetp+0x54>

lua_rawseti:
	addi	sp,sp,-32
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	mv	s0,a0
	sd	s2,0(sp)
	mv	s1,a2
	jal	ra,0x10e54 # index2value>
	ld	s2,0(a0)
	ld	a3,16(s0)
	mv	a2,s1
	mv	a1,s2
	addi	a3,a3,-16
	mv	a0,s0
	jal	ra,0x1cec6 # luaH_setint>
	ld	a5,16(s0)
	lbu	a4,-8(a5)
	andi	a4,a4,64
	beqz	a4,0x12712 # lua_rawseti+0x46>
	lbu	a4,9(s2)
	andi	a4,a4,32
	beqz	a4,0x12712 # lua_rawseti+0x46>
	ld	a4,-16(a5)
	lbu	a4,9(a4)
	andi	a4,a4,24
	bnez	a4,0x12722 # lua_rawseti+0x56>
	addi	a5,a5,-16
	ld	ra,24(sp)
	sd	a5,16(s0)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret
	mv	a1,s2
	mv	a0,s0
	jal	ra,0x170d0 # luaC_barrierback_>
	ld	a5,16(s0)
	j	0x12712 # lua_rawseti+0x46>

lua_setmetatable:
	addi	sp,sp,-48
	sd	s0,32(sp)
	sd	s1,24(sp)
	mv	s0,a0
	sd	ra,40(sp)
	jal	ra,0x10e54 # index2value>
	ld	a4,16(s0)
	lbu	a5,8(a0)
	mv	s1,a0
	lbu	a3,-8(a4)
	andi	a5,a5,15
	andi	a3,a3,15
	beqz	a3,0x12776 # lua_setmetatable+0x48>
	li	a3,5
	ld	a2,-16(a4)
	beq	a5,a3,0x127b8 # lua_setmetatable+0x8a>
	li	a3,7
	bne	a5,a3,0x12784 # lua_setmetatable+0x56>
	ld	a5,0(a0)
	sd	a2,24(a5)
	bnez	a2,0x127be # lua_setmetatable+0x90>
	ld	a4,16(s0)
	addi	a4,a4,-16
	ld	ra,40(sp)
	sd	a4,16(s0)
	ld	s0,32(sp)
	ld	s1,24(sp)
	li	a0,1
	addi	sp,sp,48
	ret
	li	a3,5
	beq	a5,a3,0x127ea # lua_setmetatable+0xbc>
	li	a3,7
	li	a2,0
	beq	a5,a3,0x127a0 # lua_setmetatable+0x72>
	ld	a3,24(s0)
	addi	a5,a5,60
	slli	a5,a5,0x3
	add	a5,a5,a3
	sd	a2,0(a5)
	addi	a4,a4,-16
	ld	ra,40(sp)
	sd	a4,16(s0)
	ld	s0,32(sp)
	ld	s1,24(sp)
	li	a0,1
	addi	sp,sp,48
	ret
	ld	a5,0(s1)
	ld	ra,40(sp)
	ld	s1,24(sp)
	sd	zero,24(a5)
	ld	a4,16(s0)
	li	a0,1
	addi	a4,a4,-16
	sd	a4,16(s0)
	ld	s0,32(sp)
	addi	sp,sp,48
	ret
	ld	a5,0(a0)
	sd	a2,40(a5)
	beqz	a2,0x12764 # lua_setmetatable+0x36>
	ld	a1,0(s1)
	lbu	a5,9(a1)
	andi	a5,a5,32
	beqz	a5,0x127d2 # lua_setmetatable+0xa4>
	lbu	a5,9(a2)
	andi	a5,a5,24
	bnez	a5,0x127f4 # lua_setmetatable+0xc6>
	mv	a0,s0
	jal	ra,0x1719a # luaC_checkfinalizer>
	ld	a4,16(s0)
	ld	ra,40(sp)
	ld	s1,24(sp)
	addi	a4,a4,-16
	sd	a4,16(s0)
	ld	s0,32(sp)
	li	a0,1
	addi	sp,sp,48
	ret
	ld	a5,0(s1)
	sd	zero,40(a5)
	ld	a4,16(s0)
	j	0x12766 # lua_setmetatable+0x38>
	mv	a0,s0
	sd	a2,8(sp)
	jal	ra,0x1706e # luaC_barrier_>
	ld	a1,0(s1)
	ld	a2,8(sp)
	j	0x127d2 # lua_setmetatable+0xa4>

lua_setiuservalue:
	addi	sp,sp,-32
	sd	ra,24(sp)
	sd	s0,16(sp)
	ld	a6,32(a0)
	ld	a5,16(a0)
	blez	a1,0x1286e # lua_setiuservalue+0x6c>
	ld	a4,0(a6)
	slli	a1,a1,0x4
	add	a1,a1,a4
	bleu	a5,a1,0x12890 # lua_setiuservalue+0x8e>
	ld	a4,0(a1)
	addiw	a3,a2,-1
	li	s0,0
	lhu	a6,10(a4)
	bleu	a6,a3,0x12860 # lua_setiuservalue+0x5e>
	ld	a3,-16(a5)
	slli	a2,a2,0x4
	add	a4,a4,a2
	sd	a3,24(a4)
	lbu	a3,-8(a5)
	li	s0,1
	sb	a3,32(a4)
	andi	a3,a3,64
	beqz	a3,0x12860 # lua_setiuservalue+0x5e>
	ld	a1,0(a1)
	lbu	a4,9(a1)
	andi	a4,a4,32
	beqz	a4,0x12860 # lua_setiuservalue+0x5e>
	ld	a4,-16(a5)
	lbu	a4,9(a4)
	andi	a4,a4,24
	bnez	a4,0x128bc # lua_setiuservalue+0xba>
	addi	a5,a5,-16
	ld	ra,24(sp)
	sd	a5,16(a0)
	mv	a0,s0
	ld	s0,16(sp)
	addi	sp,sp,32
	ret
	lui	a4,0xfff0c
	addi	a7,a4,-1575 # 0xfffffffffff0b9d9 # __BSS_END__+0xffffffffffebd651>
	ble	a7,a1,0x128ae # lua_setiuservalue+0xac>
	addi	a3,a4,-1576
	beq	a1,a3,0x128b4 # lua_setiuservalue+0xb2>
	ld	a4,0(a6)
	li	a6,22
	lbu	t1,8(a4)
	bne	t1,a6,0x12898 # lua_setiuservalue+0x96>
	ld	a1,24(a0)
	addi	a1,a1,80
	j	0x1281e # lua_setiuservalue+0x1c>
	ld	a4,0(a4)
	subw	a3,a3,a1
	lbu	a6,10(a4)
	blt	a6,a3,0x12890 # lua_setiuservalue+0x8e>
	subw	a1,a7,a1
	slli	a1,a1,0x4
	add	a1,a1,a4
	j	0x1281e # lua_setiuservalue+0x1c>
	slli	a1,a1,0x4
	add	a1,a1,a5
	j	0x1281e # lua_setiuservalue+0x1c>
	ld	a1,24(a0)
	addi	a1,a1,64
	j	0x1281e # lua_setiuservalue+0x1c>
	sd	a0,8(sp)
	jal	ra,0x170d0 # luaC_barrierback_>
	ld	a0,8(sp)
	ld	a5,16(a0)
	j	0x12860 # lua_setiuservalue+0x5e>

lua_callk:
	ld	a6,16(a0)
	addi	sp,sp,-32
	slli	a5,a1,0x4
	li	a1,-16
	sd	s0,16(sp)
	sd	s1,8(sp)
	sub	a1,a1,a5
	sd	ra,24(sp)
	mv	s0,a0
	mv	s1,a2
	add	a1,a1,a6
	beqz	a4,0x128f2 # lua_callk+0x2a>
	lw	a5,176(a0)
	lui	a6,0xffff0
	and	a5,a5,a6
	sext.w	a5,a5
	beqz	a5,0x1291e # lua_callk+0x56>
	mv	a2,s1
	mv	a0,s0
	jal	ra,0x14d70 # luaD_callnoyield>
	bltz	s1,0x12908 # lua_callk+0x40>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret
	ld	a5,32(s0)
	ld	a4,16(s0)
	ld	a3,8(a5)
	bleu	a4,a3,0x128fe # lua_callk+0x36>
	ld	ra,24(sp)
	ld	s0,16(sp)
	sd	a4,8(a5)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret
	ld	a5,32(a0)
	sd	a4,32(a5)
	sd	a3,48(a5)
	jal	ra,0x14d1c # luaD_call>
	j	0x128fa # lua_callk+0x32>

lua_pcallk:
	addi	sp,sp,-48
	sd	s0,32(sp)
	sd	s1,24(sp)
	sd	ra,40(sp)
	sd	s2,16(sp)
	ld	a6,48(a0)
	mv	s0,a0
	mv	a7,a4
	ld	a0,16(a0)
	mv	s1,a2
	li	a4,0
	beqz	a3,0x1295a # lua_pcallk+0x30>
	slli	a4,a3,0x4
	add	a2,a0,a4
	blez	a3,0x12956 # lua_pcallk+0x2c>
	ld	a3,32(s0)
	ld	a2,0(a3)
	add	a2,a2,a4
	sub	a4,a2,a6
	slli	a1,a1,0x4
	sub	a1,a0,a1
	addi	a1,a1,-16
	sd	a1,0(sp)
	sub	a3,a1,a6
	beqz	a5,0x12976 # lua_pcallk+0x4c>
	lw	a2,176(s0)
	lui	a0,0xffff0
	and	a2,a2,a0
	sext.w	a2,a2
	beqz	a2,0x129b0 # lua_pcallk+0x86>
	mv	a2,sp
	auipc	a1,0xffffe
	addi	a1,a1,1666 # 0x10ffa # f_call>
	mv	a0,s0
	sw	s1,8(sp)
	jal	ra,0x14ff4 # luaD_pcall>
	bltz	s1,0x12998 # lua_pcallk+0x6e>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	addi	sp,sp,48
	ret
	ld	a5,32(s0)
	ld	a4,16(s0)
	ld	a3,8(a5)
	bleu	a4,a3,0x1298c # lua_pcallk+0x62>
	ld	ra,40(sp)
	ld	s0,32(sp)
	sd	a4,8(a5)
	ld	s1,24(sp)
	ld	s2,16(sp)
	addi	sp,sp,48
	ret
	ld	s2,32(s0)
	ld	a6,168(s0)
	mv	a2,s1
	lhu	a0,62(s2)
	sd	a5,32(s2)
	sd	a7,48(s2)
	sw	a3,56(s2)
	sd	a6,40(s2)
	lbu	a5,11(s0)
	andi	a0,a0,-2
	sd	a4,168(s0)
	or	a0,a0,a5
	ori	a0,a0,16
	sh	a0,62(s2)
	mv	a0,s0
	jal	ra,0x14d1c # luaD_call>
	lhu	a5,62(s2)
	ld	a4,40(s2)
	li	a0,0
	andi	a5,a5,-17
	sh	a5,62(s2)
	sd	a4,168(s0)
	j	0x12988 # lua_pcallk+0x5e>

lua_load:
	addi	sp,sp,-96
	sd	s0,80(sp)
	sd	s1,72(sp)
	sd	s3,56(sp)
	mv	s1,a3
	sd	ra,88(sp)
	sd	s2,64(sp)
	mv	s0,a0
	mv	a3,a2
	mv	s3,a4
	beqz	s1,0x12a7e # lua_load+0x84>
	addi	s2,sp,8
	mv	a2,a1
	mv	a0,s0
	mv	a1,s2
	jal	ra,0x2153c # luaZ_init>
	mv	a2,s1
	mv	a3,s3
	mv	a1,s2
	mv	a0,s0
	jal	ra,0x15086 # luaD_protectedparser>
	mv	s1,a0
	bnez	a0,0x12a6e # lua_load+0x74>
	ld	a5,16(s0)
	ld	a5,-16(a5)
	lbu	a4,10(a5)
	beqz	a4,0x12a6e # lua_load+0x74>
	ld	a4,24(s0)
	ld	a1,32(a5)
	ld	a5,64(a4)
	ld	a4,16(a1)
	ld	a5,16(a5)
	ld	a3,16(a5)
	sd	a3,0(a4)
	lbu	a3,24(a5)
	sb	a3,8(a4)
	lbu	a4,24(a5)
	andi	a4,a4,64
	beqz	a4,0x12a6e # lua_load+0x74>
	lbu	a4,9(a1)
	andi	a4,a4,32
	beqz	a4,0x12a6e # lua_load+0x74>
	ld	a2,16(a5)
	lbu	a5,9(a2)
	andi	a5,a5,24
	bnez	a5,0x12a88 # lua_load+0x8e>
	ld	ra,88(sp)
	ld	s0,80(sp)
	ld	s2,64(sp)
	ld	s3,56(sp)
	mv	a0,s1
	ld	s1,72(sp)
	addi	sp,sp,96
	ret
	auipc	s1,0x2f
	addi	s1,s1,-1846 # 0x41348 # __clzdi2+0x480>
	j	0x12a10 # lua_load+0x16>
	mv	a0,s0
	jal	ra,0x1706e # luaC_barrier_>
	j	0x12a6e # lua_load+0x74>

lua_dump:
	ld	a4,16(a0)
	li	a6,70
	mv	a5,a1
	lbu	a7,-8(a4)
	beq	a7,a6,0x12aa4 # lua_dump+0x14>
	li	a0,1
	ret
	ld	a1,-16(a4)
	mv	a4,a3
	mv	a3,a2
	ld	a1,24(a1)
	mv	a2,a5
	j	0x154fc # luaU_dump>

lua_status:
	lbu	a0,10(a0) # 0xffffffffffff000a # __BSS_END__+0xfffffffffffa1c82>
	ret

lua_gc:
	addi	sp,sp,-112
	sd	a5,88(sp)
	addi	a5,sp,64
	sd	s3,24(sp)
	sd	a2,64(sp)
	sd	a3,72(sp)
	sd	a4,80(sp)
	sd	a6,96(sp)
	sd	a7,104(sp)
	sd	a5,8(sp)
	sd	ra,56(sp)
	sd	s0,48(sp)
	sd	s1,40(sp)
	sd	s2,32(sp)
	li	a5,11
	ld	s3,24(a0)
	bltu	a5,a1,0x12c6a # lua_gc+0x1b0>
	auipc	a3,0x2f
	addi	a3,a3,-1920 # 0x41360 # __clzdi2+0x498>
	slli	a4,a1,0x2
	add	a4,a4,a3
	lw	a5,0(a4)
	mv	s2,a0
	mv	s0,a1
	add	a5,a5,a3
	jr	a5
	ld	a5,8(sp)
	lbu	a0,102(s3)
	li	a4,1
	lw	a2,0(a5)
	lw	a3,8(a5)
	lw	a1,16(a5)
	li	s1,10
	beq	a0,a4,0x12b14 # lua_gc+0x5a>
	ld	a5,40(s3)
	beqz	a5,0x12c88 # lua_gc+0x1ce>
	beqz	a2,0x12b28 # lua_gc+0x6e>
	sraiw	a4,a2,0x1f
	srliw	a4,a4,0x1e
	addw	a4,a4,a2
	sraiw	a4,a4,0x2
	sb	a4,108(s3)
	beqz	a3,0x12b3c # lua_gc+0x82>
	sraiw	a5,a3,0x1f
	srliw	a5,a5,0x1e
	addw	a5,a5,a3
	sraiw	a5,a5,0x2
	sb	a5,109(s3)
	beqz	a1,0x12b42 # lua_gc+0x88>
	sb	a1,110(s3)
	li	a1,0
	mv	a0,s2
	jal	ra,0x172b8 # luaC_changemode>
	j	0x12b52 # lua_gc+0x98>
	sb	zero,106(s3)
	mv	s1,a1
	ld	ra,56(sp)
	ld	s0,48(sp)
	ld	s2,32(sp)
	ld	s3,24(sp)
	mv	a0,s1
	ld	s1,40(sp)
	addi	sp,sp,112
	ret
	li	a1,0
	mv	a0,s3
	jal	ra,0x1b7e8 # luaE_setdebt>
	li	a5,1
	sb	a5,106(s3)
	li	s1,0
	j	0x12b52 # lua_gc+0x98>
	li	a1,0
	jal	ra,0x17868 # luaC_fullgc>
	li	s1,0
	j	0x12b52 # lua_gc+0x98>
	ld	s1,16(s3)
	ld	a5,24(s3)
	add	s1,s1,a5
	srli	s1,s1,0xa
	sext.w	s1,s1
	j	0x12b52 # lua_gc+0x98>
	ld	s1,16(s3)
	ld	a5,24(s3)
	addw	s1,s1,a5
	andi	s1,s1,1023
	j	0x12b52 # lua_gc+0x98>
	ld	a5,8(sp)
	lbu	s1,106(s3)
	lw	a4,0(a5)
	addi	a5,a5,8
	sd	a5,8(sp)
	li	a5,1
	sb	a5,106(s3)
	beqz	a4,0x12c6e # lua_gc+0x1b4>
	ld	s0,24(s3)
	slli	a4,a4,0xa
	mv	a0,s3
	add	s0,s0,a4
	mv	a1,s0
	jal	ra,0x1b7e8 # luaE_setdebt>
	ld	a5,24(s2)
	ld	a5,24(a5)
	blez	a5,0x12bd2 # lua_gc+0x118>
	mv	a0,s2
	jal	ra,0x17420 # luaC_step>
	sb	s1,106(s3)
	li	s1,0
	blez	s0,0x12b52 # lua_gc+0x98>
	lbu	s1,101(s3)
	addi	s1,s1,-8
	seqz	s1,s1
	j	0x12b52 # lua_gc+0x98>
	ld	a5,8(sp)
	lbu	s1,108(s3)
	lw	a4,0(a5)
	slliw	s1,s1,0x2
	sraiw	a5,a4,0x1f
	srliw	a5,a5,0x1e
	addw	a5,a5,a4
	sraiw	a5,a5,0x2
	sb	a5,108(s3)
	j	0x12b52 # lua_gc+0x98>
	ld	a5,8(sp)
	lbu	s1,109(s3)
	lw	a4,0(a5)
	slliw	s1,s1,0x2
	sraiw	a5,a4,0x1f
	srliw	a5,a5,0x1e
	addw	a5,a5,a4
	sraiw	a5,a5,0x2
	sb	a5,109(s3)
	j	0x12b52 # lua_gc+0x98>
	lbu	s1,106(s3)
	j	0x12b52 # lua_gc+0x98>
	ld	a5,8(sp)
	lbu	a1,102(s3)
	li	a2,1
	lw	a3,0(a5)
	lw	a4,8(a5)
	beq	a1,a2,0x12c44 # lua_gc+0x18a>
	ld	a5,40(s3)
	beqz	a5,0x12c82 # lua_gc+0x1c8>
	beqz	a3,0x12c4a # lua_gc+0x190>
	sb	a3,104(s3)
	beqz	a4,0x12c5e # lua_gc+0x1a4>
	sraiw	a5,a4,0x1f
	srliw	a5,a5,0x1e
	addw	a5,a5,a4
	sraiw	a5,a5,0x2
	sb	a5,105(s3)
	li	a1,1
	mv	a0,s2
	jal	ra,0x172b8 # luaC_changemode>
	mv	s1,s0
	j	0x12b52 # lua_gc+0x98>
	li	s1,-1
	j	0x12b52 # lua_gc+0x98>
	li	a1,0
	mv	a0,s3
	jal	ra,0x1b7e8 # luaE_setdebt>
	mv	a0,s2
	jal	ra,0x17420 # luaC_step>
	sb	s1,106(s3)
	j	0x12bdc # lua_gc+0x122>
	li	s0,11
	beqz	a3,0x12c4a # lua_gc+0x190>
	j	0x12c46 # lua_gc+0x18c>
	mv	s1,s0
	beqz	a2,0x12b28 # lua_gc+0x6e>
	j	0x12b16 # lua_gc+0x5c>

lua_error:
	ld	a4,16(a0)
	addi	sp,sp,-16
	sd	ra,8(sp)
	lbu	a2,-8(a4)
	li	a3,68
	mv	a5,a0
	bne	a2,a3,0x12cb2 # lua_error+0x22>
	ld	a2,24(a0)
	ld	a3,-16(a4)
	ld	a4,272(a2)
	beq	a3,a4,0x12cb8 # lua_error+0x28>
	mv	a0,a5
	jal	ra,0x13ce8 # luaG_errormsg>
	li	a1,4
	jal	ra,0x14162 # luaD_throw>

lua_next:
	addi	sp,sp,-16
	sd	s0,0(sp)
	sd	ra,8(sp)
	ld	a3,32(a0)
	ld	a2,16(a0)
	mv	s0,a0
	blez	a1,0x12cfe # lua_next+0x40>
	ld	a5,0(a3)
	slli	a1,a1,0x4
	add	a1,a1,a5
	bleu	a2,a1,0x12d1e # lua_next+0x60>
	ld	a1,0(a1)
	addi	a2,a2,-16
	mv	a0,s0
	jal	ra,0x1c388 # luaH_next>
	ld	a5,16(s0)
	beqz	a0,0x12cf2 # lua_next+0x34>
	addi	a5,a5,16
	ld	ra,8(sp)
	sd	a5,16(s0)
	ld	s0,0(sp)
	addi	sp,sp,16
	ret
	addi	a5,a5,-16
	ld	ra,8(sp)
	sd	a5,16(s0)
	ld	s0,0(sp)
	addi	sp,sp,16
	ret
	lui	a5,0xfff0c
	addi	a0,a5,-1575 # 0xfffffffffff0b9d9 # __BSS_END__+0xffffffffffebd651>
	ble	a0,a1,0x12d3c # lua_next+0x7e>
	addi	a4,a5,-1576
	beq	a1,a4,0x12d42 # lua_next+0x84>
	ld	a5,0(a3)
	li	a3,22
	lbu	a6,8(a5)
	bne	a6,a3,0x12d26 # lua_next+0x68>
	ld	a1,24(s0)
	addi	a1,a1,80
	j	0x12cd8 # lua_next+0x1a>
	ld	a5,0(a5)
	subw	a4,a4,a1
	lbu	a3,10(a5)
	blt	a3,a4,0x12d1e # lua_next+0x60>
	subw	a1,a0,a1
	slli	a1,a1,0x4
	add	a1,a1,a5
	j	0x12cd8 # lua_next+0x1a>
	slli	a1,a1,0x4
	add	a1,a1,a2
	j	0x12cd8 # lua_next+0x1a>
	ld	a1,24(s0)
	addi	a1,a1,64
	j	0x12cd8 # lua_next+0x1a>

lua_toclose:
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	ra,24(sp)
	sd	s1,8(sp)
	ld	a4,32(a0)
	mv	s0,a0
	slli	a5,a1,0x4
	blez	a1,0x12d88 # lua_toclose+0x3e>
	ld	a1,0(a4)
	add	a1,a1,a5
	lh	s1,60(a4)
	mv	a0,s0
	jal	ra,0x1576e # luaF_newtbcupval>
	li	a5,-1
	blt	s1,a5,0x12d7e # lua_toclose+0x34>
	ld	a4,32(s0)
	li	a5,-3
	subw	s1,a5,s1
	sh	s1,60(a4)
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret
	ld	a1,16(a0)
	add	a1,a1,a5
	j	0x12d62 # lua_toclose+0x18>

lua_concat:
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	ra,24(sp)
	sd	s1,8(sp)
	mv	s0,a0
	blez	a1,0x12dc0 # lua_concat+0x32>
	jal	ra,0x1eca0 # luaV_concat>
	ld	a5,24(s0)
	ld	a5,24(a5)
	bgtz	a5,0x12db2 # lua_concat+0x24>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret
	mv	a0,s0
	ld	s0,16(sp)
	ld	ra,24(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	j	0x17420 # luaC_step>
	ld	s1,16(a0)
	li	a2,0
	auipc	a1,0x2e
	addi	a1,a1,1052 # 0x411e0 # __clzdi2+0x318>
	jal	ra,0x1bfce # luaS_newlstr>
	sd	a0,0(s1)
	lbu	a5,8(a0)
	ori	a5,a5,64
	sb	a5,8(s1)
	ld	a5,16(s0)
	addi	a5,a5,16
	sd	a5,16(s0)
	j	0x12da0 # lua_concat+0x12>

lua_len:
	addi	sp,sp,-16
	sd	s0,0(sp)
	mv	a5,a1
	sd	ra,8(sp)
	ld	a3,32(a0)
	ld	a1,16(a0)
	mv	s0,a0
	blez	a5,0x12e1c # lua_len+0x36>
	ld	a2,0(a3)
	slli	a5,a5,0x4
	add	a2,a2,a5
	bltu	a2,a1,0x12e08 # lua_len+0x22>
	ld	a5,24(s0)
	addi	a2,a5,80
	mv	a0,s0
	jal	ra,0x1ecac # luaV_objlen>
	ld	a5,16(s0)
	ld	ra,8(sp)
	addi	a5,a5,16
	sd	a5,16(s0)
	ld	s0,0(sp)
	addi	sp,sp,16
	ret
	lui	a4,0xfff0c
	addi	a0,a4,-1575 # 0xfffffffffff0b9d9 # __BSS_END__+0xffffffffffebd651>
	ble	a0,a5,0x12e52 # lua_len+0x6c>
	addi	a4,a4,-1576
	beq	a5,a4,0x12e5a # lua_len+0x74>
	ld	a3,0(a3)
	li	a2,22
	lbu	a6,8(a3)
	beq	a6,a2,0x12e02 # lua_len+0x1c>
	ld	a2,0(a3)
	subw	a4,a4,a5
	lbu	a3,10(a2)
	blt	a3,a4,0x12e02 # lua_len+0x1c>
	subw	a5,a0,a5
	slli	a5,a5,0x4
	add	a2,a2,a5
	j	0x12e08 # lua_len+0x22>
	slli	a5,a5,0x4
	add	a2,a1,a5
	j	0x12e08 # lua_len+0x22>
	ld	a5,24(s0)
	addi	a2,a5,64
	j	0x12e08 # lua_len+0x22>

lua_getallocf:
	ld	a5,24(a0)
	beqz	a1,0x12e6c # lua_getallocf+0xa>
	ld	a5,8(a5)
	sd	a5,0(a1)
	ld	a5,24(a0)
	ld	a0,0(a5)
	ret

lua_setallocf:
	ld	a5,24(a0)
	sd	a2,8(a5)
	sd	a1,0(a5)
	ret

lua_setwarnf:
	ld	a5,24(a0)
	sd	a2,1408(a5)
	sd	a1,1400(a5)
	ret

lua_warning:
	j	0x1bb2e # luaE_warning>

lua_newuserdatauv:
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	s1,8(sp)
	mv	s0,a0
	sd	ra,24(sp)
	jal	ra,0x1c0ac # luaS_newudata>
	ld	a5,16(s0)
	li	a4,71
	mv	s1,a0
	sb	a4,8(a5)
	ld	a4,24(s0)
	addi	a5,a5,16
	sd	a0,-16(a5)
	ld	a4,24(a4)
	sd	a5,16(s0)
	blez	a4,0x12eb8 # lua_newuserdatauv+0x30>
	mv	a0,s0
	jal	ra,0x17420 # luaC_step>
	lhu	a5,10(s1)
	li	a0,32
	beqz	a5,0x12ec8 # lua_newuserdatauv+0x40>
	slli	a5,a5,0x4
	addi	a0,a5,40
	ld	ra,24(sp)
	ld	s0,16(sp)
	add	a0,a0,s1
	ld	s1,8(sp)
	addi	sp,sp,32
	ret

lua_getupvalue:
	mv	a4,a0
	ld	a0,32(a0)
	blez	a1,0x12f32 # lua_getupvalue+0x5e>
	ld	a5,0(a0)
	ld	a3,16(a4)
	slli	a1,a1,0x4
	add	a1,a1,a5
	bleu	a3,a1,0x12f52 # lua_getupvalue+0x7e>
	lbu	a5,8(a1)
	li	a0,6
	ld	a3,0(a1)
	andi	a5,a5,63
	beq	a5,a0,0x12f68 # lua_getupvalue+0x94>
	li	a1,38
	li	a0,0
	bne	a5,a1,0x12f30 # lua_getupvalue+0x5c>
	lbu	a5,10(a3)
	addiw	a1,a2,-1
	bleu	a5,a1,0x12f30 # lua_getupvalue+0x5c>
	addi	a2,a2,1
	slli	a2,a2,0x4
	add	a3,a3,a2
	auipc	a0,0x2e
	addi	a0,a0,716 # 0x411e0 # __clzdi2+0x318>
	ld	a5,16(a4)
	ld	a1,0(a3)
	addi	a2,a5,16
	sd	a1,0(a5)
	lbu	a3,8(a3)
	sb	a3,8(a5)
	sd	a2,16(a4)
	ret
	lui	a5,0xfff0c
	addi	a6,a5,-1575 # 0xfffffffffff0b9d9 # __BSS_END__+0xffffffffffebd651>
	ble	a6,a1,0x12fae # lua_getupvalue+0xda>
	addi	a3,a5,-1576
	beq	a1,a3,0x12fba # lua_getupvalue+0xe6>
	ld	a5,0(a0)
	li	a0,22
	lbu	a7,8(a5)
	bne	a7,a0,0x12f98 # lua_getupvalue+0xc4>
	ld	a1,24(a4)
	li	a0,6
	lbu	a5,88(a1)
	addi	a1,a1,80
	ld	a3,0(a1)
	andi	a5,a5,63
	bne	a5,a0,0x12ef8 # lua_getupvalue+0x24>
	ld	a1,24(a3)
	addiw	a5,a2,-1
	lw	a0,16(a1)
	bleu	a0,a5,0x12fb6 # lua_getupvalue+0xe2>
	ld	a1,80(a1)
	addi	a5,a5,4
	slli	a5,a5,0x3
	slli	a2,a2,0x4
	add	a3,a3,a5
	add	a2,a2,a1
	ld	a3,0(a3)
	ld	a5,-16(a2)
	auipc	a0,0x2e
	addi	a0,a0,970 # 0x41350 # __clzdi2+0x488>
	ld	a3,16(a3)
	beqz	a5,0x12f1c # lua_getupvalue+0x48>
	addi	a0,a5,24
	j	0x12f1c # lua_getupvalue+0x48>
	ld	a5,0(a5)
	subw	a3,a3,a1
	lbu	a0,10(a5)
	blt	a0,a3,0x12f52 # lua_getupvalue+0x7e>
	subw	a1,a6,a1
	slli	a1,a1,0x4
	add	a1,a1,a5
	j	0x12ee8 # lua_getupvalue+0x14>
	ld	a5,16(a4)
	slli	a1,a1,0x4
	add	a1,a1,a5
	j	0x12ee8 # lua_getupvalue+0x14>
	li	a0,0
	ret
	ld	a1,24(a4)
	addi	a1,a1,64
	j	0x12ee8 # lua_getupvalue+0x14>

lua_setupvalue:
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	ra,24(sp)
	sd	s2,0(sp)
	mv	s1,a0
	mv	s0,a2
	jal	ra,0x10e54 # index2value>
	lbu	a5,8(a0)
	li	a4,6
	ld	a1,0(a0)
	andi	a5,a5,63
	beq	a5,a4,0x1304a # lua_setupvalue+0x88>
	li	a4,38
	li	s2,0
	bne	a5,a4,0x1303c # lua_setupvalue+0x7a>
	lbu	a5,10(a1)
	addiw	a4,s0,-1
	bleu	a5,a4,0x1303c # lua_setupvalue+0x7a>
	addi	s0,s0,1
	slli	s0,s0,0x4
	add	s0,s0,a1
	auipc	s2,0x2e
	addi	s2,s2,480 # 0x411e0 # __clzdi2+0x318>
	ld	a5,16(s1)
	ld	a2,-16(a5)
	addi	a4,a5,-16
	sd	a4,16(s1)
	sd	a2,0(s0)
	lbu	a5,-8(a5)
	sb	a5,8(s0)
	andi	a5,a5,64
	beqz	a5,0x1303c # lua_setupvalue+0x7a>
	lbu	a5,9(a1)
	andi	a5,a5,32
	beqz	a5,0x1303c # lua_setupvalue+0x7a>
	lbu	a5,9(a2)
	andi	a5,a5,24
	beqz	a5,0x1303c # lua_setupvalue+0x7a>
	mv	a0,s1
	jal	ra,0x1706e # luaC_barrier_>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	mv	a0,s2
	ld	s2,0(sp)
	addi	sp,sp,32
	ret
	ld	a4,24(a1)
	addiw	a5,s0,-1
	lw	a3,16(a4)
	bleu	a3,a5,0x1307a # lua_setupvalue+0xb8>
	ld	a2,80(a4)
	addi	a5,a5,4
	slli	a5,a5,0x3
	slli	s0,s0,0x4
	add	a1,a1,a5
	add	s0,s0,a2
	ld	a1,0(a1)
	ld	a5,-16(s0)
	auipc	s2,0x2e
	addi	s2,s2,744 # 0x41350 # __clzdi2+0x488>
	ld	s0,16(a1)
	beqz	a5,0x13008 # lua_setupvalue+0x46>
	addi	s2,a5,24
	j	0x13008 # lua_setupvalue+0x46>
	li	s2,0
	j	0x1303c # lua_setupvalue+0x7a>

lua_upvalueid:
	addi	sp,sp,-32
	sd	s1,8(sp)
	sd	ra,24(sp)
	sd	s0,16(sp)
	ld	a3,32(a0)
	mv	s1,a2
	blez	a1,0x130d8 # lua_upvalueid+0x5a>
	ld	a5,0(a3)
	ld	a4,16(a0)
	slli	a3,a1,0x4
	add	a5,a5,a3
	bleu	a4,a5,0x130f8 # lua_upvalueid+0x7a>
	lbu	a4,8(a5)
	li	a3,6
	andi	a4,a4,63
	beq	a4,a3,0x1310c # lua_upvalueid+0x8e>
	li	a3,38
	li	s0,0
	bne	a4,a3,0x130cc # lua_upvalueid+0x4e>
	blez	s1,0x130cc # lua_upvalueid+0x4e>
	ld	a5,0(a5)
	lbu	a4,10(a5)
	blt	a4,s1,0x130cc # lua_upvalueid+0x4e>
	addi	a0,s1,1
	slli	a0,a0,0x4
	add	s0,a5,a0
	ld	ra,24(sp)
	mv	a0,s0
	ld	s0,16(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret
	lui	a4,0xfff0c
	addi	a6,a4,-1575 # 0xfffffffffff0b9d9 # __BSS_END__+0xffffffffffebd651>
	ble	a6,a1,0x1314e # lua_upvalueid+0xd0>
	addi	a4,a4,-1576
	beq	a1,a4,0x13158 # lua_upvalueid+0xda>
	ld	a5,0(a3)
	li	a3,22
	lbu	a7,8(a5)
	bne	a7,a3,0x13138 # lua_upvalueid+0xba>
	ld	a5,24(a0)
	li	a3,6
	lbu	a4,88(a5)
	addi	a5,a5,80
	andi	a4,a4,63
	bne	a4,a3,0x130aa # lua_upvalueid+0x2c>
	li	s0,0
	blez	s1,0x130cc # lua_upvalueid+0x4e>
	jal	ra,0x10e54 # index2value>
	ld	a5,0(a0)
	ld	a4,24(a5)
	lw	a4,16(a4)
	blt	a4,s1,0x130cc # lua_upvalueid+0x4e>
	addiw	a2,s1,-1
	addi	a2,a2,4
	slli	a2,a2,0x3
	add	a5,a5,a2
	ld	s0,0(a5)
	ld	ra,24(sp)
	ld	s1,8(sp)
	mv	a0,s0
	ld	s0,16(sp)
	addi	sp,sp,32
	ret
	ld	a5,0(a5)
	subw	a4,a4,a1
	lbu	a3,10(a5)
	blt	a3,a4,0x130f8 # lua_upvalueid+0x7a>
	subw	a6,a6,a1
	slli	a6,a6,0x4
	add	a5,a5,a6
	j	0x1309c # lua_upvalueid+0x1e>
	ld	a5,16(a0)
	slli	a4,a1,0x4
	add	a5,a5,a4
	j	0x1309c # lua_upvalueid+0x1e>
	ld	a5,24(a0)
	addi	a5,a5,64
	j	0x1309c # lua_upvalueid+0x1e>

lua_upvaluejoin:
	addi	sp,sp,-64
	sd	s0,48(sp)
	sd	s1,40(sp)
	sd	s2,32(sp)
	sd	s3,24(sp)
	sd	s4,16(sp)
	sd	s6,0(sp)
	sd	ra,56(sp)
	sd	s5,8(sp)
	mv	s2,a0
	mv	s1,a2
	mv	s3,a3
	mv	s0,a4
	jal	ra,0x10e54 # index2value>
	ld	s4,0(a0)
	auipc	s6,0x2e
	addi	s6,s6,526 # 0x41390 # nullup.0>
	blez	s1,0x13198 # lua_upvaluejoin+0x38>
	ld	a5,24(s4)
	lw	a5,16(a5)
	ble	s1,a5,0x131e8 # lua_upvaluejoin+0x88>
	li	s5,0
	blez	s0,0x131b0 # lua_upvaluejoin+0x50>
	mv	a1,s3
	mv	a0,s2
	jal	ra,0x10e54 # index2value>
	ld	a5,0(a0)
	ld	a4,24(a5)
	lw	a4,16(a4)
	ble	s0,a4,0x131da # lua_upvaluejoin+0x7a>
	sd	s5,0(s6)
	lbu	a5,9(s4)
	andi	a5,a5,32
	beqz	a5,0x131c6 # lua_upvaluejoin+0x66>
	lbu	a5,9(s5)
	andi	a5,a5,24
	bnez	a5,0x131f2 # lua_upvaluejoin+0x92>
	ld	ra,56(sp)
	ld	s0,48(sp)
	ld	s1,40(sp)
	ld	s2,32(sp)
	ld	s3,24(sp)
	ld	s4,16(sp)
	ld	s5,8(sp)
	ld	s6,0(sp)
	addi	sp,sp,64
	ret
	addiw	s0,s0,-1
	addi	s0,s0,4
	slli	s0,s0,0x3
	add	s0,s0,a5
	ld	s5,0(s0)
	j	0x131b0 # lua_upvaluejoin+0x50>
	addi	s1,s1,3
	slli	s1,s1,0x3
	add	s6,s4,s1
	j	0x13198 # lua_upvaluejoin+0x38>
	ld	s0,48(sp)
	ld	ra,56(sp)
	ld	s1,40(sp)
	ld	s3,24(sp)
	ld	s6,0(sp)
	mv	a2,s5
	mv	a1,s4
	ld	s5,8(sp)
	ld	s4,16(sp)
	mv	a0,s2
	ld	s2,32(sp)
	addi	sp,sp,64
	j	0x1706e # luaC_barrier_>

getobjname:
	addi	sp,sp,-112
	sd	s6,48(sp)
	lui	s6,0xff000
	sd	s0,96(sp)
	sd	s1,88(sp)
	sd	s2,80(sp)
	sd	s3,72(sp)
	sd	s4,64(sp)
	sd	s5,56(sp)
	sd	s7,40(sp)
	sd	ra,104(sp)
	sd	s8,32(sp)
	mv	s4,a0
	mv	s1,a1
	mv	s2,a2
	mv	s5,a3
	auipc	s7,0x2f
	addi	s7,s7,-336 # 0x420e0 # luaP_opmodes>
	li	s0,-1
	li	s3,76
	addiw	s6,s6,1
	mv	a2,s1
	addiw	a1,s2,1
	mv	a0,s4
	jal	ra,0x15a28 # luaF_getlocalname>
	sd	a0,0(s5)
	mv	s8,a0
	bnez	a0,0x13578 # getobjname+0x36a>
	ld	a0,64(s4)
	slli	a5,s1,0x2
	add	a5,a5,a0
	lw	a5,0(a5)
	andi	a5,a5,127
	add	a5,a5,s7
	lb	a5,0(a5)
	bltz	a5,0x133ca # getobjname+0x1bc>
	blez	s1,0x133b0 # getobjname+0x1a2>
	mv	a6,a0
	lw	a4,0(a6) # 0xffffffffffff0000 # __BSS_END__+0xfffffffffffa1c78>
	li	t1,0
	li	t6,69
	srliw	t2,a4,0x7
	andi	a5,a4,127
	li	a1,-1
	li	a3,0
	li	t5,67
	li	t4,8
	li	a2,56
	addiw	a7,t1,1
	srliw	t3,a4,0x7
	andi	t2,t2,255
	bltu	t6,a5,0x132ec # getobjname+0xde>
	bltu	t5,a5,0x1334e # getobjname+0x140>
	beq	a5,t4,0x1333a # getobjname+0x12c>
	bne	a5,a2,0x1332a # getobjname+0x11c>
	addw	t3,t3,s6
	addw	a5,t3,a7
	mv	t3,a5
	blt	s1,a5,0x132c8 # getobjname+0xba>
	blt	a5,a3,0x133ce # getobjname+0x1c0>
	sext.w	a3,t3
	ble	s1,a7,0x13300 # getobjname+0xf2>
	lw	a4,4(a6)
	mv	t1,a7
	addi	a6,a6,4
	srliw	t2,a4,0x7
	andi	a5,a4,127
	addiw	a7,t1,1
	srliw	t3,a4,0x7
	andi	t2,t2,255
	bleu	a5,t6,0x132a6 # getobjname+0x98>
	bne	a5,s3,0x1332a # getobjname+0x11c>
	addi	t2,t2,1
	ble	s2,t2,0x132c8 # getobjname+0xba>
	blt	t1,a3,0x13536 # getobjname+0x328>
	mv	a1,t1
	blt	a7,s1,0x132cc # getobjname+0xbe>
	beq	a1,s0,0x133b0 # getobjname+0x1a2>
	slli	a5,a1,0x2
	add	a5,a5,a0
	lw	s1,0(a5)
	li	a5,20
	andi	a3,s1,127
	bltu	a5,a3,0x133b0 # getobjname+0x1a2>
	auipc	a2,0x2e
	addi	a2,a2,762 # 0x41610 # lua_ident+0x278>
	slli	a4,a3,0x2
	add	a4,a4,a2
	lw	a5,0(a4)
	add	a5,a5,a2
	jr	a5
	add	a5,a5,s7
	lbu	a5,0(a5)
	andi	a5,a5,8
	beqz	a5,0x132c8 # getobjname+0xba>
	bne	s2,t2,0x132c8 # getobjname+0xba>
	j	0x132f6 # getobjname+0xe8>
	blt	s2,t2,0x132c8 # getobjname+0xba>
	srliw	a4,a4,0x10
	andi	a4,a4,255
	add	a4,a4,t2
	ble	s2,a4,0x132f6 # getobjname+0xe8>
	j	0x132c8 # getobjname+0xba>
	ble	t2,s2,0x132f6 # getobjname+0xe8>
	j	0x132c8 # getobjname+0xba>
	mv	a3,s5
	srliw	a2,s1,0x18
	mv	a0,s4
	sd	a1,8(sp)
	jal	ra,0x1320e # getobjname>
	ld	a1,8(sp)
	beqz	a0,0x13372 # getobjname+0x164>
	lbu	a4,0(a0)
	li	a5,99
	beq	a4,a5,0x1337e # getobjname+0x170>
	auipc	a5,0x2e
	addi	a5,a5,-42 # 0x41348 # __clzdi2+0x480>
	sd	a5,0(s5)
	srliw	a2,s1,0x10
	addi	a3,sp,24
	andi	a2,a2,255
	mv	a0,s4
	jal	ra,0x1320e # getobjname>
	ld	a0,24(sp)
	auipc	s8,0x2e
	addi	s8,s8,144 # 0x41420 # lua_ident+0x88>
	beqz	a0,0x133b0 # getobjname+0x1a2>
	auipc	a1,0x2e
	addi	a1,a1,190 # 0x41458 # lua_ident+0xc0>
	jal	ra,0x369dc # strcmp>
	bnez	a0,0x133b0 # getobjname+0x1a2>
	auipc	s8,0x2e
	addi	s8,s8,128 # 0x41428 # lua_ident+0x90>
	ld	ra,104(sp)
	ld	s0,96(sp)
	ld	s1,88(sp)
	ld	s2,80(sp)
	ld	s3,72(sp)
	ld	s4,64(sp)
	ld	s5,56(sp)
	ld	s6,48(sp)
	ld	s7,40(sp)
	mv	a0,s8
	ld	s8,32(sp)
	addi	sp,sp,112
	ret
	addiw	s1,s1,-1
	j	0x13270 # getobjname+0x62>
	mv	t3,a3
	sext.w	a3,t3
	j	0x132c8 # getobjname+0xba>
	li	a5,3
	beq	a3,a5,0x1353e # getobjname+0x330>
	addiw	a5,a1,1
	slli	a5,a5,0x2
	add	a0,a0,a5
	lw	a5,0(a0)
	srliw	a5,a5,0x7
	ld	a4,56(s4)
	slli	a5,a5,0x4
	li	a3,4
	add	a5,a5,a4
	lbu	a4,8(a5)
	andi	a4,a4,15
	bne	a4,a3,0x133b0 # getobjname+0x1a2>
	ld	a5,0(a5)
	auipc	s8,0x2e
	addi	s8,s8,56 # 0x41438 # lua_ident+0xa0>
	addi	a5,a5,24
	sd	a5,0(s5)
	j	0x133b0 # getobjname+0x1a2>
	ld	a4,80(s4)
	srliw	a5,s1,0x10
	andi	a5,a5,255
	slli	a5,a5,0x4
	add	a5,a5,a4
	ld	a4,0(a5)
	auipc	a5,0x2e
	addi	a5,a5,-218 # 0x41348 # __clzdi2+0x480>
	beqz	a4,0x13430 # getobjname+0x222>
	addi	a5,a4,24
	sd	a5,0(s5)
	auipc	s8,0x2e
	addi	s8,s8,-4 # 0x41430 # lua_ident+0x98>
	j	0x133b0 # getobjname+0x1a2>
	ld	a5,56(s4)
	srliw	a4,s1,0x18
	slli	a4,a4,0x4
	add	a5,a5,a4
	lbu	a4,8(a5)
	li	a2,4
	auipc	a3,0x2e
	addi	a3,a3,-264 # 0x41348 # __clzdi2+0x480>
	andi	a4,a4,15
	bne	a4,a2,0x13462 # getobjname+0x254>
	ld	a3,0(a5)
	addi	a3,a3,24
	ld	a4,80(s4)
	srliw	a5,s1,0x10
	andi	a5,a5,255
	slli	a5,a5,0x4
	add	a5,a5,a4
	ld	a0,0(a5)
	sd	a3,0(s5)
	auipc	s8,0x2e
	addi	s8,s8,-88 # 0x41420 # lua_ident+0x88>
	beqz	a0,0x133b0 # getobjname+0x1a2>
	auipc	a1,0x2e
	addi	a1,a1,-42 # 0x41458 # lua_ident+0xc0>
	addi	a0,a0,24
	jal	ra,0x369dc # strcmp>
	bnez	a0,0x133b0 # getobjname+0x1a2>
	auipc	s8,0x2e
	addi	s8,s8,-106 # 0x41428 # lua_ident+0x90>
	j	0x133b0 # getobjname+0x1a2>
	auipc	a5,0x2e
	addi	a5,a5,-60 # 0x41460 # lua_ident+0xc8>
	sd	a5,0(s5)
	auipc	s8,0x2e
	addi	s8,s8,-136 # 0x41420 # lua_ident+0x88>
	j	0x133b0 # getobjname+0x1a2>
	ld	a5,56(s4)
	srliw	a4,s1,0x18
	slli	a4,a4,0x4
	add	a5,a5,a4
	lbu	a4,8(a5)
	li	a2,4
	auipc	a3,0x2e
	addi	a3,a3,-380 # 0x41348 # __clzdi2+0x480>
	andi	a4,a4,15
	bne	a4,a2,0x134d6 # getobjname+0x2c8>
	ld	a3,0(a5)
	addi	a3,a3,24
	srliw	a2,s1,0x10
	sd	a3,0(s5)
	j	0x13382 # getobjname+0x174>
	srliw	a5,s1,0xf
	andi	a5,a5,1
	srliw	a2,s1,0x18
	beqz	a5,0x13544 # getobjname+0x336>
	ld	a4,56(s4)
	slli	a5,a2,0x20
	srli	a5,a5,0x1c
	add	a5,a5,a4
	lbu	a4,8(a5)
	li	a2,4
	auipc	a3,0x2e
	addi	a3,a3,-438 # 0x41348 # __clzdi2+0x480>
	andi	a4,a4,15
	bne	a4,a2,0x13510 # getobjname+0x302>
	ld	a3,0(a5)
	addi	a3,a3,24
	sd	a3,0(s5)
	auipc	s8,0x2e
	addi	s8,s8,-204 # 0x41448 # lua_ident+0xb0>
	j	0x133b0 # getobjname+0x1a2>
	srliw	s2,s1,0x10
	srliw	a5,s1,0x7
	andi	s2,s2,255
	andi	a5,a5,255
	ble	a5,s2,0x133b0 # getobjname+0x1a2>
	mv	s1,a1
	j	0x13240 # getobjname+0x32>
	ble	s1,a7,0x133b0 # getobjname+0x1a2>
	li	a1,-1
	j	0x132cc # getobjname+0xbe>
	srliw	a5,s1,0xf
	j	0x133ea # getobjname+0x1dc>
	mv	a3,s5
	mv	a0,s4
	jal	ra,0x1320e # getobjname>
	beqz	a0,0x13562 # getobjname+0x354>
	lbu	a4,0(a0)
	li	a5,99
	auipc	s8,0x2e
	addi	s8,s8,-270 # 0x41448 # lua_ident+0xb0>
	beq	a4,a5,0x133b0 # getobjname+0x1a2>
	auipc	a5,0x2e
	addi	a5,a5,-538 # 0x41348 # __clzdi2+0x480>
	sd	a5,0(s5)
	auipc	s8,0x2e
	addi	s8,s8,-294 # 0x41448 # lua_ident+0xb0>
	j	0x133b0 # getobjname+0x1a2>
	auipc	s8,0x2e
	addi	s8,s8,-296 # 0x41450 # lua_ident+0xb8>
	j	0x133b0 # getobjname+0x1a2>

funcnamefromcode:
	lhu	a5,62(a1)
	andi	a5,a5,8
	bnez	a5,0x135d2 # funcnamefromcode+0x50>
	ld	a5,0(a1)
	ld	a1,32(a1)
	li	a3,65
	ld	a5,0(a5)
	ld	a6,24(a5)
	ld	a5,64(a6)
	sub	a1,a1,a5
	srai	a1,a1,0x2
	addiw	a1,a1,-1
	slli	a4,a1,0x2
	add	a5,a5,a4
	lw	a4,0(a5)
	andi	a5,a4,127
	addiw	a5,a5,-11
	sext.w	a7,a5
	bltu	a3,a7,0x135ce # funcnamefromcode+0x4c>
	slli	a5,a5,0x20
	srli	a5,a5,0x20
	auipc	a3,0x2e
	addi	a3,a3,168 # 0x41664 # lua_ident+0x2cc>
	slli	a5,a5,0x2
	add	a5,a5,a3
	lw	a5,0(a5)
	add	a5,a5,a3
	jr	a5
	li	a0,0
	ret
	auipc	a5,0x2e
	addi	a5,a5,-650 # 0x41348 # __clzdi2+0x480>
	sd	a5,0(a2)
	auipc	a0,0x2e
	addi	a0,a0,-364 # 0x41470 # lua_ident+0xd8>
	ret
	li	a4,0
	ld	a5,24(a0)
	addi	a4,a4,34
	slli	a4,a4,0x3
	add	a4,a4,a5
	ld	a5,8(a4)
	auipc	a0,0x2e
	addi	a0,a0,-364 # 0x41488 # lua_ident+0xf0>
	addi	a5,a5,26
	sd	a5,0(a2)
	ret
	li	a4,1
	j	0x135e8 # funcnamefromcode+0x66>
	li	a4,20
	j	0x135e8 # funcnamefromcode+0x66>
	li	a4,21
	j	0x135e8 # funcnamefromcode+0x66>
	srliw	a4,a4,0x18
	j	0x135e8 # funcnamefromcode+0x66>
	srliw	a4,a4,0x7
	mv	a3,a2
	mv	a0,a6
	andi	a2,a4,255
	j	0x1320e # getobjname>
	li	a4,24
	j	0x135e8 # funcnamefromcode+0x66>
	li	a4,22
	j	0x135e8 # funcnamefromcode+0x66>
	li	a4,5
	j	0x135e8 # funcnamefromcode+0x66>
	li	a4,4
	j	0x135e8 # funcnamefromcode+0x66>
	li	a4,19
	j	0x135e8 # funcnamefromcode+0x66>
	auipc	a0,0x2e
	addi	a0,a0,-446 # 0x41478 # lua_ident+0xe0>
	sd	a0,0(a2)
	ret
	li	a4,18
	j	0x135e8 # funcnamefromcode+0x66>

varinfo:
	ld	a6,32(a0)
	addi	sp,sp,-32
	sd	ra,24(sp)
	lhu	a5,62(a6)
	sd	s0,16(sp)
	sd	zero,8(sp)
	andi	a5,a5,2
	beqz	a5,0x1366a # varinfo+0x24>
	auipc	a0,0x2e
	addi	a0,a0,-1146 # 0x411e0 # __clzdi2+0x318>
	ld	ra,24(sp)
	ld	s0,16(sp)
	addi	sp,sp,32
	ret
	ld	a2,0(a6)
	mv	s0,a0
	ld	a7,0(a2)
	lbu	a0,10(a7)
	beqz	a0,0x136be # varinfo+0x78>
	addi	a4,a7,32
	li	a5,0
	j	0x13688 # varinfo+0x42>
	addiw	a5,a5,1
	beq	a0,a5,0x136be # varinfo+0x78>
	ld	a3,0(a4)
	addi	a4,a4,8
	ld	a3,16(a3)
	bne	a1,a3,0x13682 # varinfo+0x3c>
	ld	a4,24(a7)
	slli	a5,a5,0x4
	ld	a4,80(a4)
	add	a5,a5,a4
	ld	a5,0(a5)
	beqz	a5,0x13702 # varinfo+0xbc>
	addi	a5,a5,24
	sd	a5,8(sp)
	auipc	a2,0x2e
	addi	a2,a2,-628 # 0x41430 # lua_ident+0x98>
	ld	a3,8(sp)
	auipc	a1,0x2e
	addi	a1,a1,-534 # 0x41498 # lua_ident+0x100>
	mv	a0,s0
	jal	ra,0x1865a # luaO_pushfstring>
	j	0x13662 # varinfo+0x1c>
	ld	a4,8(a6)
	addi	a2,a2,16
	bleu	a4,a2,0x1365a # varinfo+0x14>
	beq	a1,a2,0x136dc # varinfo+0x96>
	mv	a5,a2
	j	0x136d4 # varinfo+0x8e>
	beq	a1,a5,0x136dc # varinfo+0x96>
	addi	a5,a5,16
	bltu	a5,a4,0x136d0 # varinfo+0x8a>
	j	0x1365a # varinfo+0x14>
	ld	a0,24(a7)
	ld	a5,32(a6)
	sub	a1,a1,a2
	ld	a4,64(a0)
	srai	a2,a1,0x4
	sext.w	a2,a2
	sub	a1,a5,a4
	srai	a1,a1,0x2
	addi	a3,sp,8
	addiw	a1,a1,-1
	jal	ra,0x1320e # getobjname>
	mv	a2,a0
	beqz	a0,0x1365a # varinfo+0x14>
	j	0x136ac # varinfo+0x66>
	auipc	a5,0x2e
	addi	a5,a5,-954 # 0x41348 # __clzdi2+0x480>
	j	0x136a2 # varinfo+0x5c>

luaG_getfuncline:
	ld	a5,88(a0)
	beqz	a5,0x1377c # luaG_getfuncline+0x70>
	lw	a6,40(a0)
	beqz	a6,0x13770 # luaG_getfuncline+0x64>
	ld	a7,96(a0)
	lw	a4,0(a7)
	blt	a1,a4,0x13770 # luaG_getfuncline+0x64>
	srliw	a3,a1,0x7
	mv	a4,a3
	slli	a3,a3,0x3
	addiw	a4,a4,-1
	add	a3,a3,a7
	j	0x13740 # luaG_getfuncline+0x34>
	lw	a2,0(a3)
	addi	a0,a4,1
	addi	a3,a3,8
	blt	a1,a2,0x13748 # luaG_getfuncline+0x3c>
	mv	a4,a0
	addiw	a2,a4,1
	blt	a2,a6,0x13732 # luaG_getfuncline+0x26>
	slli	a4,a4,0x3
	add	a4,a4,a7
	lw	a3,0(a4)
	lw	a0,4(a4)
	addiw	a2,a3,1
	ble	a1,a3,0x1377a # luaG_getfuncline+0x6e>
	add	a5,a5,a2
	addiw	a2,a2,-1
	subw	a2,a2,a5
	lb	a3,0(a5)
	addi	a5,a5,1
	addw	a4,a2,a5
	addw	a0,a0,a3
	blt	a4,a1,0x1375e # luaG_getfuncline+0x52>
	ret
	li	a3,-1
	lw	a0,44(a0)
	li	a2,0
	blt	a3,a1,0x13758 # luaG_getfuncline+0x4c>
	ret
	li	a0,-1
	ret

lua_sethook:
	beqz	a1,0x13784 # lua_sethook+0x4>
	bnez	a2,0x13796 # lua_sethook+0x16>
	sd	zero,160(a0)
	sw	a3,184(a0)
	sw	a3,188(a0)
	sw	zero,192(a0)
	ret
	ld	a5,32(a0)
	sd	a1,160(a0)
	andi	a2,a2,255
	sw	a3,184(a0)
	sw	a3,188(a0)
	sw	a2,192(a0)
	beqz	a5,0x137bc # lua_sethook+0x3c>
	li	a3,1
	lhu	a4,62(a5)
	andi	a4,a4,2
	bnez	a4,0x137b8 # lua_sethook+0x38>
	sw	a3,40(a5)
	ld	a5,16(a5)
	bnez	a5,0x137ae # lua_sethook+0x2e>
	ret

lua_gethook:
	ld	a0,160(a0)
	ret

lua_gethookmask:
	lw	a0,192(a0)
	sext.w	a0,a0
	ret

lua_gethookcount:
	lw	a0,184(a0)
	ret

lua_getstack:
	bltz	a1,0x137f0 # lua_getstack+0x20>
	ld	a5,32(a0)
	addi	a0,a0,96
	beqz	a1,0x137e6 # lua_getstack+0x16>
	beq	a0,a5,0x137f0 # lua_getstack+0x20>
	addiw	a1,a1,-1
	ld	a5,16(a5)
	bnez	a1,0x137dc # lua_getstack+0xc>
	beq	a0,a5,0x137f0 # lua_getstack+0x20>
	sd	a5,128(a2)
	li	a0,1
	ret
	li	a0,0
	ret

luaG_findlocal:
	lhu	a5,62(a1)
	addi	sp,sp,-48
	sd	s0,32(sp)
	sd	s1,24(sp)
	sd	s2,16(sp)
	sd	s3,8(sp)
	sd	s4,0(sp)
	sd	ra,40(sp)
	andi	a5,a5,2
	ld	s4,0(a1)
	mv	s0,a1
	mv	s2,a0
	mv	s1,a2
	mv	s3,a3
	bnez	a5,0x1384e # luaG_findlocal+0x5a>
	ld	a5,0(s4)
	ld	a0,24(a5)
	bltz	a2,0x1389c # luaG_findlocal+0xa8>
	ld	a2,32(a1)
	ld	a5,64(a0)
	mv	a1,s1
	sub	a2,a2,a5
	srai	a2,a2,0x2
	addiw	a2,a2,-1
	jal	ra,0x15a28 # luaF_getlocalname>
	beqz	a0,0x1384e # luaG_findlocal+0x5a>
	beqz	s3,0x1383e # luaG_findlocal+0x4a>
	slli	s1,s1,0x4
	add	s1,s1,s4
	sd	s1,0(s3)
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	ld	s4,0(sp)
	addi	sp,sp,48
	ret
	ld	a5,32(s2)
	beq	a5,s0,0x13896 # luaG_findlocal+0xa2>
	ld	a5,24(s0)
	ld	a5,0(a5)
	addi	a4,s4,16
	sub	a5,a5,a4
	srai	a5,a5,0x4
	blt	a5,s1,0x13884 # luaG_findlocal+0x90>
	blez	s1,0x13884 # luaG_findlocal+0x90>
	lhu	a5,62(s0)
	auipc	a0,0x2e
	addi	a0,a0,-966 # 0x414a8 # lua_ident+0x110>
	andi	a5,a5,2
	beqz	a5,0x13832 # luaG_findlocal+0x3e>
	auipc	a0,0x2e
	addi	a0,a0,-962 # 0x414b8 # lua_ident+0x120>
	j	0x13832 # luaG_findlocal+0x3e>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	ld	s4,0(sp)
	li	a0,0
	addi	sp,sp,48
	ret
	ld	a5,16(s2)
	j	0x1385a # luaG_findlocal+0x66>
	lbu	a5,11(a0)
	beqz	a5,0x13884 # luaG_findlocal+0x90>
	lw	a5,44(a1)
	negw	a4,a5
	blt	a2,a4,0x13884 # luaG_findlocal+0x90>
	add	s1,a5,a2
	slli	s1,s1,0x4
	sub	s1,s4,s1
	addi	s1,s1,-16
	sd	s1,0(a3)
	auipc	a0,0x2e
	addi	a0,a0,-1010 # 0x414c8 # lua_ident+0x130>
	j	0x1383e # luaG_findlocal+0x4a>

lua_getlocal:
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	ra,24(sp)
	mv	s0,a0
	beqz	a1,0x138f8 # lua_getlocal+0x34>
	ld	a1,128(a1)
	addi	a3,sp,8
	sd	zero,8(sp)
	jal	ra,0x137f4 # luaG_findlocal>
	beqz	a0,0x138f0 # lua_getlocal+0x2c>
	ld	a4,8(sp)
	ld	a5,16(s0)
	ld	a2,0(a4)
	addi	a3,a5,16
	sd	a2,0(a5)
	lbu	a4,8(a4)
	sb	a4,8(a5)
	sd	a3,16(s0)
	ld	ra,24(sp)
	ld	s0,16(sp)
	addi	sp,sp,32
	ret
	ld	a4,16(a0)
	mv	a5,a2
	li	a3,70
	lbu	a2,-8(a4)
	li	a0,0
	bne	a2,a3,0x138f0 # lua_getlocal+0x2c>
	ld	a4,-16(a4)
	ld	s0,16(sp)
	ld	ra,24(sp)
	ld	a0,24(a4)
	li	a2,0
	mv	a1,a5
	addi	sp,sp,32
	j	0x15a28 # luaF_getlocalname>

lua_setlocal:
	ld	a1,128(a1)
	addi	sp,sp,-32
	addi	a3,sp,8
	sd	s0,16(sp)
	sd	ra,24(sp)
	mv	s0,a0
	sd	zero,8(sp)
	jal	ra,0x137f4 # luaG_findlocal>
	beqz	a0,0x1394a # lua_setlocal+0x2c>
	ld	a5,16(s0)
	ld	a4,8(sp)
	ld	a2,-16(a5)
	addi	a3,a5,-16
	sd	a2,0(a4)
	lbu	a5,-8(a5)
	sb	a5,8(a4)
	sd	a3,16(s0)
	ld	ra,24(sp)
	ld	s0,16(sp)
	addi	sp,sp,32
	ret

lua_getinfo:
	addi	sp,sp,-128
	sd	s1,104(sp)
	sd	s4,80(sp)
	sd	s9,40(sp)
	sd	ra,120(sp)
	sd	s0,112(sp)
	sd	s2,96(sp)
	sd	s3,88(sp)
	sd	s5,72(sp)
	sd	s6,64(sp)
	sd	s7,56(sp)
	sd	s8,48(sp)
	sd	s10,32(sp)
	sd	s11,24(sp)
	lbu	a5,0(a1)
	li	a4,62
	mv	s4,a1
	mv	s1,a0
	mv	s9,a2
	beq	a5,a4,0x13bc6 # lua_getinfo+0x274>
	ld	s11,128(a2)
	ld	s2,0(s11)
	lbu	a4,8(s2)
	li	a2,70
	li	s6,0
	andi	a4,a4,223
	beq	a4,a2,0x13a48 # lua_getinfo+0xf6>
	beqz	a5,0x13a4e # lua_getinfo+0xfc>
	mv	s8,s4
	li	s0,1
	auipc	s10,0x2e
	addi	s10,s10,-564 # 0x4176c # lua_ident+0x3d4>
	addi	s7,s9,8
	auipc	s5,0x2e
	addi	s5,s5,-1196 # 0x41500 # lua_ident+0x168>
	auipc	s3,0x2e
	addi	s3,s3,-1220 # 0x414f0 # lua_ident+0x158>
	addiw	a5,a5,-76
	andi	a5,a5,255
	li	a4,41
	bltu	a4,a5,0x139d6 # lua_getinfo+0x84>
	slli	a5,a5,0x2
	add	a5,a5,s10
	lw	a5,0(a5)
	add	a5,a5,s10
	jr	a5
	li	s0,0
	lbu	a5,1(s8)
	addi	s8,s8,1
	bnez	a5,0x139bc # lua_getinfo+0x6a>
	li	a1,102
	mv	a0,s4
	jal	ra,0x3690a # strchr>
	beqz	a0,0x13a02 # lua_getinfo+0xb0>
	ld	a5,16(s1)
	ld	a2,0(s2)
	addi	a4,a5,16
	sd	a2,0(a5)
	lbu	a2,8(s2)
	sb	a2,8(a5)
	sd	a4,16(s1)
	li	a1,76
	mv	a0,s4
	jal	ra,0x3690a # strchr>
	beqz	a0,0x13a28 # lua_getinfo+0xd6>
	beqz	s6,0x13a1e # lua_getinfo+0xcc>
	lbu	a4,8(s6) # 0xffffffffff000008 # __BSS_END__+0xfffffffffefb1c80>
	li	a5,38
	bne	a4,a5,0x13bee # lua_getinfo+0x29c>
	ld	a5,16(s1)
	sb	zero,8(a5)
	addi	a5,a5,16
	sd	a5,16(s1)
	ld	ra,120(sp)
	mv	a0,s0
	ld	s0,112(sp)
	ld	s1,104(sp)
	ld	s2,96(sp)
	ld	s3,88(sp)
	ld	s4,80(sp)
	ld	s5,72(sp)
	ld	s6,64(sp)
	ld	s7,56(sp)
	ld	s8,48(sp)
	ld	s9,40(sp)
	ld	s10,32(sp)
	ld	s11,24(sp)
	addi	sp,sp,128
	ret
	ld	s6,0(s2)
	bnez	a5,0x1399c # lua_getinfo+0x4a>
	li	s0,1
	j	0x139e0 # lua_getinfo+0x8e>
	beqz	s6,0x13aa8 # lua_getinfo+0x156>
	lbu	a4,8(s6)
	li	a5,38
	beq	a4,a5,0x13aa8 # lua_getinfo+0x156>
	ld	a4,24(s6)
	ld	a5,112(a4)
	beqz	a5,0x13c60 # lua_getinfo+0x30e>
	addi	a1,a5,24
	sd	a1,32(s9)
	lbu	a0,8(a5)
	li	a2,4
	beq	a0,a2,0x13c7e # lua_getinfo+0x32c>
	ld	a2,16(a5)
	sd	a2,40(s9)
	lw	a5,44(a4)
	lw	a0,48(a4)
	auipc	a4,0x2e
	addi	a4,a4,-1448 # 0x414e0 # lua_ident+0x148>
	sw	a5,52(s9)
	sw	a0,56(s9)
	beqz	a5,0x13aa2 # lua_getinfo+0x150>
	auipc	a4,0x2e
	addi	a4,a4,-1458 # 0x414e8 # lua_ident+0x150>
	sd	a4,24(s9)
	j	0x13acc # lua_getinfo+0x17a>
	li	a5,-1
	li	a4,4
	sw	a5,52(s9)
	sw	a5,56(s9)
	auipc	a5,0x2e
	addi	a5,a5,-1468 # 0x414f8 # lua_ident+0x160>
	sd	s3,32(s9)
	sd	a4,40(s9)
	sd	a5,24(s9)
	li	a2,4
	mv	a1,s3
	addi	a0,s9,68
	jal	ra,0x1867c # luaO_chunkid>
	j	0x139d8 # lua_getinfo+0x86>
	beqz	s11,0x13b08 # lua_getinfo+0x1b6>
	lhu	a5,62(s11)
	andi	a4,a5,128
	bnez	a4,0x13bdc # lua_getinfo+0x28a>
	andi	a5,a5,32
	bnez	a5,0x13b08 # lua_getinfo+0x1b6>
	ld	a1,16(s11)
	lhu	a5,62(a1)
	andi	a5,a5,2
	bnez	a5,0x13b08 # lua_getinfo+0x1b6>
	mv	a2,s7
	mv	a0,s1
	jal	ra,0x13582 # funcnamefromcode>
	sd	a0,16(s9)
	bnez	a0,0x139d8 # lua_getinfo+0x86>
	auipc	a5,0x2d
	addi	a5,a5,1752 # 0x411e0 # __clzdi2+0x318>
	sd	a5,16(s9)
	sd	zero,8(s9)
	j	0x139d8 # lua_getinfo+0x86>
	li	a0,-1
	beqz	s11,0x13b28 # lua_getinfo+0x1d6>
	lhu	a5,62(s11)
	andi	a5,a5,2
	beqz	a5,0x13ba6 # lua_getinfo+0x254>
	sw	a0,48(s9)
	j	0x139d8 # lua_getinfo+0x86>
	li	a5,0
	beqz	s11,0x13b3c # lua_getinfo+0x1ea>
	lhu	a5,62(s11)
	andi	a5,a5,32
	sb	a5,63(s9)
	j	0x139d8 # lua_getinfo+0x86>
	beqz	s11,0x13b50 # lua_getinfo+0x1fe>
	lhu	a5,62(s11)
	andi	a5,a5,256
	bnez	a5,0x13b94 # lua_getinfo+0x242>
	sw	zero,64(s9)
	j	0x139d8 # lua_getinfo+0x86>
	beqz	s6,0x13b84 # lua_getinfo+0x232>
	lbu	a4,10(s6)
	li	a5,38
	sb	a4,60(s9)
	lbu	a4,8(s6)
	beq	a4,a5,0x13b88 # lua_getinfo+0x236>
	ld	a5,24(s6)
	lbu	a4,11(a5)
	sb	a4,62(s9)
	lbu	a5,10(a5)
	sb	a5,61(s9)
	j	0x139d8 # lua_getinfo+0x86>
	sb	zero,60(s9)
	li	a5,1
	sb	a5,62(s9)
	sb	zero,61(s9)
	j	0x139d8 # lua_getinfo+0x86>
	lhu	a4,56(s11)
	lhu	a5,58(s11)
	sh	a4,64(s9)
	sh	a5,66(s9)
	j	0x139d8 # lua_getinfo+0x86>
	ld	a4,0(s11)
	ld	a5,32(s11)
	ld	a4,0(a4)
	ld	a0,24(a4)
	ld	a1,64(a0)
	sub	a5,a5,a1
	srai	a1,a5,0x2
	addiw	a1,a1,-1
	jal	ra,0x1370c # luaG_getfuncline>
	sw	a0,48(s9)
	j	0x139d8 # lua_getinfo+0x86>
	ld	s2,16(a0)
	addi	s4,a1,1
	li	s11,0
	addi	s2,s2,-16
	sd	s2,16(a0)
	lbu	a5,0(s4)
	j	0x13988 # lua_getinfo+0x36>
	auipc	a5,0x2e
	addi	a5,a5,-1876 # 0x41488 # lua_ident+0xf0>
	sd	s5,8(s9)
	sd	a5,16(s9)
	j	0x139d8 # lua_getinfo+0x86>
	ld	s4,24(s6)
	mv	a0,s1
	li	s2,0
	lw	s3,44(s4)
	jal	ra,0x1c4ce # luaH_new>
	ld	a5,16(s1)
	li	a4,69
	mv	s5,a0
	sb	a4,8(a5)
	lw	a4,28(s4)
	addi	a5,a5,16
	sd	a0,-16(a5)
	sd	a5,16(s1)
	li	a5,17
	sb	a5,8(sp)
	li	a1,0
	mv	s7,sp
	li	s6,-128
	bgtz	a4,0x13c48 # lua_getinfo+0x2f6>
	j	0x13a28 # lua_getinfo+0xd6>
	addw	s3,a5,s3
	mv	a1,s5
	mv	a3,s7
	mv	a2,s3
	mv	a0,s1
	jal	ra,0x1cec6 # luaH_setint>
	lw	a5,28(s4)
	addi	s2,s2,1
	sext.w	a1,s2
	ble	a5,a1,0x13a28 # lua_getinfo+0xd6>
	ld	a5,88(s4)
	add	a5,a5,s2
	lb	a5,0(a5)
	bne	a5,s6,0x13c2a # lua_getinfo+0x2d8>
	mv	a0,s4
	jal	ra,0x1370c # luaG_getfuncline>
	mv	s3,a0
	j	0x13c2e # lua_getinfo+0x2dc>
	auipc	a5,0x2e
	addi	a5,a5,-1928 # 0x414d8 # lua_ident+0x140>
	sd	a5,32(s9)
	li	a5,2
	sd	a5,40(s9)
	li	a2,2
	auipc	a1,0x2e
	addi	a1,a1,-1948 # 0x414d8 # lua_ident+0x140>
	j	0x13a84 # lua_getinfo+0x132>
	lbu	a2,11(a5)
	j	0x13a80 # lua_getinfo+0x12e>

luaG_addinfo:
	addi	sp,sp,-112
	sd	s0,96(sp)
	sd	s1,88(sp)
	sd	s2,80(sp)
	sd	ra,104(sp)
	sd	s3,72(sp)
	mv	s0,a0
	mv	s2,a1
	mv	s1,a3
	beqz	a2,0x13cd8 # luaG_addinfo+0x54>
	lbu	a4,8(a2)
	li	a5,4
	addi	a1,a2,24
	beq	a4,a5,0x13cd2 # luaG_addinfo+0x4e>
	ld	a2,16(a2)
	mv	s3,sp
	mv	a0,s3
	jal	ra,0x1867c # luaO_chunkid>
	mv	a4,s2
	mv	a3,s1
	mv	a2,s3
	mv	a0,s0
	auipc	a1,0x2e
	addi	a1,a1,-1968 # 0x41508 # lua_ident+0x170>
	jal	ra,0x1865a # luaO_pushfstring>
	ld	ra,104(sp)
	ld	s0,96(sp)
	ld	s1,88(sp)
	ld	s2,80(sp)
	ld	s3,72(sp)
	addi	sp,sp,112
	ret
	lbu	a2,11(a2)
	j	0x13ca8 # luaG_addinfo+0x24>
	li	a5,63
	sb	a5,0(sp)
	sb	zero,1(sp)
	mv	s3,sp
	j	0x13cb0 # luaG_addinfo+0x2c>

luaG_errormsg:
	ld	a4,168(a0)
	addi	sp,sp,-16
	sd	s0,0(sp)
	sd	ra,8(sp)
	mv	s0,a0
	bnez	a4,0x13cfc # luaG_errormsg+0x14>
	li	a1,2
	mv	a0,s0
	jal	ra,0x14162 # luaD_throw>
	ld	a5,16(a0)
	ld	a3,48(a0)
	li	a2,1
	ld	a6,-16(a5)
	lbu	a1,-8(a5)
	add	a4,a4,a3
	sd	a6,0(a5)
	sb	a1,8(a5)
	ld	a6,0(a4)
	addi	a3,a5,16
	addi	a1,a5,-16
	sd	a6,-16(a5)
	lbu	a4,8(a4)
	sb	a4,-8(a5)
	sd	a3,16(a0)
	jal	ra,0x14d70 # luaD_callnoyield>
	j	0x13cf4 # luaG_errormsg+0xc>

luaG_runerror:
	ld	t1,24(a0)
	addi	sp,sp,-112
	sd	a2,64(sp)
	sd	a3,72(sp)
	sd	a4,80(sp)
	sd	a5,88(sp)
	sd	a6,96(sp)
	sd	a7,104(sp)
	ld	a5,24(t1)
	sd	s0,48(sp)
	sd	s2,32(sp)
	sd	ra,56(sp)
	sd	s1,40(sp)
	ld	s2,32(a0)
	mv	s0,a0
	blez	a5,0x13d64 # luaG_runerror+0x30>
	sd	a1,8(sp)
	jal	ra,0x17420 # luaC_step>
	ld	a1,8(sp)
	addi	a2,sp,64
	mv	a0,s0
	sd	a2,24(sp)
	jal	ra,0x18416 # luaO_pushvfstring>
	lhu	a5,62(s2)
	mv	s1,a0
	andi	a5,a5,2
	beqz	a5,0x13d7e # luaG_runerror+0x4a>
	mv	a0,s0
	jal	ra,0x13ce8 # luaG_errormsg>
	ld	a5,0(s2)
	ld	a1,32(s2)
	ld	a5,0(a5)
	ld	s2,24(a5)
	ld	a5,64(s2)
	mv	a0,s2
	sub	a1,a1,a5
	srai	a1,a1,0x2
	addiw	a1,a1,-1
	jal	ra,0x1370c # luaG_getfuncline>
	ld	a2,112(s2)
	mv	a3,a0
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x13c84 # luaG_addinfo>
	j	0x13d78 # luaG_runerror+0x44>

luaG_typeerror:
	addi	sp,sp,-32
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	mv	s0,a0
	mv	s1,a2
	sd	s2,0(sp)
	mv	s2,a1
	jal	ra,0x1d214 # luaT_objtypename>
	mv	a1,s2
	mv	s2,a0
	mv	a0,s0
	jal	ra,0x13646 # varinfo>
	mv	a4,a0
	mv	a3,s2
	mv	a2,s1
	auipc	a1,0x2d
	addi	a1,a1,1864 # 0x41518 # lua_ident+0x180>
	mv	a0,s0
	jal	ra,0x13d34 # luaG_runerror>

luaG_concaterror:
	addi	sp,sp,-16
	sd	ra,8(sp)
	lbu	a5,8(a1)
	li	a4,1
	andi	a5,a5,15
	addiw	a5,a5,-3
	bltu	a4,a5,0x13df2 # luaG_concaterror+0x14>
	mv	a1,a2
	auipc	a2,0x2d
	addi	a2,a2,1862 # 0x41538 # lua_ident+0x1a0>
	jal	ra,0x13dac # luaG_typeerror>

luaG_opinterror:
	addi	sp,sp,-16
	sd	ra,8(sp)
	lbu	a4,8(a1)
	li	a6,3
	mv	a5,a1
	andi	a4,a4,15
	mv	a1,a2
	mv	a2,a3
	beq	a4,a6,0x13e16 # luaG_opinterror+0x18>
	mv	a1,a5
	jal	ra,0x13dac # luaG_typeerror>

luaG_callerror:
	ld	a4,32(a0)
	addi	sp,sp,-48
	sd	s0,32(sp)
	lhu	a5,62(a4)
	sd	s1,24(sp)
	sd	ra,40(sp)
	sd	s2,16(sp)
	sd	zero,8(sp)
	andi	a5,a5,2
	mv	s0,a0
	mv	s1,a1
	bnez	a5,0x13e5c # luaG_callerror+0x42>
	addi	a2,sp,8
	mv	a1,a4
	jal	ra,0x13582 # funcnamefromcode>
	mv	s2,a0
	beqz	a0,0x13e5c # luaG_callerror+0x42>
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x1d214 # luaT_objtypename>
	ld	a3,8(sp)
	mv	a4,a0
	mv	a2,s2
	auipc	a1,0x2d
	addi	a1,a1,1786 # 0x41548 # lua_ident+0x1b0>
	mv	a0,s0
	jal	ra,0x13d34 # luaG_runerror>
	auipc	a2,0x2d
	addi	a2,a2,1812 # 0x41570 # lua_ident+0x1d8>
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x13dac # luaG_typeerror>

luaG_forerror:
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	s1,8(sp)
	mv	s0,a0
	mv	s1,a2
	sd	ra,24(sp)
	jal	ra,0x1d214 # luaT_objtypename>
	mv	a3,a0
	mv	a2,s1
	auipc	a1,0x2d
	addi	a1,a1,1784 # 0x41578 # lua_ident+0x1e0>
	mv	a0,s0
	jal	ra,0x13d34 # luaG_runerror>

luaG_tointerror:
	addi	sp,sp,-48
	sd	s2,16(sp)
	mv	s2,a1
	sd	s0,32(sp)
	sd	s1,24(sp)
	mv	s0,a0
	mv	s1,a2
	addi	a1,sp,8
	li	a2,0
	mv	a0,s2
	sd	ra,40(sp)
	jal	ra,0x1e5f4 # luaV_tointegerns>
	bnez	a0,0x13eac # luaG_tointerror+0x1e>
	mv	s1,s2
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x13646 # varinfo>
	mv	a2,a0
	auipc	a1,0x2d
	addi	a1,a1,1770 # 0x415a0 # lua_ident+0x208>
	mv	a0,s0
	jal	ra,0x13d34 # luaG_runerror>

luaG_ordererror:
	addi	sp,sp,-32
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	s2,0(sp)
	mv	s0,a0
	mv	s2,a2
	jal	ra,0x1d214 # luaT_objtypename>
	mv	a1,s2
	mv	s1,a0
	mv	a0,s0
	jal	ra,0x1d214 # luaT_objtypename>
	mv	s2,a0
	mv	a1,a0
	mv	a0,s1
	jal	ra,0x369dc # strcmp>
	bnez	a0,0x13efc # luaG_ordererror+0x38>
	mv	a2,s1
	auipc	a1,0x2d
	addi	a1,a1,1754 # 0x415c8 # lua_ident+0x230>
	mv	a0,s0
	jal	ra,0x13d34 # luaG_runerror>
	mv	a3,s2
	mv	a2,s1
	auipc	a1,0x2d
	addi	a1,a1,1776 # 0x415f0 # lua_ident+0x258>
	mv	a0,s0
	jal	ra,0x13d34 # luaG_runerror>

luaG_traceexec:
	lw	a5,192(a0)
	addi	sp,sp,-64
	sd	s0,48(sp)
	sd	s3,24(sp)
	mv	s0,a0
	ld	s3,32(a0)
	sd	ra,56(sp)
	sd	s1,40(sp)
	sd	s2,32(sp)
	sd	s4,16(sp)
	sd	s5,8(sp)
	sd	s6,0(sp)
	andi	a0,a5,12
	beqz	a0,0x1405c # luaG_traceexec+0x14e>
	ld	a4,0(s3)
	sext.w	s1,a5
	lw	a5,188(s0)
	ld	a3,0(a4)
	addi	s2,a1,4
	addiw	a4,a5,-1
	ld	s4,24(a3)
	sd	s2,32(s3)
	sw	a4,188(s0)
	beqz	a4,0x14036 # luaG_traceexec+0x128>
	andi	a5,s1,4
	beqz	a5,0x14020 # luaG_traceexec+0x112>
	lhu	a5,62(s3)
	li	s5,0
	andi	a4,a5,64
	bnez	a4,0x14050 # luaG_traceexec+0x142>
	lw	a5,0(a1)
	auipc	a4,0x2e
	addi	a4,a4,374 # 0x420e0 # luaP_opmodes>
	andi	a3,a5,127
	add	a4,a4,a3
	lbu	a4,0(a4)
	andi	a4,a4,32
	bnez	a4,0x14062 # luaG_traceexec+0x154>
	ld	a5,8(s3)
	sd	a5,16(s0)
	bnez	s5,0x1406e # luaG_traceexec+0x160>
	andi	a5,s1,4
	beqz	a5,0x14016 # luaG_traceexec+0x108>
	lw	a1,180(s0)
	ld	a4,64(s4)
	lw	a5,24(s4)
	sub	s2,s2,a4
	slt	a5,a1,a5
	srai	s2,s2,0x2
	neg	a5,a5
	addiw	s6,s2,-1
	and	a1,a1,a5
	mv	s1,s6
	ble	s6,a1,0x14080 # luaG_traceexec+0x172>
	ld	a3,88(s4)
	beqz	a3,0x14012 # luaG_traceexec+0x104>
	subw	a5,s6,a1
	li	a4,63
	blt	a4,a5,0x13ffc # luaG_traceexec+0xee>
	addiw	a5,s2,-2
	subw	a5,a5,a1
	addi	a2,a3,2
	slli	a5,a5,0x20
	add	a2,a2,a1
	addi	a4,a1,1
	srli	a5,a5,0x20
	add	a5,a5,a2
	add	a4,a4,a3
	li	a2,0
	li	a6,-128
	j	0x13ff4 # luaG_traceexec+0xe6>
	addi	a4,a4,1
	addw	a2,a2,a0
	beq	a4,a5,0x1407e # luaG_traceexec+0x170>
	lb	a0,0(a4)
	bne	a0,a6,0x13fec # luaG_traceexec+0xde>
	mv	a0,s4
	jal	ra,0x1370c # luaG_getfuncline>
	mv	s2,a0
	mv	a1,s6
	mv	a0,s4
	jal	ra,0x1370c # luaG_getfuncline>
	mv	a2,a0
	bne	s2,a0,0x1408a # luaG_traceexec+0x17c>
	sw	s1,180(s0)
	lbu	a5,10(s0)
	li	a4,1
	beq	a5,a4,0x1409c # luaG_traceexec+0x18e>
	li	a0,1
	ld	ra,56(sp)
	ld	s0,48(sp)
	ld	s1,40(sp)
	ld	s2,32(sp)
	ld	s3,24(sp)
	ld	s4,16(sp)
	ld	s5,8(sp)
	ld	s6,0(sp)
	addi	sp,sp,64
	ret
	andi	a5,s1,8
	beqz	a5,0x13f56 # luaG_traceexec+0x48>
	lw	a5,184(s0)
	li	s5,1
	sw	a5,188(s0)
	lhu	a5,62(s3)
	andi	a4,a5,64
	beqz	a4,0x13f68 # luaG_traceexec+0x5a>
	andi	a5,a5,-65
	sh	a5,62(s3)
	li	a0,1
	j	0x14022 # luaG_traceexec+0x114>
	sw	zero,40(s3)
	j	0x14022 # luaG_traceexec+0x114>
	srliw	a5,a5,0x10
	andi	a5,a5,255
	beqz	a5,0x13f88 # luaG_traceexec+0x7a>
	j	0x13f82 # luaG_traceexec+0x74>
	li	a4,0
	li	a3,0
	li	a2,-1
	li	a1,3
	mv	a0,s0
	jal	ra,0x14554 # luaD_hook>
	j	0x13f8c # luaG_traceexec+0x7e>
	beqz	a2,0x14012 # luaG_traceexec+0x104>
	mv	a1,s6
	mv	a0,s4
	jal	ra,0x1370c # luaG_getfuncline>
	mv	a2,a0
	li	a4,0
	li	a3,0
	li	a1,2
	mv	a0,s0
	jal	ra,0x14554 # luaD_hook>
	sw	s1,180(s0)
	j	0x14016 # luaG_traceexec+0x108>
	beqz	s5,0x140a4 # luaG_traceexec+0x196>
	sw	a5,188(s0)
	ld	a4,32(s3)
	lhu	a5,62(s3)
	li	a1,1
	addi	a4,a4,-4
	ori	a5,a5,64
	sd	a4,32(s3)
	sh	a5,62(s3)
	mv	a0,s0
	jal	ra,0x14162 # luaD_throw>

closepaux:
	lw	a2,8(a1)
	ld	a1,0(a1)
	li	a3,0
	j	0x1587e # luaF_close>

luaD_seterrorobj:
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	ra,24(sp)
	li	a5,4
	mv	s1,a0
	mv	s0,a2
	beq	a1,a5,0x14104 # luaD_seterrorobj+0x38>
	li	a5,5
	beq	a1,a5,0x14138 # luaD_seterrorobj+0x6c>
	beqz	a1,0x14126 # luaD_seterrorobj+0x5a>
	ld	a5,16(a0)
	addi	s0,s0,16
	ld	a4,-16(a5)
	sd	a4,0(a2)
	lbu	a5,-8(a5)
	sb	a5,8(a2)
	sd	s0,16(s1)
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret
	ld	a5,24(a0)
	addi	s0,s0,16
	ld	a5,272(a5)
	sd	a5,0(a2)
	lbu	a5,8(a5)
	ori	a5,a5,64
	sb	a5,8(a2)
	sd	s0,16(s1)
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret
	sb	zero,8(a2)
	addi	s0,s0,16
	sd	s0,16(s1)
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret
	li	a2,23
	auipc	a1,0x2d
	addi	a1,a1,1758 # 0x41818 # lua_ident+0x480>
	jal	ra,0x1bfce # luaS_newlstr>
	sd	a0,0(s0)
	lbu	a5,8(a0)
	addi	s0,s0,16
	ori	a5,a5,64
	sb	a5,-8(s0)
	sd	s0,16(s1)
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret

luaD_throw:
	ld	a4,88(a0)
	addi	sp,sp,-32
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	beqz	a4,0x1417c # luaD_throw+0x1a>
	sw	a1,352(a4)
	addi	a0,a4,8
	li	a1,1
	jal	ra,0x330da # __longjmp>
	ld	s1,24(a0)
	mv	s0,a0
	jal	ra,0x1baac # luaE_resetthread>
	ld	a5,264(s1)
	mv	a1,a0
	ld	a4,88(a5)
	beqz	a4,0x141ac # luaD_throw+0x4a>
	ld	a4,16(a5)
	mv	a0,a5
	addi	a3,a4,16
	sd	a3,16(a5)
	ld	a5,16(s0)
	ld	a3,-16(a5)
	sd	a3,0(a4)
	lbu	a5,-8(a5)
	sb	a5,8(a4)
	jal	ra,0x14162 # luaD_throw>
	ld	a5,256(s1)
	beqz	a5,0x141b6 # luaD_throw+0x54>
	mv	a0,s0
	jalr	a5
	jal	ra,0x2f944 # abort>

f_parser:
	ld	a5,0(a1)
	addi	sp,sp,-48
	sd	s0,32(sp)
	ld	a4,0(a5)
	sd	s1,24(sp)
	sd	ra,40(sp)
	sd	s2,16(sp)
	sd	s3,8(sp)
	addi	a3,a4,-1
	sd	a3,0(a5)
	mv	s0,a1
	mv	s1,a0
	beqz	a4,0x14242 # f_parser+0x88>
	ld	a4,8(a5)
	addi	a3,a4,1
	sd	a3,8(a5)
	lbu	s2,0(a4)
	li	a5,27
	ld	s3,80(s0)
	beq	s2,a5,0x14224 # f_parser+0x6a>
	beqz	s3,0x141fc # f_parser+0x42>
	li	a1,116
	mv	a0,s3
	jal	ra,0x3690a # strchr>
	beqz	a0,0x1424c # f_parser+0x92>
	ld	a1,0(s0)
	ld	a4,88(s0)
	mv	a5,s2
	addi	a3,s0,32
	addi	a2,s0,8
	mv	a0,s1
	jal	ra,0x1b358 # luaY_parser>
	mv	a1,a0
	ld	s0,32(sp)
	ld	ra,40(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	mv	a0,s1
	ld	s1,24(sp)
	addi	sp,sp,48
	j	0x1567e # luaF_initupvals>
	beqz	s3,0x14234 # f_parser+0x7a>
	li	a1,98
	mv	a0,s3
	jal	ra,0x3690a # strchr>
	beqz	a0,0x1426c # f_parser+0xb2>
	ld	a1,0(s0)
	ld	a2,88(s0)
	mv	a0,s1
	jal	ra,0x1dd5e # luaU_undump>
	mv	a1,a0
	j	0x14212 # f_parser+0x58>
	mv	a0,a5
	jal	ra,0x2150a # luaZ_fill>
	mv	s2,a0
	j	0x141e2 # f_parser+0x28>
	auipc	a1,0x2d
	addi	a1,a1,1516 # 0x41838 # lua_ident+0x4a0>
	mv	a3,s3
	auipc	a2,0x2d
	addi	a2,a2,1554 # 0x41868 # lua_ident+0x4d0>
	mv	a0,s1
	jal	ra,0x1865a # luaO_pushfstring>
	li	a1,3
	mv	a0,s1
	jal	ra,0x14162 # luaD_throw>
	auipc	a1,0x2d
	addi	a1,a1,1484 # 0x41838 # lua_ident+0x4a0>
	mv	a3,s3
	auipc	a2,0x2d
	addi	a2,a2,1466 # 0x41830 # lua_ident+0x498>
	j	0x1425e # f_parser+0xa4>

luaD_rawrunprotected:
	addi	sp,sp,-416
	sd	ra,408(sp)
	mv	a3,a0
	addi	a4,sp,40
	ld	a5,88(a0)
	sd	a4,88(a0)
	lw	a4,176(a3)
	sd	a0,0(sp)
	addi	a0,sp,48
	sd	a4,8(sp)
	sd	a1,16(sp)
	sd	a2,24(sp)
	sw	zero,392(sp)
	sd	a5,40(sp)
	jal	ra,0x33142 # __setjmp>
	bnez	a0,0x142ae # luaD_rawrunprotected+0x2e>
	ld	a1,24(sp)
	ld	a0,0(sp)
	ld	a5,16(sp)
	jalr	a5
	ld	a4,0(sp)
	ld	a5,8(sp)
	lw	a0,392(sp)
	ld	ra,408(sp)
	sw	a5,176(a4)
	ld	a5,40(sp)
	sext.w	a0,a0
	sd	a5,88(a4)
	addi	sp,sp,416
	ret

luaD_reallocstack:
	addi	sp,sp,-80
	sd	s0,64(sp)
	sd	s1,56(sp)
	ld	s0,40(a0)
	addiw	s1,a1,5
	ld	a5,48(a0)
	slli	s1,s1,0x4
	sd	s2,48(sp)
	sd	s4,32(sp)
	mv	s2,a2
	mv	s4,a1
	mv	a3,s1
	li	a2,0
	li	a1,0
	sd	s5,24(sp)
	sd	ra,72(sp)
	sd	s3,40(sp)
	sd	s6,16(sp)
	sd	s7,8(sp)
	mv	s5,a0
	sub	s0,s0,a5
	jal	ra,0x17a82 # luaM_realloc_>
	beqz	a0,0x143d4 # luaD_reallocstack+0x10e>
	srai	s0,s0,0x4
	sext.w	s0,s0
	mv	s3,a0
	mv	s6,s0
	blt	s4,s0,0x143d0 # luaD_reallocstack+0x10a>
	ld	a1,48(s5)
	addiw	s7,s6,5
	slli	s2,s7,0x4
	mv	a2,s2
	mv	a0,s3
	jal	ra,0x3632a # memcpy>
	addiw	a4,s4,4
	sext.w	a3,s6
	blt	a4,s7,0x14348 # luaD_reallocstack+0x82>
	addiw	a5,s4,-1
	subw	a5,a5,s6
	slli	a5,a5,0x20
	srli	a5,a5,0x20
	add	a5,a5,a3
	addi	a5,a5,1
	addi	a2,s2,-80
	slli	a5,a5,0x4
	add	a2,a2,s3
	add	a5,a5,s3
	sb	zero,88(a2)
	addi	a2,a2,16
	bne	a5,a2,0x1433e # luaD_reallocstack+0x78>
	ld	a1,48(s5)
	ld	a3,16(s5)
	ld	a5,64(s5)
	ld	a4,56(s5)
	sub	a3,a3,a1
	sub	a5,a5,a1
	add	a3,a3,s3
	add	a5,a5,s3
	sd	a3,16(s5)
	sd	a5,64(s5)
	beqz	a4,0x14376 # luaD_reallocstack+0xb0>
	ld	a5,16(a4)
	sub	a5,a5,a1
	add	a5,a5,s3
	sd	a5,16(a4)
	ld	a4,24(a4)
	bnez	a4,0x1436a # luaD_reallocstack+0xa4>
	ld	a5,32(s5)
	beqz	a5,0x1439e # luaD_reallocstack+0xd8>
	li	a0,1
	ld	a3,8(a5)
	ld	a4,0(a5)
	lhu	a2,62(a5)
	sub	a3,a3,a1
	sub	a4,a4,a1
	add	a4,a4,s3
	add	a3,a3,s3
	sd	a4,0(a5)
	sd	a3,8(a5)
	andi	a4,a2,2
	bnez	a4,0x1439a # luaD_reallocstack+0xd4>
	sw	a0,40(a5)
	ld	a5,16(a5)
	bnez	a5,0x1437e # luaD_reallocstack+0xb8>
	addiw	a2,s0,5
	mv	a0,s5
	slli	a2,a2,0x4
	addi	s1,s1,-80
	jal	ra,0x17a5c # luaM_free_>
	add	s1,s1,s3
	sd	s3,48(s5)
	sd	s1,40(s5)
	li	a0,1
	ld	ra,72(sp)
	ld	s0,64(sp)
	ld	s1,56(sp)
	ld	s2,48(sp)
	ld	s3,40(sp)
	ld	s4,32(sp)
	ld	s5,24(sp)
	ld	s6,16(sp)
	ld	s7,8(sp)
	addi	sp,sp,80
	ret
	mv	s6,s4
	j	0x14304 # luaD_reallocstack+0x3e>
	li	a0,0
	beqz	s2,0x143ba # luaD_reallocstack+0xf4>
	li	a1,4
	mv	a0,s5
	jal	ra,0x14162 # luaD_throw>

luaD_growstack:
	ld	a6,48(a0)
	ld	a5,40(a0)
	addi	sp,sp,-32
	lui	a3,0xf4
	sub	a5,a5,a6
	srai	a5,a5,0x4
	sd	ra,24(sp)
	sd	s0,16(sp)
	sext.w	a5,a5
	addi	a3,a3,576 # 0xf4240 # __BSS_END__+0xa5eb8>
	blt	a3,a5,0x1445a # luaD_growstack+0x78>
	slliw	a4,a5,0x1
	mv	s0,a0
	mv	a5,a4
	blt	a3,a4,0x14440 # luaD_growstack+0x5e>
	ld	a4,16(s0)
	sext.w	a3,a5
	sub	a4,a4,a6
	srai	a4,a4,0x4
	addw	a0,a4,a1
	mv	a1,a0
	blt	a0,a3,0x1443a # luaD_growstack+0x58>
	lui	a5,0xf4
	addi	a4,a5,576 # 0xf4240 # __BSS_END__+0xa5eb8>
	blt	a4,a1,0x14466 # luaD_growstack+0x84>
	mv	a0,s0
	ld	s0,16(sp)
	ld	ra,24(sp)
	addi	sp,sp,32
	j	0x142c6 # luaD_reallocstack>
	sext.w	a1,a5
	j	0x14424 # luaD_growstack+0x42>
	ld	a4,16(s0)
	mv	a5,a3
	sext.w	a3,a5
	sub	a4,a4,a6
	srai	a4,a4,0x4
	addw	a0,a4,a1
	mv	a1,a0
	ble	a3,a0,0x14424 # luaD_growstack+0x42>
	j	0x1443a # luaD_growstack+0x58>
	bnez	a2,0x14484 # luaD_growstack+0xa2>
	ld	ra,24(sp)
	ld	s0,16(sp)
	li	a0,0
	addi	sp,sp,32
	ret
	addi	a1,a5,776
	mv	a0,s0
	sd	a2,8(sp)
	jal	ra,0x142c6 # luaD_reallocstack>
	ld	a2,8(sp)
	beqz	a2,0x1445c # luaD_growstack+0x7a>
	auipc	a1,0x2d
	addi	a1,a1,1018 # 0x41870 # lua_ident+0x4d8>
	mv	a0,s0
	jal	ra,0x13d34 # luaG_runerror>
	li	a1,5
	jal	ra,0x14162 # luaD_throw>

luaD_shrinkstack:
	ld	a5,32(a0)
	addi	sp,sp,-16
	sd	s0,0(sp)
	sd	ra,8(sp)
	ld	a4,16(a0)
	mv	s0,a0
	beqz	a5,0x144a4 # luaD_shrinkstack+0x1a>
	ld	a3,8(a5)
	bleu	a3,a4,0x144a0 # luaD_shrinkstack+0x16>
	mv	a4,a3
	ld	a5,16(a5)
	bnez	a5,0x14498 # luaD_shrinkstack+0xe>
	ld	a0,48(s0)
	li	a3,20
	sub	a4,a4,a0
	srai	a4,a4,0x4
	addiw	a2,a4,1
	mv	a5,a2
	sext.w	a4,a4
	ble	a3,a2,0x144ba # luaD_shrinkstack+0x30>
	li	a5,20
	slliw	a6,a5,0x1
	lui	a2,0xf4
	addw	a5,a6,a5
	addi	a2,a2,576 # 0xf4240 # __BSS_END__+0xa5eb8>
	mv	a3,a6
	mv	a1,a6
	ble	a5,a2,0x144e2 # luaD_shrinkstack+0x58>
	blt	a2,a6,0x14506 # luaD_shrinkstack+0x7c>
	lui	a5,0xf4
	sext.w	a1,a3
	addi	a5,a5,576 # 0xf4240 # __BSS_END__+0xa5eb8>
	lui	a2,0xf4
	addi	a2,a2,575 # 0xf423f # __BSS_END__+0xa5eb7>
	blt	a2,a4,0x144fa # luaD_shrinkstack+0x70>
	ld	a4,40(s0)
	sub	a4,a4,a0
	srai	a4,a4,0x4
	sext.w	a4,a4
	blt	a5,a4,0x1450a # luaD_shrinkstack+0x80>
	mv	a0,s0
	ld	s0,0(sp)
	ld	ra,8(sp)
	addi	sp,sp,16
	j	0x1b874 # luaE_shrinkCI>
	mv	a3,a2
	j	0x144d6 # luaD_shrinkstack+0x4c>
	mv	a0,s0
	li	a2,0
	jal	ra,0x142c6 # luaD_reallocstack>
	mv	a0,s0
	ld	s0,0(sp)
	ld	ra,8(sp)
	addi	sp,sp,16
	j	0x1b874 # luaE_shrinkCI>

luaD_inctop:
	ld	a5,16(a0)
	ld	a4,40(a0)
	addi	sp,sp,-16
	sd	s0,0(sp)
	sd	ra,8(sp)
	li	a3,16
	sub	a4,a4,a5
	mv	s0,a0
	ble	a4,a3,0x1453e # luaD_inctop+0x20>
	addi	a5,a5,16
	ld	ra,8(sp)
	sd	a5,16(s0)
	ld	s0,0(sp)
	addi	sp,sp,16
	ret
	li	a2,1
	li	a1,1
	jal	ra,0x143e2 # luaD_growstack>
	ld	a5,16(s0)
	ld	ra,8(sp)
	addi	a5,a5,16
	sd	a5,16(s0)
	ld	s0,0(sp)
	addi	sp,sp,16
	ret

luaD_hook:
	addi	sp,sp,-208
	sd	s2,176(sp)
	ld	s2,160(a0)
	sd	ra,200(sp)
	sd	s0,192(sp)
	sd	s1,184(sp)
	sd	s3,168(sp)
	sd	s4,160(sp)
	sd	s5,152(sp)
	sd	s6,144(sp)
	beqz	s2,0x145ee # luaD_hook+0x9a>
	lbu	a5,11(a0)
	mv	s0,a0
	beqz	a5,0x145ee # luaD_hook+0x9a>
	ld	s1,32(a0)
	ld	s3,48(a0)
	ld	a5,16(a0)
	ld	a0,8(s1)
	sw	a1,8(sp)
	sw	a2,56(sp)
	sd	s1,136(sp)
	sub	s5,a5,s3
	sub	s3,a0,s3
	bnez	a4,0x14602 # luaD_hook+0xae>
	li	s4,-9
	li	s6,8
	lhu	a4,62(s1)
	andi	a4,a4,2
	bnez	a4,0x145a4 # luaD_hook+0x50>
	bleu	a0,a5,0x145a4 # luaD_hook+0x50>
	sd	a0,16(s0)
	mv	a5,a0
	ld	a4,40(s0)
	li	a3,320
	sub	a4,a4,a5
	ble	a4,a3,0x14614 # luaD_hook+0xc0>
	addi	a5,a5,320
	bleu	a5,a0,0x145ba # luaD_hook+0x66>
	sd	a5,8(s1)
	sb	zero,11(s0)
	lhu	a5,62(s1)
	addi	a1,sp,8
	mv	a0,s0
	or	s6,s6,a5
	sh	s6,62(s1)
	jalr	s2
	ld	a5,48(s0)
	li	a4,1
	sb	a4,11(s0)
	lhu	a4,62(s1)
	add	s3,s3,a5
	sd	s3,8(s1)
	add	a5,a5,s5
	sd	a5,16(s0)
	and	s4,s4,a4
	sh	s4,62(s1)
	ld	ra,200(sp)
	ld	s0,192(sp)
	ld	s1,184(sp)
	ld	s2,176(sp)
	ld	s3,168(sp)
	ld	s4,160(sp)
	ld	s5,152(sp)
	ld	s6,144(sp)
	addi	sp,sp,208
	ret
	sh	a3,56(s1)
	sh	a4,58(s1)
	li	s4,-265
	li	s6,264
	j	0x14594 # luaD_hook+0x40>
	li	a2,1
	li	a1,20
	mv	a0,s0
	jal	ra,0x143e2 # luaD_growstack>
	ld	a5,16(s0)
	ld	a0,8(s1)
	j	0x145b0 # luaD_hook+0x5c>

rethook:
	lw	a5,192(a0)
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	ra,24(sp)
	sd	s2,0(sp)
	andi	a5,a5,2
	mv	s1,a0
	mv	s0,a1
	beqz	a5,0x1466e # rethook+0x4a>
	lhu	a1,62(a1)
	ld	a5,16(a0)
	slli	a3,a2,0x4
	andi	a1,a1,2
	mv	a4,a2
	sub	a3,a5,a3
	ld	a2,0(s0)
	li	s2,0
	beqz	a1,0x14698 # rethook+0x74>
	sub	a3,a3,a2
	srai	a3,a3,0x4
	slli	a3,a3,0x30
	sd	a2,0(s0)
	srli	a3,a3,0x30
	li	a2,-1
	li	a1,1
	mv	a0,s1
	jal	ra,0x14554 # luaD_hook>
	ld	a5,0(s0)
	add	s2,s2,a5
	sd	s2,0(s0)
	ld	a4,16(s0)
	lhu	a5,62(a4)
	andi	a5,a5,2
	bnez	a5,0x1468c # rethook+0x68>
	ld	a3,0(a4)
	ld	a5,32(a4)
	ld	a4,0(a3)
	ld	a4,24(a4)
	ld	a4,64(a4)
	sub	a5,a5,a4
	srai	a5,a5,0x2
	addiw	a5,a5,-1
	sw	a5,180(s1)
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret
	ld	a5,0(a2)
	ld	a5,24(a5)
	lbu	a1,11(a5)
	beqz	a1,0x14652 # rethook+0x2e>
	lbu	s2,10(a5)
	lw	a5,44(s0)
	addw	s2,s2,a5
	addiw	s2,s2,1
	slli	s2,s2,0x4
	add	a2,a2,s2
	neg	s2,s2
	j	0x14652 # rethook+0x2e>

luaD_hookcall:
	lw	a4,192(a0)
	sw	zero,180(a0)
	andi	a4,a4,1
	bnez	a4,0x146c6 # luaD_hookcall+0xe>
	ret
	ld	a4,0(a1)
	ld	a5,32(a1)
	addi	sp,sp,-16
	ld	a4,0(a4)
	sd	s0,0(sp)
	sd	ra,8(sp)
	ld	a4,24(a4)
	mv	s0,a1
	addi	a5,a5,4
	lhu	a1,62(a1)
	sd	a5,32(s0)
	lbu	a4,10(a4)
	sraiw	a1,a1,0x3
	li	a3,1
	li	a2,-1
	andi	a1,a1,4
	jal	ra,0x14554 # luaD_hook>
	ld	a5,32(s0)
	ld	ra,8(sp)
	addi	a5,a5,-4
	sd	a5,32(s0)
	ld	s0,0(sp)
	addi	sp,sp,16
	ret

luaD_tryfuncTM:
	addi	sp,sp,-32
	li	a2,23
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	ra,24(sp)
	mv	s1,a0
	mv	s0,a1
	jal	ra,0x1d1d0 # luaT_gettmbyobj>
	lbu	a5,8(a0)
	andi	a4,a5,15
	beqz	a4,0x14750 # luaD_tryfuncTM+0x52>
	ld	a2,16(s1)
	bleu	a2,s0,0x1473a # luaD_tryfuncTM+0x3c>
	mv	a5,a2
	ld	a3,-16(a5)
	lbu	a4,-8(a5)
	addi	a5,a5,-16
	sd	a3,16(a5)
	sb	a4,24(a5)
	bltu	s0,a5,0x14722 # luaD_tryfuncTM+0x24>
	lbu	a5,8(a0)
	ld	a4,0(a0)
	addi	a2,a2,16
	sd	a2,16(s1)
	sb	a5,8(s0)
	ld	ra,24(sp)
	sd	a4,0(s0)
	ld	s0,16(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret
	mv	a1,s0
	mv	a0,s1
	jal	ra,0x13e1a # luaG_callerror>

luaD_poscall:
	addi	sp,sp,-64
	lw	a5,192(a0)
	sd	s5,8(sp)
	lh	s5,60(a1)
	sd	s0,48(sp)
	sd	s1,40(sp)
	sd	s2,32(sp)
	sd	s3,24(sp)
	sd	s4,16(sp)
	sd	ra,56(sp)
	sext.w	s4,s5
	sext.w	a5,a5
	mv	s0,a0
	mv	s1,a1
	mv	s3,a2
	mv	s2,s4
	beqz	a5,0x1478a # luaD_poscall+0x32>
	li	a5,-1
	blt	s4,a5,0x147e4 # luaD_poscall+0x8c>
	jal	ra,0x14624 # rethook>
	ld	a1,0(s1)
	beqz	s5,0x147cc # luaD_poscall+0x74>
	li	a5,1
	beq	s4,a5,0x147ae # luaD_poscall+0x56>
	li	a5,-1
	beq	s4,a5,0x1483e # luaD_poscall+0xe6>
	blt	s4,a5,0x147e6 # luaD_poscall+0x8e>
	sext.w	a5,s4
	ble	s4,s3,0x14842 # luaD_poscall+0xea>
	sext.w	a5,s3
	j	0x14842 # luaD_poscall+0xea>
	beqz	s3,0x148b2 # luaD_poscall+0x15a>
	ld	a5,16(s0)
	slli	s3,s3,0x4
	addi	a1,a1,16
	sub	s3,a5,s3
	ld	a5,0(s3)
	sd	a5,-16(a1)
	lbu	a5,8(s3)
	sb	a5,-8(a1)
	sd	a1,16(s0)
	ld	a5,16(s1)
	ld	ra,56(sp)
	ld	s1,40(sp)
	sd	a5,32(s0)
	ld	s0,48(sp)
	ld	s2,32(sp)
	ld	s3,24(sp)
	ld	s4,16(sp)
	ld	s5,8(sp)
	addi	sp,sp,64
	ret
	ld	a1,0(a1)
	ld	a5,32(s0)
	ld	s5,48(s0)
	li	a3,1
	lhu	a4,62(a5)
	sw	s3,56(a5)
	li	a2,-1
	ori	a4,a4,512
	sh	a4,62(a5)
	mv	a0,s0
	sub	s5,a1,s5
	jal	ra,0x1587e # luaF_close>
	ld	a1,32(s0)
	lw	a5,192(s0)
	lhu	a4,62(a1)
	sext.w	a5,a5
	andi	a4,a4,-513
	sh	a4,62(a1)
	bnez	a5,0x148be # luaD_poscall+0x166>
	ld	a1,48(s0)
	li	a5,-3
	subw	s2,a5,s4
	li	a5,-1
	add	a1,a1,s5
	beq	s2,a5,0x1483e # luaD_poscall+0xe6>
	sext.w	a5,s3
	ble	s3,s2,0x14842 # luaD_poscall+0xea>
	sext.w	a5,s2
	j	0x14842 # luaD_poscall+0xea>
	mv	a5,s3
	mv	s2,s3
	ld	a3,16(s0)
	blez	a5,0x148ba # luaD_poscall+0x162>
	addiw	a6,a5,-1
	neg	s3,s3
	slli	a6,a6,0x20
	srli	a6,a6,0x20
	slli	s3,s3,0x4
	slli	a2,a6,0x4
	addi	s3,s3,8
	addi	a6,a1,16
	mv	a4,a1
	add	a3,a3,s3
	add	a6,a6,a2
	ld	a2,-8(a3)
	addi	a3,a3,16
	addi	a4,a4,16
	sd	a2,-16(a4)
	lbu	a2,-16(a3)
	sb	a2,-8(a4)
	bne	a4,a6,0x14868 # luaD_poscall+0x110>
	ble	s2,a5,0x148a8 # luaD_poscall+0x150>
	addiw	a4,s2,-1
	subw	a4,a4,a5
	slli	a4,a4,0x20
	srli	a4,a4,0x20
	add	a4,a4,a5
	slli	a3,a4,0x4
	slli	a5,a5,0x4
	addi	a4,a1,16
	add	a5,a5,a1
	add	a4,a4,a3
	sb	zero,8(a5)
	addi	a5,a5,16
	bne	a4,a5,0x1489e # luaD_poscall+0x146>
	slli	s2,s2,0x4
	add	s2,s2,a1
	sd	s2,16(s0)
	j	0x147ce # luaD_poscall+0x76>
	sb	zero,8(a1)
	addi	a1,a1,16
	j	0x147cc # luaD_poscall+0x74>
	li	a5,0
	j	0x14880 # luaD_poscall+0x128>
	mv	a2,s3
	mv	a0,s0
	jal	ra,0x14624 # rethook>
	j	0x14820 # luaD_poscall+0xc8>

unroll:
	addi	sp,sp,-64
	sd	s0,48(sp)
	ld	s0,32(a0)
	sd	s3,24(sp)
	sd	ra,56(sp)
	sd	s1,40(sp)
	sd	s2,32(sp)
	sd	s4,16(sp)
	sd	s5,8(sp)
	addi	s3,a0,96
	beq	s0,s3,0x14926 # unroll+0x5e>
	lui	s4,0xffffe
	mv	s1,a0
	mv	s2,s0
	addi	s4,s4,1023 # 0xffffffffffffe3ff # __BSS_END__+0xfffffffffffb0077>
	j	0x14906 # unroll+0x3e>
	andi	a4,a5,512
	beqz	a4,0x14938 # unroll+0x70>
	lw	a2,56(s0)
	mv	a1,s2
	mv	a0,s1
	jal	ra,0x14758 # luaD_poscall>
	ld	s0,32(s1)
	mv	s2,s0
	beq	s0,s3,0x14926 # unroll+0x5e>
	lhu	a5,62(s0)
	andi	a4,a5,2
	bnez	a4,0x148ee # unroll+0x26>
	mv	a0,s1
	jal	ra,0x1ee62 # luaV_finishOp>
	mv	a1,s0
	mv	a0,s1
	jal	ra,0x1ef68 # luaV_execute>
	ld	s0,32(s1)
	mv	s2,s0
	bne	s0,s3,0x14906 # unroll+0x3e>
	ld	ra,56(sp)
	ld	s0,48(sp)
	ld	s1,40(sp)
	ld	s2,32(sp)
	ld	s3,24(sp)
	ld	s4,16(sp)
	ld	s5,8(sp)
	addi	sp,sp,64
	ret
	andi	a4,a5,16
	li	s5,1
	bnez	a4,0x1495c # unroll+0x94>
	ld	a5,16(s1)
	ld	a4,8(s0)
	bleu	a5,a4,0x1494a # unroll+0x82>
	sd	a5,8(s0)
	ld	a2,48(s2)
	ld	a5,32(s2)
	mv	a1,s5
	mv	a0,s1
	jalr	a5
	mv	a2,a0
	j	0x148f6 # unroll+0x2e>
	srliw	a4,a5,0xa
	andi	a4,a4,7
	bnez	a4,0x14972 # unroll+0xaa>
	ld	a4,40(s2)
	andi	a5,a5,-17
	sh	a5,62(s2)
	sd	a4,168(s1)
	j	0x14940 # unroll+0x78>
	lw	a1,56(s0)
	ld	a0,48(s1)
	sext.w	s5,a4
	andi	a5,a5,1
	li	a3,1
	add	a1,a1,a0
	mv	a2,s5
	mv	a0,s1
	sb	a5,11(s1)
	jal	ra,0x1587e # luaF_close>
	lw	a5,56(s0)
	ld	a2,48(s1)
	mv	a1,s5
	mv	a0,s1
	add	a2,a2,a5
	jal	ra,0x140cc # luaD_seterrorobj>
	mv	a0,s1
	jal	ra,0x1448a # luaD_shrinkstack>
	lhu	a5,62(s0)
	ld	s0,32(s1)
	and	a5,s4,a5
	j	0x14964 # unroll+0x9c>

luaD_pretailcall:
	ld	a5,0(a2)
	addi	sp,sp,-64
	sd	s4,16(sp)
	ld	s4,24(a5)
	sd	s0,48(sp)
	sd	s2,32(sp)
	sd	s3,24(sp)
	sd	ra,56(sp)
	sd	s1,40(sp)
	sd	s5,8(sp)
	lbu	s1,12(s4)
	lbu	s5,10(s4)
	mv	s0,a3
	mv	s3,a0
	mv	s2,a1
	blez	a3,0x149fa # luaD_pretailcall+0x4e>
	addiw	a3,a3,-1
	slli	a3,a3,0x20
	srli	a3,a3,0x20
	ld	a5,0(a1)
	slli	a3,a3,0x4
	addi	a4,a2,16
	add	a3,a3,a4
	ld	a4,0(a2)
	addi	a2,a2,16
	addi	a5,a5,16
	sd	a4,-16(a5)
	lbu	a4,-8(a2)
	sb	a4,-8(a5)
	bne	a2,a3,0x149e4 # luaD_pretailcall+0x38>
	ld	a5,40(s3)
	ld	a4,16(s3)
	sub	a5,a5,a4
	srai	a5,a5,0x4
	ble	a5,s1,0x14a72 # luaD_pretailcall+0xc6>
	ld	a2,0(s2)
	blt	s5,s0,0x14a3a # luaD_pretailcall+0x8e>
	subw	a4,s5,s0
	slli	a4,a4,0x20
	srli	a4,a4,0x20
	add	a4,a4,s0
	slli	a3,a4,0x4
	slli	a5,s0,0x4
	addi	a4,a2,16
	add	a5,a5,a2
	add	a4,a4,a3
	sb	zero,8(a5)
	addi	a5,a5,16
	bne	a5,a4,0x14a2c # luaD_pretailcall+0x80>
	addi	s0,s5,1
	lhu	a5,62(s2)
	ld	a4,64(s4)
	addi	s1,s1,1
	slli	s1,s1,0x4
	add	s1,s1,a2
	ori	a5,a5,32
	slli	s0,s0,0x4
	sd	s1,8(s2)
	sd	a4,32(s2)
	sh	a5,62(s2)
	add	s0,s0,a2
	sd	s0,16(s3)
	ld	ra,56(sp)
	ld	s0,48(sp)
	ld	s1,40(sp)
	ld	s2,32(sp)
	ld	s3,24(sp)
	ld	s4,16(sp)
	ld	s5,8(sp)
	addi	sp,sp,64
	ret
	ld	a5,24(s3)
	ld	a5,24(a5)
	blez	a5,0x14a82 # luaD_pretailcall+0xd6>
	mv	a0,s3
	jal	ra,0x17420 # luaC_step>
	li	a2,1
	mv	a1,s1
	mv	a0,s3
	jal	ra,0x143e2 # luaD_growstack>
	j	0x14a0a # luaD_pretailcall+0x5e>

luaD_precall:
	addi	sp,sp,-80
	sd	s1,56(sp)
	mv	s1,a1
	lbu	a5,8(s1)
	sd	s0,64(sp)
	mv	s0,a0
	ld	a3,16(s0)
	ld	a4,40(s0)
	sd	s2,48(sp)
	sd	s3,40(sp)
	sd	s4,32(sp)
	sd	s5,24(sp)
	sd	s6,16(sp)
	sd	ra,72(sp)
	sd	s7,8(sp)
	sd	s8,0(sp)
	li	s4,22
	andi	a5,a5,63
	mv	s5,a2
	li	s3,38
	li	s2,6
	li	s6,16
	sub	a4,a4,a3
	beq	a5,s4,0x14aec # luaD_precall+0x5e>
	beq	a5,s3,0x14b7c # luaD_precall+0xee>
	beq	a5,s2,0x14af2 # luaD_precall+0x64>
	ble	a4,s6,0x14c0c # luaD_precall+0x17e>
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x146fe # luaD_tryfuncTM>
	lbu	a5,8(s1)
	ld	a3,16(s0)
	ld	a4,40(s0)
	andi	a5,a5,63
	sub	a4,a4,a3
	bne	a5,s4,0x14ac6 # luaD_precall+0x38>
	ld	s3,0(s1)
	j	0x14b82 # luaD_precall+0xf4>
	ld	a5,0(s1)
	sub	a3,a3,s1
	srai	s2,a3,0x4
	ld	s6,24(a5)
	srai	a4,a4,0x4
	sext.w	s8,s2
	lbu	s3,10(s6)
	lbu	s4,12(s6)
	sext.w	s7,s3
	ble	a4,s4,0x14c36 # luaD_precall+0x1a8>
	ld	a5,32(s0)
	ld	a0,24(a5)
	beqz	a0,0x14c04 # luaD_precall+0x176>
	ld	a5,64(s6)
	addi	s4,s4,1
	slli	s4,s4,0x4
	add	s4,s4,s1
	sh	s5,60(a0)
	sd	a5,32(a0)
	sd	s4,8(a0)
	sd	s1,0(a0)
	sd	a0,32(s0)
	blt	s7,s8,0x14b64 # luaD_precall+0xd6>
	ld	a3,16(s0)
	subw	s2,s3,s2
	slli	s2,s2,0x20
	srli	s2,s2,0x20
	slli	a4,s2,0x4
	addi	a2,a3,24
	addi	a5,a3,8
	add	a4,a4,a2
	sb	zero,0(a5)
	addi	a5,a5,16
	bne	a5,a4,0x14b50 # luaD_precall+0xc2>
	addi	s2,s2,1
	slli	s2,s2,0x4
	add	s2,s2,a3
	sd	s2,16(s0)
	ld	ra,72(sp)
	ld	s0,64(sp)
	ld	s1,56(sp)
	ld	s2,48(sp)
	ld	s3,40(sp)
	ld	s4,32(sp)
	ld	s5,24(sp)
	ld	s6,16(sp)
	ld	s7,8(sp)
	ld	s8,0(sp)
	addi	sp,sp,80
	ret
	ld	a5,0(s1)
	ld	s3,24(a5)
	li	a5,320
	ble	a4,a5,0x14be8 # luaD_precall+0x15a>
	ld	a5,32(s0)
	ld	s2,24(a5)
	beqz	s2,0x14bca # luaD_precall+0x13c>
	ld	a4,16(s0)
	lw	a5,192(s0)
	sd	s2,32(s0)
	addi	a3,a4,320
	li	a2,2
	sh	s5,60(s2)
	sh	a2,62(s2)
	sd	a3,8(s2)
	sd	s1,0(s2)
	andi	a5,a5,1
	bnez	a5,0x14bd4 # luaD_precall+0x146>
	mv	a0,s0
	jalr	s3
	mv	a2,a0
	mv	a1,s2
	mv	a0,s0
	jal	ra,0x14758 # luaD_poscall>
	li	a0,0
	j	0x14b64 # luaD_precall+0xd6>
	mv	a0,s0
	jal	ra,0x1b80a # luaE_extendCI>
	mv	s2,a0
	j	0x14b94 # luaD_precall+0x106>
	sub	a4,a4,s1
	srai	a4,a4,0x4
	addiw	a4,a4,-1
	li	a3,1
	li	a2,-1
	li	a1,0
	mv	a0,s0
	jal	ra,0x14554 # luaD_hook>
	j	0x14bb8 # luaD_precall+0x12a>
	ld	a5,24(s0)
	ld	a1,48(s0)
	ld	a5,24(a5)
	sub	s1,s1,a1
	bgtz	a5,0x14c2e # luaD_precall+0x1a0>
	li	a1,20
	li	a2,1
	mv	a0,s0
	jal	ra,0x143e2 # luaD_growstack>
	ld	a1,48(s0)
	add	s1,s1,a1
	j	0x14b8a # luaD_precall+0xfc>
	mv	a0,s0
	jal	ra,0x1b80a # luaE_extendCI>
	j	0x14b1a # luaD_precall+0x8c>
	ld	a4,24(s0)
	ld	a5,48(s0)
	mv	a0,s0
	ld	a4,24(a4)
	sub	s1,s1,a5
	blez	a4,0x14c1e # luaD_precall+0x190>
	jal	ra,0x17420 # luaC_step>
	li	a2,1
	li	a1,1
	mv	a0,s0
	jal	ra,0x143e2 # luaD_growstack>
	ld	a5,48(s0)
	add	s1,s1,a5
	j	0x14ad2 # luaD_precall+0x44>
	mv	a0,s0
	jal	ra,0x17420 # luaC_step>
	j	0x14bf4 # luaD_precall+0x166>
	ld	a4,24(s0)
	ld	a5,48(s0)
	ld	a4,24(a4)
	sub	s1,s1,a5
	blez	a4,0x14c48 # luaD_precall+0x1ba>
	mv	a0,s0
	jal	ra,0x17420 # luaC_step>
	li	a2,1
	mv	a1,s4
	mv	a0,s0
	jal	ra,0x143e2 # luaD_growstack>
	ld	a5,48(s0)
	add	s1,s1,a5
	j	0x14b14 # luaD_precall+0x86>

resume:
	addi	sp,sp,-64
	sd	s0,48(sp)
	sd	s1,40(sp)
	sd	s2,32(sp)
	sd	ra,56(sp)
	lw	s2,0(a1)
	sd	s3,24(sp)
	ld	a1,16(a0)
	lbu	a5,10(a0)
	slli	s1,s2,0x4
	mv	s0,a0
	sub	s1,a1,s1
	bnez	a5,0x14cc4 # resume+0x6c>
	lw	a5,176(a0)
	li	a4,199
	addi	a1,s1,-16
	addiw	a5,a5,1
	sw	a5,176(a0)
	slli	a5,a5,0x30
	srli	a5,a5,0x30
	bltu	a4,a5,0x14d12 # resume+0xba>
	li	a2,-1
	mv	a0,s0
	jal	ra,0x14a8e # luaD_precall>
	mv	a1,a0
	beqz	a0,0x14cac # resume+0x54>
	li	a5,4
	sh	a5,62(a0)
	mv	a0,s0
	jal	ra,0x1ef68 # luaV_execute>
	lw	a5,176(s0)
	ld	ra,56(sp)
	ld	s1,40(sp)
	addiw	a5,a5,-1
	sw	a5,176(s0)
	ld	s0,48(sp)
	ld	s2,32(sp)
	ld	s3,24(sp)
	addi	sp,sp,64
	ret
	ld	s3,32(a0)
	sb	zero,10(a0)
	jal	ra,0x1b8ee # luaE_incCstack>
	lhu	a5,62(s3)
	andi	a5,a5,2
	beqz	a5,0x14d06 # resume+0xae>
	ld	a5,32(s3)
	beqz	a5,0x14cea # resume+0x92>
	ld	a2,48(s3)
	li	a1,1
	mv	a0,s0
	jalr	a5
	mv	s2,a0
	mv	a2,s2
	mv	a1,s3
	mv	a0,s0
	jal	ra,0x14758 # luaD_poscall>
	mv	a0,s0
	ld	s0,48(sp)
	ld	ra,56(sp)
	ld	s1,40(sp)
	ld	s2,32(sp)
	ld	s3,24(sp)
	li	a1,0
	addi	sp,sp,64
	j	0x148c8 # unroll>
	sd	s1,16(s0)
	mv	a1,s3
	mv	a0,s0
	jal	ra,0x1ef68 # luaV_execute>
	j	0x14cf4 # resume+0x9c>
	sd	a1,8(sp)
	jal	ra,0x1b8be # luaE_checkcstack>
	ld	a1,8(sp)
	j	0x14c94 # resume+0x3c>

luaD_call:
	lw	a5,176(a0)
	addi	sp,sp,-32
	sd	s0,16(sp)
	addiw	a5,a5,1
	sd	ra,24(sp)
	sw	a5,176(a0)
	slli	a5,a5,0x30
	srli	a5,a5,0x30
	li	a4,199
	mv	s0,a0
	bltu	a4,a5,0x14d62 # luaD_call+0x46>
	mv	a0,s0
	jal	ra,0x14a8e # luaD_precall>
	mv	a1,a0
	beqz	a0,0x14d50 # luaD_call+0x34>
	li	a5,4
	sh	a5,62(a0)
	mv	a0,s0
	jal	ra,0x1ef68 # luaV_execute>
	lw	a5,176(s0)
	ld	ra,24(sp)
	addiw	a5,a5,-1
	sw	a5,176(s0)
	ld	s0,16(sp)
	addi	sp,sp,32
	ret
	sd	a2,8(sp)
	sd	a1,0(sp)
	jal	ra,0x1b8be # luaE_checkcstack>
	ld	a2,8(sp)
	ld	a1,0(sp)
	j	0x14d3a # luaD_call+0x1e>

luaD_callnoyield:
	lw	a5,176(a0)
	lui	a4,0x10
	addi	sp,sp,-32
	addiw	a4,a4,1
	addw	a5,a5,a4
	sd	s0,16(sp)
	sd	ra,24(sp)
	sw	a5,176(a0)
	slli	a5,a5,0x30
	srli	a5,a5,0x30
	li	a4,199
	mv	s0,a0
	bltu	a4,a5,0x14dbe # luaD_callnoyield+0x4e>
	mv	a0,s0
	jal	ra,0x14a8e # luaD_precall>
	mv	a1,a0
	beqz	a0,0x14da8 # luaD_callnoyield+0x38>
	li	a5,4
	sh	a5,62(a0)
	mv	a0,s0
	jal	ra,0x1ef68 # luaV_execute>
	lw	a5,176(s0)
	lui	a4,0xffff0
	addiw	a4,a4,-1
	addw	a5,a5,a4
	ld	ra,24(sp)
	sw	a5,176(s0)
	ld	s0,16(sp)
	addi	sp,sp,32
	ret
	sd	a2,8(sp)
	sd	a1,0(sp)
	jal	ra,0x1b8be # luaE_checkcstack>
	ld	a2,8(sp)
	ld	a1,0(sp)
	j	0x14d92 # luaD_callnoyield+0x22>

lua_resume:
	addi	sp,sp,-80
	sd	s1,56(sp)
	sd	s4,32(sp)
	sd	ra,72(sp)
	sd	s0,64(sp)
	sd	s2,48(sp)
	sd	s3,40(sp)
	sd	s5,24(sp)
	lbu	a5,10(a0)
	sw	a2,12(sp)
	mv	s1,a0
	mv	s4,a3
	bnez	a5,0x14e98 # lua_resume+0xcc>
	ld	a2,32(a0)
	addi	a5,a0,96
	lw	a3,12(sp)
	ld	a4,16(a0)
	bne	a2,a5,0x14ed2 # lua_resume+0x106>
	ld	a5,0(a2)
	addi	a5,a5,16
	sub	a5,a4,a5
	srai	a5,a5,0x4
	beq	a5,a3,0x14f02 # lua_resume+0x136>
	li	a5,0
	beqz	a1,0x14e0c # lua_resume+0x40>
	lhu	a5,176(a1)
	sw	a5,176(s1)
	addi	a2,sp,12
	auipc	a1,0x0
	addi	a1,a1,-442 # 0x14c58 # resume>
	mv	a0,s1
	jal	ra,0x14280 # luaD_rawrunprotected>
	li	a5,1
	mv	s0,a0
	ble	a0,a5,0x14e6c # lua_resume+0xa0>
	lui	s2,0xffffe
	addi	s2,s2,1023 # 0xffffffffffffe3ff # __BSS_END__+0xfffffffffffb0077>
	auipc	s5,0x0
	addi	s5,s5,-1382 # 0x148c8 # unroll>
	li	s3,1
	ld	a5,32(s1)
	bnez	a5,0x14e42 # lua_resume+0x76>
	j	0x14ebc # lua_resume+0xf0>
	ld	a5,16(a5)
	beqz	a5,0x14ebc # lua_resume+0xf0>
	lhu	a4,62(a5)
	andi	a2,a4,16
	beqz	a2,0x14e3e # lua_resume+0x72>
	slliw	s0,s0,0xa
	and	a4,a4,s2
	or	a4,a4,s0
	sd	a5,32(s1)
	sh	a4,62(a5)
	li	a2,0
	mv	a1,s5
	mv	a0,s1
	jal	ra,0x14280 # luaD_rawrunprotected>
	mv	s0,a0
	blt	s3,a0,0x14e38 # lua_resume+0x6c>
	li	a5,1
	ld	a4,32(s1)
	beq	s0,a5,0x14eb8 # lua_resume+0xec>
	ld	a5,16(s1)
	ld	a4,0(a4)
	addi	a4,a4,16
	sub	a5,a5,a4
	srai	a5,a5,0x4
	sext.w	a5,a5
	sw	a5,0(s4)
	ld	ra,72(sp)
	mv	a0,s0
	ld	s0,64(sp)
	ld	s1,56(sp)
	ld	s2,48(sp)
	ld	s3,40(sp)
	ld	s4,32(sp)
	ld	s5,24(sp)
	addi	sp,sp,80
	ret
	li	a4,1
	beq	a5,a4,0x14e04 # lua_resume+0x38>
	lw	a5,12(sp)
	ld	s2,16(a0)
	auipc	a1,0x2d
	addi	a1,a1,-1532 # 0x418a8 # lua_ident+0x510>
	slli	a5,a5,0x4
	sub	s2,s2,a5
	sd	s2,16(a0)
	j	0x14ee4 # lua_resume+0x118>
	lw	a5,56(a4)
	j	0x14e80 # lua_resume+0xb4>
	ld	a2,16(s1)
	sb	s0,10(s1)
	mv	a1,s0
	mv	a0,s1
	jal	ra,0x140cc # luaD_seterrorobj>
	ld	a4,32(s1)
	ld	a5,16(s1)
	sd	a5,8(a4)
	j	0x14e76 # lua_resume+0xaa>
	slli	a3,a3,0x4
	sub	s2,a4,a3
	sd	s2,16(a0)
	auipc	a1,0x2d
	addi	a1,a1,-1628 # 0x41880 # lua_ident+0x4e8>
	jal	ra,0x1c032 # luaS_new>
	sd	a0,0(s2)
	lbu	a5,8(a0)
	ori	a5,a5,64
	sb	a5,8(s2)
	ld	a5,16(s1)
	li	s0,2
	addi	a5,a5,16
	sd	a5,16(s1)
	j	0x14e84 # lua_resume+0xb8>
	slli	a5,a5,0x4
	sub	s2,a4,a5
	sd	s2,16(a0)
	auipc	a1,0x2d
	addi	a1,a1,-1636 # 0x418a8 # lua_ident+0x510>
	jal	ra,0x1c032 # luaS_new>
	sd	a0,0(s2)
	lbu	a5,8(a0)
	j	0x14ef0 # lua_resume+0x124>

lua_isyieldable:
	lw	a0,176(a0)
	lui	a5,0xffff0
	and	a0,a0,a5
	sext.w	a0,a0
	seqz	a0,a0
	ret

lua_yieldk:
	lw	a4,176(a0)
	lui	a6,0xffff0
	addi	sp,sp,-16
	and	a4,a4,a6
	sd	ra,8(sp)
	sext.w	a4,a4
	ld	a6,32(a0)
	mv	a5,a0
	bnez	a4,0x14f64 # lua_yieldk+0x32>
	li	a4,1
	sb	a4,10(a0)
	lhu	a4,62(a6) # 0xffffffffffff003e # __BSS_END__+0xfffffffffffa1cb6>
	sw	a1,56(a6)
	andi	a4,a4,2
	bnez	a4,0x14f86 # lua_yieldk+0x54>
	ld	ra,8(sp)
	li	a0,0
	addi	sp,sp,16
	ret
	ld	a4,24(a0)
	ld	a4,264(a4) # 0xffffffffffff0108 # __BSS_END__+0xfffffffffffa1d80>
	beq	a4,a0,0x14f7a # lua_yieldk+0x48>
	auipc	a1,0x2d
	addi	a1,a1,-1702 # 0x418c8 # lua_ident+0x530>
	jal	ra,0x13d34 # luaG_runerror>
	auipc	a1,0x2d
	addi	a1,a1,-1666 # 0x418f8 # lua_ident+0x560>
	jal	ra,0x13d34 # luaG_runerror>
	sd	a3,32(a6)
	beqz	a3,0x14f90 # lua_yieldk+0x5e>
	sd	a2,48(a6)
	li	a1,1
	mv	a0,a5
	jal	ra,0x14162 # luaD_throw>

luaD_closeprotected:
	addi	sp,sp,-80
	sd	s0,64(sp)
	sd	s1,56(sp)
	sd	s2,48(sp)
	sd	s3,40(sp)
	sd	s5,24(sp)
	sd	ra,72(sp)
	sd	s4,32(sp)
	ld	s5,32(a0)
	lbu	s4,11(a0)
	mv	s0,a0
	mv	s1,a1
	mv	a5,a2
	mv	s3,sp
	auipc	s2,0xfffff
	addi	s2,s2,266 # 0x140c2 # closepaux>
	ld	a4,48(s0)
	mv	a2,s3
	mv	a1,s2
	add	a4,a4,s1
	mv	a0,s0
	sw	a5,8(sp)
	sd	a4,0(sp)
	jal	ra,0x14280 # luaD_rawrunprotected>
	mv	a5,a0
	bnez	a0,0x14fea # luaD_closeprotected+0x52>
	ld	ra,72(sp)
	ld	s0,64(sp)
	lw	a0,8(sp)
	ld	s1,56(sp)
	ld	s2,48(sp)
	ld	s3,40(sp)
	ld	s4,32(sp)
	ld	s5,24(sp)
	addi	sp,sp,80
	ret
	sd	s5,32(s0)
	sb	s4,11(s0)
	j	0x14fc0 # luaD_closeprotected+0x28>

luaD_pcall:
	addi	sp,sp,-96
	sd	s0,80(sp)
	sd	s1,72(sp)
	sd	s2,64(sp)
	sd	s3,56(sp)
	sd	s5,40(sp)
	sd	ra,88(sp)
	sd	s4,48(sp)
	sd	s6,32(sp)
	sd	s7,24(sp)
	ld	s3,168(a0)
	sd	a4,168(a0)
	ld	s5,32(a0)
	lbu	s4,11(a0)
	mv	s0,a0
	mv	s2,a3
	jal	ra,0x14280 # luaD_rawrunprotected>
	mv	s1,a0
	bnez	a0,0x1503e # luaD_pcall+0x4a>
	sd	s3,168(s0)
	ld	ra,88(sp)
	ld	s0,80(sp)
	ld	s2,64(sp)
	ld	s3,56(sp)
	ld	s4,48(sp)
	ld	s5,40(sp)
	ld	s6,32(sp)
	ld	s7,24(sp)
	mv	a0,s1
	ld	s1,72(sp)
	addi	sp,sp,96
	ret
	sd	s5,32(s0)
	sb	s4,11(s0)
	mv	s7,sp
	auipc	s6,0xfffff
	addi	s6,s6,122 # 0x140c2 # closepaux>
	ld	a5,48(s0)
	mv	a2,s7
	mv	a1,s6
	add	a5,a5,s2
	mv	a0,s0
	sw	s1,8(sp)
	sd	a5,0(sp)
	jal	ra,0x14280 # luaD_rawrunprotected>
	mv	s1,a0
	bnez	a0,0x1507c # luaD_pcall+0x88>
	lw	s1,8(sp)
	ld	a2,48(s0)
	mv	a0,s0
	mv	a1,s1
	add	a2,a2,s2
	jal	ra,0x140cc # luaD_seterrorobj>
	mv	a0,s0
	jal	ra,0x1448a # luaD_shrinkstack>
	j	0x15022 # luaD_pcall+0x2e>
	sd	s5,32(s0)
	sb	s4,11(s0)
	j	0x15050 # luaD_pcall+0x5c>

luaD_protectedparser:
	lw	a6,176(a0)
	addi	sp,sp,-128
	ld	t4,16(a0)
	ld	t3,48(a0)
	sd	s2,96(sp)
	ld	a4,168(a0)
	lui	s2,0x10
	sd	ra,120(sp)
	sd	s0,112(sp)
	sd	s1,104(sp)
	addw	a6,a6,s2
	mv	t1,a1
	mv	a7,a2
	mv	a5,a3
	sw	a6,176(a0)
	sub	a3,t4,t3
	mv	a2,sp
	auipc	a1,0xfffff
	addi	a1,a1,262 # 0x141ba # f_parser>
	mv	s0,a0
	sd	t1,0(sp)
	sd	a7,88(sp)
	sd	a5,80(sp)
	sd	zero,32(sp)
	sw	zero,44(sp)
	sd	zero,48(sp)
	sw	zero,60(sp)
	sd	zero,64(sp)
	sw	zero,76(sp)
	sd	zero,8(sp)
	sd	zero,24(sp)
	jal	ra,0x14ff4 # luaD_pcall>
	ld	a2,24(sp)
	ld	a1,8(sp)
	li	a3,0
	mv	s1,a0
	mv	a0,s0
	jal	ra,0x17b9a # luaM_saferealloc_>
	lw	a5,44(sp)
	ld	a1,32(sp)
	mv	a4,a0
	slli	a2,a5,0x1
	add	a2,a2,a5
	mv	a0,s0
	slli	a2,a2,0x3
	sd	a4,8(sp)
	sd	zero,24(sp)
	jal	ra,0x17a5c # luaM_free_>
	lw	a5,60(sp)
	ld	a1,48(sp)
	mv	a0,s0
	slli	a2,a5,0x1
	add	a2,a2,a5
	slli	a2,a2,0x3
	jal	ra,0x17a5c # luaM_free_>
	lw	a5,76(sp)
	ld	a1,64(sp)
	mv	a0,s0
	slli	a2,a5,0x1
	add	a2,a2,a5
	slli	a2,a2,0x3
	jal	ra,0x17a5c # luaM_free_>
	lw	a5,176(s0)
	ld	ra,120(sp)
	mv	a0,s1
	subw	a5,a5,s2
	sw	a5,176(s0)
	ld	s0,112(sp)
	ld	s1,104(sp)
	ld	s2,96(sp)
	addi	sp,sp,128
	ret

dumpSize:
	addi	sp,sp,-32
	mv	a7,sp
	li	a3,9
	sd	s0,16(sp)
	sd	ra,24(sp)
	mv	s0,a0
	mv	a5,a7
	addi	a6,sp,1
	sub	a3,a3,a7
	andi	a4,a1,127
	sb	a4,9(a5) # 0xffffffffffff0009 # __BSS_END__+0xfffffffffffa1c81>
	srli	a1,a1,0x7
	sub	a2,a6,a5
	add	a4,a3,a5
	addi	a5,a5,-1
	bnez	a1,0x15152 # dumpSize+0x16>
	lbu	a5,9(sp)
	lw	a3,28(s0)
	ori	a5,a5,-128
	sb	a5,9(sp)
	bnez	a3,0x15186 # dumpSize+0x4a>
	ld	a5,8(s0)
	ld	a3,16(s0)
	ld	a0,0(s0)
	add	a1,a7,a4
	jalr	a5
	sw	a0,28(s0)
	ld	ra,24(sp)
	ld	s0,16(sp)
	addi	sp,sp,32
	ret

dumpString:
	beqz	a1,0x151e0 # dumpString+0x52>
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	ra,24(sp)
	sd	s2,0(sp)
	lbu	a4,8(a1)
	li	a5,4
	mv	s0,a1
	mv	s1,a0
	beq	a4,a5,0x151da # dumpString+0x4c>
	ld	s2,16(a1)
	addi	a1,s2,1 # 0x10001 # exit-0x11f>
	mv	a0,s1
	jal	ra,0x1513c # dumpSize>
	lw	a5,28(s1)
	bnez	a5,0x151ce # dumpString+0x40>
	beqz	s2,0x151ce # dumpString+0x40>
	ld	a5,8(s1)
	ld	a3,16(s1)
	ld	a0,0(s1)
	mv	a2,s2
	addi	a1,s0,24
	jalr	a5
	sw	a0,28(s1)
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret
	lbu	s2,11(a1)
	j	0x151ac # dumpString+0x1e>
	j	0x1513c # dumpSize>

dumpFunction:
	lw	a5,24(a0)
	addi	sp,sp,-112
	sd	s0,96(sp)
	sd	s1,88(sp)
	sd	ra,104(sp)
	sd	s2,80(sp)
	sd	s3,72(sp)
	sd	s4,64(sp)
	sd	s5,56(sp)
	sd	s6,48(sp)
	sd	s7,40(sp)
	sd	s8,32(sp)
	sd	s9,24(sp)
	sd	s10,16(sp)
	mv	s0,a0
	mv	s1,a1
	bnez	a5,0x15210 # dumpFunction+0x2e>
	ld	a1,112(a1)
	beq	a1,a2,0x15210 # dumpFunction+0x2e>
	jal	ra,0x1518e # dumpString>
	j	0x15218 # dumpFunction+0x36>
	li	a1,0
	mv	a0,s0
	jal	ra,0x1513c # dumpSize>
	lw	a1,44(s1)
	mv	a0,s0
	jal	ra,0x1513c # dumpSize>
	lw	a1,48(s1)
	mv	a0,s0
	jal	ra,0x1513c # dumpSize>
	lbu	a4,10(s1)
	lw	a5,28(s0)
	sb	a4,8(sp)
	bnez	a5,0x15276 # dumpFunction+0x94>
	ld	a5,8(s0)
	ld	a3,16(s0)
	ld	a0,0(s0)
	addi	s2,sp,8
	li	a2,1
	mv	a1,s2
	jalr	a5
	sw	a0,28(s0)
	lbu	a5,11(s1)
	sb	a5,8(sp)
	bnez	a0,0x15276 # dumpFunction+0x94>
	ld	a5,8(s0)
	ld	a3,16(s0)
	ld	a0,0(s0)
	li	a2,1
	mv	a1,s2
	jalr	a5
	sw	a0,28(s0)
	lbu	a5,12(s1)
	sb	a5,8(sp)
	bnez	a0,0x15276 # dumpFunction+0x94>
	ld	a5,8(s0)
	ld	a3,16(s0)
	ld	a0,0(s0)
	li	a2,1
	mv	a1,s2
	jalr	a5
	sw	a0,28(s0)
	lw	a1,24(s1)
	mv	a0,s0
	jal	ra,0x1513c # dumpSize>
	lw	a5,28(s0)
	bnez	a5,0x1528a # dumpFunction+0xa8>
	lw	a2,24(s1)
	slli	a2,a2,0x2
	bnez	a2,0x154ee # dumpFunction+0x30c>
	lw	s2,20(s1)
	mv	a0,s0
	li	s4,0
	mv	a1,s2
	jal	ra,0x1513c # dumpSize>
	slli	s5,s2,0x4
	blez	s2,0x152fa # dumpFunction+0x118>
	addi	s9,sp,8
	li	s10,19
	li	s8,20
	li	s7,3
	li	s6,4
	ld	s3,56(s1)
	lw	a5,28(s0)
	add	s3,s3,s4
	lbu	s2,8(s3)
	andi	s2,s2,63
	sb	s2,8(sp)
	bnez	a5,0x152d0 # dumpFunction+0xee>
	ld	a5,8(s0)
	ld	a3,16(s0)
	ld	a0,0(s0)
	li	a2,1
	mv	a1,s9
	jalr	a5
	sw	a0,28(s0)
	beq	s2,s10,0x15404 # dumpFunction+0x222>
	bltu	s10,s2,0x153fe # dumpFunction+0x21c>
	bne	s2,s7,0x153ee # dumpFunction+0x20c>
	ld	a4,0(s3)
	lw	a5,28(s0)
	sd	a4,8(sp)
	bnez	a5,0x152f4 # dumpFunction+0x112>
	ld	a5,8(s0)
	ld	a3,16(s0)
	ld	a0,0(s0)
	li	a2,8
	mv	a1,s9
	jalr	a5
	sw	a0,28(s0)
	addi	s4,s4,16
	bne	s5,s4,0x152ac # dumpFunction+0xca>
	lw	s5,16(s1)
	mv	a0,s0
	li	s2,0
	mv	a1,s5
	jal	ra,0x1513c # dumpSize>
	slli	s4,s5,0x4
	addi	s3,sp,8
	blez	s5,0x15370 # dumpFunction+0x18e>
	ld	a5,80(s1)
	lw	a4,28(s0)
	li	a2,1
	add	a5,a5,s2
	lbu	a5,8(a5)
	mv	a1,s3
	sb	a5,8(sp)
	bnez	a4,0x1536a # dumpFunction+0x188>
	ld	a5,8(s0)
	ld	a3,16(s0)
	ld	a0,0(s0)
	jalr	a5
	ld	a5,80(s1)
	sw	a0,28(s0)
	li	a2,1
	add	a5,a5,s2
	lbu	a5,9(a5)
	mv	a1,s3
	sb	a5,8(sp)
	bnez	a0,0x1536a # dumpFunction+0x188>
	ld	a5,8(s0)
	ld	a3,16(s0)
	ld	a0,0(s0)
	jalr	a5
	ld	a5,80(s1)
	sw	a0,28(s0)
	li	a2,1
	add	a5,a5,s2
	lbu	a5,10(a5)
	mv	a1,s3
	sb	a5,8(sp)
	bnez	a0,0x1536a # dumpFunction+0x188>
	ld	a5,8(s0)
	ld	a3,16(s0)
	ld	a0,0(s0)
	jalr	a5
	sw	a0,28(s0)
	addi	s2,s2,16
	bne	s4,s2,0x15314 # dumpFunction+0x132>
	lw	s4,32(s1)
	mv	a0,s0
	li	s2,0
	mv	a1,s4
	jal	ra,0x1513c # dumpSize>
	slli	s3,s4,0x3
	blez	s4,0x1539a # dumpFunction+0x1b8>
	ld	a5,72(s1)
	ld	a2,112(s1)
	mv	a0,s0
	add	a5,a5,s2
	ld	a1,0(a5)
	addi	s2,s2,8
	jal	ra,0x151e2 # dumpFunction>
	bne	s3,s2,0x15386 # dumpFunction+0x1a4>
	lw	a5,24(s0)
	bnez	a5,0x15456 # dumpFunction+0x274>
	lw	s2,28(s1)
	mv	a0,s0
	mv	a1,s2
	jal	ra,0x1513c # dumpSize>
	lw	a5,28(s0)
	beqz	a5,0x154da # dumpFunction+0x2f8>
	lw	a5,24(s0)
	beqz	a5,0x15462 # dumpFunction+0x280>
	li	a1,0
	mv	a0,s0
	jal	ra,0x1513c # dumpSize>
	lw	a5,24(s0)
	beqz	a5,0x15498 # dumpFunction+0x2b6>
	li	a1,0
	mv	a0,s0
	jal	ra,0x1513c # dumpSize>
	lw	a5,24(s0)
	beqz	a5,0x15412 # dumpFunction+0x230>
	mv	a0,s0
	ld	s0,96(sp)
	ld	ra,104(sp)
	ld	s1,88(sp)
	ld	s2,80(sp)
	ld	s3,72(sp)
	ld	s4,64(sp)
	ld	s5,56(sp)
	ld	s6,48(sp)
	ld	s7,40(sp)
	ld	s8,32(sp)
	ld	s9,24(sp)
	ld	s10,16(sp)
	li	a1,0
	addi	sp,sp,112
	j	0x1513c # dumpSize>
	bne	s2,s6,0x152f4 # dumpFunction+0x112>
	ld	a1,0(s3)
	mv	a0,s0
	jal	ra,0x1518e # dumpString>
	j	0x152f4 # dumpFunction+0x112>
	beq	s2,s8,0x153f2 # dumpFunction+0x210>
	j	0x152f4 # dumpFunction+0x112>
	fld	fa5,0(s3)
	lw	a5,28(s0)
	fsd	fa5,8(sp)
	bnez	a5,0x152f4 # dumpFunction+0x112>
	j	0x152e6 # dumpFunction+0x104>
	lw	s4,16(s1)
	mv	a0,s0
	li	s2,0
	mv	a1,s4
	jal	ra,0x1513c # dumpSize>
	slli	s3,s4,0x4
	blez	s4,0x1543a # dumpFunction+0x258>
	ld	a5,80(s1)
	mv	a0,s0
	add	a5,a5,s2
	ld	a1,0(a5)
	addi	s2,s2,16
	jal	ra,0x1518e # dumpString>
	bne	s2,s3,0x15428 # dumpFunction+0x246>
	ld	ra,104(sp)
	ld	s0,96(sp)
	ld	s1,88(sp)
	ld	s2,80(sp)
	ld	s3,72(sp)
	ld	s4,64(sp)
	ld	s5,56(sp)
	ld	s6,48(sp)
	ld	s7,40(sp)
	ld	s8,32(sp)
	ld	s9,24(sp)
	ld	s10,16(sp)
	addi	sp,sp,112
	ret
	li	a1,0
	mv	a0,s0
	jal	ra,0x1513c # dumpSize>
	lw	a5,24(s0)
	bnez	a5,0x153b4 # dumpFunction+0x1d2>
	lw	s4,40(s1)
	mv	a0,s0
	li	s2,0
	mv	a1,s4
	jal	ra,0x1513c # dumpSize>
	slli	s3,s4,0x3
	blez	s4,0x153bc # dumpFunction+0x1da>
	ld	a5,96(s1)
	mv	a0,s0
	add	a5,a5,s2
	lw	a1,0(a5)
	jal	ra,0x1513c # dumpSize>
	ld	a5,96(s1)
	mv	a0,s0
	add	a5,a5,s2
	lw	a1,4(a5)
	addi	s2,s2,8
	jal	ra,0x1513c # dumpSize>
	bne	s3,s2,0x15478 # dumpFunction+0x296>
	j	0x153bc # dumpFunction+0x1da>
	lw	s4,36(s1)
	mv	a0,s0
	li	s2,0
	mv	a1,s4
	jal	ra,0x1513c # dumpSize>
	slli	s3,s4,0x4
	blez	s4,0x153ca # dumpFunction+0x1e8>
	ld	a5,104(s1)
	mv	a0,s0
	add	a5,a5,s2
	ld	a1,0(a5)
	jal	ra,0x1518e # dumpString>
	ld	a5,104(s1)
	mv	a0,s0
	add	a5,a5,s2
	lw	a1,8(a5)
	jal	ra,0x1513c # dumpSize>
	ld	a5,104(s1)
	mv	a0,s0
	add	a5,a5,s2
	lw	a1,12(a5)
	addi	s2,s2,16
	jal	ra,0x1513c # dumpSize>
	bne	s3,s2,0x154ae # dumpFunction+0x2cc>
	j	0x153ca # dumpFunction+0x1e8>
	beqz	s2,0x153b0 # dumpFunction+0x1ce>
	ld	a5,8(s0)
	ld	a3,16(s0)
	ld	a1,88(s1)
	ld	a0,0(s0)
	mv	a2,s2
	jalr	a5
	sw	a0,28(s0)
	j	0x153b0 # dumpFunction+0x1ce>
	ld	a5,8(s0)
	ld	a3,16(s0)
	ld	a1,64(s1)
	ld	a0,0(s0)
	jalr	a5
	sw	a0,28(s0)
	j	0x1528a # dumpFunction+0xa8>

luaU_dump:
	addi	sp,sp,-80
	mv	a5,a2
	sd	s0,64(sp)
	sd	a5,24(sp)
	sd	ra,72(sp)
	sd	s1,56(sp)
	sd	s2,48(sp)
	mv	s0,a1
	li	a2,4
	auipc	a1,0x2c
	addi	a1,a1,1050 # 0x41928 # lua_ident+0x590>
	sd	a0,16(sp)
	sd	a3,32(sp)
	sw	a4,40(sp)
	sw	zero,44(sp)
	jalr	a5
	li	a5,84
	sw	a0,44(sp)
	sb	a5,8(sp)
	bnez	a0,0x155ee # luaU_dump+0xf2>
	ld	a3,32(sp)
	ld	a0,16(sp)
	ld	a5,24(sp)
	addi	s1,sp,8
	li	a2,1
	mv	a1,s1
	jalr	a5
	sw	a0,44(sp)
	sb	zero,8(sp)
	bnez	a0,0x155ee # luaU_dump+0xf2>
	ld	a3,32(sp)
	ld	a0,16(sp)
	ld	a5,24(sp)
	li	a2,1
	mv	a1,s1
	jalr	a5
	sw	a0,44(sp)
	bnez	a0,0x155ee # luaU_dump+0xf2>
	ld	a5,24(sp)
	ld	a3,32(sp)
	ld	a0,16(sp)
	li	a2,6
	auipc	a1,0x2c
	addi	a1,a1,982 # 0x41930 # lua_ident+0x598>
	jalr	a5
	li	a5,4
	sw	a0,44(sp)
	sb	a5,8(sp)
	bnez	a0,0x155ee # luaU_dump+0xf2>
	ld	a3,32(sp)
	ld	a0,16(sp)
	ld	a5,24(sp)
	li	a2,1
	mv	a1,s1
	jalr	a5
	li	s2,8
	sw	a0,44(sp)
	sb	s2,8(sp)
	bnez	a0,0x155ee # luaU_dump+0xf2>
	ld	a3,32(sp)
	ld	a0,16(sp)
	ld	a5,24(sp)
	li	a2,1
	mv	a1,s1
	jalr	a5
	sw	a0,44(sp)
	sb	s2,8(sp)
	bnez	a0,0x155ee # luaU_dump+0xf2>
	ld	a5,24(sp)
	ld	a3,32(sp)
	ld	a0,16(sp)
	li	a2,1
	mv	a1,s1
	jalr	a5
	lui	a5,0x5
	addi	a5,a5,1656 # 0x5678 # exit-0xaaa8>
	sw	a0,44(sp)
	sd	a5,8(sp)
	bnez	a0,0x155ee # luaU_dump+0xf2>
	ld	a5,24(sp)
	ld	a3,32(sp)
	ld	a0,16(sp)
	li	a2,8
	mv	a1,s1
	jalr	a5
	auipc	a5,0x2c
	fld	fa5,892(a5) # 0x41938 # lua_ident+0x5a0>
	sw	a0,44(sp)
	fsd	fa5,8(sp)
	bnez	a0,0x155ee # luaU_dump+0xf2>
	ld	a5,24(sp)
	ld	a3,32(sp)
	ld	a0,16(sp)
	li	a2,8
	mv	a1,s1
	jalr	a5
	lw	a5,16(s0)
	sw	a0,44(sp)
	sb	a5,8(sp)
	bnez	a0,0x155ee # luaU_dump+0xf2>
	ld	a3,32(sp)
	ld	a0,16(sp)
	ld	a5,24(sp)
	li	a2,1
	mv	a1,s1
	jalr	a5
	sw	a0,44(sp)
	addi	a0,sp,16
	mv	a1,s0
	li	a2,0
	jal	ra,0x151e2 # dumpFunction>
	ld	ra,72(sp)
	ld	s0,64(sp)
	lw	a0,44(sp)
	ld	s1,56(sp)
	ld	s2,48(sp)
	addi	sp,sp,80
	ret

luaF_newCclosure:
	addi	sp,sp,-16
	addiw	a2,a1,2
	sd	s0,0(sp)
	slliw	a2,a2,0x4
	mv	s0,a1
	li	a1,38
	sd	ra,8(sp)
	jal	ra,0x17166 # luaC_newobj>
	sb	s0,10(a0)
	ld	ra,8(sp)
	ld	s0,0(sp)
	addi	sp,sp,16
	ret

luaF_newLclosure:
	addi	sp,sp,-32
	sd	s0,16(sp)
	addiw	s0,a1,4
	slliw	s0,s0,0x3
	sd	s1,8(sp)
	mv	a2,s0
	mv	s1,a1
	li	a1,6
	sd	s2,0(sp)
	sd	ra,24(sp)
	jal	ra,0x17166 # luaC_newobj>
	sd	zero,24(a0)
	sb	s1,10(a0)
	mv	s2,a0
	beqz	s1,0x15670 # luaF_newLclosure+0x46>
	addiw	a2,s1,-1
	slli	a2,a2,0x20
	srli	a2,a2,0x20
	slli	a0,a2,0x3
	addi	s0,s0,-8
	addi	a2,a2,1
	sub	a0,s0,a0
	slli	a2,a2,0x3
	li	a1,0
	add	a0,a0,s2
	jal	ra,0x3683a # memset>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	mv	a0,s2
	ld	s2,0(sp)
	addi	sp,sp,32
	ret

luaF_initupvals:
	lbu	a5,10(a1)
	beqz	a5,0x156f2 # luaF_initupvals+0x74>
	addi	sp,sp,-48
	sd	s0,32(sp)
	sd	s1,24(sp)
	sd	s2,16(sp)
	sd	s3,8(sp)
	sd	ra,40(sp)
	mv	s2,a1
	mv	s3,a0
	addi	s1,a1,32
	li	s0,0
	j	0x156a4 # luaF_initupvals+0x26>
	lbu	a5,10(s2)
	ble	a5,s0,0x156e4 # luaF_initupvals+0x66>
	li	a2,40
	li	a1,9
	mv	a0,s3
	jal	ra,0x17166 # luaC_newobj>
	addi	a5,a0,24
	sd	a5,16(a0)
	sb	zero,32(a0)
	sd	a0,0(s1)
	lbu	a5,9(s2)
	addiw	s0,s0,1
	addi	s1,s1,8
	andi	a5,a5,32
	beqz	a5,0x1569c # luaF_initupvals+0x1e>
	lbu	a5,9(a0)
	andi	a5,a5,24
	beqz	a5,0x1569c # luaF_initupvals+0x1e>
	mv	a2,a0
	mv	a1,s2
	mv	a0,s3
	jal	ra,0x1706e # luaC_barrier_>
	lbu	a5,10(s2)
	blt	s0,a5,0x156a4 # luaF_initupvals+0x26>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	addi	sp,sp,48
	ret
	ret

luaF_findupval:
	addi	sp,sp,-32
	sd	s2,0(sp)
	mv	s2,a0
	ld	a0,56(a0)
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	ra,24(sp)
	mv	s0,a1
	addi	s1,s2,56
	bnez	a0,0x15718 # luaF_findupval+0x24>
	j	0x1571e # luaF_findupval+0x2a>
	addi	s1,a0,24
	beq	a5,s0,0x15748 # luaF_findupval+0x54>
	ld	a0,24(a0)
	beqz	a0,0x1571e # luaF_findupval+0x2a>
	ld	a5,16(a0)
	bleu	s0,a5,0x1570c # luaF_findupval+0x18>
	li	a2,40
	li	a1,9
	mv	a0,s2
	jal	ra,0x17166 # luaC_newobj>
	ld	a5,0(s1)
	sd	s0,16(a0)
	sb	zero,10(a0)
	sd	a5,24(a0)
	sd	s1,32(a0)
	beqz	a5,0x1573e # luaF_findupval+0x4a>
	addi	a4,a0,24
	sd	a4,32(a5)
	ld	a5,80(s2)
	sd	a0,0(s1)
	beq	s2,a5,0x15754 # luaF_findupval+0x60>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret
	ld	a5,24(s2)
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	a4,248(a5)
	ld	s1,8(sp)
	sd	a4,80(s2)
	sd	s2,248(a5)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret

luaF_newtbcupval:
	lbu	a5,8(a1)
	li	a4,1
	beq	a5,a4,0x1577c # luaF_newtbcupval+0xe>
	andi	a5,a5,15
	bnez	a5,0x1577e # luaF_newtbcupval+0x10>
	ret
	addi	sp,sp,-32
	li	a2,24
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	ra,24(sp)
	mv	s0,a1
	mv	s1,a0
	jal	ra,0x1d1d0 # luaT_gettmbyobj>
	lbu	a5,8(a0)
	andi	a5,a5,15
	beqz	a5,0x157d8 # luaF_newtbcupval+0x6a>
	ld	a4,64(s1)
	lui	a2,0x100
	addi	a2,a2,-16
	sub	a5,s0,a4
	srai	a5,a5,0x4
	sext.w	a0,a5
	lui	a3,0x10
	add	a4,a4,a2
	lui	a1,0x10
	bltu	a0,a3,0x157c8 # luaF_newtbcupval+0x5a>
	sub	a5,s0,a4
	srai	a5,a5,0x4
	sh	zero,10(a4)
	sext.w	a3,a5
	add	a4,a4,a2
	bleu	a1,a3,0x157b4 # luaF_newtbcupval+0x46>
	sh	a5,10(s0)
	sd	s0,64(s1)
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret
	ld	a1,32(s1)
	li	a3,0
	mv	a0,s1
	ld	a2,0(a1)
	sub	a2,s0,a2
	srai	a2,a2,0x4
	sext.w	a2,a2
	jal	ra,0x137f4 # luaG_findlocal>
	mv	a2,a0
	beqz	a0,0x157fe # luaF_newtbcupval+0x90>
	auipc	a1,0x2c
	addi	a1,a1,336 # 0x41940 # lua_ident+0x5a8>
	mv	a0,s1
	jal	ra,0x13d34 # luaG_runerror>
	auipc	a2,0x2c
	addi	a2,a2,-1206 # 0x41348 # __clzdi2+0x480>
	j	0x157f0 # luaF_newtbcupval+0x82>

luaF_unlinkupval:
	ld	a4,32(a0)
	ld	a5,24(a0)
	sd	a5,0(a4)
	beqz	a5,0x15814 # luaF_unlinkupval+0xc>
	ld	a4,32(a0)
	sd	a4,32(a5)
	ret

luaF_closeupval:
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	ra,24(sp)
	mv	s0,a1
	j	0x15852 # luaF_closeupval+0x3c>
	ld	a4,16(a1)
	addi	a6,a1,24
	bltu	a4,s0,0x15856 # luaF_closeupval+0x40>
	ld	a2,32(a1)
	ld	a3,24(a1)
	sd	a3,0(a2)
	beqz	a3,0x15836 # luaF_closeupval+0x20>
	ld	a2,32(a1)
	sd	a2,32(a3)
	ld	a2,0(a4)
	lbu	a3,9(a1)
	sd	a2,24(a1)
	lbu	a4,8(a4)
	andi	a7,a3,24
	sd	a6,16(a1)
	sb	a4,32(a1)
	beqz	a7,0x1585e # luaF_closeupval+0x48>
	ld	a1,56(a0)
	bnez	a1,0x15820 # luaF_closeupval+0xa>
	ld	ra,24(sp)
	ld	s0,16(sp)
	addi	sp,sp,32
	ret
	ori	a3,a3,32
	sb	a3,9(a1)
	andi	a4,a4,64
	beqz	a4,0x15852 # luaF_closeupval+0x3c>
	lbu	a4,9(a2)
	andi	a4,a4,24
	beqz	a4,0x15852 # luaF_closeupval+0x3c>
	sd	a0,8(sp)
	jal	ra,0x1706e # luaC_barrier_>
	ld	a0,8(sp)
	j	0x15852 # luaF_closeupval+0x3c>

luaF_close:
	addi	sp,sp,-80
	sd	s4,32(sp)
	ld	s4,48(a0)
	sd	s1,56(sp)
	mv	s1,a0
	sd	s0,64(sp)
	sd	s3,40(sp)
	sd	s5,24(sp)
	sd	s7,8(sp)
	sd	ra,72(sp)
	sd	s2,48(sp)
	sd	s6,16(sp)
	sd	s8,0(sp)
	mv	s0,a1
	mv	s3,a2
	mv	s5,a3
	sub	s4,a1,s4
	jal	ra,0x15816 # luaF_closeupval>
	ld	s7,64(s1)
	bltu	s7,s0,0x1593a # luaF_close+0xbc>
	ld	a1,48(s1)
	lui	s2,0xfff00
	addi	s2,s2,16
	li	s6,-1
	lhu	a5,10(s7)
	slli	a5,a5,0x4
	sub	a5,s7,a5
	bltu	a1,a5,0x158d0 # luaF_close+0x52>
	j	0x158d6 # luaF_close+0x58>
	add	a5,a5,s2
	bleu	a5,a1,0x158d6 # luaF_close+0x58>
	lhu	a4,10(a5)
	beqz	a4,0x158ca # luaF_close+0x4c>
	sd	a5,64(s1)
	bne	s3,s6,0x15958 # luaF_close+0xda>
	ld	s8,24(s1)
	addi	s8,s8,80
	li	a2,24
	mv	a1,s7
	mv	a0,s1
	ld	s0,16(s1)
	jal	ra,0x1d1d0 # luaT_gettmbyobj>
	ld	a4,0(a0)
	addi	a5,s0,48
	li	a2,0
	sd	a4,0(s0)
	lbu	a4,8(a0)
	mv	a1,s0
	mv	a0,s1
	sb	a4,8(s0)
	ld	a4,0(s7)
	sd	a4,16(s0)
	lbu	a4,8(s7)
	sb	a4,24(s0)
	ld	a4,0(s8)
	sd	a4,32(s0)
	lbu	a4,8(s8)
	sb	a4,40(s0)
	sd	a5,16(s1)
	beqz	s5,0x15952 # luaF_close+0xd4>
	jal	ra,0x14d1c # luaD_call>
	ld	a1,48(s1)
	ld	s7,64(s1)
	add	a5,a1,s4
	bleu	a5,s7,0x158ba # luaF_close+0x3c>
	ld	ra,72(sp)
	ld	s0,64(sp)
	ld	s1,56(sp)
	ld	s2,48(sp)
	ld	s3,40(sp)
	ld	s4,32(sp)
	ld	s5,24(sp)
	ld	s6,16(sp)
	ld	s7,8(sp)
	ld	s8,0(sp)
	addi	sp,sp,80
	ret
	jal	ra,0x14d70 # luaD_callnoyield>
	j	0x1592c # luaF_close+0xae>
	addi	s8,s7,16
	mv	a2,s8
	mv	a1,s3
	mv	a0,s1
	jal	ra,0x140cc # luaD_seterrorobj>
	j	0x158e4 # luaF_close+0x66>

luaF_newproto:
	addi	sp,sp,-16
	li	a2,128
	li	a1,10
	sd	ra,8(sp)
	jal	ra,0x17166 # luaC_newobj>
	sh	zero,10(a0)
	sb	zero,12(a0)
	ld	ra,8(sp)
	sd	zero,56(a0)
	sd	zero,72(a0)
	sd	zero,64(a0)
	sd	zero,88(a0)
	sd	zero,96(a0)
	sd	zero,80(a0)
	sd	zero,104(a0)
	sd	zero,16(a0)
	sd	zero,24(a0)
	sd	zero,32(a0)
	sd	zero,40(a0)
	sw	zero,48(a0)
	sd	zero,112(a0)
	addi	sp,sp,16
	ret

luaF_freeproto:
	addi	sp,sp,-32
	lw	a2,24(a1)
	sd	s0,16(sp)
	mv	s0,a1
	ld	a1,64(a1)
	slli	a2,a2,0x2
	sd	ra,24(sp)
	sd	s1,8(sp)
	mv	s1,a0
	jal	ra,0x17a5c # luaM_free_>
	lw	a2,32(s0)
	ld	a1,72(s0)
	mv	a0,s1
	slli	a2,a2,0x3
	jal	ra,0x17a5c # luaM_free_>
	lw	a2,20(s0)
	ld	a1,56(s0)
	mv	a0,s1
	slli	a2,a2,0x4
	jal	ra,0x17a5c # luaM_free_>
	lw	a2,28(s0)
	ld	a1,88(s0)
	mv	a0,s1
	jal	ra,0x17a5c # luaM_free_>
	lw	a2,40(s0)
	ld	a1,96(s0)
	mv	a0,s1
	slli	a2,a2,0x3
	jal	ra,0x17a5c # luaM_free_>
	lw	a2,36(s0)
	ld	a1,104(s0)
	mv	a0,s1
	slli	a2,a2,0x4
	jal	ra,0x17a5c # luaM_free_>
	lw	a2,16(s0)
	ld	a1,80(s0)
	mv	a0,s1
	slli	a2,a2,0x4
	jal	ra,0x17a5c # luaM_free_>
	mv	a1,s0
	ld	s0,16(sp)
	ld	ra,24(sp)
	mv	a0,s1
	ld	s1,8(sp)
	li	a2,128
	addi	sp,sp,32
	j	0x17a5c # luaM_free_>

luaF_getlocalname:
	lw	a4,36(a0)
	blez	a4,0x15a56 # luaF_getlocalname+0x2e>
	ld	a5,104(a0)
	addiw	a3,a4,-1
	slli	a3,a3,0x20
	srli	a3,a3,0x1c
	addi	a4,a5,16
	add	a3,a3,a4
	j	0x15a50 # luaF_getlocalname+0x28>
	lw	a4,12(a5)
	ble	a4,a2,0x15a4a # luaF_getlocalname+0x22>
	addiw	a1,a1,-1
	beqz	a1,0x15a5a # luaF_getlocalname+0x32>
	addi	a5,a5,16
	beq	a5,a3,0x15a56 # luaF_getlocalname+0x2e>
	lw	a4,8(a5)
	ble	a4,a2,0x15a40 # luaF_getlocalname+0x18>
	li	a0,0
	ret
	ld	a0,0(a5)
	addi	a0,a0,24
	ret

separatetobefnz:
	ld	a5,176(a0)
	addi	t1,a0,128
	beqz	a5,0x15ab2 # separatetobefnz+0x52>
	mv	a3,a5
	ld	a5,0(a5)
	bnez	a5,0x15a68 # separatetobefnz+0x8>
	ld	a4,128(a0)
	ld	a7,232(a0)
	beq	a7,a4,0x15aa6 # separatetobefnz+0x46>
	lbu	a5,9(a4)
	ld	a2,0(a4)
	mv	a6,a4
	andi	a5,a5,24
	or	a5,a5,a1
	sext.w	a5,a5
	beqz	a5,0x15aa8 # separatetobefnz+0x48>
	ld	a5,224(a0)
	beq	a5,a4,0x15aae # separatetobefnz+0x4e>
	sd	a2,0(t1)
	ld	a5,0(a3)
	sd	a5,0(a4)
	sd	a4,0(a3)
	ld	a4,0(t1)
	ld	a7,232(a0)
	mv	a3,a6
	bne	a7,a4,0x15a78 # separatetobefnz+0x18>
	ret
	mv	a4,a2
	mv	t1,a6
	j	0x15a74 # separatetobefnz+0x14>
	sd	a2,224(a0)
	j	0x15a8e # separatetobefnz+0x2e>
	ld	a4,128(a0)
	ld	a7,232(a0)
	addi	a3,a0,176
	j	0x15a74 # separatetobefnz+0x14>

enterinc:
	lbu	a2,100(a0)
	ld	a4,112(a0)
	andi	a3,a2,24
	mv	a2,a3
	beqz	a4,0x15ade # enterinc+0x20>
	lbu	a5,9(a4)
	andi	a5,a5,-64
	or	a5,a5,a2
	sb	a5,9(a4)
	ld	a4,0(a4)
	bnez	a4,0x15acc # enterinc+0xe>
	ld	a4,128(a0)
	slliw	a2,a3,0x18
	sd	zero,192(a0)
	sd	zero,200(a0)
	sd	zero,208(a0)
	sraiw	a2,a2,0x18
	beqz	a4,0x15b08 # enterinc+0x4a>
	lbu	a5,9(a4)
	andi	a5,a5,-64
	or	a5,a5,a2
	sb	a5,9(a4)
	ld	a4,0(a4)
	bnez	a4,0x15af6 # enterinc+0x38>
	ld	a4,176(a0)
	slliw	a3,a3,0x18
	sraiw	a3,a3,0x18
	beqz	a4,0x15b26 # enterinc+0x68>
	lbu	a5,9(a4)
	andi	a5,a5,-64
	or	a5,a5,a3
	sb	a5,9(a4)
	ld	a4,0(a4)
	bnez	a4,0x15b14 # enterinc+0x56>
	li	a5,8
	sd	zero,224(a0)
	sd	zero,232(a0)
	sd	zero,240(a0)
	sb	a5,101(a0)
	sb	zero,102(a0)
	sd	zero,40(a0)
	ret

freeobj:
	lbu	a5,8(a1)
	li	a4,34
	addiw	a5,a5,-4
	andi	a5,a5,255
	bltu	a4,a5,0x15c1e # freeobj+0xdc>
	auipc	a4,0x2c
	addi	a4,a4,-492 # 0x41968 # lua_ident+0x5d0>
	slli	a5,a5,0x2
	add	a5,a5,a4
	lw	a5,0(a5)
	addi	sp,sp,-32
	sd	s0,16(sp)
	add	a5,a5,a4
	sd	ra,24(sp)
	mv	s0,a0
	jr	a5
	ld	ra,24(sp)
	ld	s0,16(sp)
	addi	sp,sp,32
	ret
	sd	a1,8(sp)
	jal	ra,0x1bfa0 # luaS_remove>
	ld	a1,8(sp)
	lbu	a2,11(a1)
	mv	a0,s0
	ld	s0,16(sp)
	ld	ra,24(sp)
	addi	a2,a2,25
	addi	sp,sp,32
	j	0x17a5c # luaM_free_>
	ld	s0,16(sp)
	ld	ra,24(sp)
	addi	sp,sp,32
	j	0x1c504 # luaH_free>
	lbu	a2,10(a1)
	ld	s0,16(sp)
	ld	ra,24(sp)
	addiw	a2,a2,4
	slliw	a2,a2,0x3
	addi	sp,sp,32
	j	0x17a5c # luaM_free_>
	lhu	a5,10(a1)
	li	a2,32
	beqz	a5,0x15bbe # freeobj+0x7c>
	slli	a5,a5,0x4
	addi	a2,a5,40
	ld	a5,16(a1)
	mv	a0,s0
	ld	s0,16(sp)
	ld	ra,24(sp)
	add	a2,a2,a5
	addi	sp,sp,32
	j	0x17a5c # luaM_free_>
	ld	s0,16(sp)
	ld	ra,24(sp)
	addi	sp,sp,32
	j	0x1ba38 # luaE_freethread>
	ld	a4,16(a1)
	addi	a5,a1,24
	beq	a4,a5,0x15bec # freeobj+0xaa>
	mv	a0,a1
	sd	a1,8(sp)
	jal	ra,0x15808 # luaF_unlinkupval>
	ld	a1,8(sp)
	mv	a0,s0
	ld	s0,16(sp)
	ld	ra,24(sp)
	li	a2,40
	addi	sp,sp,32
	j	0x17a5c # luaM_free_>
	ld	s0,16(sp)
	ld	ra,24(sp)
	addi	sp,sp,32
	j	0x159b8 # luaF_freeproto>
	ld	a2,16(a1)
	j	0x15b82 # freeobj+0x40>
	lbu	a2,10(a1)
	ld	s0,16(sp)
	ld	ra,24(sp)
	addiw	a2,a2,2
	slliw	a2,a2,0x4
	addi	sp,sp,32
	j	0x17a5c # luaM_free_>
	ret

sweep2old:
	addi	sp,sp,-48
	sd	s0,32(sp)
	mv	s0,a1
	ld	a1,0(a1)
	sd	s4,0(sp)
	sd	ra,40(sp)
	sd	s1,24(sp)
	sd	s2,16(sp)
	sd	s3,8(sp)
	ld	s4,24(a0)
	beqz	a1,0x15c68 # sweep2old+0x48>
	mv	s1,a0
	li	s3,8
	li	s2,9
	lbu	a5,9(a1)
	andi	a4,a5,24
	andi	a5,a5,-8
	bnez	a4,0x15c8c # sweep2old+0x6c>
	lbu	a4,8(a1)
	ori	a5,a5,4
	mv	s0,a1
	ori	a3,a5,32
	beq	a4,s3,0x15c98 # sweep2old+0x78>
	beq	a4,s2,0x15c78 # sweep2old+0x58>
	sb	a3,9(a1)
	ld	a1,0(s0)
	bnez	a1,0x15c3e # sweep2old+0x1e>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	ld	s4,0(sp)
	addi	sp,sp,48
	ret
	ld	a2,16(a1)
	addi	a4,a1,24
	andi	a5,a5,-57
	beq	a2,a4,0x15c60 # sweep2old+0x40>
	sb	a5,9(a1)
	j	0x15c64 # sweep2old+0x44>
	ld	a5,0(a1)
	mv	a0,s1
	sd	a5,0(s0)
	jal	ra,0x15b42 # freeobj>
	j	0x15c64 # sweep2old+0x44>
	ld	a4,144(s4)
	andi	a5,a5,-57
	sd	a4,72(a1)
	sd	a1,144(s4)
	sb	a5,9(a1)
	j	0x15c64 # sweep2old+0x44>

GCTM:
	addi	sp,sp,-64
	sd	s1,40(sp)
	ld	s1,24(a0)
	sd	s0,48(sp)
	sd	ra,56(sp)
	ld	a5,176(s1)
	ld	a4,112(s1)
	sd	s2,32(sp)
	ld	a3,0(a5)
	sd	s3,24(sp)
	li	a1,3
	sd	a3,176(s1)
	sd	a4,0(a5)
	sd	a5,112(s1)
	lbu	a3,9(a5)
	mv	s0,a0
	andi	a2,a3,191
	sb	a2,9(a5)
	lbu	a4,101(s1)
	addiw	a4,a4,-3
	andi	a4,a4,255
	bltu	a1,a4,0x15d24 # GCTM+0x78>
	lbu	a4,100(s1)
	andi	a2,a2,-57
	andi	a4,a4,24
	or	a2,a2,a4
	sb	a2,9(a5)
	lbu	a4,8(a5)
	li	a2,2
	mv	a1,sp
	ori	a4,a4,64
	mv	a0,s0
	sd	a5,0(sp)
	sb	a4,8(sp)
	jal	ra,0x1d1d0 # luaT_gettmbyobj>
	lbu	a5,8(a0)
	andi	a4,a5,15
	bnez	a4,0x15d2e # GCTM+0x82>
	ld	ra,56(sp)
	ld	s0,48(sp)
	ld	s1,40(sp)
	ld	s2,32(sp)
	ld	s3,24(sp)
	addi	sp,sp,64
	ret
	andi	a3,a3,7
	bne	a3,a1,0x15cf4 # GCTM+0x48>
	sd	a5,216(s1)
	j	0x15cf4 # GCTM+0x48>
	lbu	s2,106(s1)
	lbu	s3,11(s0)
	sb	zero,11(s0)
	sb	zero,106(s1)
	ld	a3,16(s0)
	ld	a2,0(a0)
	li	a4,0
	sb	a5,8(a3) # 0x10008 # exit-0x118>
	sd	a2,0(a3)
	addi	a5,a3,32
	sd	a5,16(s0)
	lbu	a5,8(sp)
	ld	a0,0(sp)
	sb	a5,24(a3)
	ld	a2,32(s0)
	ld	a1,48(s0)
	lhu	a5,62(a2)
	sd	a0,16(a3)
	sub	a3,a3,a1
	ori	a5,a5,128
	sh	a5,62(a2)
	auipc	a1,0x0
	addi	a1,a1,62 # 0x15dac # dothecall>
	li	a2,0
	mv	a0,s0
	jal	ra,0x14ff4 # luaD_pcall>
	ld	a4,32(s0)
	lhu	a5,62(a4)
	andi	a5,a5,-129
	sh	a5,62(a4)
	sb	s3,11(s0)
	sb	s2,106(s1)
	beqz	a0,0x15d16 # GCTM+0x6a>
	auipc	a1,0x2c
	addi	a1,a1,74 # 0x41de0 # nextage.0+0x8>
	mv	a0,s0
	jal	ra,0x1bb3e # luaE_warnerror>
	ld	a5,16(s0)
	addi	a5,a5,-16
	sd	a5,16(s0)
	j	0x15d16 # GCTM+0x6a>

dothecall:
	ld	a1,16(a0)
	li	a2,0
	addi	a1,a1,-32
	j	0x14d70 # luaD_callnoyield>

sweepstep.constprop.0:
	addi	sp,sp,-80
	sd	s1,56(sp)
	ld	s1,120(a1)
	sd	s2,48(sp)
	sd	ra,72(sp)
	sd	s0,64(sp)
	sd	s3,40(sp)
	sd	s4,32(sp)
	sd	s5,24(sp)
	sd	s6,16(sp)
	sd	s7,8(sp)
	mv	s2,a1
	beqz	s1,0x15e3a # sweepstep.constprop.0+0x84>
	ld	a5,24(a0)
	ld	a1,0(s1)
	ld	s4,24(s2) # 0xfffffffffff00018 # __BSS_END__+0xffffffffffeb1c90>
	lbu	s3,100(a5)
	mv	s5,a0
	xori	s6,s3,24
	andi	s3,s3,24
	beqz	a1,0x15e66 # sweepstep.constprop.0+0xb0>
	li	s0,0
	li	s7,100
	j	0x15e00 # sweepstep.constprop.0+0x4a>
	sb	a4,9(a1)
	mv	s1,a1
	mv	a1,a3
	addiw	s0,s0,1
	beqz	a1,0x15e22 # sweepstep.constprop.0+0x6c>
	beq	s0,s7,0x15e5a # sweepstep.constprop.0+0xa4>
	lbu	a5,9(a1)
	ld	a3,0(a1)
	andi	a4,a5,-64
	and	a5,s6,a5
	or	a4,a4,s3
	beqz	a5,0x15df0 # sweepstep.constprop.0+0x3a>
	sd	a3,0(s1)
	mv	a0,s5
	jal	ra,0x15b42 # freeobj>
	ld	a1,0(s1)
	addiw	s0,s0,1
	bnez	a1,0x15dfc # sweepstep.constprop.0+0x46>
	ld	a5,24(s2)
	sub	s4,a5,s4
	ld	a5,32(s2)
	sd	a1,120(s2)
	add	a5,a5,s4
	sd	a5,32(s2)
	j	0x15e42 # sweepstep.constprop.0+0x8c>
	sb	a2,101(a1)
	sd	a3,120(a1)
	li	s0,0
	ld	ra,72(sp)
	mv	a0,s0
	ld	s0,64(sp)
	ld	s1,56(sp)
	ld	s2,48(sp)
	ld	s3,40(sp)
	ld	s4,32(sp)
	ld	s5,24(sp)
	ld	s6,16(sp)
	ld	s7,8(sp)
	addi	sp,sp,80
	ret
	ld	a5,24(s2)
	mv	a1,s1
	sub	s4,a5,s4
	j	0x15e2a # sweepstep.constprop.0+0x74>
	li	s4,0
	li	s0,0
	j	0x15e2a # sweepstep.constprop.0+0x74>

sweepgen.isra.0:
	ld	a6,0(a2)
	addi	sp,sp,-64
	sd	s0,48(sp)
	sd	ra,56(sp)
	sd	s1,40(sp)
	sd	s2,32(sp)
	sd	s3,24(sp)
	sd	s4,16(sp)
	sd	s5,8(sp)
	sd	s6,0(sp)
	mv	s0,a2
	beq	a3,a6,0x15ece # sweepgen.isra.0+0x62>
	mv	s4,a3
	mv	s3,a0
	mv	s1,a4
	andi	s5,a1,24
	auipc	s6,0x2c
	addi	s6,s6,-186 # 0x41dd8 # nextage.0>
	li	s2,3
	lbu	a5,9(a6)
	andi	a4,a5,24
	andi	a7,a5,7
	bnez	a4,0x15efe # sweepgen.isra.0+0x92>
	andi	a2,a5,-64
	or	a2,a2,s5
	add	a4,s6,a7
	andi	a5,a5,-8
	ori	a2,a2,1
	bnez	a7,0x15ee4 # sweepgen.isra.0+0x78>
	sb	a2,9(a6)
	mv	s0,a6
	ld	a6,0(s0)
	bne	a6,s4,0x15e9c # sweepgen.isra.0+0x30>
	ld	ra,56(sp)
	mv	a0,s0
	ld	s0,48(sp)
	ld	s1,40(sp)
	ld	s2,32(sp)
	ld	s3,24(sp)
	ld	s4,16(sp)
	ld	s5,8(sp)
	ld	s6,0(sp)
	addi	sp,sp,64
	ret
	lbu	a4,0(a4)
	or	a5,a5,a4
	sb	a5,9(a6)
	andi	a5,a5,7
	bne	a5,s2,0x15ec4 # sweepgen.isra.0+0x58>
	ld	a5,0(s1)
	bnez	a5,0x15ec4 # sweepgen.isra.0+0x58>
	sd	a6,0(s1)
	j	0x15ec4 # sweepgen.isra.0+0x58>
	ld	a5,0(a6)
	mv	a1,a6
	mv	a0,s3
	sd	a5,0(s0)
	jal	ra,0x15b42 # freeobj>
	j	0x15ec6 # sweepgen.isra.0+0x5a>

entersweep:
	addi	sp,sp,-48
	sd	s3,8(sp)
	ld	s3,24(a0)
	sd	s0,32(sp)
	sd	s1,24(sp)
	sd	s2,16(sp)
	sd	ra,40(sp)
	li	a5,3
	sb	a5,101(s3)
	mv	a5,s3
	lbu	a5,100(a5)
	ld	a1,112(s3)
	addi	s2,s3,112
	andi	a2,a5,24
	mv	s1,a0
	mv	s0,s2
	xori	a5,a5,24
	beqz	a1,0x15f70 # entersweep+0x62>
	lbu	a3,9(a1)
	ld	a6,0(a1)
	andi	a4,a3,-64
	and	a5,a5,a3
	or	a4,a4,a2
	bnez	a5,0x15f84 # entersweep+0x76>
	sb	a4,9(a1)
	mv	s0,a1
	mv	a1,a6
	beqz	a1,0x15f70 # entersweep+0x62>
	bne	s2,s0,0x15f72 # entersweep+0x64>
	ld	a5,24(s1)
	lbu	a5,100(a5)
	andi	a2,a5,24
	xori	a5,a5,24
	bnez	a1,0x15f40 # entersweep+0x32>
	li	s0,0
	sd	s0,120(s3)
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	addi	sp,sp,48
	ret
	sd	a6,0(s0)
	mv	a0,s1
	jal	ra,0x15b42 # freeobj>
	ld	a1,0(s0)
	j	0x15f5a # entersweep+0x4c>

correctgraylist:
	ld	a4,0(a0)
	beqz	a4,0x15ff0 # correctgraylist+0x5e>
	li	a7,33
	auipc	a6,0x2c
	addi	a6,a6,-1446 # 0x419f4 # lua_ident+0x65c>
	li	t1,5
	li	t3,8
	li	t4,6
	lbu	a2,8(a4)
	addiw	a5,a2,-5
	andi	a5,a5,255
	bltu	a7,a5,0x15fc2 # correctgraylist+0x30>
	slli	a5,a5,0x2
	add	a5,a5,a6
	lw	a5,0(a5)
	add	a5,a5,a6
	jr	a5
	li	a3,0
	lbu	a5,9(a4)
	andi	a1,a5,24
	bnez	a1,0x15fea # correctgraylist+0x58>
	andi	a1,a5,7
	beq	a1,t1,0x16018 # correctgraylist+0x86>
	beq	a2,t3,0x16010 # correctgraylist+0x7e>
	bne	a1,t4,0x15fe2 # correctgraylist+0x50>
	xori	a5,a5,2
	ori	a5,a5,32
	sb	a5,9(a4)
	ld	a4,0(a3)
	sd	a4,0(a0)
	bnez	a4,0x15fa8 # correctgraylist+0x16>
	ret
	addi	a3,a4,16
	j	0x15fc4 # correctgraylist+0x32>
	addi	a3,a4,120
	j	0x15fc4 # correctgraylist+0x32>
	addi	a3,a4,48
	j	0x15fc4 # correctgraylist+0x32>
	addi	a3,a4,72
	j	0x15fc4 # correctgraylist+0x32>
	addi	a3,a4,32
	j	0x15fc4 # correctgraylist+0x32>
	ld	a4,0(a3)
	mv	a0,a3
	bnez	a4,0x15fa8 # correctgraylist+0x16>
	j	0x15ff0 # correctgraylist+0x5e>
	ori	a5,a5,32
	xori	a5,a5,3
	sb	a5,9(a4)
	ld	a4,0(a3)
	mv	a0,a3
	bnez	a4,0x15fa8 # correctgraylist+0x16>
	j	0x15ff0 # correctgraylist+0x5e>

finishgencycle:
	addi	sp,sp,-32
	sd	s1,8(sp)
	mv	s1,a0
	addi	a0,a1,144
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s2,0(sp)
	mv	s0,a1
	jal	ra,0x15f92 # correctgraylist>
	ld	a5,152(s0)
	sd	a5,0(a0)
	sd	zero,152(s0)
	jal	ra,0x15f92 # correctgraylist>
	ld	a5,168(s0)
	sd	a5,0(a0)
	sd	zero,168(s0)
	jal	ra,0x15f92 # correctgraylist>
	ld	a5,160(s0)
	sd	a5,0(a0)
	sd	zero,160(s0)
	jal	ra,0x15f92 # correctgraylist>
	lbu	a5,107(s0)
	bnez	a5,0x160a2 # finishgencycle+0x76>
	lw	a1,60(s0)
	lw	a4,56(s0)
	sraiw	a5,a1,0x1f
	srliw	a5,a5,0x1e
	addw	a5,a5,a1
	sraiw	a5,a5,0x2
	blt	a4,a5,0x160b2 # finishgencycle+0x86>
	sb	zero,101(s0)
	ld	s0,24(s1)
	ld	a5,176(s0)
	beqz	a5,0x160a6 # finishgencycle+0x7a>
	mv	a0,s1
	jal	ra,0x15cac # GCTM>
	ld	a5,176(s0)
	bnez	a5,0x1608c # finishgencycle+0x60>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret
	sb	zero,101(s0)
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret
	srliw	a5,a1,0x1f
	addw	a1,a1,a5
	sraiw	a1,a1,0x1
	mv	a0,s1
	ld	s2,24(s0)
	jal	ra,0x1bcf6 # luaS_resize>
	ld	a4,24(s0)
	ld	a5,32(s0)
	lbu	a3,107(s0)
	sub	a4,a4,s2
	add	a5,a5,a4
	sd	a5,32(s0)
	sb	zero,101(s0)
	beqz	a3,0x16086 # finishgencycle+0x5a>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret

atomic2gen:
	addi	sp,sp,-32
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	mv	s0,a1
	li	a5,3
	sb	a5,101(s0)
	addi	a1,a1,112
	sd	zero,144(s0)
	sd	zero,136(s0)
	sd	zero,160(s0)
	sd	zero,168(s0)
	sd	zero,152(s0)
	mv	s1,a0
	jal	ra,0x15c20 # sweep2old>
	ld	a5,112(s0)
	addi	a1,s0,128
	mv	a0,s1
	sd	a5,192(s0)
	sd	a5,200(s0)
	sd	a5,208(s0)
	sd	zero,216(s0)
	jal	ra,0x15c20 # sweep2old>
	ld	a5,128(s0)
	addi	a1,s0,176
	mv	a0,s1
	sd	a5,224(s0)
	sd	a5,232(s0)
	sd	a5,240(s0)
	jal	ra,0x15c20 # sweep2old>
	ld	a5,16(s0)
	ld	a4,24(s0)
	li	a3,1
	sb	a3,102(s0)
	add	a5,a5,a4
	sd	zero,40(s0)
	sd	a5,32(s0)
	mv	a1,s0
	ld	s0,16(sp)
	ld	ra,24(sp)
	mv	a0,s1
	ld	s1,8(sp)
	addi	sp,sp,32
	j	0x1602c # finishgencycle>

genlink:
	lbu	a5,9(a1)
	li	a3,5
	andi	a4,a5,7
	beq	a4,a3,0x1617e # genlink+0x20>
	li	a3,6
	beq	a4,a3,0x16174 # genlink+0x16>
	ret
	xori	a5,a5,2
	sb	a5,9(a1)
	ret
	lbu	a4,8(a1)
	li	a3,33
	ld	a2,144(a0)
	addiw	a4,a4,-5
	andi	a4,a4,255
	bltu	a3,a4,0x161ce # genlink+0x70>
	auipc	a3,0x2c
	addi	a3,a3,-1814 # 0x41a7c # lua_ident+0x6e4>
	slli	a4,a4,0x2
	add	a4,a4,a3
	lw	a4,0(a4)
	add	a4,a4,a3
	jr	a4
	addi	a4,a1,16
	sd	a2,0(a4)
	sd	a1,144(a0)
	andi	a5,a5,-57
	sb	a5,9(a1)
	ret
	addi	a4,a1,48
	j	0x161a8 # genlink+0x4a>
	addi	a4,a1,32
	j	0x161a8 # genlink+0x4a>
	addi	a4,a1,72
	j	0x161a8 # genlink+0x4a>
	addi	a4,a1,120
	j	0x161a8 # genlink+0x4a>
	sd	a2,0(zero) # 0x0 # exit-0x10120>
	ebreak

reallymarkobject:
	addi	sp,sp,-16
	sd	s0,0(sp)
	sd	ra,8(sp)
	mv	s0,a1
	li	a2,34
	auipc	a3,0x2c
	addi	a3,a3,-1756 # 0x41b04 # lua_ident+0x76c>
	lbu	a4,8(s0)
	addiw	a5,a4,-4
	andi	a5,a5,255
	bltu	a2,a5,0x16224 # reallymarkobject+0x50>
	slli	a5,a5,0x2
	add	a5,a5,a3
	lw	a5,0(a5)
	add	a5,a5,a3
	jr	a5
	lhu	a5,10(s0)
	bnez	a5,0x16278 # reallymarkobject+0xa4>
	ld	a1,24(s0)
	beqz	a1,0x16214 # reallymarkobject+0x40>
	lbu	a5,9(a1)
	andi	a5,a5,24
	bnez	a5,0x162b8 # reallymarkobject+0xe4>
	lbu	a5,9(s0)
	andi	a5,a5,-57
	ori	a5,a5,32
	sb	a5,9(s0)
	ld	ra,8(sp)
	ld	s0,0(sp)
	addi	sp,sp,16
	ret
	addiw	a4,a4,-5
	andi	a4,a4,255
	li	a5,33
	bltu	a5,a4,0x162be # reallymarkobject+0xea>
	auipc	a3,0x2c
	addi	a3,a3,-1706 # 0x41b90 # lua_ident+0x7f8>
	slli	a4,a4,0x2
	add	a4,a4,a3
	lw	a5,0(a4)
	add	a5,a5,a3
	jr	a5
	ld	a1,16(s0)
	addi	a4,s0,24
	lbu	a5,9(s0)
	beq	a1,a4,0x16296 # reallymarkobject+0xc2>
	andi	a5,a5,199
	sb	a5,9(s0)
	lbu	a5,8(a1)
	andi	a5,a5,64
	beqz	a5,0x16224 # reallymarkobject+0x50>
	ld	s0,0(a1)
	lbu	a5,9(s0)
	andi	a5,a5,24
	bnez	a5,0x161e8 # reallymarkobject+0x14>
	j	0x16224 # reallymarkobject+0x50>
	addi	a4,s0,32
	ld	a5,136(a0)
	sd	a5,0(a4)
	sd	s0,136(a0)
	lbu	a5,9(s0)
	andi	a5,a5,-57
	sb	a5,9(s0)
	ld	ra,8(sp)
	ld	s0,0(sp)
	addi	sp,sp,16
	ret
	andi	a5,a5,-57
	ori	a5,a5,32
	j	0x1625e # reallymarkobject+0x8a>
	addi	a4,s0,16
	j	0x1627c # reallymarkobject+0xa8>
	addi	a4,s0,48
	j	0x1627c # reallymarkobject+0xa8>
	addi	a4,s0,120
	j	0x1627c # reallymarkobject+0xa8>
	addi	a4,s0,72
	j	0x1627c # reallymarkobject+0xa8>
	jal	ra,0x161d4 # reallymarkobject>
	j	0x16214 # reallymarkobject+0x40>
	ld	a5,136(a0)
	sd	a5,0(zero) # 0x0 # exit-0x10120>
	ebreak

clearbykeys:
	beqz	a1,0x16374 # clearbykeys+0xae>
	addi	sp,sp,-80
	sd	s2,48(sp)
	sd	s3,40(sp)
	sd	s4,32(sp)
	sd	s5,24(sp)
	sd	s6,16(sp)
	sd	s7,8(sp)
	sd	ra,72(sp)
	sd	s0,64(sp)
	sd	s1,56(sp)
	mv	s5,a1
	mv	s3,a0
	li	s2,1
	li	s7,11
	li	s4,4
	li	s6,16
	lbu	s1,11(s5)
	ld	s0,24(s5)
	sllw	a5,s2,s1
	slli	s1,a5,0x1
	add	s1,s1,a5
	slli	s1,s1,0x3
	add	s1,s1,s0
	bleu	s1,s0,0x16330 # clearbykeys+0x6a>
	lbu	a5,9(s0)
	andi	a5,a5,64
	beqz	a5,0x1632a # clearbykeys+0x64>
	ld	a1,16(s0)
	beqz	a1,0x16350 # clearbykeys+0x8a>
	lbu	a5,8(a1)
	lbu	a4,9(a1)
	andi	a5,a5,15
	andi	a4,a4,24
	beq	a5,s4,0x1634e # clearbykeys+0x88>
	beqz	a4,0x16350 # clearbykeys+0x8a>
	sb	s6,8(s0)
	sb	s7,9(s0)
	addi	s0,s0,24
	bltu	s0,s1,0x16302 # clearbykeys+0x3c>
	ld	s5,48(s5)
	bnez	s5,0x162e8 # clearbykeys+0x22>
	ld	ra,72(sp)
	ld	s0,64(sp)
	ld	s1,56(sp)
	ld	s2,48(sp)
	ld	s3,40(sp)
	ld	s4,32(sp)
	ld	s5,24(sp)
	ld	s6,16(sp)
	ld	s7,8(sp)
	addi	sp,sp,80
	ret
	bnez	a4,0x1635a # clearbykeys+0x94>
	lbu	a5,8(s0)
	andi	a5,a5,15
	bnez	a5,0x1632a # clearbykeys+0x64>
	j	0x16326 # clearbykeys+0x60>
	mv	a0,s3
	jal	ra,0x161d4 # reallymarkobject>
	lbu	a5,8(s0)
	andi	a5,a5,15
	bnez	a5,0x1632a # clearbykeys+0x64>
	lbu	a5,9(s0)
	andi	a5,a5,64
	beqz	a5,0x1632a # clearbykeys+0x64>
	j	0x16326 # clearbykeys+0x60>
	ret

clearbyvalues:
	beq	a1,a2,0x16488 # clearbyvalues+0x112>
	addi	sp,sp,-96
	sd	s1,72(sp)
	sd	s2,64(sp)
	sd	s3,56(sp)
	sd	s4,48(sp)
	sd	s5,40(sp)
	sd	s6,32(sp)
	sd	s8,16(sp)
	sd	ra,88(sp)
	sd	s0,80(sp)
	sd	s7,24(sp)
	sd	s9,8(sp)
	mv	s5,a1
	mv	s3,a2
	mv	s2,a0
	li	s4,1
	li	s6,4
	li	s8,16
	li	s1,11
	lbu	a5,11(s5)
	ld	s7,24(s5)
	mv	a0,s5
	sllw	a4,s4,a5
	slli	a5,a4,0x1
	add	a5,a5,a4
	slli	a5,a5,0x3
	add	s7,s7,a5
	jal	ra,0x1c350 # luaH_realasize>
	sext.w	a0,a0
	beqz	a0,0x16408 # clearbyvalues+0x92>
	slli	a0,a0,0x20
	srli	s9,a0,0x1c
	li	s0,0
	j	0x163d6 # clearbyvalues+0x60>
	beqz	a3,0x163d0 # clearbyvalues+0x5a>
	sb	s8,8(a5)
	addi	s0,s0,16
	beq	s0,s9,0x16408 # clearbyvalues+0x92>
	ld	a5,16(s5)
	add	a5,a5,s0
	lbu	a4,8(a5)
	andi	a4,a4,64
	beqz	a4,0x163d0 # clearbyvalues+0x5a>
	ld	a1,0(a5)
	beqz	a1,0x163d0 # clearbyvalues+0x5a>
	lbu	a4,8(a1)
	lbu	a3,9(a1)
	andi	a4,a4,15
	andi	a3,a3,24
	bne	a4,s6,0x163ca # clearbyvalues+0x54>
	beqz	a3,0x163d0 # clearbyvalues+0x5a>
	mv	a0,s2
	addi	s0,s0,16
	jal	ra,0x161d4 # reallymarkobject>
	bne	s0,s9,0x163d6 # clearbyvalues+0x60>
	ld	s0,24(s5)
	bltu	s0,s7,0x16440 # clearbyvalues+0xca>
	j	0x16454 # clearbyvalues+0xde>
	ld	a1,0(s0)
	beqz	a1,0x1644a # clearbyvalues+0xd4>
	lbu	a4,8(a1)
	lbu	a3,9(a1)
	andi	a4,a4,15
	andi	a3,a3,24
	beq	a4,s6,0x16476 # clearbyvalues+0x100>
	beqz	a3,0x1644a # clearbyvalues+0xd4>
	sb	s8,8(s0)
	lbu	a5,9(s0)
	andi	a5,a5,64
	beqz	a5,0x1643a # clearbyvalues+0xc4>
	sb	s1,9(s0)
	addi	s0,s0,24
	bleu	s7,s0,0x16454 # clearbyvalues+0xde>
	lbu	a5,8(s0)
	andi	a4,a5,64
	bnez	a4,0x16412 # clearbyvalues+0x9c>
	andi	a5,a5,15
	beqz	a5,0x1642c # clearbyvalues+0xb6>
	addi	s0,s0,24
	bltu	s0,s7,0x16440 # clearbyvalues+0xca>
	ld	s5,48(s5)
	bne	s3,s5,0x163a0 # clearbyvalues+0x2a>
	ld	ra,88(sp)
	ld	s0,80(sp)
	ld	s1,72(sp)
	ld	s2,64(sp)
	ld	s3,56(sp)
	ld	s4,48(sp)
	ld	s5,40(sp)
	ld	s6,32(sp)
	ld	s7,24(sp)
	ld	s8,16(sp)
	ld	s9,8(sp)
	addi	sp,sp,96
	ret
	beqz	a3,0x1644a # clearbyvalues+0xd4>
	mv	a0,s2
	jal	ra,0x161d4 # reallymarkobject>
	lbu	a5,8(s0)
	andi	a5,a5,15
	bnez	a5,0x1644e # clearbyvalues+0xd8>
	j	0x1642c # clearbyvalues+0xb6>
	ret

traverseephemeron:
	addi	sp,sp,-112
	sd	s6,48(sp)
	mv	s6,a0
	mv	a0,a1
	sd	s1,88(sp)
	sd	s2,80(sp)
	sd	s3,72(sp)
	sd	s4,64(sp)
	sd	s5,56(sp)
	mv	s3,a1
	sd	ra,104(sp)
	sd	s0,96(sp)
	sd	s7,40(sp)
	sd	s8,32(sp)
	sd	s9,24(sp)
	sd	s10,16(sp)
	sd	s11,8(sp)
	mv	s4,a2
	jal	ra,0x1c350 # luaH_realasize>
	lbu	a5,11(s3)
	li	s1,1
	sext.w	s2,a0
	sllw	s5,s1,a5
	mv	s1,s5
	beqz	s2,0x16626 # traverseephemeron+0x19c>
	slli	s2,s2,0x20
	srli	s2,s2,0x1c
	li	s0,0
	li	s7,0
	ld	a5,16(s3)
	add	a5,a5,s0
	lbu	a4,8(a5)
	addi	s0,s0,16
	andi	a4,a4,64
	beqz	a4,0x164ec # traverseephemeron+0x62>
	ld	a1,0(a5)
	lbu	a5,9(a1)
	andi	a5,a5,24
	bnez	a5,0x165b2 # traverseephemeron+0x128>
	bne	s0,s2,0x164d0 # traverseephemeron+0x46>
	beqz	s5,0x1662c # traverseephemeron+0x1a2>
	addiw	s1,s1,-1
	li	s2,0
	li	s11,0
	li	s9,0
	li	s8,4
	li	s10,11
	li	s5,-1
	j	0x16512 # traverseephemeron+0x88>
	beqz	a5,0x1650a # traverseephemeron+0x80>
	sb	s10,9(s0)
	addiw	s1,s1,-1
	addi	s2,s2,24
	beq	s1,s5,0x16574 # traverseephemeron+0xea>
	ld	a5,24(s3)
	add	s0,a5,s2
	beqz	s4,0x1652e # traverseephemeron+0xa4>
	slli	a4,s1,0x20
	srli	a4,a4,0x20
	slli	s0,a4,0x1
	add	s0,s0,a4
	slli	s0,s0,0x3
	add	s0,s0,a5
	lbu	a4,8(s0)
	lbu	a5,9(s0)
	andi	a3,a4,15
	andi	a5,a5,64
	beqz	a3,0x16504 # traverseephemeron+0x7a>
	beqz	a5,0x165d0 # traverseephemeron+0x146>
	ld	a1,16(s0)
	beqz	a1,0x165d0 # traverseephemeron+0x146>
	lbu	a5,8(a1)
	lbu	a3,9(a1)
	andi	a5,a5,15
	andi	a3,a3,24
	beq	a5,s8,0x165c0 # traverseephemeron+0x136>
	andi	a5,a4,64
	beqz	a3,0x165d4 # traverseephemeron+0x14a>
	li	s9,1
	beqz	a5,0x1650a # traverseephemeron+0x80>
	ld	a5,0(s0)
	lbu	a5,9(a5)
	andi	a5,a5,24
	beqz	a5,0x1650a # traverseephemeron+0x80>
	addiw	s1,s1,-1
	li	s11,1
	addi	s2,s2,24
	bne	s1,s5,0x16512 # traverseephemeron+0x88>
	lbu	a5,101(s6)
	bnez	a5,0x165ea # traverseephemeron+0x160>
	ld	a5,144(s6)
	sd	a5,48(s3)
	sd	s3,144(s6)
	lbu	a5,9(s3)
	andi	a5,a5,-57
	sb	a5,9(s3)
	ld	ra,104(sp)
	ld	s0,96(sp)
	ld	s1,88(sp)
	ld	s2,80(sp)
	ld	s3,72(sp)
	ld	s4,64(sp)
	ld	s5,56(sp)
	ld	s6,48(sp)
	ld	s8,32(sp)
	ld	s9,24(sp)
	ld	s10,16(sp)
	ld	s11,8(sp)
	mv	a0,s7
	ld	s7,40(sp)
	addi	sp,sp,112
	ret
	mv	a0,s6
	jal	ra,0x161d4 # reallymarkobject>
	li	s7,1
	bne	s0,s2,0x164d0 # traverseephemeron+0x46>
	j	0x164f0 # traverseephemeron+0x66>
	andi	a5,a4,64
	beqz	a3,0x165d4 # traverseephemeron+0x14a>
	mv	a0,s6
	jal	ra,0x161d4 # reallymarkobject>
	lbu	a4,8(s0)
	andi	a5,a4,64
	beqz	a5,0x1650a # traverseephemeron+0x80>
	ld	a1,0(s0)
	lbu	a5,9(a1)
	andi	a5,a5,24
	beqz	a5,0x1650a # traverseephemeron+0x80>
	mv	a0,s6
	jal	ra,0x161d4 # reallymarkobject>
	li	s7,1
	j	0x1650a # traverseephemeron+0x80>
	beqz	s11,0x16608 # traverseephemeron+0x17e>
	ld	a5,160(s6)
	sd	a5,48(s3)
	sd	s3,160(s6)
	lbu	a5,9(s3)
	andi	a5,a5,-57
	sb	a5,9(s3)
	j	0x16592 # traverseephemeron+0x108>
	beqz	s9,0x16632 # traverseephemeron+0x1a8>
	ld	a5,168(s6)
	sd	a5,48(s3)
	sd	s3,168(s6)
	lbu	a5,9(s3)
	andi	a5,a5,-57
	sb	a5,9(s3)
	j	0x16592 # traverseephemeron+0x108>
	li	s7,0
	bnez	s5,0x164f4 # traverseephemeron+0x6a>
	lbu	a5,101(s6)
	beqz	a5,0x1657a # traverseephemeron+0xf0>
	mv	a1,s3
	mv	a0,s6
	jal	ra,0x1615e # genlink>
	j	0x16592 # traverseephemeron+0x108>

propagatemark:
	addi	sp,sp,-64
	sd	s0,48(sp)
	ld	s0,136(a0)
	sd	ra,56(sp)
	sd	s1,40(sp)
	sd	s2,32(sp)
	sd	s3,24(sp)
	sd	s4,16(sp)
	sd	s5,8(sp)
	sd	s6,0(sp)
	lbu	a4,9(s0)
	lbu	a5,8(s0)
	li	a3,33
	ori	a2,a4,32
	addiw	a5,a5,-5
	sb	a2,9(s0)
	andi	a5,a5,255
	bltu	a3,a5,0x16682 # propagatemark+0x46>
	auipc	a3,0x2b
	addi	a3,a3,1450 # 0x41c18 # lua_ident+0x880>
	slli	a5,a5,0x2
	add	a5,a5,a3
	lw	a5,0(a5)
	mv	s1,a0
	add	a5,a5,a3
	jr	a5
	ld	a5,0(zero) # 0x0 # exit-0x10120>
	ebreak
	ld	a5,48(s0)
	ld	a0,40(s0)
	sd	a5,136(s1)
	beqz	a0,0x166a4 # propagatemark+0x68>
	lbu	a5,10(a0)
	andi	a5,a5,8
	beqz	a5,0x16afa # propagatemark+0x4be>
	lbu	a5,9(a0)
	andi	a5,a5,24
	bnez	a5,0x16b76 # propagatemark+0x53a>
	lbu	a4,11(s0)
	li	a5,1
	ld	s4,24(s0)
	sllw	a4,a5,a4
	slli	a5,a4,0x1
	add	a5,a5,a4
	slli	a5,a5,0x3
	add	s4,s4,a5
	mv	a0,s0
	jal	ra,0x1c350 # luaH_realasize>
	sext.w	a0,a0
	beqz	a0,0x169e0 # propagatemark+0x3a4>
	slli	a0,a0,0x20
	srli	s3,a0,0x1c
	li	s2,0
	j	0x166d8 # propagatemark+0x9c>
	addi	s2,s2,16
	beq	s3,s2,0x169e0 # propagatemark+0x3a4>
	ld	a5,16(s0)
	add	a5,a5,s2
	lbu	a4,8(a5)
	andi	a4,a4,64
	beqz	a4,0x166d2 # propagatemark+0x96>
	ld	a1,0(a5)
	lbu	a5,9(a1)
	andi	a5,a5,24
	beqz	a5,0x166d2 # propagatemark+0x96>
	mv	a0,s1
	jal	ra,0x161d4 # reallymarkobject>
	j	0x166d2 # propagatemark+0x96>
	ld	a5,16(s0)
	ld	a1,24(s0)
	sd	a5,136(a0)
	beqz	a1,0x1670a # propagatemark+0xce>
	lbu	a5,9(a1)
	andi	a5,a5,24
	bnez	a5,0x16b70 # propagatemark+0x534>
	lbu	a5,10(s0)
	addi	s3,s0,32
	li	s2,0
	bnez	a5,0x16724 # propagatemark+0xe8>
	j	0x16744 # propagatemark+0x108>
	lbu	a5,10(s0)
	addiw	s2,s2,1
	addi	s3,s3,8
	ble	a5,s2,0x16744 # propagatemark+0x108>
	ld	a1,0(s3)
	beqz	a1,0x16718 # propagatemark+0xdc>
	lbu	a5,9(a1)
	andi	a5,a5,24
	beqz	a5,0x16718 # propagatemark+0xdc>
	mv	a0,s1
	jal	ra,0x161d4 # reallymarkobject>
	lbu	a5,10(s0)
	addiw	s2,s2,1
	addi	s3,s3,8
	blt	s2,a5,0x16724 # propagatemark+0xe8>
	addi	a0,a5,1
	ld	ra,56(sp)
	ld	s0,48(sp)
	ld	s1,40(sp)
	ld	s2,32(sp)
	ld	s3,24(sp)
	ld	s4,16(sp)
	ld	s5,8(sp)
	ld	s6,0(sp)
	addi	sp,sp,64
	ret
	ld	a5,32(s0)
	ld	a1,24(s0)
	sd	a5,136(a0)
	beqz	a1,0x1676e # propagatemark+0x132>
	lbu	a5,9(a1)
	andi	a5,a5,24
	bnez	a5,0x16b6a # propagatemark+0x52e>
	lhu	a5,10(s0)
	addi	s2,s0,40
	li	s3,0
	mv	a4,a5
	bnez	a5,0x1678a # propagatemark+0x14e>
	j	0x167b6 # propagatemark+0x17a>
	addiw	s3,s3,1
	sext.w	a5,a4
	addi	s2,s2,16
	ble	a5,s3,0x167b6 # propagatemark+0x17a>
	lbu	a5,8(s2)
	andi	a5,a5,64
	beqz	a5,0x1677e # propagatemark+0x142>
	ld	a1,0(s2)
	lbu	a5,9(a1)
	andi	a5,a5,24
	beqz	a5,0x1677e # propagatemark+0x142>
	mv	a0,s1
	jal	ra,0x161d4 # reallymarkobject>
	lhu	a4,10(s0)
	addiw	s3,s3,1
	addi	s2,s2,16
	sext.w	a5,a4
	blt	s3,a5,0x1678a # propagatemark+0x14e>
	mv	a0,s1
	mv	a1,s0
	jal	ra,0x1615e # genlink>
	lhu	a5,10(s0)
	addiw	a0,a5,1
	j	0x16748 # propagatemark+0x10c>
	ld	a3,72(s0)
	ld	s2,48(s0)
	andi	a5,a4,6
	sd	a3,136(a0)
	bnez	a5,0x1685c # propagatemark+0x220>
	lbu	a5,101(a0)
	beqz	a5,0x1685c # propagatemark+0x220>
	beqz	s2,0x16b96 # propagatemark+0x55a>
	ld	a4,16(s0)
	bltu	s2,a4,0x167ee # propagatemark+0x1b2>
	j	0x16812 # propagatemark+0x1d6>
	addi	s2,s2,16
	bleu	a4,s2,0x16812 # propagatemark+0x1d6>
	lbu	a5,8(s2)
	andi	a5,a5,64
	beqz	a5,0x167e8 # propagatemark+0x1ac>
	ld	a1,0(s2)
	lbu	a5,9(a1)
	andi	a5,a5,24
	beqz	a5,0x167e8 # propagatemark+0x1ac>
	mv	a0,s1
	jal	ra,0x161d4 # reallymarkobject>
	ld	a4,16(s0)
	addi	s2,s2,16
	bltu	s2,a4,0x167ee # propagatemark+0x1b2>
	ld	s3,56(s0)
	bnez	s3,0x16824 # propagatemark+0x1e8>
	j	0x1683c # propagatemark+0x200>
	ld	s3,24(s3)
	beqz	s3,0x1683c # propagatemark+0x200>
	lbu	a5,9(s3)
	andi	a5,a5,24
	beqz	a5,0x1681c # propagatemark+0x1e0>
	mv	a1,s3
	mv	a0,s1
	jal	ra,0x161d4 # reallymarkobject>
	ld	s3,24(s3)
	bnez	s3,0x16824 # propagatemark+0x1e8>
	lbu	a4,101(s1)
	li	a5,2
	beq	a4,a5,0x16a82 # propagatemark+0x446>
	lbu	a5,107(s1)
	beqz	a5,0x16a70 # propagatemark+0x434>
	ld	a5,40(s0)
	ld	a0,48(s0)
	sub	a5,a5,a0
	srai	a5,a5,0x4
	addiw	a0,a5,1
	j	0x16748 # propagatemark+0x10c>
	ld	a5,144(s1)
	andi	a4,a4,-57
	sd	a5,72(s0)
	sd	s0,144(s1)
	sb	a4,9(s0)
	j	0x167dc # propagatemark+0x1a0>
	ld	a5,120(s0)
	ld	a1,112(s0)
	sd	a5,136(a0)
	beqz	a1,0x1687e # propagatemark+0x242>
	lbu	a5,9(a1)
	andi	a5,a5,24
	bnez	a5,0x16b64 # propagatemark+0x528>
	lw	a3,20(s0)
	li	s2,0
	sext.w	a5,a3
	bgtz	a5,0x1689a # propagatemark+0x25e>
	j	0x168cc # propagatemark+0x290>
	addi	s2,s2,1
	sext.w	a5,a3
	sext.w	a4,s2
	ble	a5,a4,0x168cc # propagatemark+0x290>
	ld	a5,56(s0)
	slli	a4,s2,0x4
	add	a5,a5,a4
	lbu	a4,8(a5)
	andi	a4,a4,64
	beqz	a4,0x1688c # propagatemark+0x250>
	ld	a1,0(a5)
	lbu	a5,9(a1)
	andi	a5,a5,24
	beqz	a5,0x1688c # propagatemark+0x250>
	mv	a0,s1
	jal	ra,0x161d4 # reallymarkobject>
	lw	a3,20(s0)
	addi	s2,s2,1
	sext.w	a4,s2
	sext.w	a5,a3
	blt	a4,a5,0x1689a # propagatemark+0x25e>
	lw	a3,16(s0)
	li	s2,0
	sext.w	a5,a3
	bgtz	a5,0x168e8 # propagatemark+0x2ac>
	j	0x16912 # propagatemark+0x2d6>
	addi	s2,s2,1
	sext.w	a5,a3
	sext.w	a4,s2
	ble	a5,a4,0x16912 # propagatemark+0x2d6>
	ld	a5,80(s0)
	slli	a4,s2,0x4
	add	a5,a5,a4
	ld	a1,0(a5)
	beqz	a1,0x168da # propagatemark+0x29e>
	lbu	a5,9(a1)
	andi	a5,a5,24
	beqz	a5,0x168da # propagatemark+0x29e>
	mv	a0,s1
	jal	ra,0x161d4 # reallymarkobject>
	lw	a3,16(s0)
	addi	s2,s2,1
	sext.w	a4,s2
	sext.w	a5,a3
	blt	a4,a5,0x168e8 # propagatemark+0x2ac>
	lw	a5,32(s0)
	li	s2,0
	sext.w	a4,a5
	bgtz	a4,0x1692e # propagatemark+0x2f2>
	j	0x16958 # propagatemark+0x31c>
	addi	s2,s2,1
	sext.w	a4,a5
	sext.w	a3,s2
	ble	a4,a3,0x16958 # propagatemark+0x31c>
	ld	a4,72(s0)
	slli	a3,s2,0x3
	add	a4,a4,a3
	ld	a1,0(a4)
	beqz	a1,0x16920 # propagatemark+0x2e4>
	lbu	a4,9(a1)
	andi	a4,a4,24
	beqz	a4,0x16920 # propagatemark+0x2e4>
	mv	a0,s1
	jal	ra,0x161d4 # reallymarkobject>
	lw	a5,32(s0)
	addi	s2,s2,1
	sext.w	a3,s2
	sext.w	a4,a5
	blt	a3,a4,0x1692e # propagatemark+0x2f2>
	lw	a2,36(s0)
	li	s2,0
	bgtz	a2,0x1696c # propagatemark+0x330>
	j	0x16994 # propagatemark+0x358>
	addi	s2,s2,1
	sext.w	a4,s2
	ble	a2,a4,0x16992 # propagatemark+0x356>
	ld	a4,104(s0)
	slli	a3,s2,0x4
	add	a4,a4,a3
	ld	a1,0(a4)
	beqz	a1,0x16962 # propagatemark+0x326>
	lbu	a4,9(a1)
	andi	a4,a4,24
	beqz	a4,0x16962 # propagatemark+0x326>
	mv	a0,s1
	jal	ra,0x161d4 # reallymarkobject>
	lw	a2,36(s0)
	addi	s2,s2,1
	sext.w	a4,s2
	blt	a4,a2,0x1696c # propagatemark+0x330>
	lw	a5,32(s0)
	lw	a0,20(s0)
	lw	a4,16(s0)
	addiw	a0,a0,1
	addw	a0,a0,a4
	addw	a5,a5,a0
	addw	a0,a5,a2
	j	0x16748 # propagatemark+0x10c>
	ld	a5,16(s0)
	addi	s2,s0,32
	li	s3,0
	sd	a5,136(a0)
	lbu	a5,10(s0)
	bnez	a5,0x169c2 # propagatemark+0x386>
	j	0x16744 # propagatemark+0x108>
	lbu	a5,10(s0)
	addiw	s3,s3,1
	addi	s2,s2,16
	ble	a5,s3,0x16744 # propagatemark+0x108>
	lbu	a5,8(s2)
	andi	a5,a5,64
	beqz	a5,0x169b6 # propagatemark+0x37a>
	ld	a1,0(s2)
	lbu	a5,9(a1)
	andi	a5,a5,24
	beqz	a5,0x169b6 # propagatemark+0x37a>
	mv	a0,s1
	jal	ra,0x161d4 # reallymarkobject>
	j	0x169b6 # propagatemark+0x37a>
	ld	s2,24(s0)
	li	s3,11
	bltu	s2,s4,0x169f8 # propagatemark+0x3bc>
	j	0x16a32 # propagatemark+0x3f6>
	beqz	a5,0x169f2 # propagatemark+0x3b6>
	sb	s3,9(s2)
	addi	s2,s2,24
	bleu	s4,s2,0x16a32 # propagatemark+0x3f6>
	lbu	a4,8(s2)
	lbu	a5,9(s2)
	andi	a3,a4,15
	andi	a5,a5,64
	beqz	a3,0x169ec # propagatemark+0x3b0>
	beqz	a5,0x16a18 # propagatemark+0x3dc>
	ld	a1,16(s2)
	lbu	a5,9(a1)
	andi	a5,a5,24
	bnez	a5,0x16a64 # propagatemark+0x428>
	andi	a4,a4,64
	beqz	a4,0x169f2 # propagatemark+0x3b6>
	ld	a1,0(s2)
	lbu	a5,9(a1)
	andi	a5,a5,24
	beqz	a5,0x169f2 # propagatemark+0x3b6>
	mv	a0,s1
	jal	ra,0x161d4 # reallymarkobject>
	j	0x169f2 # propagatemark+0x3b6>
	lbu	a5,9(s0)
	li	a3,5
	andi	a4,a5,7
	beq	a4,a3,0x16aaa # propagatemark+0x46e>
	li	a3,6
	beq	a4,a3,0x16a78 # propagatemark+0x43c>
	ld	a4,32(s0)
	lw	a5,12(s0)
	li	a0,0
	beqz	a4,0x16a58 # propagatemark+0x41c>
	lbu	a4,11(s0)
	li	a0,2
	sllw	a0,a0,a4
	addiw	a5,a5,1
	addw	a5,a5,a0
	slli	a0,a5,0x20
	srli	a0,a0,0x20
	j	0x16748 # propagatemark+0x10c>
	mv	a0,s1
	jal	ra,0x161d4 # reallymarkobject>
	lbu	a4,8(s2)
	j	0x16a18 # propagatemark+0x3dc>
	mv	a0,s0
	jal	ra,0x1448a # luaD_shrinkstack>
	j	0x1684e # propagatemark+0x212>
	xori	a5,a5,2
	sb	a5,9(s0)
	j	0x16a46 # propagatemark+0x40a>
	ld	a5,40(s0)
	addi	a4,a5,80
	bleu	a4,s2,0x16a96 # propagatemark+0x45a>
	sb	zero,8(s2)
	addi	s2,s2,16
	bltu	s2,a4,0x16a8c # propagatemark+0x450>
	ld	a4,80(s0)
	bne	s0,a4,0x16850 # propagatemark+0x214>
	ld	a4,56(s0)
	beqz	a4,0x16850 # propagatemark+0x214>
	ld	a4,248(s1)
	sd	a4,80(s0)
	sd	s0,248(s1)
	j	0x16850 # propagatemark+0x214>
	lbu	a4,8(s0)
	li	a3,33
	ld	a2,144(s1)
	addiw	a4,a4,-5
	andi	a4,a4,255
	bltu	a3,a4,0x16c70 # propagatemark+0x634>
	auipc	a3,0x2b
	addi	a3,a3,482 # 0x41ca0 # lua_ident+0x908>
	slli	a4,a4,0x2
	add	a4,a4,a3
	lw	a4,0(a4)
	add	a4,a4,a3
	jr	a4
	addi	a4,s0,16
	sd	a2,0(a4)
	sd	s0,144(s1)
	andi	a5,a5,-57
	sb	a5,9(s0)
	j	0x16a46 # propagatemark+0x40a>
	addi	a4,s0,48
	j	0x16ad4 # propagatemark+0x498>
	addi	a4,s0,120
	j	0x16ad4 # propagatemark+0x498>
	addi	a4,s0,72
	j	0x16ad4 # propagatemark+0x498>
	addi	a4,s0,32
	j	0x16ad4 # propagatemark+0x498>
	ld	a2,304(s1)
	li	a1,3
	jal	ra,0x1d190 # luaT_gettm>
	ld	a1,40(s0)
	mv	s2,a0
	bnez	a1,0x16b54 # propagatemark+0x518>
	beqz	s2,0x16b7e # propagatemark+0x542>
	lbu	a5,8(s2)
	li	a4,4
	andi	a5,a5,15
	bne	a5,a4,0x166a4 # propagatemark+0x68>
	ld	s2,0(s2)
	li	a1,107
	addi	s2,s2,24
	mv	a0,s2
	jal	ra,0x3690a # strchr>
	mv	a5,a0
	li	a1,118
	mv	a0,s2
	mv	s2,a5
	jal	ra,0x3690a # strchr>
	beqz	s2,0x16b9a # propagatemark+0x55e>
	beqz	a0,0x16c42 # propagatemark+0x606>
	ld	a5,168(s1)
	sd	a5,48(s0)
	sd	s0,168(s1)
	lbu	a5,9(s0)
	andi	a5,a5,-57
	sb	a5,9(s0)
	j	0x16a46 # propagatemark+0x40a>
	lbu	a5,9(a1)
	andi	a5,a5,24
	beqz	a5,0x16b0a # propagatemark+0x4ce>
	mv	a0,s1
	jal	ra,0x161d4 # reallymarkobject>
	j	0x16b0a # propagatemark+0x4ce>
	jal	ra,0x161d4 # reallymarkobject>
	j	0x1687e # propagatemark+0x242>
	jal	ra,0x161d4 # reallymarkobject>
	j	0x1676e # propagatemark+0x132>
	jal	ra,0x161d4 # reallymarkobject>
	j	0x1670a # propagatemark+0xce>
	mv	a1,a0
	mv	a0,s1
	jal	ra,0x161d4 # reallymarkobject>
	lbu	a4,11(s0)
	li	a5,1
	li	s4,24
	sllw	a5,a5,a4
	mul	a5,a5,s4
	ld	s4,24(s0)
	add	s4,s4,a5
	j	0x166bc # propagatemark+0x80>
	li	a0,1
	j	0x16748 # propagatemark+0x10c>
	lbu	s4,11(s0)
	li	a5,1
	ld	s2,24(s0)
	sllw	a5,a5,s4
	slli	s4,a5,0x1
	add	s4,s4,a5
	slli	s4,s4,0x3
	add	s4,s4,s2
	beqz	a0,0x166bc # propagatemark+0x80>
	lw	s3,12(s0)
	snez	s3,s3
	bleu	s4,s2,0x16c24 # propagatemark+0x5e8>
	li	s6,4
	li	s5,11
	j	0x16bd4 # propagatemark+0x598>
	beqz	a4,0x16bce # propagatemark+0x592>
	sb	s5,9(s2)
	addi	s2,s2,24
	bleu	s4,s2,0x16c24 # propagatemark+0x5e8>
	lbu	a5,8(s2)
	lbu	a4,9(s2)
	andi	a5,a5,15
	andi	a4,a4,64
	beqz	a5,0x16bc8 # propagatemark+0x58c>
	beqz	a4,0x16bf2 # propagatemark+0x5b6>
	ld	a1,16(s2)
	lbu	a5,9(a1)
	andi	a5,a5,24
	bnez	a5,0x16c1c # propagatemark+0x5e0>
	bnez	s3,0x16bce # propagatemark+0x592>
	lbu	a5,8(s2)
	andi	a5,a5,64
	beqz	a5,0x16bce # propagatemark+0x592>
	ld	a1,0(s2)
	beqz	a1,0x16bce # propagatemark+0x592>
	lbu	a5,8(a1)
	lbu	a4,9(a1)
	andi	a5,a5,15
	andi	a4,a4,24
	beq	a5,s6,0x16c4e # propagatemark+0x612>
	snez	s3,a4
	j	0x16bce # propagatemark+0x592>
	mv	a0,s1
	jal	ra,0x161d4 # reallymarkobject>
	j	0x16bf2 # propagatemark+0x5b6>
	lbu	a4,101(s1)
	li	a5,2
	beq	a4,a5,0x16c58 # propagatemark+0x61c>
	ld	a5,144(s1)
	sd	a5,48(s0)
	sd	s0,144(s1)
	lbu	a5,9(s0)
	andi	a5,a5,-57
	sb	a5,9(s0)
	j	0x16a46 # propagatemark+0x40a>
	li	a2,0
	mv	a1,s0
	mv	a0,s1
	jal	ra,0x1648a # traverseephemeron>
	j	0x16a46 # propagatemark+0x40a>
	beqz	a4,0x16bce # propagatemark+0x592>
	mv	a0,s1
	jal	ra,0x161d4 # reallymarkobject>
	j	0x16bce # propagatemark+0x592>
	beqz	s3,0x16c2e # propagatemark+0x5f2>
	ld	a5,152(s1)
	sd	a5,48(s0)
	sd	s0,152(s1)
	lbu	a5,9(s0)
	andi	a5,a5,-57
	sb	a5,9(s0)
	j	0x16a46 # propagatemark+0x40a>
	sd	a2,0(zero) # 0x0 # exit-0x10120>
	ebreak

convergeephemerons:
	addi	sp,sp,-48
	sd	s0,32(sp)
	sd	s2,16(sp)
	sd	ra,40(sp)
	sd	s1,24(sp)
	sd	s3,8(sp)
	mv	s0,a0
	li	s2,0
	ld	s1,160(s0)
	sd	zero,160(s0)
	beqz	s1,0x16cb4 # convergeephemerons+0x3e>
	li	s3,0
	lbu	a5,9(s1)
	mv	a1,s1
	mv	a2,s2
	ori	a5,a5,32
	ld	s1,48(s1)
	mv	a0,s0
	sb	a5,9(a1)
	jal	ra,0x1648a # traverseephemeron>
	bnez	a0,0x16cc8 # convergeephemerons+0x52>
	bnez	s1,0x16c90 # convergeephemerons+0x1a>
	xori	s2,s2,1
	bnez	s3,0x16c86 # convergeephemerons+0x10>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	addi	sp,sp,48
	ret
	mv	a0,s0
	jal	ra,0x1663c # propagatemark>
	ld	a5,136(s0)
	bnez	a5,0x16cc2 # convergeephemerons+0x4c>
	li	s3,1
	bnez	s1,0x16c90 # convergeephemerons+0x1a>
	j	0x16cac # convergeephemerons+0x36>

atomic:
	addi	sp,sp,-64
	sd	s1,40(sp)
	ld	s1,24(a0)
	sd	s4,16(sp)
	sd	ra,56(sp)
	sd	s0,48(sp)
	sd	s2,32(sp)
	sd	s3,24(sp)
	sd	s5,8(sp)
	li	a5,2
	ld	s4,144(s1)
	sb	a5,101(s1)
	sd	zero,144(s1)
	lbu	a5,9(a0)
	andi	a5,a5,24
	bnez	a5,0x16e90 # atomic+0x1be>
	lbu	a5,72(s1)
	andi	a5,a5,64
	beqz	a5,0x16d12 # atomic+0x40>
	ld	a1,64(s1)
	lbu	a5,9(a1)
	andi	a5,a5,24
	bnez	a5,0x16eaa # atomic+0x1d8>
	addi	s0,s1,480
	addi	s2,s1,552
	ld	a1,0(s0)
	addi	s0,s0,8
	beqz	a1,0x16d2a # atomic+0x58>
	lbu	a5,9(a1)
	andi	a5,a5,24
	bnez	a5,0x16e46 # atomic+0x174>
	bne	s2,s0,0x16d1a # atomic+0x48>
	ld	a5,136(s1)
	li	s3,0
	beqz	a5,0x16d40 # atomic+0x6e>
	mv	a0,s1
	jal	ra,0x1663c # propagatemark>
	ld	a5,136(s1)
	add	s3,s3,a0
	bnez	a5,0x16d34 # atomic+0x62>
	ld	a5,248(s1)
	addi	s5,s1,248
	li	s2,0
	beqz	a5,0x16d7c # atomic+0xaa>
	lbu	a4,9(a5)
	ld	a3,80(a5)
	ld	s0,56(a5)
	andi	a4,a4,24
	addiw	s2,s2,1
	bnez	a4,0x16e52 # atomic+0x180>
	beqz	s0,0x16e9a # atomic+0x1c8>
	addi	s5,a5,80
	mv	a5,a3
	bnez	a5,0x16d4a # atomic+0x78>
	ld	a5,136(s1)
	add	s3,s3,s2
	beqz	a5,0x16d7c # atomic+0xaa>
	li	s0,0
	mv	a0,s1
	jal	ra,0x1663c # propagatemark>
	ld	a5,136(s1)
	add	s0,s0,a0
	bnez	a5,0x16d6e # atomic+0x9c>
	add	s3,s3,s0
	sd	s4,136(s1)
	beqz	s4,0x16d94 # atomic+0xc2>
	li	s0,0
	mv	a0,s1
	jal	ra,0x1663c # propagatemark>
	ld	a5,136(s1)
	add	s0,s0,a0
	bnez	a5,0x16d86 # atomic+0xb4>
	add	s3,s3,s0
	mv	a0,s1
	jal	ra,0x16c76 # convergeephemerons>
	ld	a1,152(s1)
	li	a2,0
	mv	a0,s1
	jal	ra,0x16376 # clearbyvalues>
	ld	a1,168(s1)
	li	a2,0
	mv	a0,s1
	jal	ra,0x16376 # clearbyvalues>
	li	a1,0
	mv	a0,s1
	ld	s5,152(s1)
	ld	s4,168(s1)
	jal	ra,0x15a60 # separatetobefnz>
	ld	s0,176(s1)
	beqz	s0,0x16de2 # atomic+0x110>
	li	s2,0
	j	0x16dca # atomic+0xf8>
	ld	s0,0(s0)
	beqz	s0,0x16de0 # atomic+0x10e>
	lbu	a5,9(s0)
	addi	s2,s2,1
	andi	a5,a5,24
	beqz	a5,0x16dc6 # atomic+0xf4>
	mv	a1,s0
	mv	a0,s1
	jal	ra,0x161d4 # reallymarkobject>
	ld	s0,0(s0)
	bnez	s0,0x16dca # atomic+0xf8>
	add	s3,s3,s2
	ld	a5,136(s1)
	beqz	a5,0x16df6 # atomic+0x124>
	li	s0,0
	mv	a0,s1
	jal	ra,0x1663c # propagatemark>
	ld	a5,136(s1)
	add	s0,s0,a0
	bnez	a5,0x16de8 # atomic+0x116>
	add	s3,s3,s0
	mv	a0,s1
	jal	ra,0x16c76 # convergeephemerons>
	ld	a1,160(s1)
	mv	a0,s1
	jal	ra,0x162c6 # clearbykeys>
	ld	a1,168(s1)
	mv	a0,s1
	jal	ra,0x162c6 # clearbykeys>
	ld	a1,152(s1)
	mv	a2,s5
	mv	a0,s1
	jal	ra,0x16376 # clearbyvalues>
	ld	a1,168(s1)
	mv	a2,s4
	mv	a0,s1
	jal	ra,0x16376 # clearbyvalues>
	mv	a0,s1
	jal	ra,0x1beda # luaS_clearcache>
	lbu	a5,100(s1)
	mv	a0,s3
	xori	a5,a5,24
	sb	a5,100(s1)
	ld	ra,56(sp)
	ld	s0,48(sp)
	ld	s1,40(sp)
	ld	s2,32(sp)
	ld	s3,24(sp)
	ld	s4,16(sp)
	ld	s5,8(sp)
	addi	sp,sp,64
	ret
	mv	a0,s1
	jal	ra,0x161d4 # reallymarkobject>
	bne	s2,s0,0x16d1a # atomic+0x48>
	j	0x16d2e # atomic+0x5c>
	sd	a3,0(s5)
	sd	a5,80(a5)
	beqz	s0,0x16e7e # atomic+0x1ac>
	lbu	a5,9(s0)
	addiw	s2,s2,1
	andi	a5,a5,24
	bnez	a5,0x16e7a # atomic+0x1a8>
	ld	a4,16(s0)
	lbu	a5,8(a4)
	andi	a5,a5,64
	beqz	a5,0x16e7a # atomic+0x1a8>
	ld	a1,0(a4)
	lbu	a5,9(a1)
	andi	a5,a5,24
	bnez	a5,0x16e88 # atomic+0x1b6>
	ld	s0,24(s0)
	bnez	s0,0x16e5a # atomic+0x188>
	ld	a5,0(s5)
	bnez	a5,0x16d4a # atomic+0x78>
	j	0x16d66 # atomic+0x94>
	mv	a0,s1
	jal	ra,0x161d4 # reallymarkobject>
	j	0x16e7a # atomic+0x1a8>
	mv	a1,a0
	mv	a0,s1
	jal	ra,0x161d4 # reallymarkobject>
	j	0x16cfc # atomic+0x2a>
	sd	a3,0(s5)
	sd	a5,80(a5)
	ld	a5,0(s5)
	bnez	a5,0x16d4a # atomic+0x78>
	j	0x16d66 # atomic+0x94>
	mv	a0,s1
	jal	ra,0x161d4 # reallymarkobject>
	j	0x16d12 # atomic+0x40>

singlestep:
	addi	sp,sp,-48
	sd	s0,32(sp)
	ld	s0,24(a0)
	sd	ra,40(sp)
	sd	s1,24(sp)
	sd	s2,16(sp)
	sd	s3,8(sp)
	lbu	a4,101(s0)
	li	a3,1
	li	a5,8
	sb	a3,103(s0)
	bltu	a5,a4,0x17002 # singlestep+0x150>
	mv	a5,a4
	slli	a5,a5,0x2
	auipc	a4,0x2b
	addi	a4,a4,-428 # 0x41d28 # lua_ident+0x990>
	add	a5,a5,a4
	lw	a5,0(a5)
	mv	s1,a0
	add	a5,a5,a4
	jr	a5
	ld	a1,264(s0)
	sd	zero,144(s0)
	sd	zero,136(s0)
	sd	zero,160(s0)
	sd	zero,168(s0)
	sd	zero,152(s0)
	lbu	a5,9(a1)
	andi	a5,a5,24
	bnez	a5,0x1703c # singlestep+0x18a>
	lbu	a5,72(s0)
	andi	a5,a5,64
	beqz	a5,0x16f1e # singlestep+0x6c>
	ld	a1,64(s0)
	lbu	a5,9(a1)
	andi	a5,a5,24
	bnez	a5,0x17034 # singlestep+0x182>
	addi	s1,s0,480
	addi	s2,s0,552
	j	0x16f2e # singlestep+0x7c>
	addi	s1,s1,8
	beq	s2,s1,0x16f46 # singlestep+0x94>
	ld	a1,0(s1)
	beqz	a1,0x16f28 # singlestep+0x76>
	lbu	a5,9(a1)
	andi	a5,a5,24
	beqz	a5,0x16f28 # singlestep+0x76>
	mv	a0,s0
	addi	s1,s1,8
	jal	ra,0x161d4 # reallymarkobject>
	bne	s2,s1,0x16f2e # singlestep+0x7c>
	ld	s1,176(s0)
	bnez	s1,0x16f50 # singlestep+0x9e>
	j	0x17006 # singlestep+0x154>
	ld	s1,0(s1)
	beqz	s1,0x17006 # singlestep+0x154>
	lbu	a5,9(s1)
	andi	a5,a5,24
	beqz	a5,0x16f4c # singlestep+0x9a>
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x161d4 # reallymarkobject>
	j	0x16f4c # singlestep+0x9a>
	ld	a5,136(s0)
	beqz	a5,0x1700e # singlestep+0x15c>
	mv	a0,s0
	jal	ra,0x1663c # propagatemark>
	mv	s1,a0
	sb	zero,103(s0)
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	mv	a0,s1
	ld	s1,24(sp)
	addi	sp,sp,48
	ret
	addi	a3,s0,176
	li	a2,5
	mv	a1,s0
	jal	ra,0x15db6 # sweepstep.constprop.0>
	mv	s1,a0
	j	0x16f6e # singlestep+0xbc>
	li	a3,0
	li	a2,6
	mv	a1,s0
	jal	ra,0x15db6 # sweepstep.constprop.0>
	mv	s1,a0
	j	0x16f6e # singlestep+0xbc>
	jal	ra,0x16cd2 # atomic>
	mv	a5,a0
	mv	a0,s1
	mv	s1,a5
	jal	ra,0x15f0e # entersweep>
	ld	a5,16(s0)
	ld	a4,24(s0)
	add	a5,a5,a4
	sd	a5,32(s0)
	j	0x16f6e # singlestep+0xbc>
	addi	a3,s0,128
	li	a2,4
	mv	a1,s0
	jal	ra,0x15db6 # sweepstep.constprop.0>
	mv	s1,a0
	j	0x16f6e # singlestep+0xbc>
	lbu	a5,107(s0)
	bnez	a5,0x16fe4 # singlestep+0x132>
	lw	a1,60(s0)
	lw	a4,56(s0)
	sraiw	a5,a1,0x1f
	srliw	a5,a5,0x1e
	addw	a5,a5,a1
	sraiw	a5,a5,0x2
	blt	a4,a5,0x17018 # singlestep+0x166>
	li	a5,7
	sb	a5,101(s0)
	li	s1,0
	j	0x16f6e # singlestep+0xbc>
	ld	a5,176(s0)
	beqz	a5,0x16ff8 # singlestep+0x146>
	lbu	a5,107(s0)
	beqz	a5,0x17044 # singlestep+0x192>
	li	a5,8
	sb	a5,101(s0)
	li	s1,0
	j	0x16f6e # singlestep+0xbc>
	li	s1,0
	j	0x16f72 # singlestep+0xc0>
	sb	zero,101(s0)
	li	s1,1
	j	0x16f6e # singlestep+0xbc>
	li	a5,1
	sb	a5,101(s0)
	li	s1,0
	j	0x16f6e # singlestep+0xbc>
	srliw	a5,a1,0x1f
	addw	a1,a1,a5
	sraiw	a1,a1,0x1
	ld	s1,24(s0)
	jal	ra,0x1bcf6 # luaS_resize>
	ld	a4,24(s0)
	ld	a5,32(s0)
	sub	a4,a4,s1
	add	a5,a5,a4
	sd	a5,32(s0)
	j	0x16fe4 # singlestep+0x132>
	mv	a0,s0
	jal	ra,0x161d4 # reallymarkobject>
	j	0x16f1e # singlestep+0x6c>
	mv	a0,s0
	jal	ra,0x161d4 # reallymarkobject>
	j	0x16f08 # singlestep+0x56>
	sb	zero,103(s0)
	li	s2,0
	li	s3,10
	j	0x17052 # singlestep+0x1a0>
	ld	a5,176(s0)
	beqz	a5,0x17064 # singlestep+0x1b2>
	addiw	s2,s2,1
	mv	a0,s1
	jal	ra,0x15cac # GCTM>
	bne	s2,s3,0x1704e # singlestep+0x19c>
	li	s1,500
	j	0x16f6e # singlestep+0xbc>
	li	s1,50
	mulw	s1,s1,s2
	j	0x16f6e # singlestep+0xbc>

luaC_barrier_:
	ld	a0,24(a0)
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	ra,24(sp)
	sd	s1,8(sp)
	lbu	a4,101(a0)
	li	a5,2
	mv	s0,a1
	bleu	a4,a5,0x170a8 # luaC_barrier_+0x3a>
	lbu	a5,102(a0)
	bnez	a5,0x1709e # luaC_barrier_+0x30>
	lbu	a5,9(a1)
	lbu	a4,100(a0)
	andi	a5,a5,-57
	andi	a4,a4,24
	or	a5,a5,a4
	sb	a5,9(a1)
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret
	mv	a1,a2
	mv	s1,a2
	jal	ra,0x161d4 # reallymarkobject>
	lbu	a5,9(s0)
	andi	a5,a5,6
	beqz	a5,0x1709e # luaC_barrier_+0x30>
	lbu	a5,9(s1)
	andi	a5,a5,-8
	ori	a5,a5,2
	sb	a5,9(s1)
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret

luaC_barrierback_:
	lbu	a5,9(a1)
	li	a4,6
	andi	a3,a5,7
	beq	a3,a4,0x1710e # luaC_barrierback_+0x3e>
	lbu	a4,8(a1)
	ld	a3,24(a0)
	li	a2,33
	addiw	a4,a4,-5
	andi	a4,a4,255
	ld	a0,144(a3)
	bltu	a2,a4,0x17142 # luaC_barrierback_+0x72>
	auipc	a2,0x2b
	addi	a2,a2,-936 # 0x41d4c # lua_ident+0x9b4>
	slli	a4,a4,0x2
	add	a4,a4,a2
	lw	a4,0(a4)
	add	a4,a4,a2
	jr	a4
	addi	a4,a1,16
	sd	a0,0(a4)
	sd	a1,144(a3)
	andi	a5,a5,199
	sb	a5,9(a1)
	andi	a4,a5,6
	beqz	a4,0x17128 # luaC_barrierback_+0x58>
	andi	a5,a5,-8
	ori	a5,a5,5
	sb	a5,9(a1)
	ret
	ret
	addi	a4,a1,48
	j	0x1710a # luaC_barrierback_+0x3a>
	addi	a4,a1,120
	j	0x1710a # luaC_barrierback_+0x3a>
	addi	a4,a1,72
	j	0x1710a # luaC_barrierback_+0x3a>
	addi	a4,a1,32
	j	0x1710a # luaC_barrierback_+0x3a>
	sd	a0,0(zero) # 0x0 # exit-0x10120>
	ebreak

luaC_fix:
	lbu	a5,9(a1)
	ld	a4,24(a0)
	ld	a3,0(a1)
	andi	a5,a5,-64
	ori	a5,a5,4
	sb	a5,9(a1)
	ld	a5,184(a4)
	sd	a3,112(a4)
	sd	a5,0(a1)
	sd	a1,184(a4)
	ret

luaC_newobj:
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	s1,8(sp)
	mv	s0,a1
	ld	s1,24(a0)
	mv	a1,a2
	andi	a2,s0,15
	sd	ra,24(sp)
	jal	ra,0x17c10 # luaM_malloc_>
	lbu	a4,100(s1)
	sb	s0,8(a0)
	andi	a4,a4,24
	sb	a4,9(a0)
	ld	a4,112(s1)
	ld	ra,24(sp)
	ld	s0,16(sp)
	sd	a4,0(a0)
	sd	a0,112(s1)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret

luaC_checkfinalizer:
	lbu	a5,9(a1)
	andi	a5,a5,64
	bnez	a5,0x171ae # luaC_checkfinalizer+0x14>
	beqz	a2,0x171ae # luaC_checkfinalizer+0x14>
	lbu	a5,10(a2)
	andi	a5,a5,4
	beqz	a5,0x171b0 # luaC_checkfinalizer+0x16>
	ret
	addi	sp,sp,-48
	sd	s1,24(sp)
	ld	s1,24(a0)
	sd	s2,16(sp)
	mv	s2,a0
	mv	a0,a2
	ld	a2,296(s1)
	sd	s0,32(sp)
	mv	s0,a1
	li	a1,2
	sd	ra,40(sp)
	sd	s3,8(sp)
	sd	s4,0(sp)
	jal	ra,0x1d190 # luaT_gettm>
	beqz	a0,0x17222 # luaC_checkfinalizer+0x88>
	lbu	a5,101(s1)
	li	a4,3
	addiw	a5,a5,-3
	andi	a5,a5,255
	bltu	a4,a5,0x17232 # luaC_checkfinalizer+0x98>
	lbu	a5,9(s0)
	lbu	a4,100(s1)
	andi	a5,a5,-57
	andi	a4,a4,24
	or	a5,a5,a4
	sb	a5,9(s0)
	ld	s4,120(s1)
	beq	s4,s0,0x17250 # luaC_checkfinalizer+0xb6>
	ld	a3,0(s0)
	ld	a5,112(s1)
	beq	s0,a5,0x172b2 # luaC_checkfinalizer+0x118>
	mv	a4,a5
	ld	a5,0(a5)
	bne	s0,a5,0x17206 # luaC_checkfinalizer+0x6c>
	sd	a3,0(a4)
	ld	a5,128(s1)
	sd	a5,0(s0)
	sd	s0,128(s1)
	lbu	a5,9(s0)
	ori	a5,a5,64
	sb	a5,9(s0)
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	ld	s4,0(sp)
	addi	sp,sp,48
	ret
	ld	a5,192(s1)
	ld	a3,0(s0)
	beq	s0,a5,0x1729a # luaC_checkfinalizer+0x100>
	ld	a5,200(s1)
	beq	s0,a5,0x17294 # luaC_checkfinalizer+0xfa>
	ld	a5,208(s1)
	beq	s0,a5,0x1728e # luaC_checkfinalizer+0xf4>
	ld	a5,216(s1)
	bne	s0,a5,0x17200 # luaC_checkfinalizer+0x66>
	sd	a3,216(s1)
	j	0x171fe # luaC_checkfinalizer+0x64>
	ld	a1,0(s4)
	mv	s3,s4
	ld	a5,24(s2)
	lbu	a5,100(a5)
	andi	a2,a5,24
	xori	a5,a5,24
	beqz	a1,0x172ae # luaC_checkfinalizer+0x114>
	lbu	a3,9(a1)
	ld	a0,0(a1)
	andi	a4,a3,-64
	and	a5,a5,a3
	or	a4,a4,a2
	bnez	a5,0x1729e # luaC_checkfinalizer+0x104>
	sb	a4,9(a1)
	mv	s3,a1
	mv	a1,a0
	beqz	a1,0x172ae # luaC_checkfinalizer+0x114>
	beq	s4,s3,0x17256 # luaC_checkfinalizer+0xbc>
	ld	a3,0(s0)
	sd	s3,120(s1)
	j	0x17200 # luaC_checkfinalizer+0x66>
	sd	a3,208(s1)
	ld	a3,0(s0)
	j	0x17246 # luaC_checkfinalizer+0xac>
	sd	a3,200(s1)
	ld	a3,0(s0)
	j	0x17240 # luaC_checkfinalizer+0xa6>
	sd	a3,192(s1)
	j	0x1723a # luaC_checkfinalizer+0xa0>
	sd	a0,0(s3)
	mv	a0,s2
	jal	ra,0x15b42 # freeobj>
	ld	a1,0(s3)
	j	0x17280 # luaC_checkfinalizer+0xe6>
	li	s3,0
	j	0x17286 # luaC_checkfinalizer+0xec>
	addi	a4,s1,112
	j	0x1720e # luaC_checkfinalizer+0x74>

luaC_changemode:
	addi	sp,sp,-48
	sd	s1,24(sp)
	ld	s1,24(a0)
	sd	ra,40(sp)
	sd	s0,32(sp)
	sd	s2,16(sp)
	sd	s3,8(sp)
	lbu	a5,102(s1)
	beq	a5,a1,0x172da # luaC_changemode+0x22>
	li	a5,1
	beq	a1,a5,0x172ec # luaC_changemode+0x34>
	mv	a0,s1
	jal	ra,0x15abe # enterinc>
	ld	ra,40(sp)
	ld	s0,32(sp)
	sd	zero,40(s1)
	ld	s2,16(sp)
	ld	s1,24(sp)
	ld	s3,8(sp)
	addi	sp,sp,48
	ret
	lbu	a3,101(s1)
	li	a4,256
	mv	s0,a0
	sraw	a4,a4,a3
	andi	a4,a4,1
	bnez	a4,0x1735a # luaC_changemode+0xa2>
	li	s2,256
	mv	a0,s0
	jal	ra,0x16eb2 # singlestep>
	lbu	a5,101(s1)
	sraw	a5,s2,a5
	andi	a5,a5,1
	beqz	a5,0x17302 # luaC_changemode+0x4a>
	ld	s2,24(s0)
	lbu	a3,101(s2)
	li	a5,1
	sraw	a5,a5,a3
	andi	a5,a5,1
	li	s3,1
	bnez	a5,0x1733a # luaC_changemode+0x82>
	mv	a0,s0
	jal	ra,0x16eb2 # singlestep>
	lbu	a5,101(s2)
	sraw	a5,s3,a5
	andi	a5,a5,1
	beqz	a5,0x17328 # luaC_changemode+0x70>
	mv	a0,s0
	jal	ra,0x16cd2 # atomic>
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x160e8 # atomic2gen>
	ld	ra,40(sp)
	ld	s0,32(sp)
	sd	zero,40(s1)
	ld	s2,16(sp)
	ld	s1,24(sp)
	ld	s3,8(sp)
	addi	sp,sp,48
	ret
	mv	s2,s1
	j	0x1731c # luaC_changemode+0x64>

luaC_freeallobjects:
	addi	sp,sp,-48
	sd	s3,8(sp)
	ld	s3,24(a0)
	sd	s0,32(sp)
	sd	ra,40(sp)
	sd	s1,24(sp)
	sd	s2,16(sp)
	lbu	a5,102(s3)
	mv	s0,a0
	beqz	a5,0x1737c # luaC_freeallobjects+0x1e>
	mv	a0,s3
	jal	ra,0x15abe # enterinc>
	sd	zero,40(s3)
	li	a1,1
	mv	a0,s3
	jal	ra,0x15a60 # separatetobefnz>
	ld	s1,24(s0)
	ld	a5,176(s1)
	beqz	a5,0x17398 # luaC_freeallobjects+0x3a>
	mv	a0,s0
	jal	ra,0x15cac # GCTM>
	ld	a5,176(s1)
	bnez	a5,0x1738e # luaC_freeallobjects+0x30>
	ld	s1,112(s3)
	ld	s2,264(s3)
	beq	s1,s2,0x173b2 # luaC_freeallobjects+0x54>
	mv	a1,s1
	ld	s1,0(s1)
	mv	a0,s0
	jal	ra,0x15b42 # freeobj>
	bne	s2,s1,0x173a4 # luaC_freeallobjects+0x46>
	ld	s1,128(s3)
	beqz	s1,0x173c4 # luaC_freeallobjects+0x66>
	mv	a1,s1
	ld	s1,0(s1)
	mv	a0,s0
	jal	ra,0x15b42 # freeobj>
	bnez	s1,0x173b8 # luaC_freeallobjects+0x5a>
	ld	s1,184(s3)
	beqz	s1,0x173d6 # luaC_freeallobjects+0x78>
	mv	a1,s1
	ld	s1,0(s1)
	mv	a0,s0
	jal	ra,0x15b42 # freeobj>
	bnez	s1,0x173ca # luaC_freeallobjects+0x6c>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	addi	sp,sp,48
	ret

luaC_runtilstate:
	addi	sp,sp,-32
	sd	s2,0(sp)
	ld	s2,24(a0)
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	lbu	a5,101(s2)
	sraw	a5,a1,a5
	andi	a5,a5,1
	bnez	a5,0x17414 # luaC_runtilstate+0x30>
	mv	s1,a0
	mv	s0,a1
	mv	a0,s1
	jal	ra,0x16eb2 # singlestep>
	lbu	a5,101(s2)
	sraw	a5,s0,a5
	andi	a5,a5,1
	beqz	a5,0x17402 # luaC_runtilstate+0x1e>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret

luaC_step:
	addi	sp,sp,-80
	sd	s0,64(sp)
	ld	s0,24(a0)
	sd	ra,72(sp)
	sd	s1,56(sp)
	sd	s2,48(sp)
	sd	s3,40(sp)
	sd	s4,32(sp)
	sd	s5,24(sp)
	lbu	a5,106(s0)
	beqz	a5,0x17574 # luaC_step+0x154>
	lbu	a4,102(s0)
	li	a5,1
	ld	s4,40(s0)
	mv	s1,a0
	beq	a4,a5,0x17586 # luaC_step+0x166>
	mv	s2,s0
	beqz	s4,0x17672 # luaC_step+0x252>
	lbu	a4,101(s2)
	li	a5,1
	li	s3,1
	sraw	a5,a5,a4
	andi	a5,a5,1
	bnez	a5,0x17472 # luaC_step+0x52>
	mv	a0,s1
	jal	ra,0x16eb2 # singlestep>
	lbu	a5,101(s2)
	sraw	a5,s3,a5
	andi	a5,a5,1
	beqz	a5,0x17460 # luaC_step+0x40>
	mv	a0,s1
	jal	ra,0x16cd2 # atomic>
	srli	a5,s4,0x3
	add	a5,a5,s4
	mv	s5,a0
	bleu	a5,a0,0x1778e # luaC_step+0x36e>
	mv	a1,s0
	mv	a0,s1
	jal	ra,0x160e8 # atomic2gen>
	ld	a4,24(s0)
	ld	a1,16(s0)
	lbu	a5,104(s0)
	mv	a0,s0
	add	a1,a1,a4
	li	a4,100
	divu	a1,a1,a4
	mul	a1,a1,a5
	neg	a1,a1
	ld	s0,64(sp)
	ld	ra,72(sp)
	ld	s1,56(sp)
	ld	s2,48(sp)
	ld	s3,40(sp)
	ld	s4,32(sp)
	ld	s5,24(sp)
	addi	sp,sp,80
	j	0x1b7e8 # luaE_setdebt>
	mv	a0,s1
	jal	ra,0x16cd2 # atomic>
	ld	a3,192(s0)
	lbu	a1,100(s0)
	li	a5,3
	addi	s4,s0,216
	mv	a4,s4
	sb	a5,101(s0)
	addi	a2,s0,112
	mv	a0,s1
	jal	ra,0x15e6c # sweepgen.isra.0>
	ld	a3,200(s0)
	lbu	a1,100(s0)
	mv	s2,a0
	mv	a4,s4
	mv	a2,a0
	mv	a0,s1
	jal	ra,0x15e6c # sweepgen.isra.0>
	ld	a4,200(s0)
	ld	a5,112(s0)
	ld	a3,224(s0)
	sd	a4,208(s0)
	ld	a0,0(s2)
	lbu	a1,100(s0)
	addi	s4,sp,8
	sd	a5,192(s0)
	mv	a4,s4
	addi	a2,s0,128
	sd	a0,200(s0)
	mv	a0,s1
	sd	zero,8(sp)
	jal	ra,0x15e6c # sweepgen.isra.0>
	ld	a3,232(s0)
	lbu	a1,100(s0)
	mv	a2,a0
	mv	s2,a0
	mv	a4,s4
	mv	a0,s1
	jal	ra,0x15e6c # sweepgen.isra.0>
	ld	a4,232(s0)
	ld	a5,128(s0)
	lbu	a1,100(s0)
	sd	a4,240(s0)
	ld	a0,0(s2)
	mv	a4,s4
	li	a3,0
	addi	a2,s0,176
	sd	a5,224(s0)
	sd	a0,232(s0)
	mv	a0,s1
	jal	ra,0x15e6c # sweepgen.isra.0>
	mv	a1,s0
	mv	a0,s1
	jal	ra,0x1602c # finishgencycle>
	ld	a4,24(s0)
	ld	a1,16(s0)
	lbu	a5,104(s0)
	mv	a0,s0
	add	a1,a1,a4
	li	a4,100
	divu	a1,a1,a4
	mul	a1,a1,a5
	neg	a1,a1
	jal	ra,0x1b7e8 # luaE_setdebt>
	sd	s3,32(s0)
	ld	ra,72(sp)
	ld	s0,64(sp)
	ld	s1,56(sp)
	ld	s2,48(sp)
	ld	s3,40(sp)
	ld	s4,32(sp)
	ld	s5,24(sp)
	addi	sp,sp,80
	ret
	bnez	s4,0x1785c # luaC_step+0x43c>
	ld	a5,24(s0)
	ld	s3,32(s0)
	blez	a5,0x175b4 # luaC_step+0x194>
	li	s2,100
	divu	a4,s3,s2
	lbu	s2,105(s0)
	ld	a3,16(s0)
	slliw	s2,s2,0x2
	add	a5,a5,a3
	mul	s2,s2,a4
	add	a4,s3,s2
	bltu	a4,a5,0x176e0 # luaC_step+0x2c0>
	ld	s2,216(s0)
	beqz	s2,0x175f8 # luaC_step+0x1d8>
	ld	s4,208(s0)
	li	s5,3
	bne	s2,s4,0x175d0 # luaC_step+0x1b0>
	j	0x175f4 # luaC_step+0x1d4>
	ld	s2,0(s2)
	beq	s4,s2,0x175f4 # luaC_step+0x1d4>
	lbu	a5,9(s2)
	andi	a4,a5,7
	bne	a4,s5,0x175c8 # luaC_step+0x1a8>
	xori	a5,a5,7
	sb	a5,9(s2)
	andi	a5,a5,32
	beqz	a5,0x175c8 # luaC_step+0x1a8>
	mv	a1,s2
	mv	a0,s0
	jal	ra,0x161d4 # reallymarkobject>
	j	0x175c8 # luaC_step+0x1a8>
	sd	zero,216(s0)
	ld	s2,128(s0)
	ld	s4,240(s0)
	li	s5,3
	bne	s2,s4,0x17610 # luaC_step+0x1f0>
	j	0x1763a # luaC_step+0x21a>
	ld	s2,0(s2)
	beq	s4,s2,0x1763a # luaC_step+0x21a>
	lbu	a5,9(s2)
	andi	a4,a5,7
	bne	a4,s5,0x17608 # luaC_step+0x1e8>
	xori	a5,a5,7
	sb	a5,9(s2)
	andi	a5,a5,32
	beqz	a5,0x17608 # luaC_step+0x1e8>
	mv	a1,s2
	mv	a0,s0
	jal	ra,0x161d4 # reallymarkobject>
	ld	s2,0(s2)
	bne	s4,s2,0x17610 # luaC_step+0x1f0>
	ld	s2,176(s0)
	li	s4,3
	bnez	s2,0x1764e # luaC_step+0x22e>
	j	0x174bc # luaC_step+0x9c>
	ld	s2,0(s2)
	beqz	s2,0x174bc # luaC_step+0x9c>
	lbu	a5,9(s2)
	andi	a4,a5,7
	bne	a4,s4,0x17646 # luaC_step+0x226>
	xori	a5,a5,7
	sb	a5,9(s2)
	andi	a5,a5,32
	beqz	a5,0x17646 # luaC_step+0x226>
	mv	a1,s2
	mv	a0,s0
	jal	ra,0x161d4 # reallymarkobject>
	j	0x17646 # luaC_step+0x226>
	lbu	a1,109(s0)
	ld	s2,24(s0)
	lbu	s3,110(s0)
	slliw	a1,a1,0x2
	ori	a1,a1,1
	sext.w	s4,a1
	srli	s2,s2,0x4
	li	a4,62
	mul	s2,s2,s4
	bltu	a4,s3,0x176d8 # luaC_step+0x2b8>
	sll	s3,a5,s3
	srli	s3,s3,0x4
	mul	s3,s3,s4
	neg	s3,s3
	li	s5,8
	j	0x176b6 # luaC_step+0x296>
	lbu	a5,101(s0)
	beq	a5,s5,0x17822 # luaC_step+0x402>
	mv	a0,s1
	jal	ra,0x16eb2 # singlestep>
	sub	s2,s2,a0
	blt	s3,s2,0x176ae # luaC_step+0x28e>
	lbu	a4,101(s0)
	li	a5,8
	beq	a4,a5,0x17822 # luaC_step+0x402>
	div	a1,s2,s4
	mv	a0,s0
	slli	a1,a1,0x4
	j	0x174a8 # luaC_step+0x88>
	li	s3,-1
	slli	s3,s3,0x3f
	addi	s3,s3,1
	j	0x176aa # luaC_step+0x28a>
	mv	a0,s0
	jal	ra,0x15abe # enterinc>
	ld	s4,24(s1)
	li	a4,256
	lbu	a3,101(s4)
	sraw	a4,a4,a3
	andi	a4,a4,1
	bnez	a4,0x17718 # luaC_step+0x2f8>
	li	s5,256
	mv	a0,s1
	jal	ra,0x16eb2 # singlestep>
	lbu	a5,101(s4)
	sraw	a5,s5,a5
	andi	a5,a5,1
	beqz	a5,0x176fe # luaC_step+0x2de>
	ld	s4,24(s1)
	lbu	a3,101(s4)
	li	a5,1
	sraw	a5,a5,a3
	andi	a5,a5,1
	li	s5,1
	bnez	a5,0x17736 # luaC_step+0x316>
	mv	a0,s1
	jal	ra,0x16eb2 # singlestep>
	lbu	a5,101(s4)
	sraw	a5,s5,a5
	andi	a5,a5,1
	beqz	a5,0x17724 # luaC_step+0x304>
	mv	a0,s1
	jal	ra,0x16cd2 # atomic>
	mv	a5,a0
	mv	a1,s0
	mv	a0,s1
	mv	s1,a5
	jal	ra,0x160e8 # atomic2gen>
	ld	a1,16(s0)
	ld	a5,24(s0)
	srli	s2,s2,0x1
	add	s3,s3,s2
	add	a1,a1,a5
	bltu	a1,s3,0x1780a # luaC_step+0x3ea>
	ld	a3,32(s0)
	li	a5,100
	lbu	a4,108(s0)
	divu	a3,a3,a5
	li	a5,-1
	srli	a5,a5,0x1
	mv	a2,a5
	sd	s1,40(s0)
	slliw	a4,a4,0x2
	div	a5,a5,a3
	ble	a5,a4,0x1777e # luaC_step+0x35e>
	mul	a2,a3,a4
	sub	a1,a1,a2
	slti	a5,a1,1
	neg	a5,a5
	and	a1,a1,a5
	mv	a0,s0
	j	0x174a8 # luaC_step+0x88>
	ld	a4,24(s0)
	ld	a5,16(s0)
	mv	a0,s1
	li	s3,256
	add	a5,a5,a4
	sd	a5,32(s0)
	jal	ra,0x15f0e # entersweep>
	ld	s2,24(s1)
	li	a5,256
	lbu	a4,101(s2)
	sraw	a5,a5,a4
	andi	a5,a5,1
	bnez	a5,0x177c6 # luaC_step+0x3a6>
	mv	a0,s1
	jal	ra,0x16eb2 # singlestep>
	lbu	a5,101(s2)
	sraw	a5,s3,a5
	andi	a5,a5,1
	beqz	a5,0x177b4 # luaC_step+0x394>
	ld	a1,32(s0)
	li	a4,100
	li	a5,-1
	divu	a4,a1,a4
	srli	a5,a5,0x1
	lbu	a1,108(s0)
	slliw	a1,a1,0x2
	div	a3,a5,a4
	blt	a1,a3,0x17804 # luaC_step+0x3e4>
	mv	a1,a5
	ld	a5,16(s0)
	ld	a4,24(s0)
	mv	a0,s0
	add	a5,a5,a4
	sub	a5,a5,a1
	slti	a1,a5,1
	neg	a1,a1
	and	a1,a1,a5
	jal	ra,0x1b7e8 # luaE_setdebt>
	sd	s5,40(s0)
	j	0x17574 # luaC_step+0x154>
	mul	a1,a4,a1
	j	0x177e6 # luaC_step+0x3c6>
	li	a5,100
	divu	a1,a1,a5
	lbu	a5,104(s0)
	mv	a0,s0
	mul	a1,a1,a5
	neg	a1,a1
	j	0x174a8 # luaC_step+0x88>
	ld	a2,32(s0)
	li	a5,100
	li	a4,-1
	divu	a2,a2,a5
	srli	a4,a4,0x1
	mv	a1,a4
	lbu	a3,108(s0)
	slliw	a3,a3,0x2
	div	a4,a4,a2
	ble	a4,a3,0x17846 # luaC_step+0x426>
	mul	a1,a2,a3
	ld	a5,16(s0)
	ld	a4,24(s0)
	mv	a0,s0
	add	a5,a5,a4
	sub	a5,a5,a1
	slti	a1,a5,1
	neg	a1,a1
	and	a1,a1,a5
	j	0x174a8 # luaC_step+0x88>
	mv	a0,s0
	jal	ra,0x15abe # enterinc>
	ld	s2,24(s1)
	j	0x17450 # luaC_step+0x30>

luaC_fullgc:
	addi	sp,sp,-48
	sd	s1,24(sp)
	ld	s1,24(a0)
	sd	s0,32(sp)
	sd	ra,40(sp)
	sd	s2,16(sp)
	sd	s3,8(sp)
	lbu	a5,102(s1)
	sb	a1,107(s1)
	mv	s0,a0
	bnez	a5,0x17952 # luaC_fullgc+0xea>
	lbu	a4,101(s1)
	li	a5,2
	mv	s2,s1
	bleu	a4,a5,0x179ce # luaC_fullgc+0x166>
	li	a5,256
	sraw	a5,a5,a4
	andi	a5,a5,1
	sext.w	a4,a4
	bnez	a5,0x179ea # luaC_fullgc+0x182>
	li	s3,256
	mv	a0,s0
	jal	ra,0x16eb2 # singlestep>
	lbu	a5,101(s2)
	sraw	a5,s3,a5
	andi	a5,a5,1
	beqz	a5,0x178a2 # luaC_fullgc+0x3a>
	ld	s2,24(s0)
	li	a4,128
	lbu	a3,101(s2)
	sraw	a4,a4,a3
	andi	a4,a4,1
	bnez	a4,0x178e6 # luaC_fullgc+0x7e>
	li	s3,128
	mv	a0,s0
	jal	ra,0x16eb2 # singlestep>
	lbu	a5,101(s2)
	sraw	a5,s3,a5
	andi	a5,a5,1
	beqz	a5,0x178cc # luaC_fullgc+0x64>
	ld	s2,24(s0)
	lbu	a3,101(s2)
	li	a5,256
	sraw	a5,a5,a3
	andi	a5,a5,1
	li	s3,256
	bnez	a5,0x17908 # luaC_fullgc+0xa0>
	mv	a0,s0
	jal	ra,0x16eb2 # singlestep>
	lbu	a5,101(s2)
	sraw	a5,s3,a5
	andi	a5,a5,1
	beqz	a5,0x178f6 # luaC_fullgc+0x8e>
	ld	a1,32(s1)
	li	a4,100
	li	a5,-1
	divu	a4,a1,a4
	srli	a5,a5,0x1
	lbu	a1,108(s1)
	slliw	a1,a1,0x2
	div	a3,a5,a4
	blt	a1,a3,0x179c8 # luaC_fullgc+0x160>
	mv	a1,a5
	ld	a5,16(s1)
	ld	a4,24(s1)
	mv	a0,s1
	add	a5,a5,a4
	sub	a5,a5,a1
	slti	a1,a5,1
	neg	a1,a1
	and	a1,a1,a5
	jal	ra,0x1b7e8 # luaE_setdebt>
	sb	zero,107(s1)
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	addi	sp,sp,48
	ret
	mv	a0,s1
	jal	ra,0x15abe # enterinc>
	ld	s2,24(s0)
	li	a4,256
	lbu	a3,101(s2)
	sraw	a4,a4,a3
	andi	a4,a4,1
	bnez	a4,0x1798a # luaC_fullgc+0x122>
	li	s3,256
	mv	a0,s0
	jal	ra,0x16eb2 # singlestep>
	lbu	a5,101(s2)
	sraw	a5,s3,a5
	andi	a5,a5,1
	beqz	a5,0x17970 # luaC_fullgc+0x108>
	ld	s2,24(s0)
	lbu	a3,101(s2)
	li	a5,1
	sraw	a5,a5,a3
	andi	a5,a5,1
	li	s3,1
	bnez	a5,0x179a8 # luaC_fullgc+0x140>
	mv	a0,s0
	jal	ra,0x16eb2 # singlestep>
	lbu	a5,101(s2)
	sraw	a5,s3,a5
	andi	a5,a5,1
	beqz	a5,0x17996 # luaC_fullgc+0x12e>
	mv	a0,s0
	jal	ra,0x16cd2 # atomic>
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x160e8 # atomic2gen>
	sb	zero,107(s1)
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	addi	sp,sp,48
	ret
	mul	a1,a4,a1
	j	0x17928 # luaC_fullgc+0xc0>
	jal	ra,0x15f0e # entersweep>
	ld	s2,24(s0)
	li	a5,256
	lbu	a4,101(s2)
	sraw	a5,a5,a4
	andi	a5,a5,1
	sext.w	a4,a4
	beqz	a5,0x1789e # luaC_fullgc+0x36>
	li	a5,128
	sraw	a4,a5,a4
	andi	a5,a4,1
	beqz	a5,0x178c8 # luaC_fullgc+0x60>
	j	0x17908 # luaC_fullgc+0xa0>

tryagain:
	addi	sp,sp,-48
	sd	s0,32(sp)
	ld	s0,24(a0)
	sd	ra,40(sp)
	sd	s1,24(sp)
	sd	s2,16(sp)
	sd	s3,8(sp)
	lbu	a5,88(s0)
	andi	a5,a5,15
	bnez	a5,0x17a3c # tryagain+0x40>
	lbu	a5,103(s0)
	bnez	a5,0x17a3c # tryagain+0x40>
	mv	s1,a1
	li	a1,1
	mv	s2,a2
	mv	s3,a3
	jal	ra,0x17868 # luaC_fullgc>
	ld	a0,8(s0)
	ld	a5,0(s0)
	ld	s0,32(sp)
	ld	ra,40(sp)
	mv	a3,s3
	mv	a2,s2
	ld	s3,8(sp)
	ld	s2,16(sp)
	mv	a1,s1
	ld	s1,24(sp)
	addi	sp,sp,48
	jr	a5
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	li	a0,0
	addi	sp,sp,48
	ret

luaM_toobig:
	addi	sp,sp,-16
	auipc	a1,0x2a
	addi	a1,a1,930 # 0x41df0 # nextage.0+0x18>
	sd	ra,8(sp)
	jal	ra,0x13d34 # luaG_runerror>

luaM_free_:
	addi	sp,sp,-32
	sd	s0,16(sp)
	ld	s0,24(a0)
	sd	s1,8(sp)
	sd	ra,24(sp)
	ld	a5,0(s0)
	ld	a0,8(s0)
	li	a3,0
	mv	s1,a2
	jalr	a5
	ld	a5,24(s0)
	ld	ra,24(sp)
	sub	a2,a5,s1
	sd	a2,24(s0)
	ld	s0,16(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret

luaM_realloc_:
	addi	sp,sp,-48
	sd	s1,24(sp)
	ld	s1,24(a0)
	sd	s2,16(sp)
	mv	s2,a0
	ld	a5,0(s1)
	ld	a0,8(s1)
	sd	s0,32(sp)
	sd	s3,8(sp)
	sd	s4,0(sp)
	sd	ra,40(sp)
	mv	s4,a1
	mv	s3,a2
	mv	s0,a3
	jalr	a5
	beqz	a0,0x17abc # luaM_realloc_+0x3a>
	ld	a3,24(s1)
	sub	s0,s0,s3
	add	s0,s0,a3
	sd	s0,24(s1)
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	ld	s4,0(sp)
	addi	sp,sp,48
	ret
	beqz	s0,0x17aa2 # luaM_realloc_+0x20>
	mv	a3,s0
	mv	a2,s3
	mv	a1,s4
	mv	a0,s2
	jal	ra,0x179fc # tryagain>
	bnez	a0,0x17aa2 # luaM_realloc_+0x20>
	j	0x17aac # luaM_realloc_+0x2a>

luaM_shrinkvector_:
	addi	sp,sp,-48
	sd	s0,32(sp)
	mv	s0,a2
	lw	a2,0(a2)
	sd	s3,8(sp)
	mulw	s3,a4,a3
	sd	s1,24(sp)
	mv	s1,a3
	sd	s2,16(sp)
	sd	ra,40(sp)
	mv	s2,a0
	mulw	a2,a2,a4
	mv	a3,s3
	jal	ra,0x17a82 # luaM_realloc_>
	beqz	a0,0x17b02 # luaM_shrinkvector_+0x34>
	sw	s1,0(s0)
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	addi	sp,sp,48
	ret
	beqz	s3,0x17af2 # luaM_shrinkvector_+0x24>
	li	a1,4
	mv	a0,s2
	jal	ra,0x14162 # luaD_throw>

luaM_growaux_:
	lw	a7,0(a3)
	blt	a2,a7,0x17b86 # luaM_growaux_+0x78>
	addi	sp,sp,-48
	sd	s0,32(sp)
	mv	s0,a5
	srliw	a5,a5,0x1f
	addw	a5,a5,s0
	sd	s1,24(sp)
	sd	s2,16(sp)
	sd	ra,40(sp)
	sd	s3,8(sp)
	sraiw	a5,a5,0x1
	mv	s1,a3
	mv	s2,a0
	blt	a7,a5,0x17b5c # luaM_growaux_+0x4e>
	ble	s0,a7,0x17b8a # luaM_growaux_+0x7c>
	mul	s3,s0,a4
	mv	a0,s2
	mul	a2,a7,a4
	mv	a3,s3
	jal	ra,0x17a82 # luaM_realloc_>
	beqz	a0,0x17b7a # luaM_growaux_+0x6c>
	sw	s0,0(s1)
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	addi	sp,sp,48
	ret
	slliw	s0,a7,0x1
	li	a5,4
	ble	a5,s0,0x17b3a # luaM_growaux_+0x2c>
	li	s0,4
	mul	s3,s0,a4
	mv	a0,s2
	mul	a2,a7,a4
	mv	a3,s3
	jal	ra,0x17a82 # luaM_realloc_>
	bnez	a0,0x17b4c # luaM_growaux_+0x3e>
	beqz	s3,0x17b4c # luaM_growaux_+0x3e>
	li	a1,4
	mv	a0,s2
	jal	ra,0x14162 # luaD_throw>
	mv	a0,a1
	ret
	mv	a3,s0
	mv	a2,a6
	auipc	a1,0x2a
	addi	a1,a1,650 # 0x41e18 # nextage.0+0x40>
	jal	ra,0x13d34 # luaG_runerror>

luaM_saferealloc_:
	addi	sp,sp,-48
	sd	s1,24(sp)
	ld	s1,24(a0)
	sd	s2,16(sp)
	mv	s2,a0
	ld	a5,0(s1)
	ld	a0,8(s1)
	sd	s0,32(sp)
	sd	s3,8(sp)
	sd	s4,0(sp)
	sd	ra,40(sp)
	mv	s4,a1
	mv	s3,a2
	mv	s0,a3
	jalr	a5
	beqz	a0,0x17bd4 # luaM_saferealloc_+0x3a>
	ld	a3,24(s1)
	sub	s0,s0,s3
	add	s0,s0,a3
	sd	s0,24(s1)
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	ld	s4,0(sp)
	addi	sp,sp,48
	ret
	beqz	s0,0x17bf0 # luaM_saferealloc_+0x56>
	mv	a3,s0
	mv	a2,s3
	mv	a1,s4
	mv	a0,s2
	jal	ra,0x179fc # tryagain>
	beqz	a0,0x17c08 # luaM_saferealloc_+0x6e>
	ld	a5,24(s1)
	sub	s0,s0,s3
	add	s0,s0,a5
	sd	s0,24(s1)
	j	0x17bc4 # luaM_saferealloc_+0x2a>
	ld	s0,24(s1)
	ld	ra,40(sp)
	ld	s2,16(sp)
	sub	s0,s0,s3
	sd	s0,24(s1)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s3,8(sp)
	ld	s4,0(sp)
	addi	sp,sp,48
	ret
	li	a1,4
	mv	a0,s2
	jal	ra,0x14162 # luaD_throw>

luaM_malloc_:
	beqz	a1,0x17c46 # luaM_malloc_+0x36>
	addi	sp,sp,-48
	sd	s1,24(sp)
	ld	s1,24(a0)
	sd	s2,16(sp)
	mv	s2,a0
	ld	a5,0(s1)
	ld	a0,8(s1)
	sd	s0,32(sp)
	sd	s3,8(sp)
	sd	ra,40(sp)
	mv	s0,a1
	mv	a3,a1
	li	a1,0
	mv	s3,a2
	jalr	a5
	beqz	a0,0x17c4a # luaM_malloc_+0x3a>
	ld	a1,24(s1)
	ld	ra,40(sp)
	ld	s2,16(sp)
	add	a1,a1,s0
	ld	s0,32(sp)
	sd	a1,24(s1)
	ld	s3,8(sp)
	ld	s1,24(sp)
	addi	sp,sp,48
	ret
	li	a0,0
	ret
	mv	a3,s0
	mv	a2,s3
	li	a1,0
	mv	a0,s2
	jal	ra,0x179fc # tryagain>
	bnez	a0,0x17c32 # luaM_malloc_+0x22>
	li	a1,4
	mv	a0,s2
	jal	ra,0x14162 # luaD_throw>

intarith:
	li	a5,13
	mv	a4,a0
	mv	a0,a2
	bltu	a5,a1,0x17c84 # intarith+0x24>
	auipc	a2,0x2a
	addi	a2,a2,462 # 0x41e38 # nextage.0+0x60>
	slli	a5,a1,0x2
	add	a5,a5,a2
	lw	a5,0(a5)
	add	a5,a5,a2
	jr	a5
	not	a0,a0
	ret
	li	a0,0
	ret
	add	a0,a0,a3
	ret
	sub	a0,a0,a3
	ret
	mul	a0,a0,a3
	ret
	mv	a1,a0
	mv	a2,a3
	mv	a0,a4
	j	0x1edc4 # luaV_mod>
	mv	a1,a0
	mv	a2,a3
	mv	a0,a4
	j	0x1ed8a # luaV_idiv>
	and	a0,a0,a3
	ret
	or	a0,a0,a3
	ret
	xor	a0,a0,a3
	ret
	mv	a1,a3
	j	0x1ee36 # luaV_shiftl>
	neg	a1,a3
	j	0x1ee36 # luaV_shiftl>
	neg	a0,a0
	ret

numarith:
	li	a5,12
	bltu	a5,a1,0x17ce2 # numarith+0x18>
	auipc	a4,0x2a
	addi	a4,a4,416 # 0x41e70 # nextage.0+0x98>
	slli	a1,a1,0x2
	add	a1,a1,a4
	lw	a5,0(a1)
	add	a5,a5,a4
	jr	a5
	fmv.d.x	fa0,zero
	ret
	fneg.d	fa0,fa0
	ret
	fadd.d	fa0,fa0,fa1
	ret
	fsub.d	fa0,fa0,fa1
	ret
	fmul.d	fa0,fa0,fa1
	ret
	j	0x1edfa # luaV_modf>
	auipc	a5,0x2a
	fld	fa5,964(a5) # 0x420c8 # log_2.0+0x178>
	feq.d	a5,fa1,fa5
	beqz	a5,0x17d26 # numarith+0x5c>
	fmul.d	fa0,fa0,fa0
	ret
	fdiv.d	fa0,fa0,fa1
	ret
	fdiv.d	fa0,fa0,fa1
	j	0x31cd0 # floor>
	j	0x32528 # pow>

l_str2dloc:
	addi	sp,sp,-48
	sd	s1,24(sp)
	mv	s1,a1
	addi	a1,sp,8
	sd	s0,32(sp)
	sd	ra,40(sp)
	mv	s0,a0
	jal	ra,0x3625e # strtod>
	ld	a0,8(sp)
	fsd	fa0,0(s1)
	beq	a0,s0,0x17d82 # l_str2dloc+0x58>
	lbu	a3,0(a0)
	auipc	a2,0x2b
	addi	a2,a2,1736 # 0x43410 # luai_ctype_>
	add	a5,a2,a3
	lbu	a5,1(a5)
	andi	a5,a5,8
	beqz	a5,0x17d76 # l_str2dloc+0x4c>
	addi	a5,a0,1
	sd	a5,8(sp)
	lbu	a3,0(a5)
	mv	a0,a5
	addi	a5,a5,1
	add	a4,a2,a3
	lbu	a4,1(a4)
	andi	a4,a4,8
	bnez	a4,0x17d60 # l_str2dloc+0x36>
	bnez	a3,0x17d82 # l_str2dloc+0x58>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	addi	sp,sp,48
	ret
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	li	a0,0
	addi	sp,sp,48
	ret

pushstr:
	addi	sp,sp,-32
	sd	s1,8(sp)
	ld	s1,0(a0)
	sd	s2,0(sp)
	sd	s0,16(sp)
	ld	s2,16(s1)
	mv	s0,a0
	mv	a0,s1
	sd	ra,24(sp)
	jal	ra,0x1bfce # luaS_newlstr>
	sd	a0,0(s2)
	lbu	a5,8(a0)
	mv	a0,s1
	ori	a5,a5,64
	sb	a5,8(s2)
	ld	a5,16(s1)
	lw	a1,8(s0)
	addi	a5,a5,16
	sd	a5,16(s1)
	addiw	a1,a1,1
	sw	a1,8(s0)
	jal	ra,0x1eca0 # luaV_concat>
	li	a5,1
	ld	ra,24(sp)
	sw	a5,8(s0)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret

tostringbuff.part.0.isra.0:
	fmv.x.d	a3,fa0
	addi	sp,sp,-32
	auipc	a2,0x2a
	addi	a2,a2,626 # 0x42050 # log_2.0+0x100>
	li	a1,44
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	mv	s0,a0
	jal	ra,0x3448a # snprintf>
	mv	s1,a0
	auipc	a1,0x2a
	addi	a1,a1,608 # 0x42058 # log_2.0+0x108>
	mv	a0,s0
	jal	ra,0x36ae8 # strspn>
	add	a0,a0,s0
	lbu	a5,0(a0)
	beqz	a5,0x17e1a # tostringbuff.part.0.isra.0+0x42>
	ld	ra,24(sp)
	ld	s0,16(sp)
	mv	a0,s1
	ld	s1,8(sp)
	addi	sp,sp,32
	ret
	jal	ra,0x2f9f6 # localeconv>
	ld	a4,0(a0)
	add	a5,s0,s1
	addiw	a0,s1,1
	lbu	a4,0(a4)
	add	s0,s0,a0
	addiw	s1,s1,2
	sb	a4,0(a5)
	li	a5,48
	sb	a5,0(s0)
	ld	ra,24(sp)
	ld	s0,16(sp)
	mv	a0,s1
	ld	s1,8(sp)
	addi	sp,sp,32
	ret

addstr2buff:
	addi	sp,sp,-48
	sd	s0,32(sp)
	sd	s1,24(sp)
	sd	s2,16(sp)
	sd	s3,8(sp)
	mv	s1,a2
	sd	ra,40(sp)
	sd	s4,0(sp)
	li	a5,200
	lw	a2,12(a0)
	mv	s0,a0
	mv	s2,a1
	addi	s3,a0,16
	bltu	a5,s1,0x17e9c # addstr2buff+0x54>
	li	a4,200
	sext.w	s4,s1
	subw	a4,a4,a2
	blt	a4,s4,0x17ebc # addstr2buff+0x74>
	add	s3,s3,a2
	mv	a2,s1
	mv	a1,s2
	mv	a0,s3
	jal	ra,0x3632a # memcpy>
	lw	a5,12(s0)
	ld	ra,40(sp)
	ld	s1,24(sp)
	addw	a5,a5,s4
	sw	a5,12(s0)
	ld	s0,32(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	ld	s4,0(sp)
	addi	sp,sp,48
	ret
	mv	a1,s3
	jal	ra,0x17d8e # pushstr>
	mv	a0,s0
	sw	zero,12(s0)
	ld	s0,32(sp)
	ld	ra,40(sp)
	ld	s3,8(sp)
	ld	s4,0(sp)
	mv	a2,s1
	mv	a1,s2
	ld	s1,24(sp)
	ld	s2,16(sp)
	addi	sp,sp,48
	j	0x17d8e # pushstr>
	mv	a1,s3
	jal	ra,0x17d8e # pushstr>
	sw	zero,12(s0)
	j	0x17e7a # addstr2buff+0x32>

addnum2buff:
	lw	a2,12(a0)
	addi	sp,sp,-32
	li	a5,200
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	s2,0(sp)
	sd	ra,24(sp)
	subw	a5,a5,a2
	li	a4,43
	mv	s0,a0
	mv	s1,a1
	addi	s2,a0,16
	ble	a5,a4,0x17f26 # addnum2buff+0x5e>
	add	s2,s2,a2
	lbu	a4,8(s1)
	li	a5,3
	beq	a4,a5,0x17f10 # addnum2buff+0x48>
	fld	fa0,0(s1)
	mv	a0,s2
	jal	ra,0x17dd8 # tostringbuff.part.0.isra.0>
	lw	a5,12(s0)
	ld	ra,24(sp)
	ld	s1,8(sp)
	addw	a0,a0,a5
	sw	a0,12(s0)
	ld	s0,16(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret
	ld	a3,0(s1)
	auipc	a2,0x2a
	addi	a2,a2,342 # 0x42068 # log_2.0+0x118>
	li	a1,44
	mv	a0,s2
	jal	ra,0x3448a # snprintf>
	j	0x17efe # addnum2buff+0x36>
	mv	a1,s2
	jal	ra,0x17d8e # pushstr>
	sw	zero,12(s0)
	j	0x17eec # addnum2buff+0x24>

luaO_ceillog2:
	addiw	a5,a0,-1
	li	a4,255
	bleu	a5,a4,0x17f64 # luaO_ceillog2+0x32>
	li	a4,0
	li	a3,255
	srliw	a5,a5,0x8
	addiw	a4,a4,8
	bltu	a3,a5,0x17f44 # luaO_ceillog2+0x12>
	slli	a5,a5,0x20
	auipc	a3,0x2a
	mv	a3,a3
	srli	a5,a5,0x20
	add	a5,a5,a3
	lbu	a0,0(a5)
	addw	a0,a0,a4
	ret
	slli	a5,a5,0x20
	auipc	a3,0x2a
	addi	a3,a3,-22 # 0x41f50 # log_2.0>
	srli	a5,a5,0x20
	add	a5,a5,a3
	lbu	a0,0(a5)
	li	a4,0
	addw	a0,a0,a4
	ret

luaO_rawarith:
	addi	sp,sp,-80
	sd	s0,64(sp)
	sd	s2,48(sp)
	sd	s3,40(sp)
	mv	a5,a2
	sd	ra,72(sp)
	sd	s1,56(sp)
	li	a2,11
	lbu	s1,8(a5)
	mv	s0,a1
	mv	s3,a0
	mv	s2,a4
	blt	a2,a1,0x17fc0 # luaO_rawarith+0x44>
	li	a2,6
	blt	a2,a1,0x17fc6 # luaO_rawarith+0x4a>
	addiw	a2,a1,-4
	li	a1,1
	bltu	a1,a2,0x18002 # luaO_rawarith+0x86>
	li	a4,19
	beq	s1,a4,0x18046 # luaO_rawarith+0xca>
	li	a4,3
	li	a0,0
	bne	s1,a4,0x17ff4 # luaO_rawarith+0x78>
	ld	a5,0(a5)
	fcvt.d.l	fa0,a5
	j	0x18048 # luaO_rawarith+0xcc>
	li	a2,13
	bne	a1,a2,0x18002 # luaO_rawarith+0x86>
	li	a4,3
	bne	s1,a4,0x18068 # luaO_rawarith+0xec>
	ld	a5,0(a5)
	sd	a5,16(sp)
	lbu	a4,8(a3)
	li	a5,3
	bne	a4,a5,0x180a2 # luaO_rawarith+0x126>
	ld	a3,0(a3)
	sd	a3,24(sp)
	ld	a2,16(sp)
	mv	a1,s0
	mv	a0,s3
	jal	ra,0x17c60 # intarith>
	li	a5,3
	sd	a0,0(s2)
	sb	a5,8(s2)
	li	a0,1
	ld	ra,72(sp)
	ld	s0,64(sp)
	ld	s1,56(sp)
	ld	s2,48(sp)
	ld	s3,40(sp)
	addi	sp,sp,80
	ret
	li	a4,3
	beq	s1,a4,0x18088 # luaO_rawarith+0x10c>
	li	a2,19
	bne	s1,a2,0x18078 # luaO_rawarith+0xfc>
	lbu	a2,8(a3)
	fld	fa0,0(a5)
	beq	a2,s1,0x1809e # luaO_rawarith+0x122>
	li	a0,0
	bne	a2,a4,0x17ff4 # luaO_rawarith+0x78>
	ld	a5,0(a3)
	fcvt.d.l	fa1,a5
	mv	a0,s3
	mv	a1,s0
	jal	ra,0x17cca # numarith>
	li	a5,19
	sb	a5,8(s2)
	ld	ra,72(sp)
	ld	s0,64(sp)
	fsd	fa0,0(s2)
	ld	s1,56(sp)
	ld	s2,48(sp)
	ld	s3,40(sp)
	li	a0,1
	addi	sp,sp,80
	ret
	fld	fa0,0(a5)
	lbu	a5,8(a3)
	li	a4,19
	beq	a5,a4,0x1809e # luaO_rawarith+0x122>
	li	a4,3
	li	a0,0
	beq	a5,a4,0x1801e # luaO_rawarith+0xa2>
	ld	ra,72(sp)
	ld	s0,64(sp)
	ld	s1,56(sp)
	ld	s2,48(sp)
	ld	s3,40(sp)
	addi	sp,sp,80
	ret
	li	a2,0
	addi	a1,sp,16
	mv	a0,a5
	sd	a3,8(sp)
	jal	ra,0x1e5f4 # luaV_tointegerns>
	ld	a3,8(sp)
	bnez	a0,0x17fd0 # luaO_rawarith+0x54>
	ld	ra,72(sp)
	ld	s0,64(sp)
	ld	s1,56(sp)
	ld	s2,48(sp)
	ld	s3,40(sp)
	li	a0,0
	addi	sp,sp,80
	ret
	lbu	a4,8(a3)
	ld	a2,0(a5)
	beq	a4,s1,0x180b2 # luaO_rawarith+0x136>
	li	a5,19
	li	a0,0
	bne	a4,a5,0x17ff4 # luaO_rawarith+0x78>
	fcvt.d.l	fa0,a2
	fld	fa1,0(a3)
	j	0x18024 # luaO_rawarith+0xa8>
	li	a2,0
	addi	a1,sp,24
	mv	a0,a3
	jal	ra,0x1e5f4 # luaV_tointegerns>
	beqz	a0,0x18078 # luaO_rawarith+0xfc>
	ld	a3,24(sp)
	j	0x17fde # luaO_rawarith+0x62>
	ld	a3,0(a3)
	mv	a1,s0
	mv	a0,s3
	jal	ra,0x17c60 # intarith>
	sd	a0,0(s2)
	sb	s1,8(s2)
	li	a0,1
	j	0x17ff4 # luaO_rawarith+0x78>

luaO_arith:
	addi	sp,sp,-48
	sd	s0,32(sp)
	sd	s1,24(sp)
	sd	s2,16(sp)
	sd	s3,8(sp)
	sd	s4,0(sp)
	sd	ra,40(sp)
	mv	s0,a0
	mv	s4,a1
	mv	s1,a2
	mv	s2,a3
	mv	s3,a4
	jal	ra,0x17f7c # luaO_rawarith>
	beqz	a0,0x180f6 # luaO_arith+0x2e>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	ld	s4,0(sp)
	addi	sp,sp,48
	ret
	mv	a0,s0
	ld	s0,32(sp)
	ld	ra,40(sp)
	addiw	a4,s4,6
	mv	a3,s3
	ld	s4,0(sp)
	ld	s3,8(sp)
	mv	a2,s2
	mv	a1,s1
	ld	s2,16(sp)
	ld	s1,24(sp)
	addi	sp,sp,48
	j	0x1d40e # luaT_trybinTM>

luaO_hexavalue:
	addiw	a4,a0,1
	auipc	a5,0x2b
	addi	a5,a5,760 # 0x43410 # luai_ctype_>
	add	a5,a5,a4
	lbu	a5,0(a5)
	andi	a5,a5,2
	beqz	a5,0x18130 # luaO_hexavalue+0x1c>
	addiw	a0,a0,-48
	ret
	ori	a0,a0,32
	addiw	a0,a0,-87
	ret

luaO_str2num:
	addi	sp,sp,-288
	sd	s0,272(sp)
	sd	s1,264(sp)
	sd	ra,280(sp)
	sd	s2,256(sp)
	sd	s3,248(sp)
	sd	s4,240(sp)
	sd	s5,232(sp)
	lbu	a3,0(a0)
	auipc	t1,0x2b
	addi	t1,t1,706 # 0x43410 # luai_ctype_>
	mv	s0,a0
	add	a5,t1,a3
	lbu	a5,1(a5)
	mv	s1,a1
	andi	a5,a5,8
	beqz	a5,0x182f2 # luaO_str2num+0x1b8>
	mv	a5,a0
	lbu	a3,1(a5)
	addi	a5,a5,1
	add	a4,t1,a3
	lbu	a4,1(a4)
	andi	a4,a4,8
	bnez	a4,0x1816a # luaO_str2num+0x30>
	li	a4,45
	beq	a3,a4,0x182ec # luaO_str2num+0x1b2>
	addi	a3,a3,-43
	seqz	a3,a3
	slli	a3,a3,0x20
	srli	a3,a3,0x20
	li	t3,0
	add	a5,a5,a3
	lbu	a2,0(a5)
	li	a4,48
	beq	a2,a4,0x1828c # luaO_str2num+0x152>
	add	a4,t1,a2
	lbu	a7,1(a4)
	addiw	a2,a2,-48
	li	a3,0
	andi	a4,a7,2
	beqz	a4,0x182f6 # luaO_str2num+0x1bc>
	auipc	t4,0x2a
	ld	t4,-230(t4) # 0x420d0 # log_2.0+0x180>
	auipc	t5,0x2a
	ld	t5,-230(t5) # 0x420d8 # log_2.0+0x188>
	lbu	a6,1(a5)
	slli	a4,a3,0x2
	add	a4,a4,a3
	add	a3,t1,a6
	lbu	a7,1(a3)
	slli	a4,a4,0x1
	add	a3,a2,a4
	andi	a1,a7,2
	addi	a0,t3,7
	addi	a5,a5,1
	sext.w	a2,a6
	beqz	a1,0x18252 # luaO_str2num+0x118>
	addiw	a2,a2,-48
	bleu	a3,t4,0x181c6 # luaO_str2num+0x8c>
	bne	a3,t5,0x181fe # luaO_str2num+0xc4>
	ble	a2,a0,0x181c6 # luaO_str2num+0x8c>
	auipc	a1,0x2a
	addi	a1,a1,-398 # 0x42070 # log_2.0+0x120>
	mv	a0,s0
	jal	ra,0x36ac4 # strpbrk>
	beqz	a0,0x1835c # luaO_str2num+0x222>
	lbu	a5,0(a0)
	li	a4,110
	ori	a3,a5,32
	mv	s2,a3
	beq	a3,a4,0x18358 # luaO_str2num+0x21e>
	addi	s3,sp,8
	mv	a2,s2
	mv	a1,s3
	mv	a0,s0
	jal	ra,0x17d2a # l_str2dloc>
	beqz	a0,0x18304 # luaO_str2num+0x1ca>
	sub	a0,a0,s0
	fld	fa5,8(sp)
	li	a5,19
	sb	a5,8(s1)
	fsd	fa5,0(s1)
	addi	a0,a0,1
	ld	ra,280(sp)
	ld	s0,272(sp)
	ld	s1,264(sp)
	ld	s2,256(sp)
	ld	s3,248(sp)
	ld	s4,240(sp)
	ld	s5,232(sp)
	addi	sp,sp,288
	ret
	andi	a7,a7,8
	li	a2,0
	beqz	a7,0x18270 # luaO_str2num+0x136>
	lbu	a6,1(a5)
	addi	a5,a5,1
	add	a4,t1,a6
	lbu	a4,1(a4)
	andi	a4,a4,8
	bnez	a4,0x1825c # luaO_str2num+0x122>
	bnez	a2,0x181fe # luaO_str2num+0xc4>
	bnez	a6,0x181fe # luaO_str2num+0xc4>
	mv	a4,a3
	beqz	t3,0x1827e # luaO_str2num+0x144>
	neg	a4,a3
	sd	a4,0(s1)
	li	a4,3
	sb	a4,8(s1)
	sub	a0,a5,s0
	j	0x1823e # luaO_str2num+0x104>
	lbu	a4,1(a5)
	li	a3,88
	andi	a4,a4,223
	bne	a4,a3,0x181a0 # luaO_str2num+0x66>
	lbu	a6,2(a5)
	addi	a5,a5,2
	add	a4,t1,a6
	lbu	a7,1(a4)
	sext.w	a1,a6
	andi	a4,a7,16
	beqz	a4,0x182f6 # luaO_str2num+0x1bc>
	li	a3,0
	j	0x182d6 # luaO_str2num+0x19c>
	addiw	a3,a1,-48
	lbu	a6,1(a5)
	add	a3,a3,a4
	addi	a5,a5,1
	add	a4,t1,a6
	lbu	a7,1(a4)
	sext.w	a1,a6
	andi	a2,a7,16
	beqz	a2,0x18252 # luaO_str2num+0x118>
	andi	a7,a7,2
	ori	a6,a6,32
	slli	a4,a3,0x4
	bnez	a7,0x182b8 # luaO_str2num+0x17e>
	addiw	a3,a6,-87
	j	0x182bc # luaO_str2num+0x182>
	addi	a5,a5,1
	li	t3,1
	j	0x18194 # luaO_str2num+0x5a>
	mv	a5,a0
	j	0x1817c # luaO_str2num+0x42>
	andi	a7,a7,8
	li	a3,0
	li	a2,1
	bnez	a7,0x1825c # luaO_str2num+0x122>
	j	0x181fe # luaO_str2num+0xc4>
	li	a1,46
	mv	a0,s0
	jal	ra,0x3690a # strchr>
	mv	s4,a0
	beqz	a0,0x18358 # luaO_str2num+0x21e>
	mv	a0,s0
	jal	ra,0x369fa # strlen>
	li	a5,200
	bltu	a5,a0,0x18358 # luaO_str2num+0x21e>
	addi	s5,sp,16
	addi	a2,a0,1
	mv	a1,s0
	mv	a0,s5
	jal	ra,0x3632a # memcpy>
	jal	ra,0x2f9f6 # localeconv>
	ld	a4,0(a0)
	sub	a5,s4,s0
	addi	a3,sp,224
	lbu	a4,0(a4)
	add	a5,a5,a3
	mv	a2,s2
	mv	a1,s3
	mv	a0,s5
	sb	a4,-208(a5)
	jal	ra,0x17d2a # l_str2dloc>
	beqz	a0,0x18358 # luaO_str2num+0x21e>
	sub	a0,a0,s5
	j	0x18234 # luaO_str2num+0xfa>
	li	a0,0
	j	0x18240 # luaO_str2num+0x106>
	li	s2,0
	j	0x18222 # luaO_str2num+0xe8>

luaO_utf8esc:
	li	a5,127
	mv	a2,a0
	bltu	a5,a1,0x18372 # luaO_utf8esc+0x12>
	sb	a1,7(a0)
	li	a0,1
	ret
	addi	a4,a0,7
	li	a5,63
	addiw	a6,a0,9
	andi	a3,a1,63
	ori	a3,a3,-128
	srliw	a5,a5,0x1
	sb	a3,0(a4)
	slli	a3,a5,0x20
	srli	a1,a1,0x6
	srli	a3,a3,0x20
	subw	a0,a6,a4
	addi	a4,a4,-1
	bltu	a3,a1,0x1837e # luaO_utf8esc+0x1e>
	not	a5,a5
	li	a4,8
	subw	a4,a4,a0
	slliw	a5,a5,0x1
	add	a2,a2,a4
	or	a5,a5,a1
	sb	a5,0(a2)
	ret

luaO_tostring:
	addi	sp,sp,-80
	sd	s0,64(sp)
	sd	s1,56(sp)
	sd	ra,72(sp)
	sd	s2,48(sp)
	lbu	a4,8(a1)
	li	a5,3
	mv	s0,a1
	mv	s1,a0
	beq	a4,a5,0x183fc # luaO_tostring+0x46>
	fld	fa0,0(a1)
	mv	s2,sp
	mv	a0,s2
	jal	ra,0x17dd8 # tostringbuff.part.0.isra.0>
	mv	a2,a0
	mv	a1,s2
	mv	a0,s1
	jal	ra,0x1bfce # luaS_newlstr>
	sd	a0,0(s0)
	lbu	a5,8(a0)
	ori	a5,a5,64
	sb	a5,8(s0)
	ld	ra,72(sp)
	ld	s0,64(sp)
	ld	s1,56(sp)
	ld	s2,48(sp)
	addi	sp,sp,80
	ret
	ld	a3,0(a1)
	mv	s2,sp
	auipc	a2,0x2a
	addi	a2,a2,-920 # 0x42068 # log_2.0+0x118>
	li	a1,44
	mv	a0,s2
	jal	ra,0x3448a # snprintf>
	mv	a2,a0
	j	0x183da # luaO_tostring+0x24>

luaO_pushvfstring:
	addi	sp,sp,-352
	sd	s10,256(sp)
	mv	s10,a1
	sd	s8,272(sp)
	sd	a0,24(sp)
	mv	s8,a0
	li	a1,37
	mv	a0,s10
	sd	s0,336(sp)
	sd	s1,328(sp)
	sd	s2,320(sp)
	sd	s3,312(sp)
	sd	s4,304(sp)
	sd	s5,296(sp)
	sd	s6,288(sp)
	sd	s7,280(sp)
	sd	s9,264(sp)
	sd	s11,248(sp)
	sd	ra,344(sp)
	mv	s0,a2
	sd	zero,32(sp)
	jal	ra,0x3690a # strchr>
	addi	s2,sp,24
	li	s7,200
	addi	s6,sp,40
	li	s3,42
	auipc	s1,0x2a
	addi	s1,s1,-1458 # 0x41ea4 # nextage.0+0xcc>
	li	s9,127
	addi	s5,sp,8
	addiw	s4,sp,10
	mv	s11,a0
	beqz	a0,0x184c8 # luaO_pushvfstring+0xb2>
	sub	a2,s11,s10
	mv	a1,s10
	mv	a0,s2
	jal	ra,0x17e48 # addstr2buff>
	lbu	a2,1(s11)
	li	a5,37
	beq	a2,a5,0x185b2 # luaO_pushvfstring+0x19c>
	addiw	a5,a2,-73
	andi	a5,a5,255
	bltu	s3,a5,0x1864c # luaO_pushvfstring+0x236>
	slli	a5,a5,0x2
	add	a5,a5,s1
	lw	a5,0(a5)
	add	a5,a5,s1
	jr	a5
	ld	s10,0(s0)
	addi	s0,s0,8
	beqz	s10,0x18640 # luaO_pushvfstring+0x22a>
	mv	a0,s10
	jal	ra,0x369fa # strlen>
	mv	a2,a0
	mv	a1,s10
	mv	a0,s2
	jal	ra,0x17e48 # addstr2buff>
	addi	s10,s11,2
	li	a1,37
	mv	a0,s10
	jal	ra,0x3690a # strchr>
	mv	s11,a0
	bnez	a0,0x1846e # luaO_pushvfstring+0x58>
	mv	a0,s10
	jal	ra,0x369fa # strlen>
	mv	a2,a0
	mv	a1,s10
	mv	a0,s2
	jal	ra,0x17e48 # addstr2buff>
	lw	a2,36(sp)
	mv	a0,s2
	addi	a1,sp,40
	jal	ra,0x17d8e # pushstr>
	ld	a5,16(s8)
	ld	ra,344(sp)
	ld	s0,336(sp)
	ld	a0,-16(a5)
	ld	s1,328(sp)
	ld	s2,320(sp)
	ld	s3,312(sp)
	ld	s4,304(sp)
	ld	s5,296(sp)
	ld	s6,288(sp)
	ld	s7,280(sp)
	ld	s8,272(sp)
	ld	s9,264(sp)
	ld	s10,256(sp)
	ld	s11,248(sp)
	addi	a0,a0,24
	addi	sp,sp,352
	ret
	lw	a2,36(sp)
	li	a5,31
	subw	a4,s7,a2
	add	a0,s6,a2
	ble	a4,a5,0x18632 # luaO_pushvfstring+0x21c>
	ld	a3,0(s0)
	auipc	a2,0x2a
	addi	a2,a2,-1180 # 0x42080 # log_2.0+0x130>
	li	a1,32
	jal	ra,0x3448a # snprintf>
	lw	a5,36(sp)
	addi	s0,s0,8
	addi	s10,s11,2
	addw	a5,a5,a0
	sw	a5,36(sp)
	j	0x184ba # luaO_pushvfstring+0xa4>
	fld	fa5,0(s0)
	li	a5,19
	mv	a1,s5
	mv	a0,s2
	fsd	fa5,8(sp)
	sb	a5,16(sp)
	addi	s0,s0,8
	jal	ra,0x17ec8 # addnum2buff>
	addi	s10,s11,2
	j	0x184ba # luaO_pushvfstring+0xa4>
	ld	a4,0(s0)
	addi	s0,s0,8
	bltu	s9,a4,0x185d2 # luaO_pushvfstring+0x1bc>
	sb	a4,15(sp)
	li	a1,7
	li	a2,1
	add	a1,a1,s5
	mv	a0,s2
	jal	ra,0x17e48 # addstr2buff>
	addi	s10,s11,2
	j	0x184ba # luaO_pushvfstring+0xa4>
	ld	a5,0(s0)
	sd	a5,8(sp)
	mv	a1,s5
	li	a5,3
	mv	a0,s2
	sb	a5,16(sp)
	addi	s0,s0,8
	jal	ra,0x17ec8 # addnum2buff>
	addi	s10,s11,2
	j	0x184ba # luaO_pushvfstring+0xa4>
	lw	a5,0(s0)
	j	0x18574 # luaO_pushvfstring+0x15e>
	lw	a2,36(sp)
	lbu	s10,0(s0)
	addi	s0,s0,8
	subw	a4,s7,a2
	blez	a4,0x18624 # luaO_pushvfstring+0x20e>
	add	a2,a2,s6
	sb	s10,0(a2)
	lw	a5,36(sp)
	addi	s10,s11,2
	addiw	a5,a5,1
	sw	a5,36(sp)
	j	0x184ba # luaO_pushvfstring+0xa4>
	lw	a2,36(sp)
	subw	a5,s7,a2
	blez	a5,0x18616 # luaO_pushvfstring+0x200>
	add	a2,a2,s6
	li	a5,37
	sb	a5,0(a2)
	lw	a5,36(sp)
	addi	s10,s11,2
	addiw	a5,a5,1
	sw	a5,36(sp)
	j	0x184ba # luaO_pushvfstring+0xa4>
	mv	a3,s5
	li	a5,63
	andi	a2,a4,63
	srliw	a5,a5,0x1
	ori	a2,a2,-128
	slli	a1,a5,0x20
	sb	a2,7(a3)
	srli	a4,a4,0x6
	srli	a1,a1,0x20
	subw	a2,s4,a3
	addi	a3,a3,-1
	bltu	a1,a4,0x185d8 # luaO_pushvfstring+0x1c2>
	not	a5,a5
	li	a3,8
	addi	a1,sp,240
	subw	a3,a3,a2
	slliw	a5,a5,0x1
	add	a3,a3,a1
	or	a5,a5,a4
	li	a1,8
	sb	a5,-232(a3)
	sub	a1,a1,a2
	j	0x18564 # luaO_pushvfstring+0x14e>
	mv	a1,s6
	mv	a0,s2
	jal	ra,0x17d8e # pushstr>
	mv	a2,s6
	sw	zero,36(sp)
	j	0x185be # luaO_pushvfstring+0x1a8>
	mv	a1,s6
	mv	a0,s2
	jal	ra,0x17d8e # pushstr>
	mv	a2,s6
	sw	zero,36(sp)
	j	0x185a2 # luaO_pushvfstring+0x18c>
	mv	a0,s2
	mv	a1,s6
	jal	ra,0x17d8e # pushstr>
	mv	a0,s6
	sw	zero,36(sp)
	j	0x1851a # luaO_pushvfstring+0x104>
	li	a2,6
	auipc	s10,0x2a
	addi	s10,s10,-1482 # 0x42078 # log_2.0+0x128>
	j	0x184ae # luaO_pushvfstring+0x98>
	auipc	a1,0x2a
	addi	a1,a1,-1476 # 0x42088 # log_2.0+0x138>
	mv	a0,s8
	jal	ra,0x13d34 # luaG_runerror>

luaO_pushfstring:
	addi	sp,sp,-80
	addi	t1,sp,32
	sd	a2,32(sp)
	mv	a2,t1
	sd	ra,24(sp)
	sd	a3,40(sp)
	sd	a4,48(sp)
	sd	a5,56(sp)
	sd	a6,64(sp)
	sd	a7,72(sp)
	sd	t1,8(sp)
	jal	ra,0x18416 # luaO_pushvfstring>
	ld	ra,24(sp)
	addi	sp,sp,80
	ret

luaO_chunkid:
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	s2,0(sp)
	sd	ra,24(sp)
	lbu	a5,0(a1)
	li	a4,61
	mv	s2,a1
	mv	s0,a0
	mv	s1,a2
	beq	a5,a4,0x18786 # luaO_chunkid+0x10a>
	li	a4,64
	bne	a5,a4,0x186d6 # luaO_chunkid+0x5a>
	li	a5,60
	addi	a1,a1,1
	bleu	a2,a5,0x186c8 # luaO_chunkid+0x4c>
	li	a5,46
	addi	s1,a2,-56
	sb	a5,0(a0)
	sb	a5,1(a0)
	sb	a5,2(a0)
	li	a2,57
	add	a1,s2,s1
	addi	a0,a0,3
	ld	s0,16(sp)
	ld	ra,24(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	j	0x3632a # memcpy>
	li	a1,10
	mv	a0,s2
	jal	ra,0x3690a # strchr>
	auipc	a5,0x2a
	addi	a5,a5,-1574 # 0x420b8 # log_2.0+0x168>
	lbu	t3,0(a5)
	lbu	t1,1(a5)
	lbu	a7,2(a5)
	lbu	a6,3(a5)
	lbu	a1,4(a5)
	lbu	a2,5(a5)
	lbu	a3,6(a5)
	lbu	a4,7(a5)
	lbu	a5,8(a5)
	sb	t3,0(s0)
	sb	t1,1(s0)
	sb	a5,8(s0)
	sb	a7,2(s0)
	sb	a6,3(s0)
	sb	a1,4(s0)
	sb	a2,5(s0)
	sb	a3,6(s0)
	sb	a4,7(s0)
	li	a5,44
	addi	s0,s0,9
	bleu	s1,a5,0x187a8 # luaO_chunkid+0x12c>
	bnez	a0,0x187aa # luaO_chunkid+0x12e>
	li	a5,45
	bleu	s1,a5,0x18746 # luaO_chunkid+0xca>
	li	s1,45
	mv	a2,s1
	mv	a1,s2
	mv	a0,s0
	jal	ra,0x3632a # memcpy>
	add	a2,s0,s1
	li	a5,46
	sb	a5,0(a2)
	sb	a5,1(a2)
	sb	a5,2(a2)
	addi	a2,a2,3
	li	a5,34
	sb	a5,0(a2)
	li	a5,93
	sb	a5,1(a2)
	sb	zero,2(a2)
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret
	li	a5,60
	addi	a1,a1,1
	bleu	a2,a5,0x186c8 # luaO_chunkid+0x4c>
	li	a2,59
	jal	ra,0x3632a # memcpy>
	sb	zero,59(s0)
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret
	beqz	a0,0x187b0 # luaO_chunkid+0x134>
	sub	s1,a0,s2
	j	0x1873a # luaO_chunkid+0xbe>
	mv	a2,s1
	mv	a1,s2
	mv	a0,s0
	jal	ra,0x3632a # memcpy>
	add	a2,s0,s1
	j	0x18766 # luaO_chunkid+0xea>

newlabelentry:
	addi	sp,sp,-64
	sd	s1,40(sp)
	lw	s1,8(a1)
	sd	s0,48(sp)
	sd	s2,32(sp)
	mv	s0,a1
	mv	s2,a0
	ld	a1,0(a1)
	ld	a0,56(a0)
	lui	a5,0x8
	sd	s3,24(sp)
	sd	s4,16(sp)
	sd	s5,8(sp)
	mv	s4,a3
	mv	s5,a2
	mv	s3,a4
	addi	a5,a5,-1
	li	a4,24
	addi	a3,s0,12
	mv	a2,s1
	auipc	a6,0x2a
	addi	a6,a6,-1714 # 0x42138 # luaP_opmodes+0x58>
	sd	ra,56(sp)
	jal	ra,0x17b0e # luaM_growaux_>
	slli	a5,s1,0x1
	add	a5,a5,s1
	ld	a4,48(s2)
	slli	a5,a5,0x3
	sd	a0,0(s0)
	add	a0,a0,a5
	sd	s5,0(a0)
	sw	s4,12(a0)
	lbu	a4,66(a4)
	addiw	a5,s1,1
	sb	zero,17(a0)
	sb	a4,16(a0)
	sw	s3,8(a0)
	ld	ra,56(sp)
	sw	a5,8(s0)
	ld	s0,48(sp)
	ld	s2,32(sp)
	ld	s3,24(sp)
	ld	s4,16(sp)
	ld	s5,8(sp)
	mv	a0,s1
	ld	s1,40(sp)
	addi	sp,sp,64
	ret

errorlimit:
	ld	a5,0(a0)
	ld	a4,16(a0)
	addi	sp,sp,-48
	lw	a5,44(a5)
	sd	s0,32(sp)
	sd	s1,24(sp)
	sd	s2,16(sp)
	sd	ra,40(sp)
	ld	s2,56(a4)
	mv	s0,a0
	mv	a3,a1
	mv	s1,a2
	auipc	a4,0x2a
	addi	a4,a4,-1804 # 0x42148 # luaP_opmodes+0x68>
	bnez	a5,0x18876 # errorlimit+0x3c>
	auipc	a1,0x2a
	addi	a1,a1,-1774 # 0x42170 # luaP_opmodes+0x90>
	mv	a2,s1
	mv	a0,s2
	jal	ra,0x1865a # luaO_pushfstring>
	mv	a1,a0
	ld	a0,16(s0)
	jal	ra,0x25b74 # luaX_syntaxerror>
	sd	a1,8(sp)
	mv	a2,a5
	auipc	a1,0x2a
	addi	a1,a1,-1826 # 0x42158 # luaP_opmodes+0x78>
	mv	a0,s2
	jal	ra,0x1865a # luaO_pushfstring>
	ld	a3,8(sp)
	mv	a4,a0
	j	0x1885e # errorlimit+0x24>

allocupvalue:
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	s2,0(sp)
	sd	ra,24(sp)
	sd	s1,8(sp)
	ld	s2,0(a0)
	lbu	a5,67(a0)
	li	a4,255
	lw	s0,16(s2)
	beq	a5,a4,0x1891a # allocupvalue+0x8c>
	sext.w	a2,a5
	ld	a5,16(a0)
	ld	a1,80(s2)
	mv	s1,a0
	ld	a0,56(a5)
	auipc	a6,0x2a
	addi	a6,a6,-1834 # 0x42190 # luaP_opmodes+0xb0>
	li	a5,255
	li	a4,16
	addi	a3,s2,16
	jal	ra,0x17b0e # luaM_growaux_>
	lw	a5,16(s2)
	sd	a0,80(s2)
	ble	a5,s0,0x188fe # allocupvalue+0x70>
	addiw	a4,a5,-1
	subw	a4,a4,s0
	slli	a4,a4,0x20
	srli	a4,a4,0x20
	add	a4,a4,s0
	addi	a4,a4,1
	slli	a5,s0,0x4
	slli	a4,a4,0x4
	add	a5,a5,a0
	add	a4,a4,a0
	sd	zero,0(a5) # 0x8000 # exit-0x8120>
	addi	a5,a5,16
	bne	a5,a4,0x188f4 # allocupvalue+0x66>
	lbu	a5,67(s1)
	addiw	a4,a5,1
	sb	a4,67(s1)
	ld	ra,24(sp)
	ld	s0,16(sp)
	slli	a5,a5,0x4
	ld	s1,8(sp)
	ld	s2,0(sp)
	add	a0,a0,a5
	addi	sp,sp,32
	ret
	auipc	a2,0x2a
	addi	a2,a2,-1930 # 0x42190 # luaP_opmodes+0xb0>
	li	a1,255
	jal	ra,0x1883a # errorlimit>

new_localvar:
	addi	sp,sp,-32
	sd	s0,16(sp)
	ld	s0,88(a0)
	sd	s2,0(sp)
	ld	s2,48(a0)
	lw	a2,8(s0)
	sd	ra,24(sp)
	lw	a5,56(s2)
	addiw	a2,a2,1
	sd	s1,8(sp)
	li	a4,200
	subw	a5,a2,a5
	ld	a0,56(a0)
	blt	a4,a5,0x18998 # new_localvar+0x6e>
	mv	s1,a1
	ld	a1,0(s0)
	lui	a5,0x10
	addi	a3,s0,12
	addi	a5,a5,-1
	li	a4,24
	auipc	a6,0x2a
	addi	a6,a6,-1982 # 0x421a0 # luaP_opmodes+0xc0>
	jal	ra,0x17b0e # luaM_growaux_>
	lw	a4,8(s0)
	lw	a3,56(s2)
	ld	ra,24(sp)
	slli	a5,a4,0x1
	add	a5,a5,a4
	addiw	a2,a4,1
	sd	a0,0(s0)
	sw	a2,8(s0)
	slli	a5,a5,0x3
	ld	s0,16(sp)
	add	a5,a5,a0
	sd	s1,16(a5)
	sb	zero,9(a5) # 0x10009 # exit-0x117>
	ld	s1,8(sp)
	ld	s2,0(sp)
	subw	a0,a4,a3
	addi	sp,sp,32
	ret
	auipc	a2,0x2a
	addi	a2,a2,-2040 # 0x421a0 # luaP_opmodes+0xc0>
	li	a1,200
	mv	a0,s2
	jal	ra,0x1883a # errorlimit>

error_expected:
	addi	sp,sp,-32
	sd	s1,8(sp)
	ld	s1,56(a0)
	sd	ra,24(sp)
	sd	s0,16(sp)
	mv	s0,a0
	jal	ra,0x2567a # luaX_token2str>
	mv	a2,a0
	auipc	a1,0x29
	addi	a1,a1,2036 # 0x421b0 # luaP_opmodes+0xd0>
	mv	a0,s1
	jal	ra,0x1865a # luaO_pushfstring>
	mv	a1,a0
	mv	a0,s0
	jal	ra,0x25b74 # luaX_syntaxerror>

check_match:
	lw	a5,16(a0)
	beq	a5,a1,0x18a20 # check_match+0x4e>
	lw	a5,4(a0)
	addi	sp,sp,-48
	sd	s0,32(sp)
	sd	ra,40(sp)
	sd	s1,24(sp)
	sd	s2,16(sp)
	mv	s0,a0
	beq	a5,a3,0x18a24 # check_match+0x52>
	sd	a3,8(sp)
	ld	s2,56(s0)
	sd	a2,0(sp)
	jal	ra,0x2567a # luaX_token2str>
	ld	a2,0(sp)
	mv	s1,a0
	mv	a0,s0
	mv	a1,a2
	jal	ra,0x2567a # luaX_token2str>
	ld	a3,8(sp)
	auipc	a1,0x29
	addi	a1,a1,1980 # 0x421c0 # luaP_opmodes+0xe0>
	mv	a2,s1
	mv	a4,a3
	mv	a3,a0
	mv	a0,s2
	jal	ra,0x1865a # luaO_pushfstring>
	mv	a1,a0
	mv	a0,s0
	jal	ra,0x25b74 # luaX_syntaxerror>
	j	0x2672a # luaX_next>
	jal	ra,0x189aa # error_expected>

adjust_assign.isra.0:
	lw	a5,0(a3)
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	s2,0(sp)
	sd	ra,24(sp)
	subw	s2,a1,a2
	li	a4,1
	addiw	a2,a5,-18
	mv	s0,s2
	mv	s1,a0
	bleu	a2,a4,0x18a8c # adjust_assign.isra.0+0x64>
	bnez	a5,0x18a7c # adjust_assign.isra.0+0x54>
	lbu	a1,68(s1)
	bgtz	s2,0x18a62 # adjust_assign.isra.0+0x3a>
	addw	s0,s0,a1
	sb	s0,68(s1)
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret
	mv	a2,s2
	mv	a0,s1
	jal	ra,0x23ada # luaK_nil>
	ld	s0,16(sp)
	ld	ra,24(sp)
	mv	a1,s2
	mv	a0,s1
	ld	s2,0(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	j	0x23c7c # luaK_reserveregs>
	mv	a1,a3
	jal	ra,0x24310 # luaK_exp2nextreg>
	lbu	a1,68(s1)
	blez	s2,0x18a50 # adjust_assign.isra.0+0x28>
	j	0x18a62 # adjust_assign.isra.0+0x3a>
	addiw	a2,s2,1
	sext.w	a5,a2
	not	a5,a5
	srai	a5,a5,0x3f
	and	a2,a2,a5
	sext.w	a2,a2
	mv	a1,a3
	jal	ra,0x23d14 # luaK_setreturns>
	bgtz	s2,0x18a6a # adjust_assign.isra.0+0x42>
	lbu	a1,68(s1)
	addw	s0,s0,a1
	sb	s0,68(s1)
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret

singlevaraux.part.0:
	addi	sp,sp,-48
	sd	s0,32(sp)
	sd	s1,24(sp)
	sd	ra,40(sp)
	sd	s2,16(sp)
	lbu	a5,66(a0)
	mv	s0,a0
	li	a4,-1
	addiw	a5,a5,-1
	ld	a0,16(a0)
	lw	a7,56(s0)
	mv	s1,a2
	beq	a5,a4,0x18b5a # singlevaraux.part.0+0x9c>
	ld	a4,88(a0)
	add	a0,a5,a7
	slli	a2,a0,0x1
	ld	a4,0(a4)
	add	a2,a2,a0
	slli	a2,a2,0x3
	add	a4,a4,a2
	li	t1,-1
	j	0x18afc # singlevaraux.part.0+0x3e>
	addiw	a5,a5,-1
	addi	a4,a4,-24
	beq	a5,t1,0x18b5a # singlevaraux.part.0+0x9c>
	ld	a6,16(a4)
	addw	t3,a7,a5
	bne	a1,a6,0x18af4 # singlevaraux.part.0+0x36>
	lbu	a1,9(a4)
	li	a2,3
	beq	a1,a2,0x18b8c # singlevaraux.part.0+0xce>
	lbu	a4,10(a4)
	li	a2,-1
	slli	a5,a5,0x30
	srli	a5,a5,0x30
	sd	a2,16(s1)
	li	a2,9
	sw	a2,0(s1)
	sh	a5,10(s1)
	sb	a4,8(s1)
	bnez	a3,0x18b4e # singlevaraux.part.0+0x90>
	ld	a4,24(s0)
	sext.w	a3,a5
	lbu	a2,16(a4)
	bleu	a2,a5,0x18b44 # singlevaraux.part.0+0x86>
	ld	a4,0(a4)
	lbu	a5,16(a4)
	bltu	a3,a5,0x18b3a # singlevaraux.part.0+0x7c>
	li	a5,1
	sb	a5,17(a4)
	sb	a5,70(s0)
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	addi	sp,sp,48
	ret
	ld	a5,0(s0)
	lbu	a2,67(s0)
	ld	a5,80(a5)
	beqz	a2,0x18ba4 # singlevaraux.part.0+0xe6>
	li	a4,0
	j	0x18b6e # singlevaraux.part.0+0xb0>
	addiw	a4,a4,1
	beq	a4,a2,0x18ba4 # singlevaraux.part.0+0xe6>
	ld	a3,0(a5)
	addi	a5,a5,16
	bne	a1,a3,0x18b68 # singlevaraux.part.0+0xaa>
	ld	ra,40(sp)
	ld	s0,32(sp)
	li	a5,-1
	sd	a5,16(s1)
	li	a5,10
	sw	a5,0(s1)
	sw	a4,8(s1)
	ld	s2,16(sp)
	ld	s1,24(sp)
	addi	sp,sp,48
	ret
	ld	ra,40(sp)
	ld	s0,32(sp)
	li	a5,-1
	sd	a5,16(s1)
	li	a5,11
	sw	a5,0(s1)
	sw	t3,8(s1)
	ld	s2,16(sp)
	ld	s1,24(sp)
	addi	sp,sp,48
	ret
	ld	a0,8(s0)
	beqz	a0,0x18c06 # singlevaraux.part.0+0x148>
	li	a3,0
	mv	a2,s1
	sd	a1,8(sp)
	jal	ra,0x18abe # singlevaraux.part.0>
	lw	a5,0(s1)
	li	s2,1
	addiw	a5,a5,-9
	bltu	s2,a5,0x18b4e # singlevaraux.part.0+0x90>
	mv	a0,s0
	jal	ra,0x1888e # allocupvalue>
	lw	a3,0(s1)
	li	a5,9
	ld	a4,8(s0)
	ld	a1,8(sp)
	beq	a3,a5,0x18c14 # singlevaraux.part.0+0x156>
	sb	zero,8(a0)
	lw	a5,8(s1)
	sb	a5,9(a0)
	ld	a4,0(a4)
	slli	a5,a5,0x4
	ld	a4,80(a4)
	add	a5,a5,a4
	lbu	a5,10(a5)
	sb	a5,10(a0)
	ld	a4,0(s0)
	sd	a1,0(a0)
	lbu	a5,9(a4)
	andi	a5,a5,32
	beqz	a5,0x18bfe # singlevaraux.part.0+0x140>
	lbu	a5,9(a1)
	andi	a5,a5,24
	bnez	a5,0x18c42 # singlevaraux.part.0+0x184>
	lbu	a4,67(s0)
	addiw	a4,a4,-1
	j	0x18b76 # singlevaraux.part.0+0xb8>
	li	a5,-1
	sd	a5,16(s1)
	sw	zero,0(s1)
	sw	zero,8(s1)
	j	0x18b4e # singlevaraux.part.0+0x90>
	sb	s2,8(a0)
	lbu	a5,8(s1)
	sb	a5,9(a0)
	ld	a3,16(a4)
	lhu	a5,10(s1)
	lw	a4,56(a4)
	ld	a3,88(a3)
	addw	a4,a4,a5
	ld	a3,0(a3)
	slli	a5,a4,0x1
	add	a5,a5,a4
	slli	a5,a5,0x3
	add	a5,a5,a3
	lbu	a5,9(a5)
	sb	a5,10(a0)
	j	0x18be8 # singlevaraux.part.0+0x12a>
	ld	a5,16(s0)
	mv	a2,a1
	mv	a1,a4
	ld	a0,56(a5)
	jal	ra,0x1706e # luaC_barrier_>
	j	0x18bfe # singlevaraux.part.0+0x140>

fieldsel:
	addi	sp,sp,-80
	sd	s2,48(sp)
	ld	s2,48(a0)
	sd	s0,64(sp)
	mv	s0,a0
	mv	a0,s2
	sd	ra,72(sp)
	sd	s1,56(sp)
	sd	s3,40(sp)
	mv	s1,a1
	jal	ra,0x24524 # luaK_exp2anyregup>
	mv	a0,s0
	jal	ra,0x2672a # luaX_next>
	lw	a4,16(s0)
	li	a5,291
	bne	a4,a5,0x18ca6 # fieldsel+0x56>
	mv	a0,s0
	ld	s3,24(s0)
	jal	ra,0x2672a # luaX_next>
	li	a5,-1
	sd	a5,24(sp)
	addi	a2,sp,8
	mv	a1,s1
	mv	a0,s2
	li	a5,7
	sd	s3,16(sp)
	sw	a5,8(sp)
	jal	ra,0x248c6 # luaK_indexed>
	ld	ra,72(sp)
	ld	s0,64(sp)
	ld	s1,56(sp)
	ld	s2,48(sp)
	ld	s3,40(sp)
	addi	sp,sp,80
	ret
	li	a1,291
	mv	a0,s0
	jal	ra,0x189aa # error_expected>

singlevar:
	lw	a4,16(a0)
	addi	sp,sp,-80
	sd	ra,72(sp)
	sd	s0,64(sp)
	sd	s1,56(sp)
	sd	s2,48(sp)
	sd	s3,40(sp)
	li	a5,291
	bne	a4,a5,0x18d34 # singlevar+0x84>
	mv	s0,a0
	ld	s3,24(a0)
	mv	s1,a1
	jal	ra,0x2672a # luaX_next>
	ld	s2,48(s0)
	beqz	s2,0x18cf8 # singlevar+0x48>
	li	a3,1
	mv	a2,s1
	mv	a1,s3
	mv	a0,s2
	jal	ra,0x18abe # singlevaraux.part.0>
	lw	a5,0(s1)
	beqz	a5,0x18d26 # singlevar+0x76>
	ld	ra,72(sp)
	ld	s0,64(sp)
	ld	s1,56(sp)
	ld	s2,48(sp)
	ld	s3,40(sp)
	addi	sp,sp,80
	ret
	li	a5,-1
	sd	a5,16(s1)
	sw	zero,0(s1)
	sw	zero,8(s1)
	li	a5,-1
	sd	a5,24(sp)
	addi	a2,sp,8
	mv	a1,s1
	mv	a0,s2
	li	a5,7
	sd	s3,16(sp)
	sw	a5,8(sp)
	jal	ra,0x248c6 # luaK_indexed>
	ld	ra,72(sp)
	ld	s0,64(sp)
	ld	s1,56(sp)
	ld	s2,48(sp)
	ld	s3,40(sp)
	addi	sp,sp,80
	ret
	ld	a1,104(s0)
	li	a3,1
	mv	a2,s1
	mv	a0,s2
	jal	ra,0x18abe # singlevaraux.part.0>
	j	0x18d04 # singlevar+0x54>
	li	a1,291
	jal	ra,0x189aa # error_expected>

open_func:
	ld	a5,48(a0)
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	s2,0(sp)
	sd	ra,24(sp)
	ld	s2,0(a1)
	sd	a5,8(a1)
	sd	a0,16(a1)
	sd	a1,48(a0)
	lw	a5,44(s2)
	sw	zero,64(a1)
	sh	zero,68(a1)
	sb	zero,70(a1)
	ld	a4,88(a0)
	sd	zero,48(a1)
	sw	a5,40(a1)
	mv	s0,a1
	lw	a5,8(a4)
	lw	a1,40(a4)
	sw	zero,44(s0)
	sw	a5,56(s0)
	sw	a1,60(s0)
	sd	zero,24(s0)
	sd	zero,32(s0)
	ld	a3,96(a0)
	lbu	a5,9(s2)
	mv	s1,a2
	sd	a3,112(s2)
	andi	a5,a5,32
	bnez	a5,0x18dbe # open_func+0x82>
	li	a5,2
	sb	a5,12(s2)
	lw	a5,24(a4)
	sw	a1,8(s1)
	sh	zero,16(s1)
	sw	a5,12(s1)
	sb	zero,18(s1)
	li	a4,0
	li	a5,0
	sb	a5,19(s1)
	sd	a4,0(s1)
	sd	s1,24(s0)
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret
	lbu	a5,9(a3)
	andi	a5,a5,24
	beqz	a5,0x18d92 # open_func+0x56>
	ld	a0,56(a0)
	mv	a2,a3
	mv	a1,s2
	jal	ra,0x1706e # luaC_barrier_>
	ld	a5,16(s0)
	lbu	a2,66(s0)
	li	a1,2
	ld	a5,88(a5)
	ld	a4,24(s0)
	lw	a3,40(a5)
	sb	a1,12(s2)
	sb	zero,18(s1)
	sb	a2,16(s1)
	lw	a5,24(a5)
	sw	a3,8(s1)
	sb	zero,17(s1)
	sw	a5,12(s1)
	beqz	a4,0x18e00 # open_func+0xc4>
	lbu	a5,19(a4)
	snez	a5,a5
	j	0x18daa # open_func+0x6e>
	li	a5,0
	j	0x18daa # open_func+0x6e>

adjustlocalvars:
	addi	sp,sp,-96
	sd	s5,40(sp)
	ld	s5,48(a0)
	sd	s2,64(sp)
	sd	ra,88(sp)
	sd	s0,80(sp)
	sd	s1,72(sp)
	sd	s3,56(sp)
	sd	s4,48(sp)
	sd	s6,32(sp)
	sd	s7,24(sp)
	sd	s8,16(sp)
	sd	s9,8(sp)
	lbu	s7,66(s5)
	mv	s2,a0
	li	a6,3
	li	a0,-1
	sext.w	a2,s7
	j	0x18e50 # adjustlocalvars+0x4c>
	ld	a3,16(s5)
	lw	a5,56(s5)
	ld	a3,88(a3)
	addw	a4,a4,a5
	slli	a5,a4,0x1
	ld	a3,0(a3)
	add	a5,a5,a4
	slli	a5,a5,0x3
	add	a5,a5,a3
	lbu	a3,9(a5)
	bne	a3,a6,0x18f76 # adjustlocalvars+0x172>
	addiw	a2,a2,-1
	mv	a4,a2
	bne	a2,a0,0x18e30 # adjustlocalvars+0x2c>
	li	s1,0
	beqz	a1,0x18f5c # adjustlocalvars+0x158>
	lh	a2,64(s5)
	lui	s3,0x8
	sext.w	s8,s1
	auipc	s4,0x29
	addi	s4,s4,824 # 0x421a0 # luaP_opmodes+0xc0>
	addw	s1,s1,a1
	addi	s3,s3,-1
	ld	a4,16(s5)
	addiw	a5,s7,1
	sb	a5,66(s5)
	lw	a5,56(s5)
	ld	a3,88(a4)
	ld	s6,0(s5)
	addw	a4,a5,s7
	slli	a5,a4,0x1
	ld	s7,0(a3)
	add	a5,a5,a4
	ld	a1,104(s6)
	ld	a0,56(s2)
	slli	a5,a5,0x3
	add	s7,s7,a5
	sb	s8,10(s7)
	mv	a5,s3
	mv	a6,s4
	li	a4,16
	addi	a3,s6,36
	ld	s9,16(s7)
	lw	s0,36(s6)
	jal	ra,0x17b0e # luaM_growaux_>
	lw	a5,36(s6)
	sd	a0,104(s6)
	ble	a5,s0,0x18eec # adjustlocalvars+0xe8>
	addiw	a4,a5,-1
	subw	a4,a4,s0
	slli	a4,a4,0x20
	srli	a4,a4,0x20
	add	a4,a4,s0
	addi	a4,a4,1
	slli	a5,s0,0x4
	slli	a4,a4,0x4
	add	a5,a5,a0
	add	a4,a4,a0
	sd	zero,0(a5)
	addi	a5,a5,16
	bne	a4,a5,0x18ee2 # adjustlocalvars+0xde>
	lh	a5,64(s5)
	lw	a4,32(s5)
	slli	a3,a5,0x4
	add	a0,a0,a3
	sd	s9,0(a0)
	sw	a4,8(a0)
	lbu	a4,9(s6)
	andi	a4,a4,32
	beqz	a4,0x18f12 # adjustlocalvars+0x10e>
	lbu	a4,9(s9)
	andi	a4,a4,24
	bnez	a4,0x18f32 # adjustlocalvars+0x12e>
	addiw	a2,a5,1
	slliw	a2,a2,0x10
	sraiw	a2,a2,0x10
	sh	a2,64(s5)
	sh	a5,12(s7)
	addiw	s8,s8,1
	beq	s1,s8,0x18f5c # adjustlocalvars+0x158>
	lbu	s7,66(s5)
	j	0x18e74 # adjustlocalvars+0x70>
	ld	a0,56(s2)
	mv	a2,s9
	mv	a1,s6
	jal	ra,0x1706e # luaC_barrier_>
	lh	a5,64(s5)
	addiw	s8,s8,1
	addiw	a2,a5,1
	slliw	a2,a2,0x10
	sraiw	a2,a2,0x10
	sh	a2,64(s5)
	sh	a5,12(s7)
	bne	s1,s8,0x18f2c # adjustlocalvars+0x128>
	ld	ra,88(sp)
	ld	s0,80(sp)
	ld	s1,72(sp)
	ld	s2,64(sp)
	ld	s3,56(sp)
	ld	s4,48(sp)
	ld	s5,40(sp)
	ld	s6,32(sp)
	ld	s7,24(sp)
	ld	s8,16(sp)
	ld	s9,8(sp)
	addi	sp,sp,96
	ret
	lbu	s1,10(a5)
	addiw	s1,s1,1
	j	0x18e5a # adjustlocalvars+0x56>

createlabel:
	addi	sp,sp,-80
	sd	s6,16(sp)
	ld	s6,48(a0)
	sd	s1,56(sp)
	ld	s1,88(a0)
	sd	s4,32(sp)
	mv	s4,a0
	mv	a0,s6
	sd	ra,72(sp)
	sd	s0,64(sp)
	sd	s2,48(sp)
	sd	s3,40(sp)
	sd	s5,24(sp)
	mv	s3,a1
	sd	s7,8(sp)
	sd	s8,0(sp)
	mv	s5,a3
	mv	s8,a2
	jal	ra,0x23a54 # luaK_getlabel>
	lw	s0,40(s1)
	mv	s7,a0
	ld	a1,32(s1)
	ld	a0,56(s4)
	lui	a5,0x8
	addi	a5,a5,-1
	li	a4,24
	mv	a2,s0
	auipc	a6,0x29
	addi	a6,a6,382 # 0x42138 # luaP_opmodes+0x58>
	addi	a3,s1,44
	jal	ra,0x17b0e # luaM_growaux_>
	slli	a5,s0,0x1
	add	a5,a5,s0
	ld	a4,48(s4)
	slli	a5,a5,0x3
	sd	a0,32(s1)
	add	s2,a0,a5
	sd	s3,0(s2)
	sw	s8,12(s2)
	lbu	a5,66(a4)
	addiw	s0,s0,1
	sb	zero,17(s2)
	sb	a5,16(s2)
	sw	s7,8(s2)
	sw	s0,40(s1)
	beqz	s5,0x19008 # createlabel+0x8a>
	ld	a5,24(s6)
	lbu	a5,16(a5) # 0x8010 # exit-0x8110>
	sb	a5,16(s2)
	ld	s5,88(s4)
	ld	a5,24(a4)
	li	s7,0
	lw	a3,24(s5)
	lw	s1,12(a5)
	sext.w	a5,a3
	blt	s1,a5,0x1902e # createlabel+0xb0>
	j	0x190b4 # createlabel+0x136>
	addiw	s1,s1,1
	sext.w	a5,a3
	ble	a5,s1,0x190b0 # createlabel+0x132>
	ld	s3,0(s2)
	ld	a5,16(s5)
	slli	s0,s1,0x1
	add	s0,s0,s1
	slli	s0,s0,0x3
	add	a5,a5,s0
	ld	a4,0(a5)
	bne	s3,a4,0x19020 # createlabel+0xa2>
	ld	s3,88(s4)
	lbu	a1,17(a5)
	lbu	a3,16(s2)
	ld	a5,16(s3) # 0x8010 # exit-0x8110>
	lw	a2,8(s2)
	ld	a0,48(s4)
	add	a5,a5,s0
	lbu	a4,16(a5)
	or	s7,s7,a1
	bltu	a4,a3,0x19116 # createlabel+0x198>
	lw	a1,8(a5)
	jal	ra,0x23a5c # luaK_patchlist>
	lw	a5,24(s3)
	addiw	a4,a5,-1
	mv	s8,a4
	ble	a4,s1,0x190a0 # createlabel+0x122>
	addiw	a2,a5,-2
	subw	a2,a2,s1
	slli	a2,a2,0x20
	srli	a2,a2,0x20
	ld	a0,16(s3)
	addi	a2,a2,1
	slli	a5,a2,0x1
	add	a2,a2,a5
	addi	a1,s0,24
	add	a1,a1,a0
	slli	a2,a2,0x3
	add	a0,a0,s0
	jal	ra,0x36720 # memmove>
	sw	s8,24(s3)
	lw	a3,24(s5)
	sext.w	a5,a3
	blt	s1,a5,0x1902a # createlabel+0xac>
	bnez	s7,0x190ce # createlabel+0x150>
	li	a0,0
	ld	ra,72(sp)
	ld	s0,64(sp)
	ld	s1,56(sp)
	ld	s2,48(sp)
	ld	s3,40(sp)
	ld	s4,32(sp)
	ld	s5,24(sp)
	ld	s6,16(sp)
	ld	s7,8(sp)
	ld	s8,0(sp)
	addi	sp,sp,80
	ret
	lbu	a2,66(s6)
	li	a1,-1
	li	a0,3
	j	0x190f8 # createlabel+0x17a>
	ld	a3,16(s6)
	lw	a5,56(s6)
	ld	a3,88(a3)
	addw	a4,a4,a5
	slli	a5,a4,0x1
	ld	a3,0(a3)
	add	a5,a5,a4
	slli	a5,a5,0x3
	add	a5,a5,a3
	lbu	a4,9(a5)
	bne	a4,a0,0x1914c # createlabel+0x1ce>
	addiw	a2,a2,-1
	mv	a4,a2
	bne	a2,a1,0x190d8 # createlabel+0x15a>
	li	a2,0
	li	a5,0
	li	a4,0
	li	a3,0
	li	a1,54
	mv	a0,s6
	jal	ra,0x23c0a # luaK_codeABCk>
	li	a0,1
	j	0x190b6 # createlabel+0x138>
	ld	a1,16(a0)
	lw	a3,56(a0)
	ld	a2,0(a5)
	ld	a1,88(a1)
	addw	a3,a3,a4
	slli	a4,a3,0x1
	ld	a1,0(a1)
	add	a4,a4,a3
	slli	a4,a4,0x3
	add	a4,a4,a1
	ld	a4,16(a4)
	lw	a3,12(a5)
	ld	a0,56(s4)
	auipc	a1,0x29
	addi	a1,a1,180 # 0x421e8 # luaP_opmodes+0x108>
	addi	a4,a4,24
	addi	a2,a2,24
	jal	ra,0x1865a # luaO_pushfstring>
	mv	a1,a0
	mv	a0,s4
	jal	ra,0x2392c # luaK_semerror>
	lbu	a2,10(a5)
	addiw	a2,a2,1
	j	0x19102 # createlabel+0x184>

leaveblock:
	addi	sp,sp,-48
	sd	s1,24(sp)
	ld	s1,24(a0)
	sd	s0,32(sp)
	sd	s2,16(sp)
	sd	ra,40(sp)
	sd	s3,8(sp)
	sd	s4,0(sp)
	ld	s2,16(a0)
	mv	s0,a0
	lbu	a2,16(s1)
	li	a1,-1
	li	a0,3
	j	0x19190 # leaveblock+0x3c>
	lw	a5,56(s0)
	ld	a3,88(s2)
	addw	a4,a4,a5
	slli	a5,a4,0x1
	ld	a3,0(a3)
	add	a5,a5,a4
	slli	a5,a5,0x3
	add	a5,a5,a3
	lbu	a4,9(a5)
	bne	a4,a0,0x1935e # leaveblock+0x20a>
	addiw	a2,a2,-1
	mv	a4,a2
	bne	a2,a1,0x19174 # leaveblock+0x20>
	lbu	a5,18(s1)
	li	s3,0
	li	s4,0
	bnez	a5,0x19376 # leaveblock+0x222>
	ld	t5,0(s1)
	beqz	t5,0x191b4 # leaveblock+0x60>
	lbu	a5,17(s1)
	bnez	a5,0x1939e # leaveblock+0x24a>
	ld	a5,16(s0)
	sd	t5,24(s0)
	lbu	a6,16(s1)
	ld	a1,88(a5)
	lbu	a4,66(s0)
	sext.w	a0,a6
	lw	a5,8(a1)
	subw	a3,a4,a6
	sext.w	a2,a4
	subw	a5,a5,a3
	sw	a5,8(a1)
	li	t4,3
	ble	a2,a0,0x19232 # leaveblock+0xde>
	addiw	a4,a4,-1
	ld	t3,0(a1)
	lw	t1,56(s0)
	andi	a4,a4,255
	j	0x191fa # leaveblock+0xa6>
	addiw	a5,a4,-1
	andi	a5,a5,255
	ble	a2,a0,0x192f2 # leaveblock+0x19e>
	mv	a4,a5
	addw	a3,a4,t1
	slli	a5,a3,0x1
	add	a5,a5,a3
	slli	a5,a5,0x3
	add	a5,a5,t3
	lbu	a3,9(a5)
	sext.w	a2,a4
	beq	a3,t4,0x191ec # leaveblock+0x98>
	ld	a7,0(s0)
	lh	a3,12(a5)
	ld	a5,104(a7)
	slli	a3,a3,0x4
	add	a5,a5,a3
	beqz	a5,0x191ec # leaveblock+0x98>
	lw	a3,32(s0)
	sb	a4,66(s0)
	sw	a3,12(a5)
	blt	a0,a2,0x191dc # leaveblock+0x88>
	sb	s3,68(s0)
	ld	a5,88(s2)
	lw	a3,8(s1)
	lw	a4,12(s1)
	sw	a3,40(a5)
	beqz	t5,0x19308 # leaveblock+0x1b4>
	lw	a5,24(a1)
	ble	a5,a4,0x192e2 # leaveblock+0x18e>
	subw	a5,a5,a4
	addiw	a5,a5,-1
	slli	a5,a5,0x20
	srli	a5,a5,0x20
	add	a5,a5,a4
	ld	t3,16(a1)
	slli	a3,a4,0x1
	slli	t4,a5,0x1
	add	a4,a4,a3
	slli	a4,a4,0x3
	add	t4,t4,a5
	slli	t4,t4,0x3
	addi	a5,a4,16
	addi	a4,t3,40
	add	t4,t4,a4
	add	t3,t3,a5
	li	a7,-1
	li	t1,3
	lbu	a2,0(t3)
	j	0x19296 # leaveblock+0x142>
	lw	a5,56(s0)
	ld	a3,0(a1)
	addw	a4,a4,a5
	slli	a5,a4,0x1
	add	a5,a5,a4
	slli	a5,a5,0x3
	add	a5,a5,a3
	lbu	a4,9(a5)
	bne	a4,t1,0x1934e # leaveblock+0x1fa>
	addiw	a2,a2,-1
	mv	a4,a2
	bne	a2,a7,0x1927e # leaveblock+0x12a>
	li	t5,0
	mv	a2,a0
	j	0x192bc # leaveblock+0x168>
	lw	a5,56(s0)
	ld	a3,0(a1)
	addw	a4,a4,a5
	slli	a5,a4,0x1
	add	a5,a5,a4
	slli	a5,a5,0x3
	add	a5,a5,a3
	lbu	a4,9(a5)
	bne	a4,t1,0x19356 # leaveblock+0x202>
	addiw	a2,a2,-1
	mv	a4,a2
	bne	a2,a7,0x192a4 # leaveblock+0x150>
	li	a5,0
	ble	t5,a5,0x192d8 # leaveblock+0x184>
	lbu	a5,1(t3)
	lbu	a4,17(s1)
	or	a5,a5,a4
	sb	a5,1(t3)
	sb	a6,0(t3)
	addi	t3,t3,24
	bne	t4,t3,0x19278 # leaveblock+0x124>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	ld	s4,0(sp)
	addi	sp,sp,48
	ret
	sb	a4,66(s0)
	sb	s3,68(s0)
	ld	a5,88(s2)
	lw	a3,8(s1)
	lw	a4,12(s1)
	sw	a3,40(a5)
	bnez	t5,0x19244 # leaveblock+0xf0>
	lw	a3,24(a5)
	ble	a3,a4,0x192e2 # leaveblock+0x18e>
	li	a3,24
	mul	a4,a4,a3
	ld	s0,16(a5)
	ld	a0,56(s2)
	li	a2,5
	auipc	a1,0x29
	addi	a1,a1,-252 # 0x42220 # luaP_opmodes+0x140>
	add	s0,s0,a4
	ld	s1,0(s0)
	jal	ra,0x1bfce # luaS_newlstr>
	beq	s1,a0,0x193b6 # leaveblock+0x262>
	ld	a2,0(s0)
	lw	a3,12(s0)
	ld	a0,56(s2)
	auipc	a1,0x29
	addi	a1,a1,-240 # 0x42248 # luaP_opmodes+0x168>
	addi	a2,a2,24
	jal	ra,0x1865a # luaO_pushfstring>
	mv	a1,a0
	mv	a0,s2
	jal	ra,0x2392c # luaK_semerror>
	lbu	t5,10(a5)
	addiw	t5,t5,1
	j	0x192a0 # leaveblock+0x14c>
	lbu	a5,10(a5)
	addiw	a5,a5,1
	j	0x192c6 # leaveblock+0x172>
	lbu	a5,10(a5)
	addiw	s3,a5,1
	addi	s4,a5,1
	lbu	a5,18(s1)
	andi	s3,s3,255
	beqz	a5,0x191a4 # leaveblock+0x50>
	ld	a0,56(s2)
	li	a2,5
	auipc	a1,0x29
	addi	a1,a1,-348 # 0x42220 # luaP_opmodes+0x140>
	jal	ra,0x1bfce # luaS_newlstr>
	mv	a1,a0
	li	a3,0
	li	a2,0
	mv	a0,s2
	jal	ra,0x18f7e # createlabel>
	beqz	a0,0x191a4 # leaveblock+0x50>
	ld	t5,0(s1)
	j	0x191b4 # leaveblock+0x60>
	li	a5,0
	li	a4,0
	li	a3,0
	mv	a2,s4
	li	a1,54
	mv	a0,s0
	jal	ra,0x23c0a # luaK_codeABCk>
	ld	t5,0(s1)
	j	0x191b4 # leaveblock+0x60>
	lw	a2,12(s0)
	ld	a0,56(s2)
	auipc	a1,0x29
	addi	a1,a1,-404 # 0x42228 # luaP_opmodes+0x148>
	jal	ra,0x1865a # luaO_pushfstring>
	mv	a1,a0
	j	0x19348 # leaveblock+0x1f4>

close_func:
	addi	sp,sp,-48
	sd	s0,32(sp)
	ld	s0,48(a0)
	sd	s1,24(sp)
	sd	s2,16(sp)
	sd	s3,8(sp)
	sd	ra,40(sp)
	ld	s2,56(a0)
	ld	s1,0(s0)
	lbu	a2,66(s0)
	mv	s3,a0
	li	a1,-1
	li	a6,3
	j	0x19408 # close_func+0x3c>
	ld	a3,16(s0)
	lw	a5,56(s0)
	ld	a3,88(a3)
	addw	a4,a4,a5
	slli	a5,a4,0x1
	ld	a3,0(a3)
	add	a5,a5,a4
	slli	a5,a5,0x3
	add	a5,a5,a3
	lbu	a4,9(a5)
	bne	a4,a6,0x194c6 # close_func+0xfa>
	addiw	a2,a2,-1
	mv	a4,a2
	bne	a2,a1,0x193ec # close_func+0x20>
	li	a1,0
	li	a2,0
	mv	a0,s0
	jal	ra,0x23b94 # luaK_ret>
	mv	a0,s0
	jal	ra,0x19154 # leaveblock>
	mv	a0,s0
	jal	ra,0x254fc # luaK_finish>
	lw	a3,32(s0)
	ld	a1,64(s1)
	li	a4,4
	addi	a2,s1,24
	mv	a0,s2
	jal	ra,0x17ace # luaM_shrinkvector_>
	lw	a3,32(s0)
	ld	a1,88(s1)
	li	a4,1
	addi	a2,s1,28
	sd	a0,64(s1)
	mv	a0,s2
	jal	ra,0x17ace # luaM_shrinkvector_>
	lw	a3,52(s0)
	ld	a1,96(s1)
	li	a4,8
	addi	a2,s1,40
	sd	a0,88(s1)
	mv	a0,s2
	jal	ra,0x17ace # luaM_shrinkvector_>
	lw	a3,44(s0)
	ld	a1,56(s1)
	li	a4,16
	addi	a2,s1,20
	sd	a0,96(s1)
	mv	a0,s2
	jal	ra,0x17ace # luaM_shrinkvector_>
	lw	a3,48(s0)
	ld	a1,72(s1)
	li	a4,8
	addi	a2,s1,32
	sd	a0,56(s1)
	mv	a0,s2
	jal	ra,0x17ace # luaM_shrinkvector_>
	lh	a3,64(s0)
	ld	a1,104(s1)
	li	a4,16
	addi	a2,s1,36
	sd	a0,72(s1)
	mv	a0,s2
	jal	ra,0x17ace # luaM_shrinkvector_>
	sd	a0,104(s1)
	lbu	a3,67(s0)
	ld	a1,80(s1)
	li	a4,16
	addi	a2,s1,16
	mv	a0,s2
	jal	ra,0x17ace # luaM_shrinkvector_>
	ld	a5,24(s2)
	ld	a4,8(s0)
	sd	a0,80(s1)
	ld	a5,24(a5)
	sd	a4,48(s3)
	bgtz	a5,0x194ce # close_func+0x102>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	addi	sp,sp,48
	ret
	lbu	a1,10(a5)
	addiw	a1,a1,1
	j	0x19412 # close_func+0x46>
	ld	s0,32(sp)
	ld	ra,40(sp)
	ld	s1,24(sp)
	ld	s3,8(sp)
	mv	a0,s2
	ld	s2,16(sp)
	addi	sp,sp,48
	j	0x17420 # luaC_step>

statement:
	addi	sp,sp,-192
	sd	s0,176(sp)
	mv	s0,a0
	ld	a0,56(a0)
	sd	s1,168(sp)
	sd	ra,184(sp)
	lw	s1,4(s0)
	sd	s2,160(sp)
	sd	s3,152(sp)
	sd	s4,144(sp)
	sd	s5,136(sp)
	sd	s6,128(sp)
	sd	s7,120(sp)
	sd	s8,112(sp)
	sd	s9,104(sp)
	sd	s10,96(sp)
	sd	s11,88(sp)
	jal	ra,0x1b8ee # luaE_incCstack>
	lw	a5,16(s0)
	li	a4,59
	beq	a5,a4,0x19872 # statement+0x392>
	addiw	a5,a5,-257
	sext.w	a3,a5
	li	a4,30
	bltu	a4,a3,0x19534 # statement+0x54>
	slli	a5,a5,0x20
	srli	a5,a5,0x20
	auipc	a4,0x29
	addi	a4,a4,-274 # 0x42410 # luaP_opmodes+0x330>
	slli	a5,a5,0x2
	add	a5,a5,a4
	lw	a5,0(a5)
	add	a5,a5,a4
	jr	a5
	addi	a1,sp,56
	mv	a0,s0
	ld	s1,48(s0)
	jal	ra,0x1af4e # suffixedexp>
	lw	a5,16(s0)
	li	a4,61
	beq	a5,a4,0x19e4c # statement+0x96c>
	li	a4,44
	beq	a5,a4,0x19e4c # statement+0x96c>
	lw	a4,56(sp)
	li	a5,18
	bne	a4,a5,0x1a242 # statement+0xd62>
	ld	a4,0(s1)
	lw	a5,64(sp)
	lui	a3,0x1000
	ld	a4,64(a4)
	slli	a5,a5,0x2
	add	a4,a4,a5
	lw	a5,0(a4)
	slli	a5,a5,0x28
	srli	a5,a5,0x28
	or	a5,a5,a3
	sw	a5,0(a4)
	ld	a0,48(s0)
	j	0x195a8 # statement+0xc8>
	mv	a0,s0
	lw	s2,4(s0)
	jal	ra,0x2672a # luaX_next>
	ld	a0,56(s0)
	li	a2,5
	auipc	a1,0x29
	addi	a1,a1,-866 # 0x42220 # luaP_opmodes+0x140>
	jal	ra,0x1bfce # luaS_newlstr>
	mv	s1,a0
	ld	a0,48(s0)
	jal	ra,0x23ad0 # luaK_jump>
	ld	a1,88(s0)
	mv	a4,a0
	mv	a3,s2
	mv	a2,s1
	addi	a1,a1,16
	mv	a0,s0
	jal	ra,0x187c0 # newlabelentry>
	ld	a0,48(s0)
	lbu	a2,66(a0)
	li	a1,-1
	li	a6,3
	j	0x195ce # statement+0xee>
	ld	a3,16(a0)
	lw	a5,56(a0)
	ld	a3,88(a3)
	addw	a4,a4,a5
	slli	a5,a4,0x1
	ld	a3,0(a3)
	add	a5,a5,a4
	slli	a5,a5,0x3
	add	a5,a5,a3
	lbu	a4,9(a5)
	bne	a4,a6,0x19c1a # statement+0x73a>
	addiw	a2,a2,-1
	mv	a4,a2
	bne	a2,a1,0x195b2 # statement+0xd2>
	li	a5,0
	sb	a5,68(a0)
	ld	a4,56(s0)
	ld	ra,184(sp)
	ld	s0,176(sp)
	lw	a5,176(a4)
	ld	s1,168(sp)
	ld	s2,160(sp)
	addiw	a5,a5,-1
	sw	a5,176(a4)
	ld	s3,152(sp)
	ld	s4,144(sp)
	ld	s5,136(sp)
	ld	s6,128(sp)
	ld	s7,120(sp)
	ld	s8,112(sp)
	ld	s9,104(sp)
	ld	s10,96(sp)
	ld	s11,88(sp)
	addi	sp,sp,192
	ret
	mv	a0,s0
	jal	ra,0x2672a # luaX_next>
	mv	a0,s0
	jal	ra,0x1a2ae # block>
	mv	a0,s0
	mv	a3,s1
	li	a2,258
	li	a1,261
	jal	ra,0x189d2 # check_match>
	ld	a0,48(s0)
	j	0x195a8 # statement+0xc8>
	ld	s3,48(s0)
	li	a5,1
	sb	a5,18(sp)
	lbu	a4,66(s3)
	li	a5,0
	sb	a4,16(sp)
	ld	a4,16(s3)
	ld	a4,88(a4)
	lw	a2,40(a4)
	lw	a3,24(a4)
	sb	zero,17(sp)
	ld	a4,24(s3)
	sw	a2,8(sp)
	sw	a3,12(sp)
	beqz	a4,0x1965a # statement+0x17a>
	lbu	a5,19(a4)
	snez	a5,a5
	sb	a5,19(sp)
	sd	a4,0(sp)
	mv	a5,sp
	sd	a5,24(s3)
	mv	a0,s0
	jal	ra,0x2672a # luaX_next>
	lw	a4,16(s0)
	li	a5,291
	bne	a4,a5,0x1a238 # statement+0xd58>
	mv	a0,s0
	ld	s7,24(s0)
	jal	ra,0x2672a # luaX_next>
	lw	s2,16(s0)
	li	a5,61
	beq	s2,a5,0x19d48 # statement+0x868>
	li	a5,267
	beq	s2,a5,0x19c4e # statement+0x76e>
	li	a5,44
	beq	s2,a5,0x19c4e # statement+0x76e>
	auipc	a1,0x29
	addi	a1,a1,-1044 # 0x42288 # luaP_opmodes+0x1a8>
	mv	a0,s0
	jal	ra,0x25b74 # luaX_syntaxerror>
	mv	a0,s0
	jal	ra,0x2672a # luaX_next>
	addi	s3,sp,24
	mv	a1,s3
	mv	a0,s0
	jal	ra,0x18cb0 # singlevar>
	lw	a5,16(s0)
	li	a4,46
	bne	a5,a4,0x1a0fc # statement+0xc1c>
	li	s9,291
	li	s8,-1
	li	s7,7
	addi	s4,sp,48
	li	s6,46
	ld	s2,48(s0)
	mv	a1,s3
	mv	a0,s2
	jal	ra,0x24524 # luaK_exp2anyregup>
	mv	a0,s0
	jal	ra,0x2672a # luaX_next>
	lw	a5,16(s0)
	bne	a5,s9,0x1a238 # statement+0xd58>
	ld	s5,24(s0)
	mv	a0,s0
	jal	ra,0x2672a # luaX_next>
	mv	a0,s2
	mv	a2,s4
	mv	a1,s3
	sd	s8,64(sp)
	sw	s7,48(sp)
	sd	s5,56(sp)
	jal	ra,0x248c6 # luaK_indexed>
	lw	a5,16(s0)
	mv	s2,s4
	beq	a5,s6,0x196d6 # statement+0x1f6>
	li	a4,58
	li	a2,0
	beq	a5,a4,0x1a0c4 # statement+0xbe4>
	mv	a3,s1
	mv	a0,s0
	mv	a1,s2
	jal	ra,0x1a498 # body>
	ld	a0,48(s0)
	mv	a2,s2
	mv	a1,s3
	jal	ra,0x2457e # luaK_storevar>
	ld	a0,48(s0)
	mv	a1,s1
	jal	ra,0x24ab6 # luaK_fixline>
	ld	a0,48(s0)
	j	0x195a8 # statement+0xc8>
	ld	s3,48(s0)
	mv	a0,s3
	jal	ra,0x23a54 # luaK_getlabel>
	li	a1,1
	sb	a1,18(sp)
	lbu	a2,66(s3)
	mv	s4,a0
	sb	a2,16(sp)
	ld	a5,16(s3)
	ld	a5,88(a5)
	lw	a3,40(a5)
	lw	a4,24(a5)
	sb	zero,17(sp)
	ld	a5,24(s3)
	sw	a3,8(sp)
	sw	a4,12(sp)
	beqz	a5,0x19774 # statement+0x294>
	lbu	a0,19(a5)
	bnez	a0,0x19e32 # statement+0x952>
	sd	a5,0(sp)
	sb	zero,19(sp)
	sb	zero,42(sp)
	sb	a2,40(sp)
	sw	a3,32(sp)
	sw	a4,36(sp)
	sb	zero,41(sp)
	li	a5,0
	sb	a5,43(sp)
	mv	a5,sp
	sd	a5,24(sp)
	addi	a5,sp,24
	sd	a5,24(s3)
	mv	a0,s0
	lui	s2,0x20020
	jal	ra,0x2672a # luaX_next>
	li	s5,29
	li	s6,1
	addi	s2,s2,7
	li	s7,273
	lw	a4,16(s0)
	addiw	a5,a4,-259
	bltu	s5,a5,0x197c4 # statement+0x2e4>
	sll	a5,s6,a5
	and	a5,a5,s2
	bnez	a5,0x19e64 # statement+0x984>
	beq	a4,s7,0x19e5e # statement+0x97e>
	mv	a0,s0
	jal	ra,0x194e0 # statement>
	j	0x197ae # statement+0x2ce>
	mv	a0,s0
	jal	ra,0x2672a # luaX_next>
	ld	s1,48(s0)
	li	a1,-1
	li	a0,3
	lbu	a2,66(s1)
	j	0x197fe # statement+0x31e>
	ld	a3,16(s1)
	lw	a5,56(s1)
	ld	a3,88(a3)
	addw	a4,a4,a5
	slli	a5,a4,0x1
	ld	a3,0(a3)
	add	a5,a5,a4
	slli	a5,a5,0x3
	add	a5,a5,a3
	lbu	a4,9(a5)
	bne	a4,a0,0x19f2c # statement+0xa4c>
	addiw	a2,a2,-1
	mv	a4,a2
	bne	a2,a1,0x197e2 # statement+0x302>
	li	s3,0
	lw	a3,16(s0)
	li	a5,29
	addiw	a4,a3,-259
	bltu	a5,a4,0x19826 # statement+0x346>
	li	a5,1
	sll	a5,a5,a4
	lui	a4,0x20020
	addi	a4,a4,7
	and	a5,a5,a4
	bnez	a5,0x1a0f6 # statement+0xc16>
	li	a5,59
	li	s4,0
	beq	a3,a5,0x1985e # statement+0x37e>
	addi	s2,sp,48
	li	a2,0
	mv	a1,s2
	mv	a0,s0
	jal	ra,0x1a720 # subexpr>
	lw	a4,16(s0)
	li	a5,44
	beq	a4,a5,0x1a196 # statement+0xcb6>
	lw	a5,48(sp)
	li	a4,1
	addiw	a5,a5,-18
	bleu	a5,a4,0x1a17e # statement+0xc9e>
	mv	a1,s2
	mv	a0,s1
	jal	ra,0x2439a # luaK_exp2anyreg>
	mv	s3,a0
	li	s4,1
	mv	a2,s4
	mv	a1,s3
	mv	a0,s1
	jal	ra,0x23b94 # luaK_ret>
	lw	a4,16(s0)
	li	a5,59
	bne	a4,a5,0x19570 # statement+0x90>
	mv	a0,s0
	jal	ra,0x2672a # luaX_next>
	ld	a0,48(s0)
	j	0x195a8 # statement+0xc8>
	ld	s3,48(s0)
	mv	a0,s0
	jal	ra,0x2672a # luaX_next>
	mv	a0,s3
	jal	ra,0x23a54 # luaK_getlabel>
	addi	s2,sp,48
	mv	s4,a0
	li	a2,0
	mv	a1,s2
	mv	a0,s0
	jal	ra,0x1a720 # subexpr>
	lw	a4,48(sp)
	li	a5,1
	bne	a4,a5,0x198a8 # statement+0x3c8>
	li	a5,3
	sw	a5,48(sp)
	ld	a0,48(s0)
	mv	a1,s2
	jal	ra,0x2479e # luaK_goiftrue>
	li	a5,1
	sb	a5,66(sp)
	lbu	a4,66(s3)
	lw	s5,68(sp)
	li	a5,0
	sb	a4,64(sp)
	ld	a4,16(s3)
	ld	a4,88(a4)
	lw	a2,40(a4)
	lw	a3,24(a4)
	sb	zero,65(sp)
	ld	a4,24(s3)
	sw	a2,56(sp)
	sw	a3,60(sp)
	beqz	a4,0x198e2 # statement+0x402>
	lbu	a5,19(a4) # 0x20020013 # __BSS_END__+0x1ffd1c8b>
	snez	a5,a5
	lw	a3,16(s0)
	sb	a5,67(sp)
	sd	a4,48(sp)
	sd	s2,24(s3)
	li	a5,258
	bne	a3,a5,0x1a25a # statement+0xd7a>
	mv	a0,s0
	jal	ra,0x2672a # luaX_next>
	mv	a0,s0
	jal	ra,0x1a2ae # block>
	mv	a0,s3
	jal	ra,0x23ad0 # luaK_jump>
	mv	a1,a0
	mv	a2,s4
	mv	a0,s3
	jal	ra,0x23a5c # luaK_patchlist>
	mv	a3,s1
	li	a2,277
	li	a1,261
	mv	a0,s0
	jal	ra,0x189d2 # check_match>
	mv	a0,s3
	jal	ra,0x19154 # leaveblock>
	mv	a0,s3
	mv	a1,s5
	jal	ra,0x23a64 # luaK_patchtohere>
	ld	a0,48(s0)
	j	0x195a8 # statement+0xc8>
	mv	a0,s0
	jal	ra,0x2672a # luaX_next>
	lw	a4,16(s0)
	li	a5,291
	bne	a4,a5,0x1a238 # statement+0xd58>
	mv	a0,s0
	ld	s2,24(s0)
	jal	ra,0x2672a # luaX_next>
	lw	a4,16(s0)
	li	a5,287
	bne	a4,a5,0x1a250 # statement+0xd70>
	mv	a0,s0
	jal	ra,0x2672a # luaX_next>
	li	s3,59
	li	s4,287
	j	0x1996e # statement+0x48e>
	mv	a0,s0
	jal	ra,0x194e0 # statement>
	lw	a5,16(s0)
	beq	a5,s3,0x19968 # statement+0x488>
	beq	a5,s4,0x19968 # statement+0x488>
	ld	a2,88(s0)
	ld	a3,48(s0)
	lw	a4,40(a2)
	lw	a1,60(a3)
	ble	a4,a1,0x19c26 # statement+0x746>
	addiw	a3,a4,-1
	subw	a3,a3,a1
	slli	a3,a3,0x20
	srli	a3,a3,0x20
	add	a3,a3,a1
	ld	a4,32(a2)
	slli	a0,a1,0x1
	slli	a2,a3,0x1
	add	a1,a1,a0
	add	a2,a2,a3
	slli	a2,a2,0x3
	slli	a3,a1,0x3
	addi	a1,a4,24
	add	a2,a2,a1
	add	a4,a4,a3
	j	0x199b4 # statement+0x4d4>
	addi	a4,a4,24
	beq	a2,a4,0x19c26 # statement+0x746>
	ld	a3,0(a4)
	bne	s2,a3,0x199ae # statement+0x4ce>
	lw	a3,12(a4)
	ld	a0,56(s0)
	auipc	a1,0x29
	addi	a1,a1,-1718 # 0x42308 # luaP_opmodes+0x228>
	addi	a2,s2,24 # 0x20020018 # __BSS_END__+0x1ffd1c90>
	jal	ra,0x1865a # luaO_pushfstring>
	mv	a1,a0
	mv	a0,s0
	jal	ra,0x2392c # luaK_semerror>
	addi	s2,sp,48
	li	a5,-1
	mv	a1,s2
	mv	a0,s0
	sw	a5,48(sp)
	ld	s4,48(s0)
	jal	ra,0x1a9ea # test_then_block>
	lw	a5,16(s0)
	li	a4,260
	bne	a5,a4,0x19a06 # statement+0x526>
	li	s3,260
	mv	a1,s2
	mv	a0,s0
	jal	ra,0x1a9ea # test_then_block>
	lw	a5,16(s0)
	beq	a5,s3,0x199f8 # statement+0x518>
	li	a4,259
	beq	a5,a4,0x1a038 # statement+0xb58>
	mv	a3,s1
	li	a2,266
	li	a1,261
	mv	a0,s0
	jal	ra,0x189d2 # check_match>
	lw	a1,48(sp)
	mv	a0,s4
	jal	ra,0x23a64 # luaK_patchtohere>
	ld	a0,48(s0)
	j	0x195a8 # statement+0xc8>
	mv	a0,s0
	jal	ra,0x2672a # luaX_next>
	lw	a4,16(s0)
	li	a5,291
	ld	s2,48(s0)
	lw	s3,4(s0)
	bne	a4,a5,0x1a238 # statement+0xd58>
	mv	a0,s0
	ld	s4,24(s0)
	jal	ra,0x2672a # luaX_next>
	ld	a4,88(s0)
	ld	a3,48(s0)
	lw	a5,40(a4)
	lw	a3,60(a3)
	ble	a5,a3,0x1a0d2 # statement+0xbf2>
	addiw	a5,a5,-1
	subw	a5,a5,a3
	slli	a5,a5,0x20
	srli	a5,a5,0x20
	add	a5,a5,a3
	ld	s1,32(a4)
	slli	a2,a3,0x1
	slli	a4,a5,0x1
	add	a3,a3,a2
	add	a4,a4,a5
	slli	a4,a4,0x3
	slli	a5,a3,0x3
	addi	a3,s1,24
	add	a4,a4,a3
	add	s1,s1,a5
	j	0x19a86 # statement+0x5a6>
	addi	s1,s1,24
	beq	a4,s1,0x1a0d2 # statement+0xbf2>
	ld	a5,0(s1)
	bne	a5,s4,0x19a80 # statement+0x5a0>
	lbu	a2,16(s1)
	li	a1,-1
	li	a0,3
	j	0x19ab6 # statement+0x5d6>
	ld	a3,16(s2)
	lw	a5,56(s2)
	ld	a3,88(a3)
	addw	a4,a4,a5
	slli	a5,a4,0x1
	ld	a3,0(a3)
	add	a5,a5,a4
	slli	a5,a5,0x3
	add	a5,a5,a3
	lbu	a4,9(a5)
	bne	a4,a0,0x19f36 # statement+0xa56>
	addiw	a2,a2,-1
	mv	a4,a2
	bne	a2,a1,0x19a96 # statement+0x5b6>
	li	a2,0
	lbu	a1,66(s2)
	li	a0,-1
	li	a6,3
	j	0x19aea # statement+0x60a>
	ld	a3,16(s2)
	lw	a5,56(s2)
	ld	a3,88(a3)
	addw	a4,a4,a5
	slli	a5,a4,0x1
	ld	a3,0(a3)
	add	a5,a5,a4
	slli	a5,a5,0x3
	add	a5,a5,a3
	lbu	a4,9(a5)
	bne	a4,a6,0x19f3e # statement+0xa5e>
	addiw	a1,a1,-1
	mv	a4,a1
	bne	a1,a0,0x19aca # statement+0x5ea>
	mv	a0,s2
	jal	ra,0x23ad0 # luaK_jump>
	lw	a2,8(s1)
	mv	a1,a0
	mv	a0,s2
	jal	ra,0x23a5c # luaK_patchlist>
	ld	a0,48(s0)
	j	0x195a8 # statement+0xc8>
	mv	a0,s0
	jal	ra,0x2672a # luaX_next>
	lw	a5,16(s0)
	li	a4,264
	beq	a5,a4,0x19fc6 # statement+0xae6>
	li	a4,291
	ld	s11,48(s0)
	li	s4,0
	li	s1,-1
	bne	a5,a4,0x1a238 # statement+0xd58>
	li	s2,60
	li	s7,291
	auipc	s9,0x28
	addi	s9,s9,1906 # 0x422a0 # luaP_opmodes+0x1c0>
	auipc	s8,0x28
	addi	s8,s8,1906 # 0x422a8 # luaP_opmodes+0x1c8>
	li	s6,2
	li	s5,-1
	ld	s3,24(s0)
	mv	a0,s0
	jal	ra,0x2672a # luaX_next>
	mv	a1,s3
	mv	a0,s0
	jal	ra,0x1892a # new_localvar>
	lw	a5,16(s0)
	mv	s3,a0
	li	a1,0
	beq	a5,s2,0x1a056 # statement+0xb76>
	ld	a3,16(s11)
	lw	a4,56(s11)
	ld	a2,88(a3)
	addw	a3,a4,s3
	slli	a4,a3,0x1
	ld	a2,0(a2)
	add	a4,a4,a3
	slli	a4,a4,0x3
	add	a4,a4,a2
	sb	a1,9(a4)
	li	a3,44
	addiw	s10,s4,1
	beq	a5,a3,0x1a046 # statement+0xb66>
	li	a2,61
	beq	a5,a2,0x19eba # statement+0x9da>
	sw	zero,48(sp)
	li	s5,0
	addi	s2,sp,48
	ld	a0,48(s0)
	mv	a1,s10
	mv	a3,s2
	mv	a2,s5
	jal	ra,0x18a28 # adjust_assign.isra.0>
	mv	a1,s10
	mv	a0,s0
	jal	ra,0x18e04 # adjustlocalvars>
	li	a5,-1
	ld	a0,48(s0)
	beq	s1,a5,0x195a8 # statement+0xc8>
	ld	a2,24(a0)
	addiw	a3,s1,1
	lbu	a5,16(a2)
	ble	a5,a3,0x1a17a # statement+0xc9a>
	mv	a5,a2
	ld	a5,0(a5)
	lbu	a4,16(a5)
	blt	a3,a4,0x19bc4 # statement+0x6e4>
	li	a4,1
	sb	a4,17(a5)
	sb	a4,70(a0)
	sb	a4,19(a2)
	li	a1,3
	li	a2,-1
	j	0x19bfe # statement+0x71e>
	ld	a3,16(a0)
	lw	a5,56(a0)
	ld	a3,88(a3)
	addw	a4,a4,a5
	slli	a5,a4,0x1
	ld	a3,0(a3)
	add	a5,a5,a4
	slli	a5,a5,0x3
	add	a5,a5,a3
	lbu	a4,9(a5)
	bne	a4,a1,0x19fbe # statement+0xade>
	addiw	s1,s1,-1
	mv	a4,s1
	bne	s1,a2,0x19be2 # statement+0x702>
	li	a2,0
	li	a5,0
	li	a4,0
	li	a3,0
	li	a1,55
	jal	ra,0x23c0a # luaK_codeABCk>
	ld	a0,48(s0)
	j	0x195a8 # statement+0xc8>
	lbu	a5,10(a5)
	addiw	a5,a5,1
	andi	a5,a5,255
	j	0x195d8 # statement+0xf8>
	li	a4,261
	ble	a5,a4,0x19c44 # statement+0x764>
	addi	a5,a5,-288
	seqz	a3,a5
	mv	a2,s1
	mv	a1,s2
	mv	a0,s0
	jal	ra,0x18f7e # createlabel>
	ld	a0,48(s0)
	j	0x195a8 # statement+0xc8>
	li	a3,258
	slt	a3,a3,a5
	j	0x19c36 # statement+0x756>
	ld	s4,48(s0)
	li	a2,11
	auipc	a1,0x28
	addi	a1,a1,1572 # 0x42278 # luaP_opmodes+0x198>
	mv	a0,s0
	lbu	s6,68(s4)
	jal	ra,0x25b7e # luaX_newstring>
	mv	a1,a0
	mv	a0,s0
	jal	ra,0x1892a # new_localvar>
	li	a2,11
	auipc	a1,0x28
	addi	a1,a1,1544 # 0x42278 # luaP_opmodes+0x198>
	mv	a0,s0
	jal	ra,0x25b7e # luaX_newstring>
	mv	a1,a0
	mv	a0,s0
	jal	ra,0x1892a # new_localvar>
	li	a2,11
	auipc	a1,0x28
	addi	a1,a1,1520 # 0x42278 # luaP_opmodes+0x198>
	mv	a0,s0
	jal	ra,0x25b7e # luaX_newstring>
	mv	a1,a0
	mv	a0,s0
	jal	ra,0x1892a # new_localvar>
	li	a2,11
	auipc	a1,0x28
	addi	a1,a1,1496 # 0x42278 # luaP_opmodes+0x198>
	mv	a0,s0
	jal	ra,0x25b7e # luaX_newstring>
	mv	a1,a0
	mv	a0,s0
	jal	ra,0x1892a # new_localvar>
	mv	a1,s7
	mv	a0,s0
	jal	ra,0x1892a # new_localvar>
	lw	a5,16(s0)
	li	a4,44
	li	s5,5
	beq	a5,a4,0x1a11e # statement+0xc3e>
	li	a4,267
	bne	a5,a4,0x1a22e # statement+0xd4e>
	mv	a0,s0
	jal	ra,0x2672a # luaX_next>
	addi	s2,sp,48
	li	a2,0
	mv	a1,s2
	mv	a0,s0
	lw	s7,4(s0)
	jal	ra,0x1a720 # subexpr>
	lw	a4,16(s0)
	li	a5,44
	li	s8,1
	beq	a4,a5,0x1a14e # statement+0xc6e>
	ld	a0,48(s0)
	mv	a3,s2
	mv	a2,s8
	li	a1,4
	jal	ra,0x18a28 # adjust_assign.isra.0>
	li	a1,4
	mv	a0,s0
	jal	ra,0x18e04 # adjustlocalvars>
	ld	a5,24(s4)
	lbu	a3,66(s4)
	lbu	a4,16(a5)
	bleu	a4,a3,0x19d24 # statement+0x844>
	ld	a5,0(a5)
	lbu	a4,16(a5)
	bltu	a3,a4,0x19d1a # statement+0x83a>
	li	a4,1
	sb	a4,17(a5)
	mv	a0,s4
	sb	a4,70(s4)
	li	a1,3
	jal	ra,0x23c4c # luaK_checkstack>
	li	a4,1
	addiw	a3,s5,-4
	mv	a2,s7
	mv	a1,s6
	mv	a0,s0
	jal	ra,0x1a342 # forbody>
	j	0x19e16 # statement+0x936>
	ld	s5,48(s0)
	li	a2,11
	auipc	a1,0x28
	addi	a1,a1,1322 # 0x42278 # luaP_opmodes+0x198>
	mv	a0,s0
	lbu	s6,68(s5)
	jal	ra,0x25b7e # luaX_newstring>
	mv	a1,a0
	mv	a0,s0
	jal	ra,0x1892a # new_localvar>
	li	a2,11
	auipc	a1,0x28
	addi	a1,a1,1294 # 0x42278 # luaP_opmodes+0x198>
	mv	a0,s0
	jal	ra,0x25b7e # luaX_newstring>
	mv	a1,a0
	mv	a0,s0
	jal	ra,0x1892a # new_localvar>
	li	a2,11
	auipc	a1,0x28
	addi	a1,a1,1270 # 0x42278 # luaP_opmodes+0x198>
	mv	a0,s0
	jal	ra,0x25b7e # luaX_newstring>
	mv	a1,a0
	mv	a0,s0
	jal	ra,0x1892a # new_localvar>
	mv	a1,s7
	mv	a0,s0
	jal	ra,0x1892a # new_localvar>
	lw	a5,16(s0)
	bne	a5,s2,0x1a26e # statement+0xd8e>
	mv	a0,s0
	jal	ra,0x2672a # luaX_next>
	addi	s2,sp,48
	li	a2,0
	mv	a1,s2
	mv	a0,s0
	jal	ra,0x1a720 # subexpr>
	ld	a0,48(s0)
	mv	a1,s2
	jal	ra,0x24310 # luaK_exp2nextreg>
	lw	s4,16(s0)
	li	a5,44
	bne	s4,a5,0x1a264 # statement+0xd84>
	mv	a0,s0
	jal	ra,0x2672a # luaX_next>
	li	a2,0
	mv	a1,s2
	mv	a0,s0
	jal	ra,0x1a720 # subexpr>
	ld	a0,48(s0)
	mv	a1,s2
	jal	ra,0x24310 # luaK_exp2nextreg>
	lw	a5,16(s0)
	beq	a5,s4,0x1a104 # statement+0xc24>
	lbu	a1,68(s5)
	mv	a0,s5
	li	a2,1
	jal	ra,0x23cb2 # luaK_int>
	li	a1,1
	mv	a0,s5
	jal	ra,0x23c7c # luaK_reserveregs>
	mv	a0,s0
	li	a1,3
	jal	ra,0x18e04 # adjustlocalvars>
	li	a4,0
	li	a3,1
	mv	a2,s1
	mv	a1,s6
	mv	a0,s0
	jal	ra,0x1a342 # forbody>
	mv	a3,s1
	li	a2,263
	li	a1,261
	mv	a0,s0
	jal	ra,0x189d2 # check_match>
	mv	a0,s3
	jal	ra,0x19154 # leaveblock>
	ld	a0,48(s0)
	j	0x195a8 # statement+0xc8>
	sd	a5,0(sp)
	sb	a1,19(sp)
	sb	zero,42(sp)
	sb	a2,40(sp)
	sw	a3,32(sp)
	sw	a4,36(sp)
	sb	zero,41(sp)
	li	a5,1
	j	0x1978c # statement+0x2ac>
	mv	a0,s0
	li	a2,1
	addi	a1,sp,48
	sd	zero,48(sp)
	jal	ra,0x1b0dc # restassign>
	ld	a0,48(s0)
	j	0x195a8 # statement+0xc8>
	mv	a0,s0
	jal	ra,0x194e0 # statement>
	mv	a3,s1
	li	a2,272
	li	a1,276
	mv	a0,s0
	jal	ra,0x189d2 # check_match>
	addi	s2,sp,48
	li	a2,0
	mv	a1,s2
	mv	a0,s0
	jal	ra,0x1a720 # subexpr>
	lw	a4,48(sp)
	li	a5,1
	bne	a4,a5,0x19e8e # statement+0x9ae>
	li	a5,3
	sw	a5,48(sp)
	ld	a0,48(s0)
	mv	a1,s2
	jal	ra,0x2479e # luaK_goiftrue>
	mv	a0,s3
	lw	s2,68(sp)
	jal	ra,0x19154 # leaveblock>
	lbu	a5,41(sp)
	bnez	a5,0x19f58 # statement+0xa78>
	mv	a2,s4
	mv	a1,s2
	mv	a0,s3
	jal	ra,0x23a5c # luaK_patchlist>
	mv	a0,s3
	jal	ra,0x19154 # leaveblock>
	ld	a0,48(s0)
	j	0x195a8 # statement+0xc8>
	mv	a0,s0
	jal	ra,0x2672a # luaX_next>
	addi	s2,sp,48
	li	a2,0
	mv	a1,s2
	mv	a0,s0
	jal	ra,0x1a720 # subexpr>
	lw	a5,16(s0)
	li	a3,44
	li	s5,1
	beq	a5,a3,0x1a1d2 # statement+0xcf2>
	ld	a3,16(s11)
	lw	a5,56(s11)
	ld	a3,88(a3)
	addw	s3,a5,s3
	slli	a5,s3,0x1
	ld	a3,0(a3)
	add	a5,a5,s3
	slli	a5,a5,0x3
	add	s3,a3,a5
	bne	s10,s5,0x19b98 # statement+0x6b8>
	lbu	a3,9(s3)
	li	a5,1
	bne	a3,a5,0x19b98 # statement+0x6b8>
	mv	a2,s3
	mv	a1,s2
	mv	a0,s11
	jal	ra,0x23938 # luaK_exp2const>
	beqz	a0,0x19b98 # statement+0x6b8>
	li	a5,3
	sb	a5,9(s3)
	mv	a1,s4
	mv	a0,s0
	jal	ra,0x18e04 # adjustlocalvars>
	lbu	a5,66(s11)
	addiw	a5,a5,1
	sb	a5,66(s11)
	j	0x19bac # statement+0x6cc>
	lbu	s3,10(a5)
	addiw	s3,s3,1
	j	0x19808 # statement+0x328>
	lbu	a2,10(a5)
	addiw	a2,a2,1
	j	0x19ac0 # statement+0x5e0>
	lbu	a5,10(a5)
	blt	a5,a2,0x19af2 # statement+0x612>
	li	a5,0
	li	a4,0
	li	a3,0
	li	a1,54
	mv	a0,s2
	jal	ra,0x23c0a # luaK_codeABCk>
	j	0x19af2 # statement+0x612>
	mv	a0,s3
	jal	ra,0x23ad0 # luaK_jump>
	mv	a1,s2
	mv	s1,a0
	mv	a0,s3
	jal	ra,0x23a64 # luaK_patchtohere>
	lbu	a2,40(sp)
	li	a1,-1
	li	a0,3
	j	0x19f92 # statement+0xab2>
	ld	a3,16(s3)
	lw	a5,56(s3)
	ld	a3,88(a3)
	addw	a4,a4,a5
	slli	a5,a4,0x1
	ld	a3,0(a3)
	add	a5,a5,a4
	slli	a5,a5,0x3
	add	a5,a5,a3
	lbu	a4,9(a5)
	bne	a4,a0,0x1a0ee # statement+0xc0e>
	addiw	a2,a2,-1
	mv	a4,a2
	bne	a2,a1,0x19f72 # statement+0xa92>
	li	a2,0
	li	a1,54
	li	a5,0
	li	a4,0
	li	a3,0
	mv	a0,s3
	jal	ra,0x23c0a # luaK_codeABCk>
	mv	a0,s3
	jal	ra,0x23ad0 # luaK_jump>
	mv	s2,a0
	mv	a1,s1
	mv	a0,s3
	jal	ra,0x23a64 # luaK_patchtohere>
	j	0x19ea4 # statement+0x9c4>
	lbu	a2,10(a5)
	addiw	a2,a2,1
	j	0x19c08 # statement+0x728>
	mv	a0,s0
	jal	ra,0x2672a # luaX_next>
	lw	a4,16(s0)
	ld	s1,48(s0)
	li	a5,291
	lbu	s2,66(s1)
	bne	a4,a5,0x1a238 # statement+0xd58>
	ld	s3,24(s0)
	mv	a0,s0
	jal	ra,0x2672a # luaX_next>
	mv	a1,s3
	mv	a0,s0
	jal	ra,0x1892a # new_localvar>
	li	a1,1
	mv	a0,s0
	jal	ra,0x18e04 # adjustlocalvars>
	lw	a3,4(s0)
	li	a2,0
	addi	a1,sp,48
	mv	a0,s0
	jal	ra,0x1a498 # body>
	ld	a4,16(s1)
	lw	a5,56(s1)
	li	a2,3
	ld	a4,88(a4)
	addw	a3,a5,s2
	slli	a5,a3,0x1
	ld	a4,0(a4)
	add	a5,a5,a3
	slli	a5,a5,0x3
	add	a5,a5,a4
	lbu	a4,9(a5)
	beq	a4,a2,0x1a2a8 # statement+0xdc8>
	ld	a2,0(s1)
	lh	a4,12(a5)
	lw	a3,32(s1)
	ld	a5,104(a2)
	slli	a4,a4,0x4
	ld	a0,48(s0)
	add	a5,a5,a4
	sw	a3,8(a5)
	j	0x195a8 # statement+0xc8>
	mv	a0,s0
	jal	ra,0x2672a # luaX_next>
	mv	a0,s0
	jal	ra,0x1a2ae # block>
	j	0x19a0e # statement+0x52e>
	mv	a0,s0
	jal	ra,0x2672a # luaX_next>
	lw	a5,16(s0)
	bne	a5,s7,0x1a238 # statement+0xd58>
	mv	s4,s10
	j	0x19b42 # statement+0x662>
	mv	a0,s0
	jal	ra,0x2672a # luaX_next>
	lw	a5,16(s0)
	bne	a5,s7,0x1a238 # statement+0xd58>
	mv	a0,s0
	ld	s10,24(s0)
	jal	ra,0x2672a # luaX_next>
	lw	a5,16(s0)
	li	a4,62
	addi	s10,s10,24
	bne	a5,a4,0x1a278 # statement+0xd98>
	mv	a0,s0
	jal	ra,0x2672a # luaX_next>
	mv	a1,s9
	mv	a0,s10
	jal	ra,0x369dc # strcmp>
	beqz	a0,0x1a174 # statement+0xc94>
	mv	a1,s8
	mv	a0,s10
	jal	ra,0x369dc # strcmp>
	bnez	a0,0x1a216 # statement+0xd36>
	ld	a4,16(s11)
	lw	a5,56(s11)
	ld	a3,88(a4)
	addw	a4,a5,s3
	slli	a5,a4,0x1
	ld	a3,0(a3)
	add	a5,a5,a4
	slli	a5,a5,0x3
	add	a5,a5,a3
	sb	s6,9(a5)
	bne	s1,s5,0x1a208 # statement+0xd28>
	lbu	s1,66(s11)
	lw	a5,16(s0)
	addw	s1,s1,s4
	j	0x19b7c # statement+0x69c>
	mv	a1,s3
	mv	a0,s0
	jal	ra,0x18c50 # fieldsel>
	li	a2,1
	j	0x1971a # statement+0x23a>
	mv	a0,s2
	jal	ra,0x23ad0 # luaK_jump>
	ld	a1,88(s0)
	mv	a4,a0
	mv	a3,s3
	mv	a2,s4
	addi	a1,a1,16
	mv	a0,s0
	jal	ra,0x187c0 # newlabelentry>
	ld	a0,48(s0)
	j	0x195a8 # statement+0xc8>
	lbu	a2,10(a5)
	addiw	a2,a2,1
	j	0x19f9c # statement+0xabc>
	li	s4,0
	j	0x1985e # statement+0x37e>
	addi	s2,sp,48
	j	0x19710 # statement+0x230>
	mv	a0,s0
	jal	ra,0x2672a # luaX_next>
	mv	a1,s2
	li	a2,0
	mv	a0,s0
	jal	ra,0x1a720 # subexpr>
	ld	a0,48(s0)
	mv	a1,s2
	jal	ra,0x24310 # luaK_exp2nextreg>
	j	0x19e00 # statement+0x920>
	li	s7,291
	li	s2,44
	mv	a0,s0
	jal	ra,0x2672a # luaX_next>
	lw	a5,16(s0)
	bne	a5,s7,0x1a238 # statement+0xd58>
	ld	s8,24(s0)
	mv	a0,s0
	jal	ra,0x2672a # luaX_next>
	mv	a1,s8
	mv	a0,s0
	jal	ra,0x1892a # new_localvar>
	lw	a5,16(s0)
	addiw	s5,s5,1
	bne	a5,s2,0x19cca # statement+0x7ea>
	j	0x1a126 # statement+0xc46>
	li	s9,44
	mv	a0,s0
	jal	ra,0x2672a # luaX_next>
	ld	a0,48(s0)
	mv	a1,s2
	addiw	s8,s8,1
	jal	ra,0x24310 # luaK_exp2nextreg>
	li	a2,0
	mv	a1,s2
	mv	a0,s0
	jal	ra,0x1a720 # subexpr>
	lw	a5,16(s0)
	bne	a5,s9,0x19cf6 # statement+0x816>
	j	0x1a152 # statement+0xc72>
	lw	a5,16(s0)
	li	a1,1
	j	0x19b5e # statement+0x67e>
	mv	a5,a2
	j	0x19bce # statement+0x6ee>
	li	a2,-1
	mv	a1,s2
	mv	a0,s1
	jal	ra,0x23d14 # luaK_setreturns>
	lw	a4,48(sp)
	li	a5,18
	beq	a4,a5,0x1a282 # statement+0xda2>
	li	s4,-1
	j	0x1985e # statement+0x37e>
	li	s4,1
	li	s5,44
	mv	a0,s0
	jal	ra,0x2672a # luaX_next>
	ld	a0,48(s0)
	mv	a1,s2
	addiw	s4,s4,1
	jal	ra,0x24310 # luaK_exp2nextreg>
	li	a2,0
	mv	a1,s2
	mv	a0,s0
	jal	ra,0x1a720 # subexpr>
	lw	a5,16(s0)
	beq	a5,s5,0x1a19c # statement+0xcbc>
	lw	a5,48(sp)
	li	a4,1
	addiw	a5,a5,-18
	bleu	a5,a4,0x1a1f8 # statement+0xd18>
	mv	a1,s2
	mv	a0,s1
	jal	ra,0x24310 # luaK_exp2nextreg>
	j	0x1985e # statement+0x37e>
	li	s6,44
	mv	a0,s0
	jal	ra,0x2672a # luaX_next>
	ld	a0,48(s0)
	mv	a1,s2
	addiw	s5,s5,1
	jal	ra,0x24310 # luaK_exp2nextreg>
	li	a2,0
	mv	a1,s2
	mv	a0,s0
	jal	ra,0x1a720 # subexpr>
	lw	a5,16(s0)
	bne	a5,s6,0x19eda # statement+0x9fa>
	j	0x1a1d6 # statement+0xcf6>
	li	a2,-1
	mv	a1,s2
	mv	a0,s1
	jal	ra,0x23d14 # luaK_setreturns>
	li	s4,-1
	j	0x1985e # statement+0x37e>
	auipc	a1,0x28
	addi	a1,a1,192 # 0x422c8 # luaP_opmodes+0x1e8>
	mv	a0,s0
	jal	ra,0x2392c # luaK_semerror>
	ld	a0,56(s0)
	auipc	a1,0x28
	addi	a1,a1,152 # 0x422b0 # luaP_opmodes+0x1d0>
	mv	a2,s10
	jal	ra,0x1865a # luaO_pushfstring>
	mv	a1,a0
	mv	a0,s0
	jal	ra,0x2392c # luaK_semerror>
	li	a1,267
	mv	a0,s0
	jal	ra,0x189aa # error_expected>
	li	a1,291
	mv	a0,s0
	jal	ra,0x189aa # error_expected>
	auipc	a1,0x28
	addi	a1,a1,182 # 0x422f8 # luaP_opmodes+0x218>
	mv	a0,s0
	jal	ra,0x25b74 # luaX_syntaxerror>
	li	a1,287
	mv	a0,s0
	jal	ra,0x189aa # error_expected>
	li	a1,258
	mv	a0,s0
	jal	ra,0x189aa # error_expected>
	li	a1,44
	mv	a0,s0
	jal	ra,0x189aa # error_expected>
	li	a1,61
	mv	a0,s0
	jal	ra,0x189aa # error_expected>
	li	a1,62
	mv	a0,s0
	jal	ra,0x189aa # error_expected>
	ld	a5,24(s1)
	li	s4,-1
	lbu	a5,19(a5)
	bnez	a5,0x1985e # statement+0x37e>
	ld	a4,0(s1)
	lw	a5,56(sp)
	ld	a4,64(a4)
	slli	a5,a5,0x2
	add	a4,a4,a5
	lw	a5,0(a4)
	andi	a5,a5,-128
	ori	a5,a5,69
	sw	a5,0(a4)
	j	0x1985e # statement+0x37e>
	sw	zero,8(zero) # 0x8 # exit-0x10118>
	ebreak

block:
	addi	sp,sp,-96
	sd	s1,72(sp)
	ld	s1,48(a0)
	sd	s0,80(sp)
	sd	ra,88(sp)
	sd	s2,64(sp)
	sd	s3,56(sp)
	sd	s4,48(sp)
	sd	s5,40(sp)
	lbu	a3,66(s1)
	sb	zero,26(sp)
	ld	a4,24(s1)
	sb	a3,24(sp)
	ld	a3,16(s1)
	sb	zero,25(sp)
	mv	s0,a0
	ld	a3,88(a3)
	li	a5,0
	lw	a2,40(a3)
	lw	a3,24(a3)
	sw	a2,16(sp)
	sw	a3,20(sp)
	beqz	a4,0x1a2ec # block+0x3e>
	lbu	a5,19(a4)
	snez	a5,a5
	sb	a5,27(sp)
	lui	s2,0x20020
	addi	a5,sp,8
	sd	a4,8(sp)
	sd	a5,24(s1)
	li	s4,29
	li	s3,1
	addi	s2,s2,7
	li	s5,273
	lw	a3,16(s0)
	mv	a0,s0
	addiw	a4,a3,-259
	sll	a5,s3,a4
	and	a5,a5,s2
	bltu	s4,a4,0x1a31a # block+0x6c>
	bnez	a5,0x1a32a # block+0x7c>
	beq	a3,s5,0x1a324 # block+0x76>
	jal	ra,0x194e0 # statement>
	j	0x1a304 # block+0x56>
	mv	a0,s0
	jal	ra,0x194e0 # statement>
	mv	a0,s1
	jal	ra,0x19154 # leaveblock>
	ld	ra,88(sp)
	ld	s0,80(sp)
	ld	s1,72(sp)
	ld	s2,64(sp)
	ld	s3,56(sp)
	ld	s4,48(sp)
	ld	s5,40(sp)
	addi	sp,sp,96
	ret

forbody:
	lw	a6,16(a0)
	addi	sp,sp,-112
	sd	s0,96(sp)
	sd	ra,104(sp)
	sd	s1,88(sp)
	sd	s2,80(sp)
	sd	s3,72(sp)
	sd	s4,64(sp)
	sd	s5,56(sp)
	sd	s6,48(sp)
	sd	s7,40(sp)
	sd	s8,32(sp)
	li	a5,258
	ld	s0,48(a0)
	bne	a6,a5,0x1a490 # forbody+0x14e>
	slli	s7,a4,0x2
	mv	s3,a1
	mv	s4,a4
	mv	s8,a0
	mv	s5,a2
	mv	s2,a3
	auipc	s6,0x28
	addi	s6,s6,764 # 0x42670 # forprep.1>
	jal	ra,0x2672a # luaX_next>
	add	a5,s6,s7
	lw	a1,0(a5)
	li	a3,0
	mv	a2,s3
	mv	a0,s0
	jal	ra,0x23c26 # luaK_codeABx>
	lbu	a5,66(s0)
	sb	zero,26(sp)
	ld	a4,24(s0)
	sb	a5,24(sp)
	ld	a5,16(s0)
	sb	zero,25(sp)
	mv	s1,a0
	ld	a3,88(a5)
	li	a5,0
	lw	a2,40(a3)
	lw	a3,24(a3)
	sw	a2,16(sp)
	sw	a3,20(sp)
	beqz	a4,0x1a3bc # forbody+0x7a>
	lbu	a5,19(a4)
	snez	a5,a5
	addi	a3,sp,8
	sd	a3,24(s0)
	mv	a1,s2
	mv	a0,s8
	sb	a5,27(sp)
	sd	a4,8(sp)
	jal	ra,0x18e04 # adjustlocalvars>
	mv	a1,s2
	mv	a0,s0
	jal	ra,0x23c7c # luaK_reserveregs>
	mv	a0,s8
	jal	ra,0x1a2ae # block>
	mv	a0,s0
	jal	ra,0x19154 # leaveblock>
	mv	a0,s0
	jal	ra,0x23a54 # luaK_getlabel>
	ld	a4,0(s0)
	addiw	a5,s1,1
	subw	a1,a0,a5
	ld	a3,64(a4)
	lui	a2,0x20
	slli	a4,s1,0x2
	add	a4,a4,a3
	ble	a2,a1,0x1a482 # forbody+0x140>
	lw	a0,0(a4)
	slliw	a5,a1,0xf
	slli	a0,a0,0x31
	srli	a0,a0,0x31
	or	a0,a0,a5
	sw	a0,0(a4)
	bnez	s4,0x1a466 # forbody+0x124>
	add	s6,s6,s7
	lw	a1,8(s6)
	li	a3,0
	mv	a2,s3
	mv	a0,s0
	jal	ra,0x23c26 # luaK_codeABx>
	ld	a5,0(s0)
	subw	a3,a0,s1
	lui	a4,0x20
	ld	a5,64(a5)
	slli	a0,a0,0x2
	add	a0,a0,a5
	ble	a4,a3,0x1a482 # forbody+0x140>
	lw	a5,0(a0)
	slliw	s1,a3,0xf
	mv	a1,s5
	slli	a5,a5,0x31
	srli	a5,a5,0x31
	or	s1,s1,a5
	sw	s1,0(a0)
	mv	a0,s0
	jal	ra,0x24ab6 # luaK_fixline>
	ld	ra,104(sp)
	ld	s0,96(sp)
	ld	s1,88(sp)
	ld	s2,80(sp)
	ld	s3,72(sp)
	ld	s4,64(sp)
	ld	s5,56(sp)
	ld	s6,48(sp)
	ld	s7,40(sp)
	ld	s8,32(sp)
	addi	sp,sp,112
	ret
	li	a5,0
	mv	a4,s2
	li	a3,0
	mv	a2,s3
	li	a1,76
	mv	a0,s0
	jal	ra,0x23c0a # luaK_codeABCk>
	mv	a1,s5
	mv	a0,s0
	jal	ra,0x24ab6 # luaK_fixline>
	j	0x1a414 # forbody+0xd2>
	ld	a0,16(s0)
	auipc	a1,0x28
	addi	a1,a1,-340 # 0x42330 # luaP_opmodes+0x250>
	jal	ra,0x25b74 # luaX_syntaxerror>
	li	a1,258
	jal	ra,0x189aa # error_expected>

body:
	addi	sp,sp,-192
	sd	s4,144(sp)
	ld	s4,48(a0)
	sd	s3,152(sp)
	sd	s0,176(sp)
	ld	s3,0(s4)
	mv	s0,a0
	sd	s2,160(sp)
	lw	a0,48(s4)
	lw	s2,32(s3)
	sd	s1,168(sp)
	sd	s5,136(sp)
	sd	s6,128(sp)
	sd	s7,120(sp)
	sd	ra,184(sp)
	sd	s8,112(sp)
	sd	s9,104(sp)
	ld	s7,56(s0)
	mv	s1,a1
	mv	s6,a2
	mv	s5,a3
	ble	s2,a0,0x1a658 # body+0x1c0>
	mv	a0,s7
	jal	ra,0x15968 # luaF_newproto>
	lw	a5,48(s4)
	ld	a4,72(s3)
	mv	s2,a0
	addiw	a3,a5,1
	slli	a5,a5,0x3
	sw	a3,48(s4)
	add	a5,a5,a4
	sd	a0,0(a5)
	lbu	a5,9(s3)
	andi	a5,a5,32
	beqz	a5,0x1a502 # body+0x6a>
	lbu	a5,9(a0)
	andi	a5,a5,24
	bnez	a5,0x1a6e4 # body+0x24c>
	sw	s5,44(s2) # 0x2002002c # __BSS_END__+0x1ffd1ca4>
	mv	a2,sp
	addi	a1,sp,24
	mv	a0,s0
	sd	s2,24(sp)
	jal	ra,0x18d3c # open_func>
	lw	a4,16(s0)
	li	a5,40
	bne	a4,a5,0x1a6fe # body+0x266>
	mv	a0,s0
	jal	ra,0x2672a # luaX_next>
	bnez	s6,0x1a6a0 # body+0x208>
	ld	s2,48(s0)
	lw	a5,16(s0)
	li	a4,41
	ld	s4,0(s2)
	beq	a5,a4,0x1a6d2 # body+0x23a>
	li	s7,280
	li	s3,0
	li	s6,291
	li	s8,44
	beq	a5,s7,0x1a57a # body+0xe2>
	bne	a5,s6,0x1a712 # body+0x27a>
	ld	s9,24(s0)
	mv	a0,s0
	jal	ra,0x2672a # luaX_next>
	mv	a1,s9
	mv	a0,s0
	jal	ra,0x1892a # new_localvar>
	lw	a5,16(s0)
	addiw	s3,s3,1
	beq	a5,s8,0x1a6f0 # body+0x258>
	mv	a1,s3
	mv	a0,s0
	jal	ra,0x18e04 # adjustlocalvars>
	lbu	a1,66(s2)
	sb	a1,10(s4)
	j	0x1a5ae # body+0x116>
	mv	a0,s0
	jal	ra,0x2672a # luaX_next>
	mv	a1,s3
	mv	a0,s0
	jal	ra,0x18e04 # adjustlocalvars>
	lbu	a2,66(s2)
	li	a0,1
	li	a5,0
	sb	a2,10(s4)
	ld	a1,0(s2)
	li	a4,0
	li	a3,0
	sb	a0,11(a1)
	li	a1,81
	mv	a0,s2
	jal	ra,0x23c0a # luaK_codeABCk>
	lbu	a1,66(s2)
	mv	a0,s2
	jal	ra,0x23c7c # luaK_reserveregs>
	lw	a4,16(s0)
	li	a5,41
	bne	a4,a5,0x1a708 # body+0x270>
	mv	a0,s0
	lui	s2,0x20020
	jal	ra,0x2672a # luaX_next>
	li	s3,29
	li	s4,1
	addi	s2,s2,7
	li	s6,273
	lw	a4,16(s0)
	addiw	a5,a4,-259
	bltu	s3,a5,0x1a5e6 # body+0x14e>
	sll	a5,s4,a5
	and	a5,a5,s2
	bnez	a5,0x1a5f8 # body+0x160>
	beq	a4,s6,0x1a5f2 # body+0x15a>
	mv	a0,s0
	jal	ra,0x194e0 # statement>
	j	0x1a5d2 # body+0x13a>
	mv	a0,s0
	jal	ra,0x194e0 # statement>
	lw	a4,4(s0)
	ld	a5,24(sp)
	mv	a3,s5
	mv	a0,s0
	sw	a4,48(a5)
	li	a2,264
	li	a1,261
	jal	ra,0x189d2 # check_match>
	ld	a5,48(s0)
	li	a2,0
	li	a1,79
	ld	s2,8(a5)
	lw	a3,48(s2) # 0x20020030 # __BSS_END__+0x1ffd1ca8>
	mv	a0,s2
	addiw	a3,a3,-1
	jal	ra,0x23c26 # luaK_codeABx>
	li	a5,-1
	sd	a5,16(s1)
	li	a5,17
	sw	a5,0(s1)
	sw	a0,8(s1)
	mv	a1,s1
	mv	a0,s2
	jal	ra,0x24310 # luaK_exp2nextreg>
	mv	a0,s0
	jal	ra,0x193cc # close_func>
	ld	ra,184(sp)
	ld	s0,176(sp)
	ld	s1,168(sp)
	ld	s2,160(sp)
	ld	s3,152(sp)
	ld	s4,144(sp)
	ld	s5,136(sp)
	ld	s6,128(sp)
	ld	s7,120(sp)
	ld	s8,112(sp)
	ld	s9,104(sp)
	addi	sp,sp,192
	ret
	ld	a1,72(s3)
	lui	a5,0x20
	addi	a5,a5,-1
	mv	a2,a0
	auipc	a6,0x29
	addi	a6,a6,1508 # 0x43c48 # luai_ctype_+0x838>
	li	a4,8
	addi	a3,s3,32
	mv	a0,s7
	jal	ra,0x17b0e # luaM_growaux_>
	lw	a5,32(s3)
	sd	a0,72(s3)
	ble	a5,s2,0x1a4d0 # body+0x38>
	addiw	a2,a5,-1
	subw	a2,a2,s2
	slli	a2,a2,0x20
	srli	a2,a2,0x20
	slli	s2,s2,0x3
	addi	a2,a2,1
	slli	a2,a2,0x3
	li	a1,0
	add	a0,a0,s2
	jal	ra,0x3683a # memset>
	j	0x1a4d0 # body+0x38>
	li	a2,4
	auipc	a1,0x28
	addi	a1,a1,-850 # 0x42350 # luaP_opmodes+0x270>
	mv	a0,s0
	jal	ra,0x25b7e # luaX_newstring>
	mv	a1,a0
	mv	a0,s0
	jal	ra,0x1892a # new_localvar>
	li	a1,1
	mv	a0,s0
	jal	ra,0x18e04 # adjustlocalvars>
	lw	a5,16(s0)
	ld	s2,48(s0)
	li	a4,41
	ld	s4,0(s2)
	bne	a5,a4,0x1a538 # body+0xa0>
	li	a1,0
	mv	a0,s0
	jal	ra,0x18e04 # adjustlocalvars>
	lbu	a1,66(s2)
	sb	a1,10(s4)
	j	0x1a5ae # body+0x116>
	mv	a2,a0
	mv	a1,s3
	mv	a0,s7
	jal	ra,0x1706e # luaC_barrier_>
	j	0x1a502 # body+0x6a>
	mv	a0,s0
	jal	ra,0x2672a # luaX_next>
	lw	a5,16(s0)
	bne	a5,s7,0x1a54a # body+0xb2>
	j	0x1a57a # body+0xe2>
	li	a1,40
	mv	a0,s0
	jal	ra,0x189aa # error_expected>
	li	a1,41
	mv	a0,s0
	jal	ra,0x189aa # error_expected>
	auipc	a1,0x28
	addi	a1,a1,-954 # 0x42358 # luaP_opmodes+0x278>
	mv	a0,s0
	jal	ra,0x25b74 # luaX_syntaxerror>

subexpr:
	addi	sp,sp,-112
	sd	s0,96(sp)
	mv	s0,a0
	ld	a0,56(a0)
	sd	s1,88(sp)
	sd	s2,80(sp)
	sd	ra,104(sp)
	sd	s3,72(sp)
	sd	s4,64(sp)
	sd	s5,56(sp)
	sd	s6,48(sp)
	sd	s7,40(sp)
	sd	s8,32(sp)
	mv	s1,a1
	mv	s2,a2
	jal	ra,0x1b8ee # luaE_incCstack>
	lw	a5,16(s0)
	li	a4,126
	beq	a5,a4,0x1a8b0 # subexpr+0x190>
	blt	a4,a5,0x1a812 # subexpr+0xf2>
	li	a4,35
	beq	a5,a4,0x1a8ac # subexpr+0x18c>
	li	a4,45
	li	s3,0
	bne	a5,a4,0x1a9ca # subexpr+0x2aa>
	mv	a0,s0
	lw	s4,4(s0)
	jal	ra,0x2672a # luaX_next>
	mv	a1,s1
	li	a2,12
	mv	a0,s0
	jal	ra,0x1a720 # subexpr>
	ld	a0,48(s0)
	mv	a3,s4
	mv	a2,s1
	mv	a1,s3
	jal	ra,0x24afa # luaK_prefix>
	lw	a5,16(s0)
	li	a4,126
	beq	a5,a4,0x1a9c4 # subexpr+0x2a4>
	blt	a4,a5,0x1a7c6 # subexpr+0xa6>
	li	a4,94
	blt	a4,a5,0x1a840 # subexpr+0x120>
	li	a4,36
	ble	a5,a4,0x1a7ea # subexpr+0xca>
	addiw	a5,a5,-37
	sext.w	a3,a5
	li	a4,57
	bltu	a4,a3,0x1a7ea # subexpr+0xca>
	slli	a5,a5,0x20
	srli	a5,a5,0x20
	auipc	a4,0x28
	addi	a4,a4,-808 # 0x4248c # luaP_opmodes+0x3ac>
	slli	a5,a5,0x2
	add	a5,a5,a4
	lw	a5,0(a5)
	add	a5,a5,a4
	jr	a5
	addiw	a5,a5,-256
	sext.w	a3,a5
	li	a4,30
	bltu	a4,a3,0x1a7ea # subexpr+0xca>
	slli	a5,a5,0x20
	srli	a5,a5,0x20
	auipc	a4,0x28
	addi	a4,a4,-612 # 0x42574 # luaP_opmodes+0x494>
	slli	a5,a5,0x2
	add	a5,a5,a4
	lw	a5,0(a5)
	add	a5,a5,a4
	jr	a5
	li	s7,21
	ld	a4,56(s0)
	ld	ra,104(sp)
	ld	s0,96(sp)
	lw	a5,176(a4)
	ld	s1,88(sp)
	ld	s2,80(sp)
	addiw	a5,a5,-1
	sw	a5,176(a4)
	ld	s3,72(sp)
	ld	s4,64(sp)
	ld	s5,56(sp)
	ld	s6,48(sp)
	ld	s8,32(sp)
	mv	a0,s7
	ld	s7,40(sp)
	addi	sp,sp,112
	ret
	li	a4,270
	li	s3,2
	beq	a5,a4,0x1a762 # subexpr+0x42>
	addiw	a5,a5,-262
	sext.w	a3,a5
	li	a4,30
	bltu	a4,a3,0x1a8b4 # subexpr+0x194>
	slli	a5,a5,0x20
	srli	a5,a5,0x20
	auipc	a4,0x28
	addi	a4,a4,-574 # 0x425f0 # luaP_opmodes+0x510>
	slli	a5,a5,0x2
	add	a5,a5,a4
	lw	a5,0(a5)
	add	a5,a5,a4
	jr	a5
	li	a3,124
	li	a4,4
	li	s7,8
	bne	a5,a3,0x1a7ea # subexpr+0xca>
	auipc	s5,0x28
	addi	s5,s5,-476 # 0x42670 # forprep.1>
	addi	s4,sp,8
	li	s6,21
	ble	a4,s2,0x1a7ec # subexpr+0xcc>
	mv	a0,s0
	lw	s8,4(s0)
	jal	ra,0x2672a # luaX_next>
	ld	a0,48(s0)
	mv	a2,s1
	mv	a1,s7
	jal	ra,0x249f6 # luaK_infix>
	slli	a5,s7,0x20
	srli	a5,a5,0x1f
	add	a5,a5,s5
	lbu	a2,17(a5) # 0x20011 # luaV_execute+0x10a9>
	mv	a1,s4
	mv	a0,s0
	jal	ra,0x1a720 # subexpr>
	mv	s3,a0
	ld	a0,48(s0)
	sext.w	s3,s3
	mv	a4,s8
	mv	a3,s4
	mv	a2,s1
	mv	a1,s7
	jal	ra,0x24ec8 # luaK_posfix>
	beq	s3,s6,0x1a7ea # subexpr+0xca>
	slli	a5,s3,0x20
	srli	a5,a5,0x1f
	add	a5,a5,s5
	lbu	a4,16(a5)
	mv	s7,s3
	j	0x1a85a # subexpr+0x13a>
	li	s3,3
	j	0x1a762 # subexpr+0x42>
	li	s3,1
	j	0x1a762 # subexpr+0x42>
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x1af4e # suffixedexp>
	j	0x1a782 # subexpr+0x62>
	li	a4,2
	li	s7,19
	j	0x1a84c # subexpr+0x12c>
	li	a4,3
	li	s7,13
	j	0x1a84c # subexpr+0x12c>
	li	a4,7
	li	s7,11
	j	0x1a84c # subexpr+0x12c>
	li	a4,9
	li	s7,12
	j	0x1a84c # subexpr+0x12c>
	li	a4,3
	li	s7,16
	j	0x1a84c # subexpr+0x12c>
	li	a4,3
	li	s7,15
	j	0x1a84c # subexpr+0x12c>
	li	a4,3
	li	s7,18
	j	0x1a84c # subexpr+0x12c>
	li	a4,11
	li	s7,6
	j	0x1a84c # subexpr+0x12c>
	li	a4,7
	li	s7,10
	j	0x1a84c # subexpr+0x12c>
	li	a4,1
	li	s7,20
	j	0x1a84c # subexpr+0x12c>
	li	a4,14
	li	s7,4
	j	0x1a84c # subexpr+0x12c>
	li	a4,11
	li	s7,5
	j	0x1a84c # subexpr+0x12c>
	li	a4,10
	li	s7,0
	j	0x1a84c # subexpr+0x12c>
	li	a4,6
	li	s7,7
	j	0x1a84c # subexpr+0x12c>
	li	a4,11
	li	s7,3
	j	0x1a84c # subexpr+0x12c>
	li	a4,3
	li	s7,14
	j	0x1a84c # subexpr+0x12c>
	li	a4,10
	li	s7,1
	j	0x1a84c # subexpr+0x12c>
	li	a5,-1
	sd	a5,16(s1)
	li	a5,3
	sw	a5,0(s1)
	sw	zero,8(s1)
	mv	a0,s0
	jal	ra,0x2672a # luaX_next>
	j	0x1a782 # subexpr+0x62>
	ld	a5,24(s0)
	li	a4,-1
	sd	a4,16(s1)
	li	a4,7
	sw	a4,0(s1)
	sd	a5,8(s1)
	j	0x1a930 # subexpr+0x210>
	fld	fa5,24(s0)
	li	a5,-1
	sd	a5,16(s1)
	li	a5,5
	sw	a5,0(s1)
	fsd	fa5,8(s1)
	j	0x1a930 # subexpr+0x210>
	ld	a5,24(s0)
	li	a4,-1
	sd	a4,16(s1)
	li	a4,6
	sw	a4,0(s1)
	sd	a5,8(s1)
	j	0x1a930 # subexpr+0x210>
	mv	a0,s0
	jal	ra,0x2672a # luaX_next>
	lw	a3,4(s0)
	li	a2,0
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x1a498 # body>
	j	0x1a782 # subexpr+0x62>
	li	a5,-1
	sd	a5,16(s1)
	li	a5,1
	sw	a5,0(s1)
	sw	zero,8(s1)
	j	0x1a930 # subexpr+0x210>
	li	a5,-1
	sd	a5,16(s1)
	li	a5,2
	sw	a5,0(s1)
	sw	zero,8(s1)
	j	0x1a930 # subexpr+0x210>
	ld	a0,48(s0)
	ld	a5,0(a0)
	lbu	a5,11(a5)
	beqz	a5,0x1a9dc # subexpr+0x2bc>
	li	a5,0
	li	a4,1
	li	a3,0
	li	a2,0
	li	a1,80
	jal	ra,0x23c0a # luaK_codeABCk>
	li	a5,-1
	sd	a5,16(s1)
	li	a5,19
	sw	a5,0(s1)
	sw	a0,8(s1)
	j	0x1a930 # subexpr+0x210>
	li	a4,3
	li	s7,17
	j	0x1a84c # subexpr+0x12c>
	li	a4,11
	li	s7,2
	j	0x1a84c # subexpr+0x12c>
	li	a4,5
	li	s7,9
	j	0x1a84c # subexpr+0x12c>
	li	a4,123
	bne	a5,a4,0x1a8b4 # subexpr+0x194>
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x1ac68 # constructor>
	j	0x1a782 # subexpr+0x62>
	auipc	a1,0x28
	addi	a1,a1,-1636 # 0x42378 # luaP_opmodes+0x298>
	mv	a0,s0
	jal	ra,0x25b74 # luaX_syntaxerror>

test_then_block:
	addi	sp,sp,-128
	sd	ra,120(sp)
	sd	s0,112(sp)
	sd	s1,104(sp)
	mv	s0,a0
	ld	s1,48(a0)
	sd	s2,96(sp)
	sd	s3,88(sp)
	sd	s4,80(sp)
	mv	s3,a1
	sd	s5,72(sp)
	sd	s6,64(sp)
	sd	s7,56(sp)
	addi	s2,sp,24
	jal	ra,0x2672a # luaX_next>
	li	a2,0
	mv	a1,s2
	mv	a0,s0
	jal	ra,0x1a720 # subexpr>
	lw	a4,16(s0)
	li	a5,274
	bne	a4,a5,0x1ab8c # test_then_block+0x1a2>
	mv	a0,s0
	jal	ra,0x2672a # luaX_next>
	lw	a4,16(s0)
	li	a5,257
	ld	a0,48(s0)
	mv	a1,s2
	beq	a4,a5,0x1aad2 # test_then_block+0xe8>
	jal	ra,0x2479e # luaK_goiftrue>
	lbu	a5,66(s1)
	sb	zero,18(sp)
	ld	a4,24(s1)
	sb	a5,16(sp)
	ld	a3,16(s1)
	sb	zero,17(sp)
	li	a5,0
	ld	a3,88(a3)
	lw	a2,40(a3)
	lw	a3,24(a3)
	sw	a2,8(sp)
	sw	a3,12(sp)
	beqz	a4,0x1aa62 # test_then_block+0x78>
	lbu	a5,19(a4)
	snez	a5,a5
	lw	s4,44(sp)
	sb	a5,19(sp)
	mv	a5,sp
	sd	a4,0(sp)
	sd	a5,24(s1)
	lui	s2,0x20020
	li	s5,29
	li	s6,1
	addi	s2,s2,7
	li	s7,273
	lw	a4,16(s0)
	addiw	a5,a4,-259
	bltu	s5,a5,0x1aa90 # test_then_block+0xa6>
	sll	a5,s6,a5
	and	a5,a5,s2
	bnez	a5,0x1aaa2 # test_then_block+0xb8>
	beq	a4,s7,0x1aa9c # test_then_block+0xb2>
	mv	a0,s0
	jal	ra,0x194e0 # statement>
	j	0x1aa7c # test_then_block+0x92>
	mv	a0,s0
	jal	ra,0x194e0 # statement>
	mv	a0,s1
	jal	ra,0x19154 # leaveblock>
	lw	a5,16(s0)
	li	a4,1
	addiw	a5,a5,-259
	bleu	a5,a4,0x1ab6c # test_then_block+0x182>
	mv	a1,s4
	mv	a0,s1
	jal	ra,0x23a64 # luaK_patchtohere>
	ld	ra,120(sp)
	ld	s0,112(sp)
	ld	s1,104(sp)
	ld	s2,96(sp)
	ld	s3,88(sp)
	ld	s4,80(sp)
	ld	s5,72(sp)
	ld	s6,64(sp)
	ld	s7,56(sp)
	addi	sp,sp,128
	ret
	lw	s2,4(s0)
	jal	ra,0x2484a # luaK_goiffalse>
	mv	a0,s0
	jal	ra,0x2672a # luaX_next>
	lbu	a5,66(s1)
	sb	zero,18(sp)
	ld	a4,24(s1)
	sb	a5,16(sp)
	ld	a3,16(s1)
	sb	zero,17(sp)
	li	a5,0
	ld	a3,88(a3)
	lw	a2,40(a3)
	lw	a3,24(a3)
	sw	a2,8(sp)
	sw	a3,12(sp)
	beqz	a4,0x1ab0a # test_then_block+0x120>
	lbu	a5,19(a4)
	snez	a5,a5
	ld	a0,56(s0)
	mv	a3,sp
	li	a2,5
	auipc	a1,0x27
	addi	a1,a1,1808 # 0x42220 # luaP_opmodes+0x140>
	sd	a3,24(s1)
	sb	a5,19(sp)
	sd	a4,0(sp)
	jal	ra,0x1bfce # luaS_newlstr>
	ld	a1,88(s0)
	lw	a4,40(sp)
	mv	a2,a0
	mv	a3,s2
	addi	a1,a1,16
	mv	a0,s0
	jal	ra,0x187c0 # newlabelentry>
	lw	a5,16(s0)
	li	a4,59
	li	s2,59
	beq	a5,a4,0x1ab7e # test_then_block+0x194>
	li	a4,261
	ble	a5,a4,0x1ab5c # test_then_block+0x172>
	li	a4,288
	beq	a5,a4,0x1ab64 # test_then_block+0x17a>
	mv	a0,s1
	jal	ra,0x23ad0 # luaK_jump>
	mv	s4,a0
	j	0x1aa6e # test_then_block+0x84>
	li	a4,258
	ble	a5,a4,0x1ab52 # test_then_block+0x168>
	mv	a0,s1
	jal	ra,0x19154 # leaveblock>
	j	0x1aabc # test_then_block+0xd2>
	mv	a0,s1
	jal	ra,0x23ad0 # luaK_jump>
	mv	a2,a0
	mv	a1,s3
	mv	a0,s1
	jal	ra,0x239e0 # luaK_concat>
	j	0x1aab4 # test_then_block+0xca>
	mv	a0,s0
	jal	ra,0x2672a # luaX_next>
	lw	a5,16(s0)
	bne	a5,s2,0x1ab42 # test_then_block+0x158>
	j	0x1ab7e # test_then_block+0x194>
	li	a1,274
	mv	a0,s0
	jal	ra,0x189aa # error_expected>

recfield:
	addi	sp,sp,-128
	sd	s2,96(sp)
	lw	a4,16(a0)
	ld	s2,48(a0)
	sd	s0,112(sp)
	sd	s1,104(sp)
	sd	ra,120(sp)
	sd	s3,88(sp)
	sd	s4,80(sp)
	li	a5,291
	lbu	s4,68(s2) # 0x20020044 # __BSS_END__+0x1ffd1cbc>
	mv	s0,a0
	mv	s1,a1
	beq	a4,a5,0x1ac40 # recfield+0xaa>
	jal	ra,0x2672a # luaX_next>
	addi	s3,sp,32
	li	a2,0
	mv	a1,s3
	mv	a0,s0
	jal	ra,0x1a720 # subexpr>
	ld	a0,48(s0)
	mv	a1,s3
	jal	ra,0x24538 # luaK_exp2val>
	lw	a4,16(s0)
	li	a5,93
	bne	a4,a5,0x1ac5e # recfield+0xc8>
	mv	a0,s0
	jal	ra,0x2672a # luaX_next>
	lw	a5,32(s1)
	lw	a3,16(s0)
	li	a4,61
	addiw	a5,a5,1
	sw	a5,32(s1)
	bne	a3,a4,0x1ac54 # recfield+0xbe>
	mv	a0,s0
	jal	ra,0x2672a # luaX_next>
	ld	a5,24(s1)
	addi	s1,sp,8
	addi	a2,sp,32
	ld	a4,0(a5)
	mv	a1,s1
	mv	a0,s2
	sd	a4,8(sp)
	ld	a4,8(a5)
	addi	s3,sp,56
	sd	a4,16(sp)
	ld	a5,16(a5)
	sd	a5,24(sp)
	jal	ra,0x248c6 # luaK_indexed>
	mv	a1,s3
	li	a2,0
	mv	a0,s0
	jal	ra,0x1a720 # subexpr>
	mv	a2,s3
	mv	a1,s1
	mv	a0,s2
	jal	ra,0x2457e # luaK_storevar>
	sb	s4,68(s2)
	ld	ra,120(sp)
	ld	s0,112(sp)
	ld	s1,104(sp)
	ld	s2,96(sp)
	ld	s3,88(sp)
	ld	s4,80(sp)
	addi	sp,sp,128
	ret
	ld	s3,24(a0)
	jal	ra,0x2672a # luaX_next>
	li	a5,-1
	sd	a5,48(sp)
	li	a5,7
	sw	a5,32(sp)
	sd	s3,40(sp)
	j	0x1abe4 # recfield+0x4e>
	li	a1,61
	mv	a0,s0
	jal	ra,0x189aa # error_expected>
	li	a1,93
	mv	a0,s0
	jal	ra,0x189aa # error_expected>

constructor:
	addi	sp,sp,-160
	sd	s2,128(sp)
	ld	s2,48(a0)
	li	a5,0
	li	a4,0
	li	a3,0
	li	a2,0
	sd	s0,144(sp)
	sd	s1,136(sp)
	mv	s0,a0
	mv	s1,a1
	mv	a0,s2
	li	a1,19
	sd	ra,152(sp)
	sd	s3,120(sp)
	sd	s4,112(sp)
	sd	s8,80(sp)
	sd	s5,104(sp)
	lw	s8,4(s0)
	sd	s6,96(sp)
	sd	s7,88(sp)
	sd	s9,72(sp)
	sd	s10,64(sp)
	sd	s11,56(sp)
	jal	ra,0x23c0a # luaK_codeABCk>
	li	a1,0
	mv	s3,a0
	mv	a0,s2
	jal	ra,0x23a70 # luaK_code>
	lbu	a5,68(s2)
	li	a4,8
	li	s4,-1
	sw	a4,0(s1)
	sw	a5,8(s1)
	sd	s4,16(s1)
	li	a1,1
	mv	a0,s2
	sd	zero,32(sp)
	sw	zero,40(sp)
	sd	s1,24(sp)
	jal	ra,0x23c7c # luaK_reserveregs>
	lw	a4,16(s0)
	sd	s4,16(sp)
	sw	zero,0(sp)
	sw	zero,8(sp)
	li	a5,123
	bne	a4,a5,0x1ae12 # constructor+0x1aa>
	mv	a0,s0
	jal	ra,0x2672a # luaX_next>
	lw	a4,16(s0)
	li	a5,125
	beq	a4,a5,0x1ad48 # constructor+0xe0>
	mv	s11,sp
	li	s9,50
	li	s6,91
	li	s5,291
	li	s4,44
	li	s7,59
	li	s10,125
	lw	a5,0(sp)
	beqz	a5,0x1ad16 # constructor+0xae>
	mv	a1,s11
	mv	a0,s2
	jal	ra,0x24310 # luaK_exp2nextreg>
	lw	a5,40(sp)
	sw	zero,0(sp)
	beq	a5,s9,0x1adf6 # constructor+0x18e>
	lw	a5,16(s0)
	beq	a5,s6,0x1adaa # constructor+0x142>
	bne	a5,s5,0x1ad2e # constructor+0xc6>
	mv	a0,s0
	jal	ra,0x26764 # luaX_lookahead>
	li	a5,61
	beq	a0,a5,0x1adaa # constructor+0x142>
	li	a2,0
	mv	a1,s11
	mv	a0,s0
	jal	ra,0x1a720 # subexpr>
	lw	a5,40(sp)
	addiw	a5,a5,1
	sw	a5,40(sp)
	lw	a5,16(s0)
	beq	a5,s4,0x1adb8 # constructor+0x150>
	beq	a5,s7,0x1adb8 # constructor+0x150>
	mv	a3,s8
	li	a2,123
	li	a1,125
	mv	a0,s0
	jal	ra,0x189d2 # check_match>
	lw	a3,40(sp)
	beqz	a3,0x1adc6 # constructor+0x15e>
	lw	a5,0(sp)
	li	a4,1
	addiw	a2,a5,-18
	bleu	a2,a4,0x1adca # constructor+0x162>
	bnez	a5,0x1adea # constructor+0x182>
	ld	a5,24(sp)
	lw	a2,36(sp)
	mv	a0,s2
	lw	a1,8(a5)
	jal	ra,0x25478 # luaK_setlist>
	lw	a4,36(sp)
	lw	a5,40(sp)
	addw	a3,a5,a4
	sw	a3,36(sp)
	lw	a4,32(sp)
	lw	a2,8(s1)
	mv	a1,s3
	mv	a0,s2
	jal	ra,0x25406 # luaK_settablesize>
	ld	ra,152(sp)
	ld	s0,144(sp)
	ld	s1,136(sp)
	ld	s2,128(sp)
	ld	s3,120(sp)
	ld	s4,112(sp)
	ld	s5,104(sp)
	ld	s6,96(sp)
	ld	s7,88(sp)
	ld	s8,80(sp)
	ld	s9,72(sp)
	ld	s10,64(sp)
	ld	s11,56(sp)
	addi	sp,sp,160
	ret
	mv	a1,s11
	mv	a0,s0
	jal	ra,0x1ab96 # recfield>
	lw	a5,16(s0)
	bne	a5,s4,0x1ad44 # constructor+0xdc>
	mv	a0,s0
	jal	ra,0x2672a # luaX_next>
	lw	a5,16(s0)
	bne	a5,s10,0x1ad02 # constructor+0x9a>
	j	0x1ad48 # constructor+0xe0>
	lw	a3,36(sp)
	j	0x1ad80 # constructor+0x118>
	li	a2,-1
	mv	a1,sp
	mv	a0,s2
	jal	ra,0x23d14 # luaK_setreturns>
	ld	a5,24(sp)
	lw	a2,36(sp)
	li	a3,-1
	lw	a1,8(a5)
	mv	a0,s2
	jal	ra,0x25478 # luaK_setlist>
	lw	a5,36(sp)
	addiw	a4,a5,-1
	j	0x1ad78 # constructor+0x110>
	mv	a1,sp
	mv	a0,s2
	jal	ra,0x24310 # luaK_exp2nextreg>
	lw	a3,40(sp)
	j	0x1ad6a # constructor+0x102>
	ld	a5,24(sp)
	lw	a2,36(sp)
	li	a3,50
	lw	a1,8(a5)
	mv	a0,s2
	jal	ra,0x25478 # luaK_setlist>
	lw	a3,40(sp)
	lw	a5,36(sp)
	sw	zero,40(sp)
	addw	a5,a5,a3
	sw	a5,36(sp)
	j	0x1ad16 # constructor+0xae>
	li	a1,123
	mv	a0,s0
	jal	ra,0x189aa # error_expected>

funcargs:
	lw	a5,16(a0)
	addi	sp,sp,-112
	sd	s0,96(sp)
	sd	s2,80(sp)
	sd	s3,72(sp)
	sd	ra,104(sp)
	sd	s1,88(sp)
	sd	s4,64(sp)
	sd	s5,56(sp)
	li	a4,123
	ld	s2,48(a0)
	mv	s0,a1
	mv	s3,a2
	beq	a5,a4,0x1ae5c # funcargs+0x40>
	li	a4,292
	mv	s1,a0
	beq	a5,a4,0x1aedc # funcargs+0xc0>
	li	a4,40
	beq	a5,a4,0x1aeba # funcargs+0x9e>
	auipc	a1,0x27
	addi	a1,a1,1368 # 0x423a8 # luaP_opmodes+0x2c8>
	jal	ra,0x25b74 # luaX_syntaxerror>
	addi	a1,sp,24
	jal	ra,0x1ac68 # constructor>
	lw	a5,24(sp)
	li	a4,1
	lw	a2,8(s0)
	addiw	a3,a5,-18
	bleu	a3,a4,0x1aeb2 # funcargs+0x96>
	bnez	a5,0x1af20 # funcargs+0x104>
	lbu	a3,68(s2)
	addiw	s1,a2,1
	subw	a3,a3,a2
	li	a5,0
	li	a4,2
	li	a1,68
	mv	a0,s2
	jal	ra,0x23c0a # luaK_codeABCk>
	li	a5,-1
	sd	a5,16(s0)
	li	a5,18
	sw	a0,8(s0)
	sw	a5,0(s0)
	mv	a1,s3
	mv	a0,s2
	jal	ra,0x24ab6 # luaK_fixline>
	sb	s1,68(s2)
	ld	ra,104(sp)
	ld	s0,96(sp)
	ld	s1,88(sp)
	ld	s2,80(sp)
	ld	s3,72(sp)
	ld	s4,64(sp)
	ld	s5,56(sp)
	addi	sp,sp,112
	ret
	li	a3,0
	addiw	s1,a2,1
	j	0x1ae7c # funcargs+0x60>
	jal	ra,0x2672a # luaX_next>
	lw	a4,16(s1)
	li	a5,41
	bne	a4,a5,0x1aeee # funcargs+0xd2>
	sw	zero,24(sp)
	mv	a3,s3
	li	a2,40
	li	a1,41
	mv	a0,s1
	jal	ra,0x189d2 # check_match>
	j	0x1ae62 # funcargs+0x46>
	ld	a5,24(a0)
	li	a4,-1
	sd	a4,40(sp)
	li	a4,7
	sw	a4,24(sp)
	sd	a5,32(sp)
	jal	ra,0x2672a # luaX_next>
	j	0x1ae62 # funcargs+0x46>
	addi	s4,sp,24
	li	a2,0
	mv	a1,s4
	mv	a0,s1
	jal	ra,0x1a720 # subexpr>
	lw	a4,16(s1)
	li	a5,44
	li	s5,44
	beq	a4,a5,0x1af2e # funcargs+0x112>
	lw	a5,24(sp)
	li	a4,1
	addiw	a5,a5,-18
	bltu	a4,a5,0x1aeca # funcargs+0xae>
	li	a2,-1
	mv	a1,s4
	mv	a0,s2
	jal	ra,0x23d14 # luaK_setreturns>
	j	0x1aeca # funcargs+0xae>
	addi	a1,sp,24
	mv	a0,s2
	sd	a2,8(sp)
	jal	ra,0x24310 # luaK_exp2nextreg>
	ld	a2,8(sp)
	j	0x1ae72 # funcargs+0x56>
	mv	a0,s1
	jal	ra,0x2672a # luaX_next>
	ld	a0,48(s1)
	mv	a1,s4
	jal	ra,0x24310 # luaK_exp2nextreg>
	li	a2,0
	mv	a1,s4
	mv	a0,s1
	jal	ra,0x1a720 # subexpr>
	lw	a5,16(s1)
	bne	a5,s5,0x1af0a # funcargs+0xee>
	j	0x1af2e # funcargs+0x112>

suffixedexp:
	lw	a5,16(a0)
	addi	sp,sp,-160
	sd	s1,136(sp)
	sd	s4,112(sp)
	sd	s6,96(sp)
	sd	s11,56(sp)
	sd	ra,152(sp)
	sd	s0,144(sp)
	sd	s2,128(sp)
	sd	s3,120(sp)
	sd	s5,104(sp)
	sd	s7,88(sp)
	sd	s8,80(sp)
	sd	s9,72(sp)
	sd	s10,64(sp)
	li	a4,40
	ld	s4,48(a0)
	lw	s6,4(a0)
	mv	s11,a0
	mv	s1,a1
	beq	a5,a4,0x1b092 # suffixedexp+0x144>
	li	a4,291
	bne	a5,a4,0x1b0d0 # suffixedexp+0x182>
	jal	ra,0x18cb0 # singlevar>
	li	s0,58
	li	s8,291
	li	s10,-1
	li	s9,7
	addi	s5,sp,24
	li	s3,91
	li	s7,93
	li	s2,90
	lw	a5,16(s11)
	beq	a5,s0,0x1affa # suffixedexp+0xac>
	ble	a5,s0,0x1afda # suffixedexp+0x8c>
	beq	a5,s3,0x1b056 # suffixedexp+0x108>
	blt	s2,a5,0x1b032 # suffixedexp+0xe4>
	ld	ra,152(sp)
	ld	s0,144(sp)
	ld	s1,136(sp)
	ld	s2,128(sp)
	ld	s3,120(sp)
	ld	s4,112(sp)
	ld	s5,104(sp)
	ld	s6,96(sp)
	ld	s7,88(sp)
	ld	s8,80(sp)
	ld	s9,72(sp)
	ld	s10,64(sp)
	ld	s11,56(sp)
	addi	sp,sp,160
	ret
	li	a4,40
	beq	a5,a4,0x1b042 # suffixedexp+0xf4>
	li	a4,46
	bne	a5,a4,0x1afbc # suffixedexp+0x6e>
	mv	a1,s1
	mv	a0,s11
	jal	ra,0x18c50 # fieldsel>
	lw	a5,16(s11)
	bne	a5,s0,0x1afb0 # suffixedexp+0x62>
	mv	a0,s11
	jal	ra,0x2672a # luaX_next>
	lw	a5,16(s11)
	bne	a5,s8,0x1b0bc # suffixedexp+0x16e>
	ld	a5,24(s11)
	mv	a0,s11
	sd	a5,8(sp)
	jal	ra,0x2672a # luaX_next>
	ld	a5,8(sp)
	mv	a2,s5
	mv	a1,s1
	mv	a0,s4
	sd	s10,40(sp)
	sw	s9,24(sp)
	sd	a5,32(sp)
	jal	ra,0x24684 # luaK_self>
	mv	a2,s6
	mv	a1,s1
	mv	a0,s11
	jal	ra,0x1ae1c # funcargs>
	j	0x1afa8 # suffixedexp+0x5a>
	li	a4,123
	beq	a5,a4,0x1b042 # suffixedexp+0xf4>
	li	a4,292
	bne	a5,a4,0x1afbc # suffixedexp+0x6e>
	mv	a1,s1
	mv	a0,s4
	jal	ra,0x24310 # luaK_exp2nextreg>
	mv	a2,s6
	mv	a1,s1
	mv	a0,s11
	jal	ra,0x1ae1c # funcargs>
	j	0x1afa8 # suffixedexp+0x5a>
	mv	a1,s1
	mv	a0,s4
	jal	ra,0x24524 # luaK_exp2anyregup>
	mv	a0,s11
	jal	ra,0x2672a # luaX_next>
	li	a2,0
	mv	a1,s5
	mv	a0,s11
	jal	ra,0x1a720 # subexpr>
	ld	a0,48(s11)
	mv	a1,s5
	jal	ra,0x24538 # luaK_exp2val>
	lw	a5,16(s11)
	bne	a5,s7,0x1b0c6 # suffixedexp+0x178>
	mv	a0,s11
	jal	ra,0x2672a # luaX_next>
	mv	a2,s5
	mv	a1,s1
	mv	a0,s4
	jal	ra,0x248c6 # luaK_indexed>
	j	0x1afa8 # suffixedexp+0x5a>
	jal	ra,0x2672a # luaX_next>
	mv	a1,s1
	li	a2,0
	mv	a0,s11
	jal	ra,0x1a720 # subexpr>
	mv	a0,s11
	mv	a3,s6
	li	a2,40
	li	a1,41
	jal	ra,0x189d2 # check_match>
	ld	a0,48(s11)
	mv	a1,s1
	jal	ra,0x23ddc # luaK_dischargevars>
	j	0x1af8c # suffixedexp+0x3e>
	li	a1,291
	mv	a0,s11
	jal	ra,0x189aa # error_expected>
	li	a1,93
	mv	a0,s11
	jal	ra,0x189aa # error_expected>
	auipc	a1,0x27
	addi	a1,a1,760 # 0x423c8 # luaP_opmodes+0x2e8>
	jal	ra,0x25b74 # luaX_syntaxerror>

restassign:
	lw	a5,8(a1)
	addi	sp,sp,-96
	sd	ra,88(sp)
	sd	s0,80(sp)
	sd	s1,72(sp)
	sd	s2,64(sp)
	sd	s3,56(sp)
	sd	s4,48(sp)
	sd	s5,40(sp)
	addiw	a3,a5,-9
	li	a4,6
	bltu	a4,a3,0x1b308 # restassign+0x22c>
	li	a4,10
	ld	a3,48(a0)
	mv	s1,a1
	mv	s0,a0
	mv	s3,a2
	addi	s4,a1,8
	beq	a5,a4,0x1b17e # restassign+0xa2>
	li	a4,11
	beq	a5,a4,0x1b1ce # restassign+0xf2>
	li	a4,9
	beq	a5,a4,0x1b1aa # restassign+0xce>
	lw	a5,16(s0)
	li	s2,44
	beq	a5,s2,0x1b1e4 # restassign+0x108>
	li	a4,61
	bne	a5,a4,0x1b314 # restassign+0x238>
	mv	a0,s0
	jal	ra,0x2672a # luaX_next>
	mv	s1,sp
	li	a2,0
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x1a720 # subexpr>
	lw	a5,16(s0)
	beq	a5,s2,0x1b27c # restassign+0x1a0>
	li	s2,1
	ld	a0,48(s0)
	beq	s3,s2,0x1b26a # restassign+0x18e>
	mv	a3,s1
	mv	a2,s2
	mv	a1,s3
	jal	ra,0x18a28 # adjust_assign.isra.0>
	ld	a0,48(s0)
	li	a4,-1
	mv	a2,s1
	lbu	a5,68(a0)
	mv	a1,s4
	sd	a4,16(sp)
	addiw	a5,a5,-1
	li	a4,8
	sw	a4,0(sp)
	sw	a5,8(sp)
	jal	ra,0x2457e # luaK_storevar>
	ld	ra,88(sp)
	ld	s0,80(sp)
	ld	s1,72(sp)
	ld	s2,64(sp)
	ld	s3,56(sp)
	ld	s4,48(sp)
	ld	s5,40(sp)
	addi	sp,sp,96
	ret
	ld	a5,0(a3)
	lw	a4,16(a1)
	ld	a5,80(a5)
	slli	a4,a4,0x4
	add	a5,a5,a4
	lbu	a4,10(a5)
	beqz	a4,0x1b116 # restassign+0x3a>
	ld	a2,0(a5)
	beqz	a2,0x1b116 # restassign+0x3a>
	ld	a0,56(s0)
	auipc	a1,0x27
	addi	a1,a1,588 # 0x423e0 # luaP_opmodes+0x300>
	addi	a2,a2,24
	jal	ra,0x1865a # luaO_pushfstring>
	mv	a1,a0
	mv	a0,s0
	jal	ra,0x2392c # luaK_semerror>
	ld	a2,16(a3)
	lhu	a5,18(a1)
	lw	a4,56(a3)
	ld	a3,88(a2)
	addw	a4,a4,a5
	slli	a5,a4,0x1
	ld	a3,0(a3)
	add	a5,a5,a4
	slli	a5,a5,0x3
	add	a5,a5,a3
	lbu	a4,9(a5)
	beqz	a4,0x1b116 # restassign+0x3a>
	ld	a2,16(a5)
	beqz	a2,0x1b116 # restassign+0x3a>
	j	0x1b192 # restassign+0xb6>
	lw	a3,16(a1)
	ld	a4,88(a0)
	slli	a5,a3,0x1
	ld	a4,0(a4)
	add	a5,a5,a3
	slli	a5,a5,0x3
	add	a5,a5,a4
	ld	a2,16(a5)
	beqz	a2,0x1b116 # restassign+0x3a>
	j	0x1b192 # restassign+0xb6>
	mv	a0,s0
	jal	ra,0x2672a # luaX_next>
	addi	a1,sp,8
	mv	a0,s0
	sd	s1,0(sp)
	jal	ra,0x1af4e # suffixedexp>
	lw	a5,8(sp)
	li	a4,3
	addiw	a5,a5,-12
	bltu	a4,a5,0x1b220 # restassign+0x144>
	ld	a0,56(s0)
	mv	s1,sp
	jal	ra,0x1b8ee # luaE_incCstack>
	addiw	a2,s3,1
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x1b0dc # restassign>
	ld	a4,56(s0)
	lw	a5,176(a4)
	addiw	a5,a5,-1
	sw	a5,176(a4)
	j	0x1b152 # restassign+0x76>
	ld	s2,48(s0)
	li	a6,0
	li	a3,3
	lbu	a2,68(s2)
	li	a1,13
	li	a0,9
	li	t1,12
	li	a7,10
	li	t4,15
	j	0x1b240 # restassign+0x164>
	beq	a4,a0,0x1b2ca # restassign+0x1ee>
	ld	s1,0(s1)
	beqz	s1,0x1b2a4 # restassign+0x1c8>
	lw	a5,8(s1)
	addiw	a4,a5,-12
	bltu	a3,a4,0x1b23c # restassign+0x160>
	lw	a4,8(sp)
	bne	a5,a1,0x1b238 # restassign+0x15c>
	bne	a4,a7,0x1b23c # restassign+0x160>
	lbu	a4,18(s1)
	lw	a5,16(sp)
	bne	a4,a5,0x1b23c # restassign+0x160>
	sw	t4,8(s1)
	sb	a2,18(s1)
	li	a6,1
	j	0x1b23c # restassign+0x160>
	mv	a1,s1
	jal	ra,0x23d92 # luaK_setoneret>
	ld	a0,48(s0)
	mv	a2,s1
	mv	a1,s4
	jal	ra,0x2457e # luaK_storevar>
	j	0x1b16c # restassign+0x90>
	li	s2,1
	li	s5,44
	mv	a0,s0
	jal	ra,0x2672a # luaX_next>
	ld	a0,48(s0)
	mv	a1,s1
	addiw	s2,s2,1
	jal	ra,0x24310 # luaK_exp2nextreg>
	li	a2,0
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x1a720 # subexpr>
	lw	a5,16(s0)
	bne	a5,s5,0x1b142 # restassign+0x66>
	j	0x1b282 # restassign+0x1a6>
	beqz	a6,0x1b1fe # restassign+0x122>
	lw	a4,8(sp)
	li	a5,9
	sext.w	a2,a2
	beq	a4,a5,0x1b2f6 # restassign+0x21a>
	lw	a3,16(sp)
	li	a5,0
	li	a4,0
	li	a1,9
	mv	a0,s2
	jal	ra,0x23c0a # luaK_codeABCk>
	li	a1,1
	mv	a0,s2
	jal	ra,0x23c7c # luaK_reserveregs>
	j	0x1b1fe # restassign+0x122>
	lbu	a4,16(sp)
	lbu	t3,18(s1)
	beq	t3,a4,0x1b2ea # restassign+0x20e>
	bne	a5,t1,0x1b23c # restassign+0x160>
	lh	a5,16(s1)
	bne	a5,a4,0x1b23c # restassign+0x160>
	sh	a2,16(s1)
	li	a6,1
	j	0x1b23c # restassign+0x160>
	sb	a2,18(s1)
	li	a6,1
	bne	a5,t1,0x1b23c # restassign+0x160>
	j	0x1b2da # restassign+0x1fe>
	lbu	a3,16(sp)
	li	a5,0
	li	a4,0
	li	a1,0
	mv	a0,s2
	jal	ra,0x23c0a # luaK_codeABCk>
	j	0x1b2c0 # restassign+0x1e4>
	auipc	a1,0x27
	addi	a1,a1,-16 # 0x422f8 # luaP_opmodes+0x218>
	jal	ra,0x25b74 # luaX_syntaxerror>
	li	a1,61
	mv	a0,s0
	jal	ra,0x189aa # error_expected>

luaY_nvarstack:
	lbu	a2,66(a0)
	li	a1,-1
	li	a6,3
	j	0x1b344 # luaY_nvarstack+0x26>
	ld	a3,16(a0)
	lw	a5,56(a0)
	ld	a3,88(a3)
	addw	a4,a4,a5
	slli	a5,a4,0x1
	ld	a3,0(a3)
	add	a5,a5,a4
	slli	a5,a5,0x3
	add	a5,a5,a3
	lbu	a4,9(a5)
	bne	a4,a6,0x1b350 # luaY_nvarstack+0x32>
	addiw	a2,a2,-1
	mv	a4,a2
	bne	a2,a1,0x1b328 # luaY_nvarstack+0xa>
	li	a0,0
	ret
	lbu	a0,10(a5)
	addiw	a0,a0,1
	ret

luaY_parser:
	addi	sp,sp,-288
	sd	s5,232(sp)
	mv	s5,a1
	li	a1,1
	sd	ra,280(sp)
	sd	s0,272(sp)
	sd	s1,264(sp)
	mv	s0,a0
	sd	s2,256(sp)
	sd	s3,248(sp)
	mv	s2,a3
	sd	s4,240(sp)
	sd	s6,224(sp)
	mv	s4,a2
	sd	s7,216(sp)
	mv	s6,a5
	mv	s7,a4
	jal	ra,0x1562a # luaF_newLclosure>
	ld	a5,16(s0)
	li	a4,70
	mv	s1,a0
	sd	a0,0(a5)
	sb	a4,8(a5)
	mv	a0,s0
	jal	ra,0x1451e # luaD_inctop>
	mv	a0,s0
	jal	ra,0x1c4ce # luaH_new>
	ld	a5,16(s0)
	sd	a0,176(sp)
	li	a4,69
	sd	a0,0(a5)
	sb	a4,8(a5)
	mv	a0,s0
	jal	ra,0x1451e # luaD_inctop>
	mv	a0,s0
	jal	ra,0x15968 # luaF_newproto>
	lbu	a5,9(s1)
	sd	a0,24(s1)
	sd	a0,24(sp)
	andi	a5,a5,32
	mv	s3,a0
	beqz	a5,0x1b3cc # luaY_parser+0x74>
	lbu	a5,9(a0)
	andi	a5,a5,24
	bnez	a5,0x1b4ce # luaY_parser+0x176>
	mv	a1,s7
	mv	a0,s0
	jal	ra,0x1c032 # luaS_new>
	ld	a1,24(sp)
	sd	a0,112(s3)
	lbu	a5,9(a1)
	ld	a3,112(a1)
	andi	a5,a5,32
	beqz	a5,0x1b3f0 # luaY_parser+0x98>
	lbu	a5,9(a3) # 0x1000009 # __BSS_END__+0xfb1c81>
	andi	a5,a5,24
	bnez	a5,0x1b4dc # luaY_parser+0x184>
	addi	s3,sp,96
	mv	a4,s6
	mv	a2,s5
	mv	a1,s3
	mv	a0,s0
	sw	zero,40(s2)
	sw	zero,24(s2)
	sw	zero,8(s2)
	sd	s4,168(sp)
	sd	s2,184(sp)
	jal	ra,0x266ca # luaX_setinput>
	addi	s2,sp,24
	mv	a2,sp
	mv	a1,s2
	mv	a0,s3
	jal	ra,0x18d3c # open_func>
	ld	a0,24(sp)
	li	s4,1
	li	a5,0
	li	a2,0
	li	a1,81
	li	a4,0
	li	a3,0
	sb	s4,11(a0)
	mv	a0,s2
	jal	ra,0x23c0a # luaK_codeABCk>
	mv	a0,s2
	jal	ra,0x1888e # allocupvalue>
	sh	s4,8(a0)
	sb	zero,10(a0)
	ld	a2,200(sp)
	ld	a1,24(sp)
	sd	a2,0(a0)
	lbu	a5,9(a1)
	andi	a5,a5,32
	beqz	a5,0x1b45e # luaY_parser+0x106>
	lbu	a5,9(a2) # 0x20009 # luaV_execute+0x10a1>
	andi	a5,a5,24
	bnez	a5,0x1b4c6 # luaY_parser+0x16e>
	mv	a0,s3
	lui	s2,0x20020
	jal	ra,0x2672a # luaX_next>
	li	s4,29
	li	s5,1
	addi	s2,s2,7
	li	s6,273
	lw	a4,112(sp)
	addiw	a5,a4,-259
	bltu	s4,a5,0x1b486 # luaY_parser+0x12e>
	sll	a5,s5,a5
	and	a5,a5,s2
	bnez	a5,0x1b49a # luaY_parser+0x142>
	beq	a4,s6,0x1b492 # luaY_parser+0x13a>
	mv	a0,s3
	jal	ra,0x194e0 # statement>
	j	0x1b472 # luaY_parser+0x11a>
	mv	a0,s3
	jal	ra,0x194e0 # statement>
	lw	a4,112(sp)
	li	a5,288
	bne	a4,a5,0x1b4ea # luaY_parser+0x192>
	mv	a0,s3
	jal	ra,0x193cc # close_func>
	ld	a5,16(s0)
	ld	ra,280(sp)
	ld	s2,256(sp)
	addi	a5,a5,-16
	sd	a5,16(s0)
	ld	s0,272(sp)
	ld	s3,248(sp)
	ld	s4,240(sp)
	ld	s5,232(sp)
	ld	s6,224(sp)
	ld	s7,216(sp)
	mv	a0,s1
	ld	s1,264(sp)
	addi	sp,sp,288
	ret
	ld	a0,152(sp)
	jal	ra,0x1706e # luaC_barrier_>
	j	0x1b45e # luaY_parser+0x106>
	mv	a2,a0
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x1706e # luaC_barrier_>
	ld	s3,24(sp)
	j	0x1b3cc # luaY_parser+0x74>
	mv	a2,a3
	mv	a0,s0
	jal	ra,0x1706e # luaC_barrier_>
	ld	a5,24(sp)
	ld	a3,112(a5)
	j	0x1b3f0 # luaY_parser+0x98>
	li	a1,288
	mv	a0,s3
	jal	ra,0x189aa # error_expected>

stack_init:
	mv	a5,a1
	addi	sp,sp,-16
	sd	s0,0(sp)
	li	a2,0
	mv	s0,a0
	li	a1,720
	mv	a0,a5
	sd	ra,8(sp)
	jal	ra,0x17c10 # luaM_malloc_>
	sd	a0,48(s0)
	sd	a0,64(s0)
	addi	a5,a0,8
	addi	a4,a0,728
	sb	zero,0(a5)
	addi	a5,a5,16
	bne	a5,a4,0x1b516 # stack_init+0x22>
	addi	a5,a0,640
	sd	a5,40(s0)
	lui	a5,0x20
	sw	a5,156(s0)
	sd	a0,96(s0)
	sd	zero,112(s0)
	sd	zero,120(s0)
	sd	zero,128(s0)
	sb	zero,8(a0)
	addi	a4,a0,16
	addi	a5,s0,96
	addi	a0,a0,336
	ld	ra,8(sp)
	sd	a4,16(s0)
	sd	a0,104(s0)
	sd	a5,32(s0)
	ld	s0,0(sp)
	addi	sp,sp,16
	ret

f_luaopen:
	addi	sp,sp,-48
	mv	a1,a0
	sd	ra,40(sp)
	sd	s0,32(sp)
	sd	s1,24(sp)
	sd	s2,16(sp)
	sd	s3,8(sp)
	mv	s0,a0
	ld	s2,24(a0)
	jal	ra,0x1b4f4 # stack_init>
	mv	a0,s0
	jal	ra,0x1c4ce # luaH_new>
	mv	s1,a0
	li	s3,69
	mv	a1,a0
	li	a3,0
	li	a2,2
	mv	a0,s0
	sd	s1,64(s2) # 0x20020040 # __BSS_END__+0x1ffd1cb8>
	sb	s3,72(s2)
	jal	ra,0x1cb1e # luaH_resize>
	ld	s1,16(s1)
	li	a5,72
	mv	a0,s0
	sb	a5,8(s1)
	sd	s0,0(s1)
	jal	ra,0x1c4ce # luaH_new>
	sd	a0,16(s1)
	sb	s3,24(s1)
	mv	a0,s0
	jal	ra,0x1bf0a # luaS_init>
	mv	a0,s0
	jal	ra,0x1d12c # luaT_init>
	mv	a0,s0
	jal	ra,0x2560e # luaX_init>
	li	a5,1
	sb	a5,106(s2)
	sb	zero,88(s2)
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	addi	sp,sp,48
	ret

close_state:
	addi	sp,sp,-32
	sd	s2,0(sp)
	ld	s2,24(a0)
	sd	s0,16(sp)
	sd	ra,24(sp)
	sd	s1,8(sp)
	lbu	a5,88(s2)
	mv	s0,a0
	andi	a5,a5,15
	bnez	a5,0x1b5f6 # close_state+0x22>
	li	a2,0
	li	a1,1
	jal	ra,0x14f98 # luaD_closeprotected>
	mv	a0,s0
	jal	ra,0x1735e # luaC_freeallobjects>
	ld	a5,24(s0)
	mv	a0,s0
	lw	a2,60(a5)
	ld	a1,48(a5)
	slli	a2,a2,0x3
	jal	ra,0x17a5c # luaM_free_>
	ld	a1,48(s0)
	beqz	a1,0x1b648 # close_state+0x74>
	ld	s1,120(s0)
	addi	a5,s0,96
	sd	a5,32(s0)
	sd	zero,120(s0)
	beqz	s1,0x1b636 # close_state+0x62>
	mv	a1,s1
	li	a2,64
	mv	a0,s0
	ld	s1,24(s1)
	jal	ra,0x17a5c # luaM_free_>
	lhu	a5,12(s0)
	addiw	a5,a5,-1
	sh	a5,12(s0)
	bnez	s1,0x1b61a # close_state+0x46>
	ld	a1,48(s0)
	ld	a5,40(s0)
	mv	a0,s0
	sub	a2,a5,a1
	srai	a2,a2,0x4
	addiw	a2,a2,5
	slli	a2,a2,0x4
	jal	ra,0x17a5c # luaM_free_>
	addi	a1,s0,-8
	ld	s0,16(sp)
	ld	a5,0(s2)
	ld	a0,8(s2)
	ld	ra,24(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	li	a3,0
	li	a2,1624
	addi	sp,sp,32
	jr	a5

lua_newstate:
	addi	sp,sp,-96
	sd	s2,64(sp)
	mv	s2,a1
	sd	s3,56(sp)
	sd	ra,88(sp)
	sd	s0,80(sp)
	sd	s1,72(sp)
	sd	s4,48(sp)
	mv	s3,a0
	li	a3,1624
	li	a2,8
	li	a1,0
	mv	a0,s2
	jalr	s3
	beqz	a0,0x1b7da # lua_newstate+0x174>
	lui	a5,0x1
	addi	a5,a5,-2040 # 0x808 # exit-0xf918>
	sh	a5,16(a0)
	li	a5,256
	addi	s1,a0,8
	addi	a4,a0,208
	sd	zero,168(a0)
	sh	a5,18(a0)
	li	s4,8
	lui	a5,0x10
	mv	s0,a0
	sd	a4,32(a0)
	sd	a5,184(a0)
	sb	s4,308(a0)
	sd	zero,56(a0)
	sd	zero,40(a0)
	sh	zero,20(a0)
	sd	s1,88(a0)
	sd	zero,96(a0)
	sw	zero,200(a0)
	sd	zero,64(a0)
	sd	s1,320(a0)
	sd	zero,8(a0)
	sd	zero,176(a0)
	sd	zero,192(a0)
	sd	s3,208(a0)
	sd	s2,216(a0)
	sd	zero,1608(a0)
	sd	zero,1616(a0)
	sd	s1,472(a0)
	li	a0,0
	jal	ra,0x37b34 # time>
	sext.w	a2,a0
	auipc	a5,0x0
	addi	a5,a5,-150 # 0x1b666 # lua_newstate>
	addi	a4,sp,12
	li	a1,24
	addi	a0,sp,24
	sw	a2,12(sp)
	sd	a4,32(sp)
	sd	a5,16(sp)
	sd	a5,40(sp)
	sd	s1,24(sp)
	jal	ra,0x1bc8c # luaS_hash>
	lui	a5,0x2
	addi	a4,a5,-1772 # 0x1914 # exit-0xe80c>
	li	a3,1624
	addi	a5,a5,-1742
	sd	a3,224(s0)
	sh	a5,316(s0)
	li	a3,3
	li	a5,13
	li	a2,72
	li	a1,0
	sw	a0,304(s0)
	sb	zero,280(s0)
	sd	zero,464(s0)
	sd	zero,392(s0)
	sd	zero,384(s0)
	sd	zero,336(s0)
	sd	zero,416(s0)
	sd	zero,408(s0)
	sd	zero,400(s0)
	sd	zero,424(s0)
	sd	zero,448(s0)
	sd	zero,440(s0)
	sd	zero,432(s0)
	sd	zero,328(s0)
	sd	zero,352(s0)
	sd	zero,344(s0)
	sd	zero,376(s0)
	sd	zero,368(s0)
	sd	zero,360(s0)
	sd	zero,456(s0)
	sd	zero,232(s0)
	sd	zero,248(s0)
	sd	zero,256(s0)
	sd	zero,264(s0)
	sd	zero,288(s0)
	sb	a3,296(s0)
	sb	s4,309(s0)
	sh	zero,310(s0)
	sw	a4,312(s0)
	sb	a5,318(s0)
	addi	a0,s0,688
	jal	ra,0x3683a # memset>
	li	a2,0
	auipc	a1,0x0
	addi	a1,a1,-606 # 0x1b55a # f_luaopen>
	mv	a0,s1
	jal	ra,0x14280 # luaD_rawrunprotected>
	bnez	a0,0x1b7de # lua_newstate+0x178>
	ld	ra,88(sp)
	ld	s0,80(sp)
	ld	s2,64(sp)
	ld	s3,56(sp)
	ld	s4,48(sp)
	mv	a0,s1
	ld	s1,72(sp)
	addi	sp,sp,96
	ret
	li	s1,0
	j	0x1b7c8 # lua_newstate+0x162>
	mv	a0,s1
	jal	ra,0x1b5d4 # close_state>
	li	s1,0
	j	0x1b7c8 # lua_newstate+0x162>

luaE_setdebt:
	ld	a4,16(a0)
	ld	a3,24(a0)
	li	a5,-1
	slli	a5,a5,0x3f
	add	a4,a4,a3
	addi	a5,a5,1
	add	a5,a5,a4
	ble	a1,a5,0x1b7fc # luaE_setdebt+0x14>
	mv	a5,a1
	sub	a4,a4,a5
	sd	a4,16(a0)
	sd	a5,24(a0)
	ret

lua_setcstacklimit:
	li	a0,200
	ret

luaE_extendCI:
	addi	sp,sp,-16
	li	a2,0
	li	a1,64
	sd	s0,0(sp)
	sd	ra,8(sp)
	mv	s0,a0
	jal	ra,0x17c10 # luaM_malloc_>
	ld	a3,32(s0)
	lhu	a4,12(s0)
	ld	ra,8(sp)
	sd	a0,24(a3)
	sd	a3,16(a0)
	sd	zero,24(a0)
	sw	zero,40(a0)
	addiw	a4,a4,1
	sh	a4,12(s0)
	ld	s0,0(sp)
	addi	sp,sp,16
	ret

luaE_freeCI:
	ld	a5,32(a0)
	addi	sp,sp,-32
	sd	s0,16(sp)
	ld	s0,24(a5)
	sd	ra,24(sp)
	sd	s1,8(sp)
	sd	zero,24(a5)
	beqz	s0,0x1b86a # luaE_freeCI+0x2e>
	mv	s1,a0
	mv	a1,s0
	li	a2,64
	mv	a0,s1
	ld	s0,24(s0)
	jal	ra,0x17a5c # luaM_free_>
	lhu	a5,12(s1)
	addiw	a5,a5,-1
	sh	a5,12(s1)
	bnez	s0,0x1b850 # luaE_freeCI+0x14>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret

luaE_shrinkCI:
	ld	a5,32(a0)
	addi	sp,sp,-32
	sd	s0,16(sp)
	ld	s0,24(a5)
	sd	ra,24(sp)
	sd	s1,8(sp)
	sd	s2,0(sp)
	beqz	s0,0x1b8b2 # luaE_shrinkCI+0x3e>
	ld	a1,24(s0)
	mv	s1,a0
	bnez	a1,0x1b894 # luaE_shrinkCI+0x20>
	j	0x1b8b2 # luaE_shrinkCI+0x3e>
	ld	a1,24(s0)
	sd	s2,16(s0)
	beqz	a1,0x1b8b2 # luaE_shrinkCI+0x3e>
	lhu	a5,12(s1)
	mv	s2,s0
	ld	s0,24(a1)
	addiw	a5,a5,-1
	li	a2,64
	sd	s0,24(s2)
	sh	a5,12(s1)
	mv	a0,s1
	jal	ra,0x17a5c # luaM_free_>
	bnez	s0,0x1b88c # luaE_shrinkCI+0x18>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret

luaE_checkcstack:
	lhu	a5,176(a0)
	addi	sp,sp,-16
	sd	ra,8(sp)
	li	a4,200
	beq	a5,a4,0x1b8dc # luaE_checkcstack+0x1e>
	li	a4,219
	bltu	a4,a5,0x1b8e8 # luaE_checkcstack+0x2a>
	ld	ra,8(sp)
	addi	sp,sp,16
	ret
	auipc	a1,0x27
	addi	a1,a1,-556 # 0x426b0 # priority+0x30>
	jal	ra,0x13d34 # luaG_runerror>
	li	a1,5
	jal	ra,0x14162 # luaD_throw>

luaE_incCstack:
	lw	a5,176(a0)
	li	a3,199
	addiw	a5,a5,1
	sw	a5,176(a0)
	slli	a5,a5,0x30
	srli	a5,a5,0x30
	bltu	a3,a5,0x1b906 # luaE_incCstack+0x18>
	ret
	addi	sp,sp,-16
	sd	ra,8(sp)
	li	a4,200
	beq	a5,a4,0x1b920 # luaE_incCstack+0x32>
	li	a4,219
	bltu	a4,a5,0x1b92c # luaE_incCstack+0x3e>
	ld	ra,8(sp)
	addi	sp,sp,16
	ret
	auipc	a1,0x27
	addi	a1,a1,-624 # 0x426b0 # priority+0x30>
	jal	ra,0x13d34 # luaG_runerror>
	li	a1,5
	jal	ra,0x14162 # luaD_throw>

lua_newthread:
	addi	sp,sp,-32
	sd	s1,8(sp)
	ld	s1,24(a0)
	sd	s0,16(sp)
	sd	ra,24(sp)
	ld	a5,24(s1)
	sd	s2,0(sp)
	mv	s0,a0
	blez	a5,0x1b94a # lua_newthread+0x18>
	jal	ra,0x17420 # luaC_step>
	li	a2,8
	li	a1,208
	mv	a0,s0
	jal	ra,0x17c10 # luaM_malloc_>
	lbu	a4,100(s1)
	addi	s2,a0,8
	mv	a5,a0
	andi	a4,a4,24
	sb	a4,17(a0)
	li	a4,8
	sb	a4,16(a0)
	ld	a3,112(s1)
	ld	a4,16(s0)
	sd	a3,8(a0)
	sd	s2,112(s1)
	li	a3,72
	sb	a3,8(a4)
	sd	s2,0(a4)
	addi	a4,a4,16
	sd	a4,16(s0)
	sd	zero,168(a0)
	li	a4,256
	sw	zero,200(a0)
	sh	a4,18(a0)
	lw	a4,192(s0)
	ld	a3,264(s1)
	sw	zero,192(a0)
	sext.w	a4,a4
	sw	a4,200(a0)
	lw	a2,184(s0)
	ld	a1,160(s0)
	addi	a4,a3,-8
	sd	s1,32(a0)
	sd	s2,88(a0)
	sw	a2,192(a0)
	sd	a1,168(a0)
	sw	a2,196(a0)
	sd	zero,56(a0)
	sd	zero,40(a0)
	sh	zero,20(a0)
	sw	zero,184(a0)
	sd	zero,96(a0)
	sd	zero,64(a0)
	sd	zero,176(a0)
	sw	zero,188(a0)
	lbu	t3,-8(a3)
	lbu	a0,-4(a3)
	lbu	t1,-7(a3)
	lbu	a7,-6(a3)
	lbu	a6,-5(a3)
	lbu	a2,-3(a3)
	lbu	a4,7(a4)
	lbu	a3,-2(a3)
	mv	a1,s0
	sb	a0,4(a5)
	sb	t3,0(a5)
	mv	a0,s2
	sb	t1,1(a5)
	sb	a7,2(a5)
	sb	a6,3(a5)
	sb	a2,5(a5)
	sb	a3,6(a5)
	sb	a4,7(a5)
	jal	ra,0x1b4f4 # stack_init>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	mv	a0,s2
	ld	s2,0(sp)
	addi	sp,sp,32
	ret

luaE_freethread:
	addi	sp,sp,-48
	sd	s0,32(sp)
	mv	s0,a1
	ld	a1,48(a1)
	sd	s2,16(sp)
	mv	s2,a0
	mv	a0,s0
	sd	s3,8(sp)
	sd	ra,40(sp)
	sd	s1,24(sp)
	jal	ra,0x15816 # luaF_closeupval>
	ld	a1,48(s0)
	addi	s3,s0,-8
	beqz	a1,0x1ba94 # luaE_freethread+0x5c>
	ld	s1,120(s0)
	addi	a5,s0,96
	sd	a5,32(s0)
	sd	zero,120(s0)
	beqz	s1,0x1ba82 # luaE_freethread+0x4a>
	mv	a1,s1
	li	a2,64
	mv	a0,s0
	ld	s1,24(s1)
	jal	ra,0x17a5c # luaM_free_>
	lhu	a5,12(s0)
	addiw	a5,a5,-1
	sh	a5,12(s0)
	bnez	s1,0x1ba66 # luaE_freethread+0x2e>
	ld	a1,48(s0)
	ld	a5,40(s0)
	mv	a0,s0
	sub	a2,a5,a1
	srai	a2,a2,0x4
	addiw	a2,a2,5
	slli	a2,a2,0x4
	jal	ra,0x17a5c # luaM_free_>
	ld	s0,32(sp)
	ld	ra,40(sp)
	ld	s1,24(sp)
	mv	a1,s3
	mv	a0,s2
	ld	s3,8(sp)
	ld	s2,16(sp)
	li	a2,208
	addi	sp,sp,48
	j	0x17a5c # luaM_free_>

luaE_resetthread:
	ld	a5,48(a0)
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	ra,24(sp)
	sd	s1,8(sp)
	addi	a4,a0,96
	sd	a4,32(a0)
	sb	zero,8(a5)
	sd	a5,96(a0)
	li	a5,2
	sh	a5,158(a0)
	li	a5,1
	mv	s0,a0
	li	a2,0
	beq	a1,a5,0x1bad4 # luaE_resetthread+0x28>
	mv	a2,a1
	li	a1,1
	mv	a0,s0
	jal	ra,0x14f98 # luaD_closeprotected>
	mv	s1,a0
	bnez	a0,0x1bb0e # luaE_resetthread+0x62>
	ld	a1,48(s0)
	addi	a5,a1,16
	sd	a5,16(s0)
	addi	a5,a5,320
	sub	a1,a5,a1
	srai	a1,a1,0x4
	sb	s1,10(s0)
	sd	a5,104(s0)
	mv	a0,s0
	li	a2,0
	sext.w	a1,a1
	jal	ra,0x142c6 # luaD_reallocstack>
	ld	ra,24(sp)
	ld	s0,16(sp)
	mv	a0,s1
	ld	s1,8(sp)
	addi	sp,sp,32
	ret
	ld	a2,48(s0)
	mv	a1,a0
	mv	a0,s0
	addi	a2,a2,16
	jal	ra,0x140cc # luaD_seterrorobj>
	ld	a5,16(s0)
	ld	a1,48(s0)
	j	0x1bae8 # luaE_resetthread+0x3c>

lua_resetthread:
	lbu	a1,10(a0)
	j	0x1baac # luaE_resetthread>

lua_close:
	ld	a5,24(a0)
	ld	a0,264(a5)
	j	0x1b5d4 # close_state>

luaE_warning:
	ld	a4,24(a0)
	ld	a5,1400(a4)
	beqz	a5,0x1bb3c # luaE_warning+0xe>
	ld	a0,1408(a4)
	jr	a5
	ret

luaE_warnerror:
	ld	a4,16(a0)
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	s2,0(sp)
	sd	ra,24(sp)
	lbu	a5,-8(a4)
	li	a3,4
	mv	s0,a0
	andi	a5,a5,15
	mv	s1,a1
	auipc	s2,0x27
	addi	s2,s2,-1166 # 0x426c8 # priority+0x48>
	bne	a5,a3,0x1bb68 # luaE_warnerror+0x2a>
	ld	s2,-16(a4)
	addi	s2,s2,24
	ld	a4,24(s0)
	ld	a5,1400(a4)
	beqz	a5,0x1bbde # luaE_warnerror+0xa0>
	ld	a0,1408(a4)
	li	a2,1
	auipc	a1,0x27
	addi	a1,a1,-1166 # 0x426e8 # priority+0x68>
	jalr	a5
	ld	a4,24(s0)
	ld	a5,1400(a4)
	beqz	a5,0x1bbde # luaE_warnerror+0xa0>
	ld	a0,1408(a4)
	li	a2,1
	mv	a1,s1
	jalr	a5
	ld	a4,24(s0)
	ld	a5,1400(a4)
	beqz	a5,0x1bbde # luaE_warnerror+0xa0>
	ld	a0,1408(a4)
	li	a2,1
	auipc	a1,0x27
	addi	a1,a1,-1192 # 0x426f8 # priority+0x78>
	jalr	a5
	ld	a4,24(s0)
	ld	a5,1400(a4)
	beqz	a5,0x1bbde # luaE_warnerror+0xa0>
	ld	a0,1408(a4)
	li	a2,1
	mv	a1,s2
	jalr	a5
	ld	a4,24(s0)
	ld	a5,1400(a4)
	beqz	a5,0x1bbde # luaE_warnerror+0xa0>
	ld	s0,16(sp)
	ld	ra,24(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	ld	a0,1408(a4)
	li	a2,0
	auipc	a1,0x26
	addi	a1,a1,-882 # 0x41860 # lua_ident+0x4c8>
	addi	sp,sp,32
	jr	a5
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret

tablerehash:
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	s2,0(sp)
	sd	ra,24(sp)
	mv	s2,a1
	mv	s0,a2
	mv	s1,a0
	ble	a2,a1,0x1bc16 # tablerehash+0x2c>
	addiw	a2,a2,-1
	subw	a2,a2,a1
	slli	a2,a2,0x20
	srli	a2,a2,0x20
	slli	a0,a1,0x3
	addi	a2,a2,1
	slli	a2,a2,0x3
	li	a1,0
	add	a0,a0,s1
	jal	ra,0x3683a # memset>
	blez	s2,0x1bc52 # tablerehash+0x68>
	addiw	a5,s2,-1
	slli	a5,a5,0x20
	srli	a5,a5,0x1d
	addi	a6,s1,8
	mv	a0,s1
	add	a6,a6,a5
	addiw	a1,s0,-1
	ld	a4,0(a0)
	sd	zero,0(a0)
	beqz	a4,0x1bc4c # tablerehash+0x62>
	lw	a5,12(a4)
	mv	a3,a4
	ld	a4,16(a4)
	and	a5,a5,a1
	slli	a5,a5,0x20
	srli	a5,a5,0x1d
	add	a5,a5,s1
	ld	a2,0(a5)
	sd	a2,16(a3)
	sd	a3,0(a5)
	bnez	a4,0x1bc36 # tablerehash+0x4c>
	addi	a0,a0,8
	bne	a6,a0,0x1bc2e # tablerehash+0x44>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret

luaS_eqlngstr:
	beq	a0,a1,0x1bc88 # luaS_eqlngstr+0x2a>
	ld	a4,16(a0)
	ld	a2,16(a1)
	mv	a5,a0
	li	a0,0
	beq	a2,a4,0x1bc70 # luaS_eqlngstr+0x12>
	ret
	addi	sp,sp,-16
	addi	a1,a1,24
	addi	a0,a5,24
	sd	ra,8(sp)
	jal	ra,0x36306 # memcmp>
	ld	ra,8(sp)
	seqz	a0,a0
	addi	sp,sp,16
	ret
	li	a0,1
	ret

luaS_hash:
	xor	a2,a2,a1
	mv	a6,a0
	sext.w	a0,a2
	beqz	a1,0x1bcb8 # luaS_hash+0x2c>
	addi	a1,a1,-1
	add	a5,a6,a1
	lbu	a4,0(a5)
	slliw	a2,a0,0x5
	srliw	a3,a0,0x2
	addw	a2,a2,a3
	addw	a2,a2,a4
	xor	a0,a0,a2
	mv	a4,a5
	sext.w	a0,a0
	addi	a5,a5,-1
	bne	a6,a4,0x1bc9c # luaS_hash+0x10>
	ret

luaS_hashlongstr:
	lbu	a5,10(a0)
	mv	a3,a0
	lw	a0,12(a0)
	bnez	a5,0x1bcf4 # luaS_hashlongstr+0x3a>
	ld	a4,16(a3)
	xor	a5,a4,a0
	sext.w	a0,a5
	beqz	a4,0x1bcec # luaS_hashlongstr+0x32>
	add	a4,a4,a3
	lbu	a2,23(a4)
	slliw	a5,a0,0x5
	srliw	a1,a0,0x2
	addw	a5,a5,a1
	addw	a5,a5,a2
	xor	a0,a0,a5
	addi	a4,a4,-1
	sext.w	a0,a0
	bne	a3,a4,0x1bcd2 # luaS_hashlongstr+0x18>
	li	a5,1
	sw	a0,12(a3)
	sb	a5,10(a3)
	ret

luaS_resize:
	addi	sp,sp,-64
	sd	s1,40(sp)
	ld	s1,24(a0)
	sd	s3,24(sp)
	sd	s0,48(sp)
	lw	s3,60(s1)
	sd	s4,16(sp)
	sd	ra,56(sp)
	sd	s2,32(sp)
	ld	a5,48(s1)
	mv	s0,a1
	slli	a3,a1,0x3
	slli	s4,s3,0x3
	blt	a1,s3,0x1bd52 # luaS_resize+0x5c>
	mv	a1,a5
	mv	a2,s4
	jal	ra,0x17a82 # luaM_realloc_>
	mv	a5,a0
	beqz	a0,0x1bd2e # luaS_resize+0x38>
	sd	a5,48(s1)
	sw	s0,60(s1)
	blt	s3,s0,0x1bd3e # luaS_resize+0x48>
	ld	ra,56(sp)
	ld	s0,48(sp)
	ld	s1,40(sp)
	ld	s2,32(sp)
	ld	s3,24(sp)
	ld	s4,16(sp)
	addi	sp,sp,64
	ret
	mv	a2,s0
	mv	a1,s3
	ld	s0,48(sp)
	ld	ra,56(sp)
	ld	s1,40(sp)
	ld	s2,32(sp)
	ld	s3,24(sp)
	ld	s4,16(sp)
	addi	sp,sp,64
	j	0x1bbea # tablerehash>
	mv	s2,a0
	mv	a1,s3
	mv	a0,a5
	mv	a2,s0
	sd	a3,8(sp)
	jal	ra,0x1bbea # tablerehash>
	ld	a3,8(sp)
	ld	a1,48(s1)
	mv	a2,s4
	mv	a0,s2
	jal	ra,0x17a82 # luaM_realloc_>
	beqz	a0,0x1bd82 # luaS_resize+0x8c>
	sw	s0,60(s1)
	ld	ra,56(sp)
	ld	s0,48(sp)
	sd	a0,48(s1)
	ld	s2,32(sp)
	ld	s1,40(sp)
	ld	s3,24(sp)
	ld	s4,16(sp)
	addi	sp,sp,64
	ret
	ld	a0,48(s1)
	mv	a2,s3
	mv	a1,s0
	j	0x1bd42 # luaS_resize+0x4c>

internshrstr:
	addi	sp,sp,-80
	sd	s3,40(sp)
	ld	s3,24(a0)
	sd	s1,56(sp)
	sd	s2,48(sp)
	lw	a5,96(s3)
	sd	s4,32(sp)
	sd	s5,24(sp)
	xor	a5,a5,a2
	sd	ra,72(sp)
	sd	s0,64(sp)
	sd	s6,16(sp)
	sd	s7,8(sp)
	mv	s4,a0
	mv	s2,a2
	mv	s5,a1
	sext.w	s1,a5
	beqz	a2,0x1bdd8 # internshrstr+0x4e>
	addi	a4,a2,-1
	add	a4,a4,a1
	lbu	a3,0(a4)
	slliw	a5,s1,0x5
	srliw	a2,s1,0x2
	addw	a5,a5,a2
	addw	a5,a5,a3
	xor	a5,a5,s1
	mv	a3,a4
	sext.w	s1,a5
	addi	a4,a4,-1
	bne	s5,a3,0x1bdba # internshrstr+0x30>
	lw	s6,60(s3)
	ld	s7,48(s3)
	addiw	a5,s6,-1
	and	a5,a5,s1
	sext.w	a5,a5
	slli	a5,a5,0x3
	add	s7,s7,a5
	ld	s0,0(s7)
	bnez	s0,0x1bdf8 # internshrstr+0x6e>
	j	0x1be28 # internshrstr+0x9e>
	ld	s0,16(s0)
	beqz	s0,0x1be28 # internshrstr+0x9e>
	lbu	a5,11(s0)
	bne	a5,s2,0x1bdf4 # internshrstr+0x6a>
	mv	a2,s2
	addi	a1,s0,24
	mv	a0,s5
	jal	ra,0x36306 # memcmp>
	bnez	a0,0x1bdf4 # internshrstr+0x6a>
	lbu	a5,100(s3)
	lbu	a4,9(s0)
	xori	a5,a5,24
	and	a5,a5,a4
	beqz	a5,0x1be6e # internshrstr+0xe4>
	xori	a4,a4,24
	sb	a4,9(s0)
	j	0x1be6e # internshrstr+0xe4>
	lw	s0,56(s3)
	ble	s6,s0,0x1be86 # internshrstr+0xfc>
	addi	a2,s2,25
	li	a1,4
	mv	a0,s4
	jal	ra,0x17166 # luaC_newobj>
	add	a5,a0,s2
	sw	s1,12(a0)
	sb	zero,10(a0)
	mv	s0,a0
	sb	zero,24(a5)
	mv	a2,s2
	mv	a1,s5
	addi	a0,a0,24
	jal	ra,0x3632a # memcpy>
	sb	s2,11(s0)
	ld	a4,0(s7)
	lw	a5,56(s3)
	sd	a4,16(s0)
	sd	s0,0(s7)
	addiw	a5,a5,1
	sw	a5,56(s3)
	ld	ra,72(sp)
	mv	a0,s0
	ld	s0,64(sp)
	ld	s1,56(sp)
	ld	s2,48(sp)
	ld	s3,40(sp)
	ld	s4,32(sp)
	ld	s5,24(sp)
	ld	s6,16(sp)
	ld	s7,8(sp)
	addi	sp,sp,80
	ret
	lui	a5,0x80000
	not	a5,a5
	beq	s0,a5,0x1bebc # internshrstr+0x132>
	lui	a5,0x40000
	blt	s6,a5,0x1beac # internshrstr+0x122>
	addiw	a5,s6,-1
	ld	s7,48(s3)
	and	a5,a5,s1
	sext.w	a5,a5
	slli	a5,a5,0x3
	add	s7,s7,a5
	j	0x1be30 # internshrstr+0xa6>
	slliw	a1,s6,0x1
	mv	a0,s4
	jal	ra,0x1bcf6 # luaS_resize>
	lw	s6,60(s3)
	j	0x1be9a # internshrstr+0x110>
	li	a1,1
	mv	a0,s4
	jal	ra,0x17868 # luaC_fullgc>
	lw	a5,56(s3)
	beq	a5,s0,0x1bed2 # internshrstr+0x148>
	lw	s6,60(s3)
	j	0x1be92 # internshrstr+0x108>
	li	a1,4
	mv	a0,s4
	jal	ra,0x14162 # luaD_throw>

luaS_clearcache:
	addi	a5,a0,552
	addi	a3,a0,1400
	ld	a4,0(a5)
	lbu	a4,9(a4)
	andi	a4,a4,24
	beqz	a4,0x1bef2 # luaS_clearcache+0x18>
	ld	a4,272(a0)
	sd	a4,0(a5)
	ld	a4,8(a5)
	lbu	a4,9(a4)
	andi	a4,a4,24
	beqz	a4,0x1bf02 # luaS_clearcache+0x28>
	ld	a4,272(a0)
	sd	a4,8(a5)
	addi	a5,a5,16
	bne	a3,a5,0x1bee2 # luaS_clearcache+0x8>
	ret

luaS_init:
	addi	sp,sp,-32
	sd	s0,16(sp)
	ld	s0,24(a0)
	li	a2,0
	li	a1,1024
	sd	ra,24(sp)
	sd	s1,8(sp)
	mv	s1,a0
	jal	ra,0x17c10 # luaM_malloc_>
	li	a2,1024
	li	a1,0
	sd	a0,48(s0)
	jal	ra,0x3683a # memset>
	li	a5,128
	sw	a5,60(s0)
	li	a2,17
	auipc	a1,0x26
	addi	a1,a1,1996 # 0x42700 # priority+0x80>
	mv	a0,s1
	jal	ra,0x1bd8a # internshrstr>
	mv	a1,a0
	sd	a0,272(s0)
	mv	a0,s1
	jal	ra,0x17148 # luaC_fix>
	ld	a4,272(s0)
	addi	a5,s0,552
	addi	a3,s0,1400
	sd	a4,0(a5)
	sd	a4,8(a5)
	addi	a5,a5,16
	bne	a5,a3,0x1bf5a # luaS_init+0x50>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret

luaS_createlngstrobj:
	ld	a5,24(a0)
	addi	sp,sp,-32
	sd	s1,8(sp)
	lw	s1,96(a5)
	sd	s0,16(sp)
	addi	a2,a1,25
	mv	s0,a1
	li	a1,20
	sd	ra,24(sp)
	jal	ra,0x17166 # luaC_newobj>
	sb	zero,10(a0)
	sw	s1,12(a0)
	add	a4,a0,s0
	sb	zero,24(a4)
	ld	ra,24(sp)
	sd	s0,16(a0)
	ld	s0,16(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret

luaS_remove:
	ld	a3,24(a0)
	lw	a2,12(a1)
	lw	a5,60(a3)
	ld	a4,48(a3)
	addiw	a5,a5,-1
	and	a5,a5,a2
	sext.w	a5,a5
	slli	a5,a5,0x3
	add	a4,a4,a5
	ld	a5,0(a4)
	beq	a5,a1,0x1bfc2 # luaS_remove+0x22>
	mv	a4,a5
	ld	a5,16(a5)
	bne	a5,a1,0x1bfb8 # luaS_remove+0x18>
	addi	a4,a4,16
	lw	a5,56(a3)
	ld	a2,16(a1)
	addiw	a5,a5,-1
	sd	a2,0(a4)
	sw	a5,56(a3)
	ret

luaS_newlstr:
	li	a4,40
	bleu	a2,a4,0x1c02c # luaS_newlstr+0x5e>
	addi	sp,sp,-48
	li	a4,-67
	sd	s0,32(sp)
	sd	ra,40(sp)
	sd	s1,24(sp)
	sd	s2,16(sp)
	sd	s3,8(sp)
	srli	a4,a4,0x1
	mv	s0,a2
	bltu	a4,a2,0x1c02e # luaS_newlstr+0x60>
	ld	a5,24(a0)
	mv	s2,a1
	addi	a2,a2,25
	lw	s3,96(a5) # 0x40000060 # __BSS_END__+0x3ffb1cd8>
	li	a1,20
	jal	ra,0x17166 # luaC_newobj>
	sw	s3,12(a0)
	add	a5,a0,s0
	sb	zero,10(a0)
	sb	zero,24(a5)
	mv	s1,a0
	sd	s0,16(a0)
	mv	a2,s0
	mv	a1,s2
	addi	a0,a0,24
	jal	ra,0x3632a # memcpy>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	mv	a0,s1
	ld	s1,24(sp)
	addi	sp,sp,48
	ret
	j	0x1bd8a # internshrstr>
	jal	ra,0x17a4c # luaM_toobig>

luaS_new:
	li	a5,53
	remuw	a5,a1,a5
	addi	sp,sp,-48
	sd	s2,16(sp)
	ld	s2,24(a0)
	sd	s1,24(sp)
	sd	s0,32(sp)
	sd	s3,8(sp)
	mv	s0,a1
	mv	s3,a0
	mv	a0,a1
	sd	ra,40(sp)
	sd	s4,0(sp)
	addiw	a5,a5,34
	slli	a5,a5,0x20
	srli	a5,a5,0x1c
	addi	a5,a5,8
	add	s2,s2,a5
	ld	s1,0(s2)
	addi	a1,s1,24
	jal	ra,0x369dc # strcmp>
	beqz	a0,0x1c096 # luaS_new+0x64>
	ld	s4,8(s2)
	mv	a0,s0
	addi	a1,s4,24
	jal	ra,0x369dc # strcmp>
	beqz	a0,0x1c0a8 # luaS_new+0x76>
	sd	s1,8(s2)
	mv	a0,s0
	jal	ra,0x369fa # strlen>
	mv	a2,a0
	mv	a1,s0
	mv	a0,s3
	jal	ra,0x1bfce # luaS_newlstr>
	mv	s1,a0
	sd	a0,0(s2)
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	ld	s4,0(sp)
	mv	a0,s1
	ld	s1,24(sp)
	addi	sp,sp,48
	ret
	mv	s1,s4
	j	0x1c096 # luaS_new+0x64>

luaS_newudata:
	addi	sp,sp,-32
	sd	s1,8(sp)
	sd	ra,24(sp)
	sd	s0,16(sp)
	mv	a5,a0
	mv	s1,a1
	beqz	a2,0x1c10c # luaS_newudata+0x60>
	li	a4,-81
	slli	a3,a2,0x4
	srli	a4,a4,0x1
	sub	a4,a4,a3
	mv	s0,a2
	bltu	a4,a1,0x1c12c # luaS_newudata+0x80>
	addi	a2,a1,40
	add	a2,a2,a3
	li	a1,7
	jal	ra,0x17166 # luaC_newobj>
	sd	s1,16(a0)
	sh	s0,10(a0)
	sd	zero,24(a0)
	blez	s0,0x1c102 # luaS_newudata+0x56>
	addiw	a4,s0,-1
	slli	a4,a4,0x20
	srli	a4,a4,0x1c
	addi	a4,a4,64
	addi	a5,a0,48
	add	a4,a4,a0
	sb	zero,0(a5)
	addi	a5,a5,16
	bne	a5,a4,0x1c0f8 # luaS_newudata+0x4c>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret
	li	a4,-65
	srli	a4,a4,0x1
	bltu	a4,a1,0x1c12c # luaS_newudata+0x80>
	addi	a2,a1,32
	li	a1,7
	jal	ra,0x17166 # luaC_newobj>
	sd	s1,16(a0)
	sh	zero,10(a0)
	sd	zero,24(a0)
	j	0x1c102 # luaS_newudata+0x56>
	mv	a0,a5
	jal	ra,0x17a4c # luaM_toobig>

mainposition:
	addi	sp,sp,-48
	sd	s0,32(sp)
	sd	s1,24(sp)
	sd	ra,40(sp)
	andi	a4,a1,63
	li	a5,22
	ld	s1,24(a0)
	mv	s0,a0
	bltu	a5,a4,0x1c15c # mainposition+0x2a>
	mv	a1,a4
	slli	a1,a1,0x2
	auipc	a4,0x26
	addi	a4,a4,1484 # 0x42718 # priority+0x98>
	add	a1,a1,a4
	lw	a5,0(a1)
	add	a5,a5,a4
	jr	a5
	lbu	a3,11(s0)
	li	a5,1
	ld	a4,0(a2)
	sllw	a5,a5,a3
	addiw	a5,a5,-1
	ori	a5,a5,1
	remuw	a5,a4,a5
	slli	a5,a5,0x20
	srli	a5,a5,0x20
	slli	a4,a5,0x1
	add	a5,a5,a4
	slli	a5,a5,0x3
	add	s1,s1,a5
	ld	ra,40(sp)
	ld	s0,32(sp)
	mv	a0,s1
	ld	s1,24(sp)
	addi	sp,sp,48
	ret
	fld	fa0,0(a2)
	addi	a0,sp,12
	jal	ra,0x31eae # frexp>
	auipc	a5,0x26
	fld	fa4,1724(a5) # 0x42850 # dummynode_+0x70>
	fmul.d	fa0,fa0,fa4
	auipc	a5,0x26
	fld	fa5,1720(a5) # 0x42858 # dummynode_+0x78>
	fle.d	a5,fa5,fa0
	beqz	a5,0x1c25e # mainposition+0x12c>
	auipc	a5,0x26
	fld	fa5,1714(a5) # 0x42860 # dummynode_+0x80>
	flt.d	a5,fa0,fa5
	beqz	a5,0x1c25e # mainposition+0x12c>
	fcvt.l.d	a4,fa0,rtz
	lw	a5,12(sp)
	addw	a5,a5,a4
	sext.w	a4,a5
	bgez	a4,0x1c260 # mainposition+0x12e>
	not	a4,a5
	sext.w	a4,a4
	j	0x1c260 # mainposition+0x12e>
	ld	a0,0(a2)
	jal	ra,0x1bcba # luaS_hashlongstr>
	lbu	a4,11(s0)
	li	a5,1
	ld	ra,40(sp)
	sllw	a5,a5,a4
	addiw	a5,a5,-1
	and	a0,a0,a5
	sext.w	a0,a0
	slli	a5,a0,0x1
	ld	s0,32(sp)
	add	a0,a0,a5
	slli	a0,a0,0x3
	add	s1,s1,a0
	mv	a0,s1
	ld	s1,24(sp)
	addi	sp,sp,48
	ret
	ld	a5,0(a2)
	lbu	a3,11(a0)
	lw	a4,12(a5)
	li	a5,1
	sllw	a5,a5,a3
	addiw	a5,a5,-1
	and	a5,a5,a4
	sext.w	a5,a5
	slli	a4,a5,0x1
	ld	ra,40(sp)
	ld	s0,32(sp)
	add	a5,a5,a4
	slli	a5,a5,0x3
	add	s1,s1,a5
	mv	a0,s1
	ld	s1,24(sp)
	addi	sp,sp,48
	ret
	lbu	a4,11(a0)
	li	a5,1
	ld	ra,40(sp)
	sllw	a5,a5,a4
	addiw	a5,a5,-1
	andi	a5,a5,1
	slli	a4,a5,0x1
	ld	s0,32(sp)
	add	a5,a5,a4
	slli	a5,a5,0x3
	add	s1,s1,a5
	mv	a0,s1
	ld	s1,24(sp)
	addi	sp,sp,48
	ret
	lbu	a3,11(a0)
	li	a4,1
	ld	a5,0(a2)
	sllw	a4,a4,a3
	addiw	a4,a4,-1
	j	0x1c210 # mainposition+0xde>
	li	a4,0
	lbu	a3,11(s0)
	li	a5,1
	ld	ra,40(sp)
	sllw	a5,a5,a3
	addiw	a5,a5,-1
	ori	a5,a5,1
	remw	a4,a4,a5
	ld	s0,32(sp)
	slli	a5,a4,0x1
	add	a5,a5,a4
	slli	a5,a5,0x3
	add	s1,s1,a5
	mv	a0,s1
	ld	s1,24(sp)
	addi	sp,sp,48
	ret

getgeneric:
	addi	sp,sp,-64
	sd	s0,48(sp)
	sd	s1,40(sp)
	sd	s2,32(sp)
	sd	s3,24(sp)
	sd	s4,16(sp)
	sd	s5,8(sp)
	sd	s6,0(sp)
	sd	ra,56(sp)
	mv	s1,a1
	lbu	a1,8(a1)
	mv	s2,a2
	mv	a2,s1
	jal	ra,0x1c132 # mainposition>
	mv	s0,a0
	lbu	a5,8(s1)
	lbu	a4,9(s0)
	ld	a0,0(s1)
	li	s6,22
	li	s5,84
	auipc	s3,0x26
	addi	s3,s3,1208 # 0x42774 # priority+0xf4>
	li	s4,11
	beq	a5,a4,0x1c300 # getgeneric+0x76>
	beqz	s2,0x1c2e4 # getgeneric+0x5a>
	bne	a4,s4,0x1c2e4 # getgeneric+0x5a>
	andi	a5,a5,64
	beqz	a5,0x1c2e4 # getgeneric+0x5a>
	ld	a5,16(s0)
	sub	a0,a5,a0
	seqz	a0,a0
	bnez	a0,0x1c336 # getgeneric+0xac>
	lw	a4,12(s0)
	beqz	a4,0x1c30e # getgeneric+0x84>
	slli	a5,a4,0x1
	add	a5,a5,a4
	slli	a5,a5,0x3
	add	s0,s0,a5
	lbu	a4,9(s0)
	lbu	a5,8(s1)
	ld	a0,0(s1)
	bne	a5,a4,0x1c2ca # getgeneric+0x40>
	bltu	s6,a5,0x1c32a # getgeneric+0xa0>
	slli	a5,a5,0x2
	add	a5,a5,s3
	lw	a4,0(a5)
	add	a4,a4,s3
	jr	a4
	auipc	a0,0x26
	addi	a0,a0,1218 # 0x427d0 # absentkey>
	ld	ra,56(sp)
	ld	s0,48(sp)
	ld	s1,40(sp)
	ld	s2,32(sp)
	ld	s3,24(sp)
	ld	s4,16(sp)
	ld	s5,8(sp)
	ld	s6,0(sp)
	addi	sp,sp,64
	ret
	bne	a5,s5,0x1c2d8 # getgeneric+0x4e>
	ld	a1,16(s0)
	jal	ra,0x1bc5e # luaS_eqlngstr>
	beqz	a0,0x1c2e4 # getgeneric+0x5a>
	mv	a0,s0
	j	0x1c316 # getgeneric+0x8c>
	ld	a5,16(s0)
	sub	a0,a0,a5
	seqz	a0,a0
	j	0x1c2e2 # getgeneric+0x58>
	fld	fa5,16(s0)
	fmv.d.x	fa4,a0
	feq.d	a0,fa5,fa4
	j	0x1c2e2 # getgeneric+0x58>

luaH_realasize:
	lb	a5,10(a0)
	lw	a0,12(a0)
	bgez	a5,0x1c364 # luaH_realasize+0x14>
	addiw	a5,a0,-1
	and	a5,a5,a0
	sext.w	a5,a5
	bnez	a5,0x1c366 # luaH_realasize+0x16>
	ret
	srliw	a5,a0,0x1
	or	a0,a0,a5
	srliw	a5,a0,0x2
	or	a0,a0,a5
	srliw	a5,a0,0x4
	or	a0,a0,a5
	srliw	a5,a0,0x8
	or	a0,a0,a5
	srliw	a5,a0,0x10
	or	a0,a0,a5
	addiw	a0,a0,1
	ret

luaH_next:
	addi	sp,sp,-48
	sd	s3,8(sp)
	mv	s3,a0
	mv	a0,a1
	sd	s0,32(sp)
	sd	s1,24(sp)
	sd	s2,16(sp)
	mv	s1,a2
	sd	ra,40(sp)
	mv	s2,a1
	jal	ra,0x1c350 # luaH_realasize>
	lbu	a4,8(s1)
	sext.w	s0,a0
	andi	a5,a4,15
	beqz	a5,0x1c4ac # luaH_next+0x124>
	li	a5,3
	beq	a4,a5,0x1c432 # luaH_next+0xaa>
	li	a2,1
	mv	a1,s1
	mv	a0,s2
	jal	ra,0x1c28a # getgeneric>
	lbu	a3,8(a0)
	li	a5,32
	beq	a3,a5,0x1c4c0 # luaH_next+0x138>
	ld	a3,24(s2)
	addiw	a5,s0,1
	sub	a4,a0,a3
	srai	a4,a4,0x3
	auipc	a3,0x26
	ld	a3,1166(a3) # 0x42868 # dummynode_+0x88>
	mul	a4,a4,a3
	addw	a5,a5,a4
	bleu	s0,a5,0x1c450 # luaH_next+0xc8>
	ld	a3,16(s2)
	slli	a4,a5,0x20
	srli	a4,a4,0x1c
	add	a3,a3,a4
	j	0x1c400 # luaH_next+0x78>
	addi	a3,a3,16
	beq	s0,a5,0x1c450 # luaH_next+0xc8>
	lbu	a4,8(a3)
	addiw	a5,a5,1
	andi	a4,a4,15
	beqz	a4,0x1c3fa # luaH_next+0x72>
	slli	a5,a5,0x20
	srli	a5,a5,0x20
	sd	a5,0(s1)
	li	a5,3
	sb	a5,8(s1)
	ld	a5,0(a3)
	li	a0,1
	sd	a5,16(s1)
	lbu	a5,8(a3)
	sb	a5,24(s1)
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	addi	sp,sp,48
	ret
	ld	a5,0(s1)
	lui	a4,0x80000
	not	a4,a4
	addi	a3,a5,-1
	bltu	a4,a3,0x1c3b6 # luaH_next+0x2e>
	addiw	a4,a5,-1
	sext.w	a5,a5
	bltu	a4,s0,0x1c3e8 # luaH_next+0x60>
	j	0x1c3b6 # luaH_next+0x2e>
	lbu	a4,11(s2)
	li	a2,1
	subw	a5,a5,s0
	sllw	a2,a2,a4
	ble	a2,a5,0x1c4b0 # luaH_next+0x128>
	ld	a1,24(s2)
	j	0x1c46c # luaH_next+0xe4>
	addiw	a5,a5,1
	ble	a2,a5,0x1c4b0 # luaH_next+0x128>
	slli	a3,a5,0x20
	srli	a3,a3,0x20
	slli	a4,a3,0x1
	add	a4,a4,a3
	slli	a4,a4,0x3
	add	a4,a4,a1
	lbu	a3,8(a4) # 0xffffffff80000008 # __BSS_END__+0xffffffff7ffb1c80>
	andi	a3,a3,15
	beqz	a3,0x1c466 # luaH_next+0xde>
	ld	a5,16(a4)
	li	a0,1
	sd	a5,0(s1)
	lbu	a5,9(a4)
	sb	a5,8(s1)
	ld	a5,0(a4)
	sd	a5,16(s1)
	lbu	a5,8(a4)
	sb	a5,24(s1)
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	addi	sp,sp,48
	ret
	li	a5,0
	j	0x1c3e8 # luaH_next+0x60>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	li	a0,0
	addi	sp,sp,48
	ret
	auipc	a1,0x26
	addi	a1,a1,824 # 0x427f8 # dummynode_+0x18>
	mv	a0,s3
	jal	ra,0x13d34 # luaG_runerror>

luaH_new:
	addi	sp,sp,-16
	li	a2,56
	li	a1,5
	sd	ra,8(sp)
	jal	ra,0x17166 # luaC_newobj>
	auipc	a4,0x26
	addi	a4,a4,772 # 0x427e0 # dummynode_>
	sd	a4,24(a0)
	li	a4,63
	sh	a4,10(a0)
	ld	ra,8(sp)
	sd	zero,40(a0)
	sw	zero,12(a0)
	sd	zero,16(a0)
	sd	zero,32(a0)
	addi	sp,sp,16
	ret

luaH_free:
	ld	a5,32(a1)
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	ra,24(sp)
	mv	s0,a1
	mv	s1,a0
	beqz	a5,0x1c52c # luaH_free+0x28>
	lbu	a5,11(a1)
	li	a2,1
	ld	a1,24(a1)
	sllw	a2,a2,a5
	slli	a5,a2,0x1
	add	a2,a2,a5
	slli	a2,a2,0x3
	jal	ra,0x17a5c # luaM_free_>
	mv	a0,s0
	jal	ra,0x1c350 # luaH_realasize>
	ld	a1,16(s0)
	slli	a2,a0,0x20
	srli	a2,a2,0x1c
	mv	a0,s1
	jal	ra,0x17a5c # luaM_free_>
	mv	a1,s0
	ld	s0,16(sp)
	ld	ra,24(sp)
	mv	a0,s1
	ld	s1,8(sp)
	li	a2,56
	addi	sp,sp,32
	j	0x17a5c # luaM_free_>

luaH_getint:
	lw	a5,12(a0)
	addi	sp,sp,-48
	sd	s0,32(sp)
	slli	a4,a5,0x20
	sd	s1,24(sp)
	sd	ra,40(sp)
	addi	s1,a1,-1
	srli	a4,a4,0x20
	mv	s0,a0
	bltu	s1,a4,0x1c602 # luaH_getint+0xae>
	lb	a4,10(a0)
	bltz	a4,0x1c5bc # luaH_getint+0x68>
	lbu	a4,11(s0)
	li	a5,1
	ld	a0,24(s0)
	sllw	a5,a5,a4
	addiw	a5,a5,-1
	and	a5,a5,a1
	sext.w	a5,a5
	slli	a4,a5,0x1
	add	a5,a5,a4
	slli	a5,a5,0x3
	add	a0,a0,a5
	li	a3,3
	j	0x1c5a4 # luaH_getint+0x50>
	lw	a4,12(a0)
	slli	a5,a4,0x1
	add	a5,a5,a4
	slli	a5,a5,0x3
	beqz	a4,0x1c5f0 # luaH_getint+0x9c>
	add	a0,a0,a5
	lbu	a5,9(a0)
	bne	a5,a3,0x1c596 # luaH_getint+0x42>
	ld	a5,16(a0)
	bne	a5,a1,0x1c596 # luaH_getint+0x42>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	addi	sp,sp,48
	ret
	addiw	a4,a5,-1
	and	a4,a4,a5
	sext.w	a4,a4
	beqz	a4,0x1c576 # luaH_getint+0x22>
	addiw	a5,a5,1
	slli	a5,a5,0x20
	srli	a5,a5,0x20
	beq	a1,a5,0x1c5e2 # luaH_getint+0x8e>
	sd	a1,8(sp)
	jal	ra,0x1c350 # luaH_realasize>
	slli	a5,a0,0x20
	srli	a5,a5,0x20
	ld	a1,8(sp)
	bleu	a5,s1,0x1c576 # luaH_getint+0x22>
	ld	a5,16(s0)
	slli	a0,a1,0x4
	addi	a0,a0,-16
	sw	a1,12(s0)
	add	a0,a0,a5
	j	0x1c5b2 # luaH_getint+0x5e>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	auipc	a0,0x26
	addi	a0,a0,474 # 0x427d0 # absentkey>
	addi	sp,sp,48
	ret
	ld	a0,16(a0)
	ld	ra,40(sp)
	ld	s0,32(sp)
	slli	a1,a1,0x4
	addi	a1,a1,-16
	ld	s1,24(sp)
	add	a0,a0,a1
	addi	sp,sp,48
	ret

luaH_getshortstr:
	lbu	a3,11(a0)
	lw	a4,12(a1)
	li	a5,1
	sllw	a5,a5,a3
	addiw	a5,a5,-1
	and	a5,a5,a4
	sext.w	a5,a5
	ld	a0,24(a0)
	slli	a4,a5,0x1
	add	a5,a5,a4
	slli	a5,a5,0x3
	add	a0,a0,a5
	li	a3,68
	j	0x1c646 # luaH_getshortstr+0x32>
	lw	a4,12(a0)
	slli	a5,a4,0x1
	add	a5,a5,a4
	slli	a5,a5,0x3
	beqz	a4,0x1c656 # luaH_getshortstr+0x42>
	add	a0,a0,a5
	lbu	a5,9(a0)
	bne	a5,a3,0x1c638 # luaH_getshortstr+0x24>
	ld	a5,16(a0)
	bne	a5,a1,0x1c638 # luaH_getshortstr+0x24>
	ret
	auipc	a0,0x26
	addi	a0,a0,378 # 0x427d0 # absentkey>
	ret

luaH_getstr:
	lbu	a5,8(a1)
	li	a2,4
	mv	a3,a1
	beq	a5,a2,0x1c688 # luaH_getstr+0x28>
	addi	sp,sp,-32
	ori	a5,a5,64
	mv	a1,sp
	li	a2,0
	sd	ra,24(sp)
	sd	a3,0(sp)
	sb	a5,8(sp)
	jal	ra,0x1c28a # getgeneric>
	ld	ra,24(sp)
	addi	sp,sp,32
	ret
	lbu	a1,11(a0)
	lw	a2,12(a3)
	li	a5,1
	sllw	a5,a5,a1
	addiw	a5,a5,-1
	and	a5,a5,a2
	sext.w	a5,a5
	ld	a0,24(a0)
	slli	a4,a5,0x1
	add	a5,a5,a4
	slli	a5,a5,0x3
	add	a0,a0,a5
	li	a2,68
	j	0x1c6ba # luaH_getstr+0x5a>
	lw	a4,12(a0)
	slli	a5,a4,0x1
	add	a5,a5,a4
	slli	a5,a5,0x3
	beqz	a4,0x1c6ca # luaH_getstr+0x6a>
	add	a0,a0,a5
	lbu	a5,9(a0)
	bne	a5,a2,0x1c6ac # luaH_getstr+0x4c>
	ld	a5,16(a0)
	bne	a3,a5,0x1c6ac # luaH_getstr+0x4c>
	ret
	auipc	a0,0x26
	addi	a0,a0,262 # 0x427d0 # absentkey>
	ret

luaH_get:
	addi	sp,sp,-48
	sd	s0,32(sp)
	sd	s1,24(sp)
	sd	ra,40(sp)
	lbu	a5,8(a1)
	li	a4,4
	mv	s0,a1
	andi	a5,a5,63
	mv	s1,a0
	beq	a5,a4,0x1c73a # luaH_get+0x66>
	bltu	a4,a5,0x1c706 # luaH_get+0x32>
	beqz	a5,0x1c728 # luaH_get+0x54>
	li	a4,3
	bne	a5,a4,0x1c718 # luaH_get+0x44>
	ld	s0,32(sp)
	ld	ra,40(sp)
	ld	s1,24(sp)
	ld	a1,0(a1)
	addi	sp,sp,48
	j	0x1c554 # luaH_getint>
	li	a4,19
	bne	a5,a4,0x1c718 # luaH_get+0x44>
	fld	fa0,0(a1)
	addi	a0,sp,8
	li	a1,0
	jal	ra,0x1e574 # luaV_flttointeger>
	bnez	a0,0x1c77e # luaH_get+0xaa>
	mv	a1,s0
	ld	s0,32(sp)
	ld	ra,40(sp)
	mv	a0,s1
	ld	s1,24(sp)
	li	a2,0
	addi	sp,sp,48
	j	0x1c28a # getgeneric>
	auipc	a0,0x26
	addi	a0,a0,168 # 0x427d0 # absentkey>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	addi	sp,sp,48
	ret
	ld	a2,0(a1)
	lbu	a3,11(a0)
	li	a5,1
	lw	a4,12(a2)
	sllw	a5,a5,a3
	addiw	a5,a5,-1
	and	a5,a5,a4
	sext.w	a5,a5
	ld	a0,24(a0)
	slli	a4,a5,0x1
	add	a5,a5,a4
	slli	a5,a5,0x3
	add	a0,a0,a5
	li	a3,68
	j	0x1c76e # luaH_get+0x9a>
	lw	a4,12(a0)
	slli	a5,a4,0x1
	add	a5,a5,a4
	slli	a5,a5,0x3
	beqz	a4,0x1c728 # luaH_get+0x54>
	add	a0,a0,a5
	lbu	a5,9(a0)
	bne	a5,a3,0x1c760 # luaH_get+0x8c>
	ld	a5,16(a0)
	bne	a2,a5,0x1c760 # luaH_get+0x8c>
	j	0x1c730 # luaH_get+0x5c>
	ld	a1,8(sp)
	mv	a0,s1
	jal	ra,0x1c554 # luaH_getint>
	j	0x1c730 # luaH_get+0x5c>

luaH_newkey:
	addi	sp,sp,-288
	sd	ra,280(sp)
	sd	s0,272(sp)
	sd	s1,264(sp)
	sd	s2,256(sp)
	sd	s3,248(sp)
	sd	s4,240(sp)
	sd	s5,232(sp)
	sd	s6,224(sp)
	sd	s7,216(sp)
	sd	s8,208(sp)
	sd	s9,200(sp)
	sd	s10,192(sp)
	sd	s11,184(sp)
	fsd	fs0,168(sp)
	lbu	a5,8(a2)
	andi	a4,a5,15
	beqz	a4,0x1ca40 # luaH_newkey+0x2b8>
	li	a4,19
	mv	s4,a2
	mv	s2,a0
	mv	s0,a1
	mv	s6,a3
	beq	a5,a4,0x1ca20 # luaH_newkey+0x298>
	lbu	a5,8(s6)
	andi	a5,a5,15
	bnez	a5,0x1c7e8 # luaH_newkey+0x60>
	ld	ra,280(sp)
	ld	s0,272(sp)
	ld	s1,264(sp)
	ld	s2,256(sp)
	ld	s3,248(sp)
	ld	s4,240(sp)
	ld	s5,232(sp)
	ld	s6,224(sp)
	ld	s7,216(sp)
	ld	s8,208(sp)
	ld	s9,200(sp)
	ld	s10,192(sp)
	ld	s11,184(sp)
	fld	fs0,168(sp)
	addi	sp,sp,288
	ret
	lbu	a1,8(s4)
	mv	a2,s4
	mv	a0,s0
	jal	ra,0x1c132 # mainposition>
	lbu	a5,8(a0)
	mv	s3,a0
	andi	a5,a5,15
	bnez	a5,0x1c842 # luaH_newkey+0xba>
	ld	a5,32(s0)
	beqz	a5,0x1c862 # luaH_newkey+0xda>
	ld	a5,0(s4)
	sd	a5,16(s3)
	lbu	a5,8(s4)
	sb	a5,9(s3)
	andi	a5,a5,64
	beqz	a5,0x1c830 # luaH_newkey+0xa8>
	lbu	a5,9(s0)
	andi	a5,a5,32
	beqz	a5,0x1c830 # luaH_newkey+0xa8>
	ld	a5,0(s4)
	lbu	a5,9(a5)
	andi	a5,a5,24
	bnez	a5,0x1ca82 # luaH_newkey+0x2fa>
	ld	a5,0(s6)
	sd	a5,0(s3)
	lbu	a5,8(s6)
	sb	a5,8(s3)
	j	0x1c7c8 # luaH_newkey+0x40>
	ld	s1,32(s0)
	beqz	s1,0x1c862 # luaH_newkey+0xda>
	ld	a4,24(s0)
	bleu	s1,a4,0x1c862 # luaH_newkey+0xda>
	lbu	a5,-15(s1)
	addi	s5,s1,-24
	sd	s5,32(s0)
	beqz	a5,0x1c9a0 # luaH_newkey+0x218>
	mv	s1,s5
	bltu	a4,s1,0x1c84c # luaH_newkey+0xc4>
	addi	s5,sp,32
	li	a2,128
	li	a1,0
	mv	a0,s5
	jal	ra,0x3683a # memset>
	mv	a0,s0
	jal	ra,0x1c350 # luaH_realasize>
	lbu	a5,10(s0)
	sext.w	a0,a0
	sw	a0,12(s0)
	andi	a5,a5,127
	sb	a5,10(s0)
	mv	s3,s5
	addi	s7,sp,160
	mv	a2,s5
	li	s1,0
	li	a4,1
	li	a3,1
	bltu	a0,a3,0x1ca18 # luaH_newkey+0x290>
	mv	a6,a3
	li	a1,0
	bltu	a3,a4,0x1c8c4 # luaH_newkey+0x13c>
	ld	a7,16(s0)
	li	a1,0
	addiw	a5,a4,-1
	slli	a5,a5,0x20
	srli	a5,a5,0x1c
	add	a5,a5,a7
	lbu	a5,8(a5)
	andi	a5,a5,15
	beqz	a5,0x1c8bc # luaH_newkey+0x134>
	addiw	a1,a1,1
	addiw	a4,a4,1
	bleu	a4,a6,0x1c8a8 # luaH_newkey+0x120>
	addw	s1,s1,a1
	lw	a5,0(a2)
	addi	a2,a2,4
	slliw	a3,a3,0x1
	addw	a1,a1,a5
	sw	a1,-4(a2)
	bne	s7,a2,0x1c896 # luaH_newkey+0x10e>
	lbu	a4,11(s0)
	li	a5,1
	sext.w	a6,s1
	sllw	a5,a5,a4
	addiw	a4,a5,-1
	sext.w	a3,a4
	beqz	a5,0x1c93a # luaH_newkey+0x1b2>
	slli	a4,a4,0x20
	srli	a4,a4,0x20
	sub	a5,a5,a4
	slli	s9,a5,0x1
	slli	s8,a3,0x1
	add	a5,a5,s9
	add	s8,s8,a3
	slli	s9,a5,0x3
	lui	a3,0x80000
	slli	s8,s8,0x3
	addi	s9,s9,-48
	li	s10,0
	li	a2,0
	li	s11,3
	not	a3,a3
	ld	a5,24(s0)
	add	a5,a5,s8
	lbu	a4,8(a5)
	andi	a4,a4,15
	beqz	a4,0x1c92e # luaH_newkey+0x1a6>
	lbu	a4,9(a5)
	beq	a4,s11,0x1caae # luaH_newkey+0x326>
	addiw	s10,s10,1
	addi	s8,s8,-24
	bne	s9,s8,0x1c918 # luaH_newkey+0x190>
	addw	a6,s10,a6
	addw	s1,s1,a2
	lbu	a4,8(s4)
	li	a5,3
	beq	a4,a5,0x1cade # luaH_newkey+0x356>
	addiw	a6,a6,1
	li	a2,0
	li	a3,0
	li	a5,1
	li	a4,0
	j	0x1c968 # luaH_newkey+0x1e0>
	lw	a0,0(s3)
	addw	a4,a4,a0
	bleu	a4,a1,0x1c95e # luaH_newkey+0x1d6>
	mv	a2,a5
	mv	a3,a4
	addi	s3,s3,4
	slliw	a5,a5,0x1
	beq	s7,s3,0x1c970 # luaH_newkey+0x1e8>
	srliw	a1,a5,0x1
	bltu	a1,s1,0x1c950 # luaH_newkey+0x1c8>
	subw	a3,a6,a3
	mv	a1,s0
	mv	a0,s2
	jal	ra,0x1cb1e # luaH_resize>
	mv	a1,s4
	mv	a0,s0
	jal	ra,0x1c6d4 # luaH_get>
	lbu	a4,8(a0)
	li	a5,32
	beq	a4,a5,0x1cb10 # luaH_newkey+0x388>
	ld	a5,0(s6)
	sd	a5,0(a0)
	lbu	a5,8(s6)
	sb	a5,8(a0)
	j	0x1c7c8 # luaH_newkey+0x40>
	lbu	a1,9(s3)
	addi	a2,s3,16
	mv	a0,s0
	jal	ra,0x1c132 # mainposition>
	mv	a4,a0
	beq	a0,s3,0x1ca62 # luaH_newkey+0x2da>
	lw	a3,12(a4)
	mv	a2,a4
	slli	a5,a3,0x1
	add	a5,a5,a3
	slli	a5,a5,0x3
	add	a4,a4,a5
	bne	a4,s3,0x1c9b4 # luaH_newkey+0x22c>
	sub	a5,s5,a2
	srai	a5,a5,0x3
	auipc	a4,0x26
	ld	a4,-356(a4) # 0x42868 # dummynode_+0x88>
	mul	a5,a5,a4
	sw	a5,12(a2)
	ld	a5,0(s3)
	sd	a5,-24(s1)
	ld	a5,8(s3)
	sd	a5,-16(s1)
	ld	a3,16(s3)
	lw	a5,12(s3)
	sd	a3,-8(s1)
	beqz	a5,0x1ca10 # luaH_newkey+0x288>
	sub	a5,s3,s5
	srai	a5,a5,0x3
	mul	a5,a5,a4
	lw	a4,-12(s1)
	addw	a5,a5,a4
	sw	a5,-12(s1)
	sw	zero,12(s3)
	li	a5,16
	sb	a5,8(s3)
	j	0x1c802 # luaH_newkey+0x7a>
	bltu	a0,a4,0x1c8d6 # luaH_newkey+0x14e>
	mv	a6,a0
	j	0x1c8a2 # luaH_newkey+0x11a>
	fld	fs0,0(a2)
	li	a1,0
	addi	a0,sp,32
	fmv.d	fa0,fs0
	jal	ra,0x1e574 # luaV_flttointeger>
	beqz	a0,0x1ca4c # luaH_newkey+0x2c4>
	li	a5,3
	sb	a5,24(sp)
	ld	a5,32(sp)
	addi	s4,sp,16
	sd	a5,16(sp)
	j	0x1c7c0 # luaH_newkey+0x38>
	auipc	a1,0x26
	addi	a1,a1,-560 # 0x42810 # dummynode_+0x30>
	jal	ra,0x13d34 # luaG_runerror>
	feq.d	a5,fs0,fs0
	bnez	a5,0x1c7c0 # luaH_newkey+0x38>
	auipc	a1,0x26
	addi	a1,a1,-556 # 0x42828 # dummynode_+0x48>
	mv	a0,s2
	jal	ra,0x13d34 # luaG_runerror>
	lw	a4,12(s3)
	bnez	a4,0x1ca8c # luaH_newkey+0x304>
	auipc	a4,0x26
	ld	a4,-512(a4) # 0x42868 # dummynode_+0x88>
	sub	a5,s5,s3
	srai	a5,a5,0x3
	mul	a5,a5,a4
	sw	a5,12(s3)
	mv	s3,s5
	j	0x1c802 # luaH_newkey+0x7a>
	mv	a1,s0
	mv	a0,s2
	jal	ra,0x170d0 # luaC_barrierback_>
	j	0x1c830 # luaH_newkey+0xa8>
	slli	a5,a4,0x1
	add	a5,a5,a4
	slli	a5,a5,0x3
	add	a5,a5,s3
	sub	a5,a5,s5
	srai	a5,a5,0x3
	auipc	a4,0x26
	ld	a4,-564(a4) # 0x42868 # dummynode_+0x88>
	mul	a5,a5,a4
	sw	a5,-12(s1)
	j	0x1ca70 # luaH_newkey+0x2e8>
	ld	a0,16(a5)
	addi	a5,a0,-1
	bltu	a3,a5,0x1c92c # luaH_newkey+0x1a4>
	sext.w	a0,a0
	sd	a6,8(sp)
	sd	a2,0(sp)
	jal	ra,0x17f32 # luaO_ceillog2>
	slli	a5,a0,0x2
	add	a5,a5,s5
	lw	a4,0(a5)
	ld	a2,0(sp)
	ld	a6,8(sp)
	addiw	a4,a4,1
	sw	a4,0(a5)
	lui	a5,0x80000
	addiw	a2,a2,1
	not	a3,a5
	j	0x1c92c # luaH_newkey+0x1a4>
	ld	a0,0(s4)
	lui	a5,0x80000
	not	a5,a5
	addi	a4,a0,-1
	bltu	a5,a4,0x1c944 # luaH_newkey+0x1bc>
	sext.w	a0,a0
	sd	a6,0(sp)
	jal	ra,0x17f32 # luaO_ceillog2>
	slli	a5,a0,0x2
	add	s5,s5,a5
	lw	a5,0(s5)
	ld	a6,0(sp)
	addiw	s1,s1,1
	addiw	a5,a5,1
	sw	a5,0(s5)
	j	0x1c944 # luaH_newkey+0x1bc>
	mv	a3,s6
	mv	a2,s4
	mv	a1,s0
	mv	a0,s2
	jal	ra,0x1c788 # luaH_newkey>
	j	0x1c7c8 # luaH_newkey+0x40>

luaH_resize:
	addi	sp,sp,-160
	sd	s3,120(sp)
	mv	s3,a0
	mv	a0,a1
	sd	s0,144(sp)
	sd	s1,136(sp)
	sd	s2,128(sp)
	mv	s1,a1
	sd	s7,88(sp)
	mv	s0,a3
	sd	ra,152(sp)
	sd	s4,112(sp)
	sd	s5,104(sp)
	sd	s6,96(sp)
	sd	s8,80(sp)
	sd	s9,72(sp)
	sd	s10,64(sp)
	sd	s11,56(sp)
	mv	s2,a2
	jal	ra,0x1c350 # luaH_realasize>
	lbu	a3,10(s1)
	sext.w	s7,a0
	sw	s7,12(s1)
	andi	a3,a3,127
	sb	a3,10(s1)
	bnez	s0,0x1cd58 # luaH_resize+0x23a>
	li	s10,0
	auipc	s9,0x26
	addi	s9,s9,-898 # 0x427e0 # dummynode_>
	li	s11,0
	bltu	s2,s7,0x1cc76 # luaH_resize+0x158>
	ld	a1,16(s1)
	slli	s4,s2,0x20
	srli	s4,s4,0x20
	slli	s6,s7,0x20
	srli	s6,s6,0x20
	slli	s0,s6,0x4
	slli	a3,s4,0x4
	mv	a2,s0
	mv	a0,s3
	jal	ra,0x17a82 # luaM_realloc_>
	beqz	a0,0x1cdce # luaH_resize+0x2b0>
	lbu	a3,11(s1)
	ld	s4,24(s1)
	ld	s5,32(s1)
	sb	s11,11(s1)
	sd	s9,24(s1)
	sd	s10,32(s1)
	sd	a0,16(s1)
	sw	s2,12(s1)
	bleu	s2,s7,0x1cbdc # luaH_resize+0xbe>
	addiw	a5,s2,-1
	subw	a5,a5,s7
	slli	a5,a5,0x20
	srli	a5,a5,0x20
	add	a5,a5,s6
	addi	a5,a5,1
	slli	a5,a5,0x4
	add	a2,a0,s0
	li	a4,16
	add	a0,a0,a5
	sb	a4,8(a2)
	addi	a2,a2,16
	bne	a2,a0,0x1cbd2 # luaH_resize+0xb4>
	li	a5,1
	sllw	s6,a5,a3
	blez	s6,0x1cc46 # luaH_resize+0x128>
	addiw	a5,s6,-1
	slli	a5,a5,0x20
	srli	a5,a5,0x20
	slli	s2,a5,0x1
	add	s2,s2,a5
	slli	a5,s2,0x3
	addi	s2,s4,24
	mv	s0,s4
	add	s2,s2,a5
	addi	s8,sp,32
	li	s7,32
	j	0x1cc10 # luaH_resize+0xf2>
	addi	s0,s0,24
	beq	s2,s0,0x1cc46 # luaH_resize+0x128>
	lbu	a5,8(s0)
	andi	a5,a5,15
	beqz	a5,0x1cc0a # luaH_resize+0xec>
	ld	a5,16(s0)
	mv	a1,s8
	mv	a0,s1
	sd	a5,32(sp)
	lbu	a5,9(s0)
	sb	a5,40(sp)
	jal	ra,0x1c6d4 # luaH_get>
	lbu	a5,8(a0)
	beq	a5,s7,0x1cd2c # luaH_resize+0x20e>
	ld	a5,0(s0)
	addi	s0,s0,24
	sd	a5,0(a0)
	lbu	a5,-16(s0)
	sb	a5,8(a0)
	bne	s2,s0,0x1cc10 # luaH_resize+0xf2>
	beqz	s5,0x1cd3a # luaH_resize+0x21c>
	ld	s0,144(sp)
	slli	a2,s6,0x1
	ld	ra,152(sp)
	ld	s1,136(sp)
	ld	s2,128(sp)
	ld	s5,104(sp)
	ld	s7,88(sp)
	ld	s8,80(sp)
	ld	s9,72(sp)
	ld	s10,64(sp)
	ld	s11,56(sp)
	add	a2,a2,s6
	mv	a1,s4
	ld	s6,96(sp)
	ld	s4,112(sp)
	mv	a0,s3
	ld	s3,120(sp)
	slli	a2,a2,0x3
	addi	sp,sp,160
	j	0x17a5c # luaM_free_>
	lbu	a5,11(s1)
	addiw	a6,s2,1
	not	a7,s2
	sd	a5,8(sp)
	ld	a5,24(s1)
	slli	s6,a6,0x20
	addw	a7,a7,s7
	sd	a5,16(sp)
	ld	a5,32(s1)
	srli	s6,s6,0x20
	slli	s4,s2,0x20
	slli	a7,a7,0x20
	srli	s4,s4,0x20
	srli	a7,a7,0x20
	addi	s0,s6,1
	sb	s11,11(s1)
	sd	s9,24(s1)
	sd	s10,32(s1)
	ld	a1,16(s1)
	sd	a5,24(sp)
	sw	s2,12(s1)
	slli	s11,s4,0x4
	add	s10,a7,s0
	li	s5,32
	addi	s9,sp,32
	j	0x1ccd8 # luaH_resize+0x1ba>
	addi	s11,s11,16
	mv	s6,s0
	beq	s0,s10,0x1cd0c # luaH_resize+0x1ee>
	addi	s0,s0,1
	add	s8,a1,s11
	lbu	a5,8(s8)
	andi	a5,a5,15
	beqz	a5,0x1ccce # luaH_resize+0x1b0>
	mv	a1,s6
	mv	a0,s1
	jal	ra,0x1c554 # luaH_getint>
	lbu	a5,8(a0)
	beq	a5,s5,0x1cdf6 # luaH_resize+0x2d8>
	ld	a5,0(s8)
	addi	s11,s11,16
	mv	s6,s0
	sd	a5,0(a0)
	lbu	a5,8(s8)
	sb	a5,8(a0)
	ld	a1,16(s1)
	bne	s0,s10,0x1ccd6 # luaH_resize+0x1b8>
	ld	a5,8(sp)
	lbu	s11,11(s1)
	ld	s9,24(s1)
	sb	a5,11(s1)
	ld	a5,16(sp)
	ld	s10,32(s1)
	sw	s7,12(s1)
	sd	a5,24(s1)
	ld	a5,24(sp)
	sd	a5,32(s1)
	j	0x1cb7a # luaH_resize+0x5c>
	mv	a3,s0
	mv	a2,s8
	mv	a1,s1
	mv	a0,s3
	jal	ra,0x1c788 # luaH_newkey>
	j	0x1cc0a # luaH_resize+0xec>
	ld	ra,152(sp)
	ld	s0,144(sp)
	ld	s1,136(sp)
	ld	s2,128(sp)
	ld	s3,120(sp)
	ld	s4,112(sp)
	ld	s5,104(sp)
	ld	s6,96(sp)
	ld	s7,88(sp)
	ld	s8,80(sp)
	ld	s9,72(sp)
	ld	s10,64(sp)
	ld	s11,56(sp)
	addi	sp,sp,160
	ret
	mv	a0,s0
	jal	ra,0x17f32 # luaO_ceillog2>
	li	a5,30
	mv	s11,a0
	blt	a5,a0,0x1ce30 # luaH_resize+0x312>
	li	s0,1
	sllw	s0,s0,a0
	sext.w	s4,s0
	lui	a5,0x40000
	bltu	a5,s4,0x1ce30 # luaH_resize+0x312>
	slli	a1,s0,0x20
	srli	a1,a1,0x20
	slli	s10,a1,0x1
	add	s10,s10,a1
	slli	s10,s10,0x3
	li	a2,0
	mv	a1,s10
	mv	a0,s3
	jal	ra,0x17c10 # luaM_malloc_>
	mv	s9,a0
	blez	s4,0x1cdc2 # luaH_resize+0x2a4>
	addiw	s0,s0,-1
	slli	s0,s0,0x20
	srli	s0,s0,0x20
	slli	a3,s0,0x1
	add	a3,a3,s0
	slli	a3,a3,0x3
	addi	a3,a3,32 # 0xffffffff80000020 # __BSS_END__+0xffffffff7ffb1c98>
	addi	a5,a0,8
	add	a3,a3,a0
	li	a2,16
	sw	zero,4(a5) # 0x40000004 # __BSS_END__+0x3ffb1c7c>
	sb	zero,1(a5)
	sb	a2,0(a5)
	addi	a5,a5,24
	bne	a5,a3,0x1cdb0 # luaH_resize+0x292>
	andi	s11,s11,255
	add	s10,s10,s9
	bltu	s2,s7,0x1cc76 # luaH_resize+0x158>
	j	0x1cb70 # luaH_resize+0x52>
	beqz	s2,0x1ce0e # luaH_resize+0x2f0>
	beqz	s10,0x1cdee # luaH_resize+0x2d0>
	li	a5,1
	sllw	s11,a5,s11
	slli	a5,s11,0x1
	add	s11,s11,a5
	slli	a2,s11,0x3
	mv	a1,s9
	mv	a0,s3
	jal	ra,0x17a5c # luaM_free_>
	li	a1,4
	mv	a0,s3
	jal	ra,0x14162 # luaD_throw>
	mv	a1,s1
	li	a5,3
	mv	a3,s8
	mv	a2,s9
	mv	a0,s3
	sd	s6,32(sp)
	sb	a5,40(sp)
	jal	ra,0x1c788 # luaH_newkey>
	ld	a1,16(s1)
	j	0x1ccce # luaH_resize+0x1b0>
	lbu	a3,11(s1)
	ld	s4,24(s1)
	ld	s5,32(s1)
	sb	s11,11(s1)
	sd	s9,24(s1)
	sd	s10,32(s1)
	sd	zero,16(s1)
	sw	zero,12(s1)
	j	0x1cbdc # luaH_resize+0xbe>
	auipc	a1,0x26
	addi	a1,a1,-1520 # 0x42840 # dummynode_+0x60>
	mv	a0,s3
	jal	ra,0x13d34 # luaG_runerror>

luaH_resizearray:
	ld	a5,32(a1)
	li	a3,0
	beqz	a5,0x1ce4e # luaH_resizearray+0x10>
	lbu	a5,11(a1)
	li	a3,1
	sllw	a3,a3,a5
	j	0x1cb1e # luaH_resize>

luaH_finishset:
	lbu	a6,8(a3)
	li	a5,32
	beq	a6,a5,0x1ce6a # luaH_finishset+0x1a>
	ld	a5,0(a4)
	sd	a5,0(a3)
	lbu	a5,8(a4)
	sb	a5,8(a3)
	ret
	mv	a3,a4
	j	0x1c788 # luaH_newkey>

luaH_set:
	addi	sp,sp,-48
	sd	s1,24(sp)
	mv	s1,a1
	sd	s3,8(sp)
	mv	a1,a2
	mv	s3,a0
	mv	a0,s1
	sd	s0,32(sp)
	sd	s2,16(sp)
	sd	ra,40(sp)
	mv	s2,a2
	mv	s0,a3
	jal	ra,0x1c6d4 # luaH_get>
	lbu	a4,8(a0)
	li	a5,32
	beq	a4,a5,0x1ceb0 # luaH_set+0x42>
	ld	a5,0(s0)
	sd	a5,0(a0)
	lbu	a5,8(s0)
	sb	a5,8(a0)
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	addi	sp,sp,48
	ret
	mv	a3,s0
	ld	s0,32(sp)
	ld	ra,40(sp)
	mv	a2,s2
	mv	a1,s1
	ld	s2,16(sp)
	ld	s1,24(sp)
	mv	a0,s3
	ld	s3,8(sp)
	addi	sp,sp,48
	j	0x1c788 # luaH_newkey>

luaH_setint:
	addi	sp,sp,-64
	sd	s2,32(sp)
	mv	s2,a1
	sd	s3,24(sp)
	mv	a1,a2
	mv	s3,a0
	mv	a0,s2
	sd	s0,48(sp)
	sd	s1,40(sp)
	sd	ra,56(sp)
	mv	s1,a2
	mv	s0,a3
	jal	ra,0x1c554 # luaH_getint>
	lbu	a4,8(a0)
	li	a5,32
	beq	a4,a5,0x1cf08 # luaH_setint+0x42>
	ld	a5,0(s0)
	sd	a5,0(a0)
	lbu	a5,8(s0)
	sb	a5,8(a0)
	ld	ra,56(sp)
	ld	s0,48(sp)
	ld	s1,40(sp)
	ld	s2,32(sp)
	ld	s3,24(sp)
	addi	sp,sp,64
	ret
	mv	a3,s0
	mv	a2,sp
	mv	a1,s2
	mv	a0,s3
	li	a5,3
	sd	s1,0(sp)
	sb	a5,8(sp)
	jal	ra,0x1c788 # luaH_newkey>
	ld	ra,56(sp)
	ld	s0,48(sp)
	ld	s1,40(sp)
	ld	s2,32(sp)
	ld	s3,24(sp)
	addi	sp,sp,64
	ret

luaH_getn:
	addi	sp,sp,-48
	sd	s1,24(sp)
	lw	s1,12(a0)
	sd	s2,16(sp)
	sd	ra,40(sp)
	sd	s0,32(sp)
	sd	s3,8(sp)
	sd	s4,0(sp)
	mv	s2,a0
	beqz	s1,0x1cff0 # luaH_getn+0xc6>
	addiw	a6,s1,-1
	ld	s3,16(a0)
	slli	s0,a6,0x20
	srli	s0,s0,0x20
	slli	a5,s0,0x4
	add	a5,a5,s3
	lbu	a5,8(a5)
	lbu	s4,10(a0)
	andi	a5,a5,15
	slliw	a7,s4,0x18
	sraiw	a7,a7,0x18
	bnez	a5,0x1d07e # luaH_getn+0x154>
	li	a5,1
	beq	s1,a5,0x1d120 # luaH_getn+0x1f6>
	addiw	a4,s1,-2
	slli	a5,a4,0x20
	srli	a5,a5,0x1c
	add	a5,a5,s3
	lbu	a5,8(a5)
	andi	a5,a5,15
	bnez	a5,0x1d0f6 # luaH_getn+0x1cc>
	mv	a3,s1
	li	s0,0
	li	a1,1
	j	0x1cf9c # luaH_getn+0x72>
	lbu	a5,8(a5)
	srliw	a4,a4,0x1
	andi	a5,a5,15
	bnez	a5,0x1d11c # luaH_getn+0x1f2>
	mv	a3,a4
	addw	a4,a3,s0
	srliw	a5,a4,0x1
	addiw	a5,a5,-1
	slli	a5,a5,0x20
	srli	a5,a5,0x1c
	subw	a2,a3,s0
	add	a5,a5,s3
	bltu	a1,a2,0x1cf8c # luaH_getn+0x62>
	bltz	a7,0x1cfc0 # luaH_getn+0x96>
	and	a1,s1,a6
	sext.w	a1,a1
	bnez	a1,0x1cfda # luaH_getn+0xb0>
	mv	a0,s2
	jal	ra,0x1c350 # luaH_realasize>
	srliw	a0,a0,0x1
	bleu	s0,a0,0x1cfda # luaH_getn+0xb0>
	ori	s4,s4,-128
	sw	s0,12(s2)
	sb	s4,10(s2)
	slli	s0,s0,0x20
	srli	s0,s0,0x20
	ld	ra,40(sp)
	mv	a0,s0
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	ld	s4,0(sp)
	addi	sp,sp,48
	ret
	li	s0,0
	ld	a5,32(s2)
	beqz	a5,0x1cfde # luaH_getn+0xb4>
	addiw	a1,s1,1
	slli	a1,a1,0x20
	srli	a1,a1,0x20
	mv	a0,s2
	jal	ra,0x1c554 # luaH_getint>
	lbu	a5,8(a0)
	andi	a5,a5,15
	beqz	a5,0x1cfde # luaH_getn+0xb4>
	mv	s1,s0
	bnez	s0,0x1d014 # luaH_getn+0xea>
	li	s1,1
	li	s4,-1
	srli	s3,s4,0x2
	mv	s0,s1
	slli	s1,s1,0x1
	mv	a1,s1
	mv	a0,s2
	jal	ra,0x1c554 # luaH_getint>
	lbu	a5,8(a0)
	andi	a5,a5,15
	beqz	a5,0x1d04a # luaH_getn+0x120>
	bleu	s1,s3,0x1d01a # luaH_getn+0xf0>
	srli	a1,s4,0x1
	mv	a0,s2
	jal	ra,0x1c554 # luaH_getint>
	lbu	a5,8(a0)
	mv	s0,s1
	srli	s1,s4,0x1
	andi	a5,a5,15
	bnez	a5,0x1d128 # luaH_getn+0x1fe>
	sub	a5,s1,s0
	li	a4,1
	li	s4,1
	bltu	a4,a5,0x1d062 # luaH_getn+0x138>
	j	0x1cfde # luaH_getn+0xb4>
	mv	s0,s3
	sub	a5,s1,s0
	bleu	a5,s4,0x1cfde # luaH_getn+0xb4>
	add	s3,s0,s1
	srli	s3,s3,0x1
	mv	a1,s3
	mv	a0,s2
	jal	ra,0x1c554 # luaH_getint>
	lbu	a5,8(a0)
	andi	a5,a5,15
	bnez	a5,0x1d058 # luaH_getn+0x12e>
	mv	s1,s3
	j	0x1d05a # luaH_getn+0x130>
	slli	s0,s1,0x20
	srli	s0,s0,0x20
	bgez	a7,0x1cff2 # luaH_getn+0xc8>
	and	a6,s1,a6
	sext.w	a6,a6
	beqz	a6,0x1cff2 # luaH_getn+0xc8>
	slli	a5,s0,0x4
	add	a5,a5,s3
	lbu	a5,8(a5)
	andi	a5,a5,15
	beqz	a5,0x1cfde # luaH_getn+0xb4>
	jal	ra,0x1c350 # luaH_realasize>
	addiw	a5,a0,-1
	slli	a5,a5,0x20
	srli	a5,a5,0x1c
	add	a5,a5,s3
	lbu	a5,8(a5)
	sext.w	a0,a0
	li	a2,1
	andi	a5,a5,15
	beqz	a5,0x1d0d2 # luaH_getn+0x1a8>
	slli	s0,a0,0x20
	srli	s0,s0,0x20
	mv	s1,a0
	j	0x1cff2 # luaH_getn+0xc8>
	lbu	a5,8(a5)
	srliw	a4,a4,0x1
	andi	a5,a5,15
	bnez	a5,0x1d124 # luaH_getn+0x1fa>
	mv	a0,a4
	addw	a4,a0,s1
	srliw	a5,a4,0x1
	addiw	a5,a5,-1
	slli	a5,a5,0x20
	srli	a5,a5,0x1c
	subw	a3,a0,s1
	add	a5,a5,s3
	bltu	a2,a3,0x1d0c4 # luaH_getn+0x19a>
	slli	s0,s1,0x20
	sw	s1,12(s2)
	srli	s0,s0,0x20
	j	0x1cfde # luaH_getn+0xb4>
	bltz	a7,0x1d104 # luaH_getn+0x1da>
	and	a1,s1,a6
	sext.w	a1,a1
	bnez	a1,0x1cfde # luaH_getn+0xb4>
	and	a4,a6,a4
	sext.w	a4,a4
	beqz	a4,0x1cfde # luaH_getn+0xb4>
	ori	s4,s4,-128
	sw	a6,12(s2)
	sb	s4,10(s2)
	j	0x1cfde # luaH_getn+0xb4>
	mv	s0,a4
	j	0x1cf9c # luaH_getn+0x72>
	li	a3,1
	j	0x1cf86 # luaH_getn+0x5c>
	mv	s1,a4
	j	0x1d0d2 # luaH_getn+0x1a8>
	mv	s0,s1
	j	0x1cfde # luaH_getn+0xb4>

luaT_init:
	addi	sp,sp,-48
	sd	s0,32(sp)
	sd	s1,24(sp)
	sd	s3,8(sp)
	sd	s4,0(sp)
	sd	ra,40(sp)
	sd	s2,16(sp)
	mv	s0,a0
	auipc	s3,0x2f
	addi	s3,s3,-1172 # 0x4bca8 # __fini_array_end+0x8>
	auipc	a1,0x25
	addi	a1,a1,1836 # 0x42870 # dummynode_+0x90>
	li	s1,0
	li	s4,25
	j	0x1d158 # luaT_init+0x2c>
	ld	a1,0(s3)
	addi	s3,s3,8
	mv	a0,s0
	ld	s2,24(s0)
	jal	ra,0x1c032 # luaS_new>
	ld	a4,24(s0)
	addi	a5,s1,34
	slli	a5,a5,0x3
	add	s2,s2,a5
	sd	a0,8(s2)
	add	a5,a5,a4
	ld	a1,8(a5)
	addiw	s1,s1,1
	mv	a0,s0
	jal	ra,0x17148 # luaC_fix>
	bne	s1,s4,0x1d152 # luaT_init+0x26>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	ld	s4,0(sp)
	addi	sp,sp,48
	ret

luaT_gettm:
	addi	sp,sp,-32
	sd	s1,8(sp)
	mv	s1,a1
	mv	a1,a2
	sd	s0,16(sp)
	sd	ra,24(sp)
	mv	s0,a0
	jal	ra,0x1c614 # luaH_getshortstr>
	lbu	a5,8(a0)
	andi	a5,a5,15
	beqz	a5,0x1d1b4 # luaT_gettm+0x24>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret
	lbu	a5,10(s0)
	li	a4,1
	sllw	s1,a4,s1
	or	a5,a5,s1
	sb	a5,10(s0)
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	li	a0,0
	addi	sp,sp,32
	ret

luaT_gettmbyobj:
	lbu	a5,8(a1)
	li	a3,5
	ld	a4,24(a0)
	andi	a5,a5,15
	beq	a5,a3,0x1d208 # luaT_gettmbyobj+0x38>
	li	a3,7
	beq	a5,a3,0x1d20e # luaT_gettmbyobj+0x3e>
	addi	a5,a5,60
	slli	a5,a5,0x3
	add	a5,a5,a4
	ld	a0,0(a5)
	beqz	a0,0x1d202 # luaT_gettmbyobj+0x32>
	slli	a2,a2,0x20
	srli	a2,a2,0x20
	addi	a2,a2,34
	slli	a2,a2,0x3
	add	a2,a2,a4
	ld	a1,8(a2)
	j	0x1c614 # luaH_getshortstr>
	addi	a0,a4,80
	ret
	ld	a5,0(a1)
	ld	a0,40(a5)
	j	0x1d1ee # luaT_gettmbyobj+0x1e>
	ld	a5,0(a1)
	ld	a0,24(a5)
	j	0x1d1ee # luaT_gettmbyobj+0x1e>

luaT_objtypename:
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	ra,24(sp)
	sd	s1,8(sp)
	lbu	a5,8(a1)
	li	a4,69
	mv	s0,a1
	beq	a5,a4,0x1d27a # luaT_objtypename+0x66>
	li	a4,71
	beq	a5,a4,0x1d24e # luaT_objtypename+0x3a>
	andi	a5,a5,15
	addi	a5,a5,1
	slli	a5,a5,0x3
	auipc	a4,0x2f
	addi	a4,a4,-1432 # 0x4bca0 # __fini_array_end>
	add	a5,a5,a4
	ld	a0,200(a5)
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret
	ld	a4,0(a1)
	ld	s1,24(a4)
	beqz	s1,0x1d232 # luaT_objtypename+0x1e>
	auipc	a1,0x25
	addi	a1,a1,1572 # 0x42878 # dummynode_+0x98>
	jal	ra,0x1c032 # luaS_new>
	mv	a1,a0
	mv	a0,s1
	jal	ra,0x1c614 # luaH_getshortstr>
	lbu	a5,8(a0)
	li	a4,4
	andi	a5,a5,15
	beq	a5,a4,0x1d282 # luaT_objtypename+0x6e>
	lbu	a5,8(s0)
	j	0x1d232 # luaT_objtypename+0x1e>
	ld	a4,0(a1)
	ld	s1,40(a4)
	bnez	s1,0x1d254 # luaT_objtypename+0x40>
	j	0x1d232 # luaT_objtypename+0x1e>
	ld	a0,0(a0)
	addi	a0,a0,24
	j	0x1d244 # luaT_objtypename+0x30>

luaT_callTM:
	mv	a6,a1
	ld	a7,0(a6)
	ld	a1,16(a0)
	sd	a7,0(a1)
	lbu	a6,8(a6)
	sb	a6,8(a1)
	ld	a6,0(a2)
	sd	a6,16(a1)
	lbu	a6,8(a2)
	addi	a2,a1,64
	sb	a6,24(a1)
	ld	a6,0(a3)
	sd	a6,32(a1)
	lbu	a3,8(a3)
	sb	a3,40(a1)
	ld	a3,0(a4)
	sd	a3,48(a1)
	lbu	a4,8(a4)
	sb	a4,56(a1)
	ld	a4,32(a0)
	sd	a2,16(a0)
	li	a2,0
	lhu	a5,62(a4)
	andi	a5,a5,10
	bnez	a5,0x1d2de # luaT_callTM+0x56>
	j	0x14d1c # luaD_call>
	j	0x14d70 # luaD_callnoyield>

luaT_callTMres:
	mv	a5,a1
	ld	a6,0(a5)
	ld	a1,16(a0)
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	ra,24(sp)
	ld	s1,48(a0)
	sd	a6,0(a1)
	lbu	a5,8(a5)
	addi	a6,a1,48
	mv	s0,a0
	sb	a5,8(a1)
	ld	a5,0(a2)
	sub	s1,a4,s1
	sd	a5,16(a1)
	lbu	a5,8(a2)
	li	a2,1
	sb	a5,24(a1)
	ld	a5,0(a3)
	sd	a5,32(a1)
	lbu	a5,8(a3)
	sb	a5,40(a1)
	ld	a5,32(a0)
	sd	a6,16(a0)
	lhu	a5,62(a5)
	andi	a5,a5,10
	bnez	a5,0x1d35a # luaT_callTMres+0x78>
	jal	ra,0x14d1c # luaD_call>
	ld	a5,16(s0)
	ld	a4,48(s0)
	ld	a3,-16(a5)
	addi	a2,a5,-16
	sd	a2,16(s0)
	add	a4,a4,s1
	sd	a3,0(a4)
	lbu	a5,-8(a5)
	sb	a5,8(a4)
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret
	jal	ra,0x14d70 # luaD_callnoyield>
	j	0x1d336 # luaT_callTMres+0x54>

callbinTM:
	addi	sp,sp,-48
	sd	s0,32(sp)
	sd	s1,24(sp)
	sd	s2,16(sp)
	sd	s3,8(sp)
	sd	s4,0(sp)
	sd	ra,40(sp)
	lbu	a5,8(a1)
	mv	s0,a1
	li	a1,5
	andi	a5,a5,15
	ld	a6,24(a0)
	mv	s1,a0
	mv	s4,a2
	mv	s3,a3
	mv	s2,a4
	beq	a5,a1,0x1d402 # callbinTM+0xa2>
	li	a4,7
	beq	a5,a4,0x1d408 # callbinTM+0xa8>
	addi	a5,a5,60
	slli	a5,a5,0x3
	add	a5,a5,a6
	ld	a0,0(a5)
	addi	a1,a6,80
	beqz	a0,0x1d3b6 # callbinTM+0x56>
	slli	a5,s2,0x20
	srli	a5,a5,0x20
	addi	a5,a5,34
	slli	a5,a5,0x3
	add	a6,a6,a5
	ld	a1,8(a6)
	jal	ra,0x1c614 # luaH_getshortstr>
	mv	a1,a0
	lbu	a5,8(a1)
	andi	a5,a5,15
	beqz	a5,0x1d3dc # callbinTM+0x7c>
	mv	a0,s1
	mv	a4,s3
	mv	a3,s4
	mv	a2,s0
	jal	ra,0x1d2e2 # luaT_callTMres>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	ld	s4,0(sp)
	li	a0,1
	addi	sp,sp,48
	ret
	mv	a1,s4
	mv	a2,s2
	mv	a0,s1
	jal	ra,0x1d1d0 # luaT_gettmbyobj>
	lbu	a5,8(a0)
	mv	a1,a0
	li	a0,0
	andi	a5,a5,15
	bnez	a5,0x1d3be # callbinTM+0x5e>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	ld	s4,0(sp)
	addi	sp,sp,48
	ret
	ld	a5,0(s0)
	ld	a0,40(a5)
	j	0x1d398 # callbinTM+0x38>
	ld	a5,0(s0)
	ld	a0,24(a5)
	j	0x1d398 # callbinTM+0x38>

luaT_trybinTM:
	addi	sp,sp,-48
	sd	s0,32(sp)
	sd	s1,24(sp)
	sd	s2,16(sp)
	sd	s3,8(sp)
	sd	ra,40(sp)
	mv	s3,a0
	mv	s2,a1
	mv	s1,a2
	mv	s0,a4
	jal	ra,0x1d360 # callbinTM>
	beqz	a0,0x1d436 # luaT_trybinTM+0x28>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	addi	sp,sp,48
	ret
	li	a5,17
	bltu	a5,s0,0x1d454 # luaT_trybinTM+0x46>
	li	a5,12
	bltu	a5,s0,0x1d45a # luaT_trybinTM+0x4c>
	auipc	a3,0x25
	addi	a3,a3,1118 # 0x428a0 # dummynode_+0xc0>
	mv	a2,s1
	mv	a1,s2
	mv	a0,s3
	jal	ra,0x13dfe # luaG_opinterror>
	li	a5,19
	bne	s0,a5,0x1d442 # luaT_trybinTM+0x34>
	lbu	a5,8(s2)
	li	a4,3
	andi	a5,a5,15
	bne	a5,a4,0x1d470 # luaT_trybinTM+0x62>
	lbu	a4,8(s1)
	andi	a4,a4,15
	beq	a4,a5,0x1d482 # luaT_trybinTM+0x74>
	auipc	a3,0x25
	addi	a3,a3,1040 # 0x42880 # dummynode_+0xa0>
	mv	a2,s1
	mv	a1,s2
	mv	a0,s3
	jal	ra,0x13dfe # luaG_opinterror>
	mv	a2,s1
	mv	a1,s2
	mv	a0,s3
	jal	ra,0x13e8e # luaG_tointerror>

luaT_tryconcatTM:
	ld	a2,16(a0)
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	s2,0(sp)
	addi	s0,a2,-16
	addi	s2,a2,-32
	li	a4,22
	mv	a3,s2
	mv	a2,s0
	mv	a1,s2
	sd	s1,8(sp)
	sd	ra,24(sp)
	mv	s1,a0
	jal	ra,0x1d360 # callbinTM>
	beqz	a0,0x1d4bc # luaT_tryconcatTM+0x30>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret
	mv	a2,s0
	mv	a1,s2
	mv	a0,s1
	jal	ra,0x13dde # luaG_concaterror>

luaT_trybinassocTM:
	mv	t1,a3
	mv	a6,a2
	mv	a3,a4
	mv	a4,a5
	beqz	t1,0x1d4d8 # luaT_trybinassocTM+0x12>
	mv	a2,a1
	mv	a1,a6
	j	0x1d40e # luaT_trybinTM>
	j	0x1d40e # luaT_trybinTM>

luaT_trybiniTM:
	addi	sp,sp,-32
	mv	a6,a3
	li	a3,3
	sb	a3,8(sp)
	sd	ra,24(sp)
	sd	a2,0(sp)
	mv	a3,a4
	mv	a4,a5
	beqz	a6,0x1d4fe # luaT_trybiniTM+0x24>
	mv	a2,a1
	mv	a1,sp
	jal	ra,0x1d40e # luaT_trybinTM>
	ld	ra,24(sp)
	addi	sp,sp,32
	ret
	mv	a2,sp
	jal	ra,0x1d40e # luaT_trybinTM>
	ld	ra,24(sp)
	addi	sp,sp,32
	ret

luaT_callorderTM:
	addi	sp,sp,-48
	sd	s1,24(sp)
	mv	s1,a3
	ld	a3,16(a0)
	mv	a4,s1
	sd	s0,32(sp)
	sd	s2,16(sp)
	sd	s3,8(sp)
	sd	ra,40(sp)
	mv	s0,a0
	mv	s2,a1
	mv	s3,a2
	jal	ra,0x1d360 # callbinTM>
	bnez	a0,0x1d578 # luaT_callorderTM+0x6e>
	li	a5,21
	bne	s1,a5,0x1d59a # luaT_callorderTM+0x90>
	ld	a5,32(s0)
	ld	a3,16(s0)
	lui	s1,0x2
	lhu	a1,62(a5)
	li	a4,20
	mv	a2,s2
	or	a1,a1,s1
	sh	a1,62(a5)
	mv	a0,s0
	mv	a1,s3
	jal	ra,0x1d360 # callbinTM>
	beqz	a0,0x1d59a # luaT_callorderTM+0x90>
	ld	a4,32(s0)
	ld	a2,16(s0)
	li	a3,1
	lhu	a5,62(a4)
	lbu	a0,8(a2)
	xor	a5,a5,s1
	sh	a5,62(a4)
	beq	a0,a3,0x1d58a # luaT_callorderTM+0x80>
	andi	a0,a0,15
	seqz	a0,a0
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	addi	sp,sp,48
	ret
	ld	a5,16(s0)
	li	a4,1
	li	a0,0
	lbu	a5,8(a5)
	beq	a5,a4,0x1d56a # luaT_callorderTM+0x60>
	andi	a5,a5,15
	beqz	a5,0x1d56a # luaT_callorderTM+0x60>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	li	a0,1
	addi	sp,sp,48
	ret
	mv	a2,s3
	mv	a1,s2
	mv	a0,s0
	jal	ra,0x13ec4 # luaG_ordererror>

luaT_callorderiTM:
	addi	sp,sp,-32
	sd	ra,24(sp)
	mv	a7,a3
	mv	a6,a1
	mv	a3,a5
	beqz	a4,0x1d5d2 # luaT_callorderiTM+0x2e>
	fcvt.d.w	fa5,a2
	li	a5,19
	sb	a5,8(sp)
	fsd	fa5,0(sp)
	mv	a1,sp
	bnez	a7,0x1d5c6 # luaT_callorderiTM+0x22>
	mv	a1,a6
	mv	a6,sp
	mv	a2,a6
	jal	ra,0x1d50a # luaT_callorderTM>
	ld	ra,24(sp)
	addi	sp,sp,32
	ret
	li	a5,3
	sd	a2,0(sp)
	sb	a5,8(sp)
	j	0x1d5bc # luaT_callorderiTM+0x18>

luaT_adjustvarargs:
	addi	sp,sp,-48
	ld	a6,16(a0)
	sd	s3,8(sp)
	mv	s3,a2
	ld	a2,0(a2)
	sd	s1,24(sp)
	mv	s1,a1
	sub	a5,a6,a2
	srai	a5,a5,0x4
	addiw	a1,a5,-1
	sd	s0,32(sp)
	sd	s2,16(sp)
	sd	ra,40(sp)
	subw	a1,a1,s1
	ld	a4,40(a0)
	sw	a1,44(s3)
	lbu	a1,12(a3)
	sub	a4,a4,a6
	srai	a4,a4,0x4
	addiw	a1,a1,1
	mv	s0,a0
	sext.w	s2,a5
	ble	a4,a1,0x1d688 # luaT_adjustvarargs+0xac>
	ld	a5,0(a2)
	addi	a4,a6,16
	sd	a4,16(s0)
	sd	a5,0(a6)
	lbu	a5,8(a2)
	sb	a5,8(a6)
	blez	s1,0x1d666 # luaT_adjustvarargs+0x8a>
	addiw	a3,s1,-1
	slli	a3,a3,0x20
	srli	a3,a3,0x1c
	addi	a3,a3,48
	addi	a5,a6,32
	addi	a4,a2,24
	add	a3,a3,a6
	ld	a1,-8(a4)
	sd	a5,16(s0)
	addi	a4,a4,16
	sd	a1,-16(a5)
	lbu	a1,-16(a4)
	addi	a5,a5,16
	sb	a1,-24(a5)
	sb	zero,-16(a4)
	bne	a5,a3,0x1d648 # luaT_adjustvarargs+0x6c>
	ld	a4,8(s3)
	slli	a5,s2,0x4
	ld	ra,40(sp)
	ld	s0,32(sp)
	add	a2,a2,a5
	add	a5,a5,a4
	sd	a2,0(s3)
	sd	a5,8(s3)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	addi	sp,sp,48
	ret
	li	a2,1
	jal	ra,0x143e2 # luaD_growstack>
	ld	a6,16(s0)
	ld	a2,0(s3)
	j	0x1d61a # luaT_adjustvarargs+0x3e>

luaT_getvarargs:
	addi	sp,sp,-48
	sd	s0,32(sp)
	sd	s2,16(sp)
	sd	ra,40(sp)
	sd	s1,24(sp)
	sd	s3,8(sp)
	lw	s0,44(a1)
	mv	s2,a1
	bltz	a3,0x1d6f0 # luaT_getvarargs+0x58>
	blez	a3,0x1d6e2 # luaT_getvarargs+0x4a>
	blez	s0,0x1d70c # luaT_getvarargs+0x74>
	ld	a4,0(s2)
	slli	a5,s0,0x4
	mv	a1,a2
	sub	a5,a4,a5
	li	a4,0
	j	0x1d6ca # luaT_getvarargs+0x32>
	beq	s0,a4,0x1d70e # luaT_getvarargs+0x76>
	ld	a0,0(a5)
	addi	a5,a5,16
	addi	a1,a1,16
	sd	a0,-16(a1)
	lbu	a0,-8(a5)
	addiw	a4,a4,1
	sb	a0,-8(a1)
	bne	a3,a4,0x1d6c6 # luaT_getvarargs+0x2e>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	addi	sp,sp,48
	ret
	ld	a5,40(a0)
	ld	a4,16(a0)
	mv	s3,a0
	sub	a5,a5,a4
	srai	a5,a5,0x4
	ble	a5,s0,0x1d72e # luaT_getvarargs+0x96>
	slli	a5,s0,0x4
	add	a5,a5,a2
	sd	a5,16(s3)
	mv	a3,s0
	j	0x1d6ac # luaT_getvarargs+0x14>
	li	s0,0
	slli	a5,s0,0x4
	add	a5,a5,a2
	sb	zero,8(a5)
	addiw	s0,s0,1
	addi	a5,a5,16
	blt	s0,a3,0x1d714 # luaT_getvarargs+0x7c>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	addi	sp,sp,48
	ret
	ld	a5,24(a0)
	ld	s1,48(a0)
	ld	a5,24(a5)
	sub	s1,a2,s1
	blez	a5,0x1d740 # luaT_getvarargs+0xa8>
	jal	ra,0x17420 # luaC_step>
	li	a2,1
	mv	a1,s0
	mv	a0,s3
	jal	ra,0x143e2 # luaD_growstack>
	ld	a5,48(s3)
	add	a2,a5,s1
	j	0x1d6fe # luaT_getvarargs+0x66>

error:
	addi	sp,sp,-16
	ld	a2,16(a0)
	sd	s0,0(sp)
	mv	s0,a0
	ld	a0,0(a0)
	mv	a3,a1
	auipc	a1,0x25
	addi	a1,a1,632 # 0x429d8 # udatatypename+0x10>
	sd	ra,8(sp)
	jal	ra,0x1865a # luaO_pushfstring>
	ld	a0,0(s0)
	li	a1,3
	jal	ra,0x14162 # luaD_throw>

loadByte:
	addi	sp,sp,-16
	sd	s0,0(sp)
	mv	s0,a0
	ld	a0,8(a0)
	sd	ra,8(sp)
	ld	a5,0(a0)
	addi	a4,a5,-1
	sd	a4,0(a0)
	beqz	a5,0x1d79e # loadByte+0x28>
	ld	a5,8(a0)
	addi	a4,a5,1
	sd	a4,8(a0)
	lbu	a0,0(a5)
	ld	ra,8(sp)
	ld	s0,0(sp)
	addi	sp,sp,16
	ret
	jal	ra,0x2150a # luaZ_fill>
	mv	a5,a0
	li	a4,-1
	andi	a0,a0,255
	bne	a5,a4,0x1d796 # loadByte+0x20>
	auipc	a1,0x25
	addi	a1,a1,586 # 0x429f8 # udatatypename+0x30>
	mv	a0,s0
	jal	ra,0x1d754 # error>

fchecksize.part.0:
	addi	sp,sp,-16
	sd	s0,0(sp)
	mv	s0,a0
	ld	a0,0(a0)
	mv	a2,a1
	auipc	a1,0x25
	addi	a1,a1,578 # 0x42a08 # udatatypename+0x40>
	sd	ra,8(sp)
	jal	ra,0x1865a # luaO_pushfstring>
	mv	a1,a0
	mv	a0,s0
	jal	ra,0x1d754 # error>

loadUnsigned:
	addi	sp,sp,-48
	sd	s0,32(sp)
	sd	s1,24(sp)
	sd	s2,16(sp)
	sd	s3,8(sp)
	sd	ra,40(sp)
	mv	s2,a0
	srli	s3,a1,0x7
	li	s0,0
	li	s1,-1
	ld	a0,8(s2)
	ld	a5,0(a0)
	addi	a4,a5,-1
	sd	a4,0(a0)
	beqz	a5,0x1d838 # loadUnsigned+0x5c>
	ld	a5,8(a0)
	addi	a4,a5,1
	sd	a4,8(a0)
	lbu	a5,0(a5)
	sext.w	a0,a5
	bleu	s3,s0,0x1d846 # loadUnsigned+0x6a>
	slliw	a0,a0,0x18
	slli	s0,s0,0x7
	andi	a5,a5,127
	sraiw	a0,a0,0x18
	or	s0,s0,a5
	bgez	a0,0x1d7f2 # loadUnsigned+0x16>
	ld	ra,40(sp)
	mv	a0,s0
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	addi	sp,sp,48
	ret
	jal	ra,0x2150a # luaZ_fill>
	beq	a0,s1,0x1d854 # loadUnsigned+0x78>
	andi	a5,a0,255
	j	0x1d810 # loadUnsigned+0x34>
	auipc	a1,0x25
	addi	a1,a1,474 # 0x42a20 # udatatypename+0x58>
	mv	a0,s2
	jal	ra,0x1d754 # error>
	auipc	a1,0x25
	addi	a1,a1,420 # 0x429f8 # udatatypename+0x30>
	mv	a0,s2
	jal	ra,0x1d754 # error>

loadStringN:
	addi	sp,sp,-96
	sd	s3,56(sp)
	mv	s3,a1
	li	a1,-1
	sd	s2,64(sp)
	sd	s4,48(sp)
	sd	ra,88(sp)
	sd	s0,80(sp)
	sd	s1,72(sp)
	ld	s4,0(a0)
	mv	s2,a0
	jal	ra,0x1d7dc # loadUnsigned>
	beqz	a0,0x1d90a # loadStringN+0xa8>
	addi	s0,a0,-1
	li	a5,40
	bleu	s0,a5,0x1d8ec # loadStringN+0x8a>
	mv	a1,s0
	mv	a0,s4
	jal	ra,0x1bf6e # luaS_createlngstrobj>
	ld	a4,16(s4)
	mv	s1,a0
	mv	a0,s4
	sd	s1,0(a4)
	lbu	a5,8(s1) # 0x2008 # exit-0xe118>
	ori	a5,a5,64
	sb	a5,8(a4)
	jal	ra,0x1451e # luaD_inctop>
	ld	a0,8(s2)
	mv	a2,s0
	addi	a1,s1,24
	jal	ra,0x2154c # luaZ_read>
	bnez	a0,0x1d91a # loadStringN+0xb8>
	ld	a5,16(s4)
	addi	a5,a5,-16
	sd	a5,16(s4)
	lbu	a5,9(s3)
	andi	a5,a5,32
	beqz	a5,0x1d8da # loadStringN+0x78>
	lbu	a5,9(s1)
	andi	a5,a5,24
	bnez	a5,0x1d90e # loadStringN+0xac>
	ld	ra,88(sp)
	ld	s0,80(sp)
	ld	s2,64(sp)
	ld	s3,56(sp)
	ld	s4,48(sp)
	mv	a0,s1
	ld	s1,72(sp)
	addi	sp,sp,96
	ret
	ld	a0,8(s2)
	addi	s1,sp,8
	mv	a2,s0
	mv	a1,s1
	jal	ra,0x2154c # luaZ_read>
	bnez	a0,0x1d91a # loadStringN+0xb8>
	mv	a1,s1
	mv	a2,s0
	mv	a0,s4
	jal	ra,0x1bfce # luaS_newlstr>
	mv	s1,a0
	j	0x1d8c8 # loadStringN+0x66>
	li	s1,0
	j	0x1d8da # loadStringN+0x78>
	mv	a2,s1
	mv	a1,s3
	mv	a0,s4
	jal	ra,0x1706e # luaC_barrier_>
	j	0x1d8da # loadStringN+0x78>
	auipc	a1,0x25
	addi	a1,a1,222 # 0x429f8 # udatatypename+0x30>
	mv	a0,s2
	jal	ra,0x1d754 # error>

loadFunction:
	addi	sp,sp,-128
	sd	s0,112(sp)
	sd	s1,104(sp)
	sd	s2,96(sp)
	sd	ra,120(sp)
	sd	s3,88(sp)
	sd	s4,80(sp)
	sd	s5,72(sp)
	sd	s6,64(sp)
	sd	s7,56(sp)
	sd	s8,48(sp)
	sd	s9,40(sp)
	sd	s10,32(sp)
	sd	s11,24(sp)
	mv	s1,a0
	mv	s0,a1
	mv	s2,a2
	jal	ra,0x1d862 # loadStringN>
	beqz	a0,0x1dd3c # loadFunction+0x414>
	sd	a0,112(s0)
	lui	s3,0x80000
	not	a1,s3
	mv	a0,s1
	jal	ra,0x1d7dc # loadUnsigned>
	not	a1,s3
	sw	a0,44(s0)
	mv	a0,s1
	jal	ra,0x1d7dc # loadUnsigned>
	sw	a0,48(s0)
	mv	a0,s1
	jal	ra,0x1d776 # loadByte>
	sb	a0,10(s0)
	mv	a0,s1
	jal	ra,0x1d776 # loadByte>
	sb	a0,11(s0)
	mv	a0,s1
	jal	ra,0x1d776 # loadByte>
	not	a1,s3
	sb	a0,12(s0)
	mv	a0,s1
	jal	ra,0x1d7dc # loadUnsigned>
	sext.w	s2,a0
	ld	a0,0(s1)
	slli	s4,s2,0x2
	li	a2,0
	mv	a1,s4
	jal	ra,0x17c10 # luaM_malloc_>
	mv	a1,a0
	ld	a0,8(s1)
	mv	a2,s4
	sw	s2,24(s0)
	sd	a1,64(s0)
	jal	ra,0x2154c # luaZ_read>
	mv	s2,a0
	bnez	a0,0x1dd42 # loadFunction+0x41a>
	not	a1,s3
	mv	a0,s1
	jal	ra,0x1d7dc # loadUnsigned>
	mv	s4,a0
	ld	a0,0(s1)
	sext.w	s5,s4
	li	a2,0
	slli	a1,s5,0x4
	jal	ra,0x17c10 # luaM_malloc_>
	sd	a0,56(s0)
	sw	s5,20(s0)
	mv	s3,a0
	blez	s5,0x1da60 # loadFunction+0x138>
	addiw	s4,s4,-1
	slli	s4,s4,0x20
	srli	s4,s4,0x1c
	addi	a4,a0,24
	addi	a5,a0,8
	add	a4,a4,s4
	sb	zero,0(a5)
	addi	a5,a5,16
	bne	a4,a5,0x1d9fa # loadFunction+0xd2>
	li	s11,0
	li	s6,20
	auipc	s5,0x25
	addi	s5,s5,256 # 0x42b08 # udatatypename+0x140>
	addi	s10,sp,8
	mv	s9,sp
	li	s8,17
	li	s7,1
	mv	a0,s1
	add	s3,s3,s11
	jal	ra,0x1d776 # loadByte>
	bltu	s6,a0,0x1da34 # loadFunction+0x10c>
	slli	a0,a0,0x2
	add	a0,a0,s5
	lw	a4,0(a0)
	add	a4,a4,s5
	jr	a4
	sb	zero,8(s3) # 0xffffffff80000008 # __BSS_END__+0xffffffff7ffb1c80>
	beq	s4,s11,0x1da60 # loadFunction+0x138>
	ld	s3,56(s0)
	addi	s11,s11,16
	j	0x1da1a # loadFunction+0xf2>
	mv	a1,s0
	mv	a0,s1
	jal	ra,0x1d862 # loadStringN>
	beqz	a0,0x1dd50 # loadFunction+0x428>
	sd	a0,0(s3)
	lbu	a4,8(a0)
	ori	a4,a4,64
	sb	a4,8(s3)
	bne	s4,s11,0x1da38 # loadFunction+0x110>
	lui	a1,0x80000
	not	a1,a1
	mv	a0,s1
	jal	ra,0x1d7dc # loadUnsigned>
	mv	s5,a0
	ld	a0,0(s1)
	sext.w	s3,s5
	li	a2,0
	slli	a1,s3,0x4
	jal	ra,0x17c10 # luaM_malloc_>
	sd	a0,80(s0)
	sw	s3,16(s0)
	mv	a5,a0
	blez	s3,0x1dae0 # loadFunction+0x1b8>
	addiw	s5,s5,-1
	slli	s5,s5,0x20
	srli	s5,s5,0x1c
	addi	a3,a0,16
	mv	a4,a0
	add	a3,a3,s5
	sd	zero,0(a4)
	addi	a4,a4,16
	bne	a3,a4,0x1da9c # loadFunction+0x174>
	li	s3,0
	j	0x1daae # loadFunction+0x186>
	ld	a5,80(s0)
	addi	s3,s3,16
	mv	a0,s1
	add	s4,a5,s3
	jal	ra,0x1d776 # loadByte>
	sb	a0,8(s4)
	ld	s4,80(s0)
	mv	a0,s1
	jal	ra,0x1d776 # loadByte>
	add	s4,s4,s3
	sb	a0,9(s4)
	ld	s4,80(s0)
	mv	a0,s1
	jal	ra,0x1d776 # loadByte>
	add	s4,s4,s3
	sb	a0,10(s4)
	bne	s3,s5,0x1daaa # loadFunction+0x182>
	lui	a1,0x80000
	not	a1,a1
	mv	a0,s1
	jal	ra,0x1d7dc # loadUnsigned>
	mv	s4,a0
	ld	a0,0(s1)
	sext.w	s5,s4
	li	a2,0
	slli	a1,s5,0x3
	jal	ra,0x17c10 # luaM_malloc_>
	sd	a0,72(s0)
	sw	s5,32(s0)
	mv	s3,a0
	blez	s5,0x1db6e # loadFunction+0x246>
	addiw	s4,s4,-1
	slli	s4,s4,0x20
	srli	s4,s4,0x20
	addi	a2,s4,1
	slli	a2,a2,0x3
	li	a1,0
	jal	ra,0x3683a # memset>
	slli	s4,s4,0x3
	j	0x1db46 # loadFunction+0x21e>
	ld	a5,72(s0)
	add	a5,a5,s2
	ld	a1,0(a5)
	lbu	a5,9(a1) # 0xffffffff80000009 # __BSS_END__+0xffffffff7ffb1c81>
	andi	a5,a5,24
	bnez	a5,0x1dd2a # loadFunction+0x402>
	ld	a2,112(s0)
	mv	a0,s1
	jal	ra,0x1d928 # loadFunction>
	beq	s4,s2,0x1db6e # loadFunction+0x246>
	ld	s3,72(s0)
	addi	s2,s2,8
	ld	a0,0(s1)
	add	s3,s3,s2
	jal	ra,0x15968 # luaF_newproto>
	sd	a0,0(s3)
	lbu	a5,9(s0)
	andi	a5,a5,32
	bnez	a5,0x1db24 # loadFunction+0x1fc>
	ld	a5,72(s0)
	add	a5,a5,s2
	ld	a1,0(a5)
	ld	a2,112(s0)
	mv	a0,s1
	jal	ra,0x1d928 # loadFunction>
	bne	s4,s2,0x1db40 # loadFunction+0x218>
	lui	s5,0x80000
	not	a1,s5
	mv	a0,s1
	jal	ra,0x1d7dc # loadUnsigned>
	mv	s2,a0
	ld	a0,0(s1)
	sext.w	s2,s2
	li	a2,0
	mv	a1,s2
	jal	ra,0x17c10 # luaM_malloc_>
	mv	a1,a0
	ld	a0,8(s1)
	mv	a2,s2
	sd	a1,88(s0)
	sw	s2,28(s0)
	jal	ra,0x2154c # luaZ_read>
	mv	s4,a0
	bnez	a0,0x1dd42 # loadFunction+0x41a>
	not	a1,s5
	mv	a0,s1
	jal	ra,0x1d7dc # loadUnsigned>
	mv	s6,a0
	ld	a0,0(s1)
	sext.w	s2,s6
	li	a2,0
	slli	a1,s2,0x3
	jal	ra,0x17c10 # luaM_malloc_>
	sd	a0,96(s0)
	sw	s2,40(s0)
	mv	a5,a0
	blez	s2,0x1dc02 # loadFunction+0x2da>
	addiw	s6,s6,-1
	slli	s6,s6,0x20
	srli	s6,s6,0x1d
	li	s2,0
	not	s5,s5
	j	0x1dbdc # loadFunction+0x2b4>
	ld	a5,96(s0)
	addi	s2,s2,8
	mv	a1,s5
	mv	a0,s1
	add	s3,a5,s2
	jal	ra,0x1d7dc # loadUnsigned>
	ld	a5,96(s0)
	mv	a1,s5
	sw	a0,0(s3)
	mv	a0,s1
	add	s3,a5,s2
	jal	ra,0x1d7dc # loadUnsigned>
	sw	a0,4(s3)
	bne	s6,s2,0x1dbd8 # loadFunction+0x2b0>
	lui	a1,0x80000
	not	a1,a1
	mv	a0,s1
	jal	ra,0x1d7dc # loadUnsigned>
	mv	s6,a0
	ld	a0,0(s1)
	sext.w	s2,s6
	li	a2,0
	slli	a1,s2,0x4
	jal	ra,0x17c10 # luaM_malloc_>
	sd	a0,104(s0)
	sw	s2,36(s0)
	mv	a5,a0
	blez	s2,0x1dc90 # loadFunction+0x368>
	addiw	s6,s6,-1
	slli	s6,s6,0x20
	srli	s6,s6,0x1c
	addi	a3,a0,16
	mv	a4,a0
	add	a3,a3,s6
	sd	zero,0(a4)
	addi	a4,a4,16
	bne	a3,a4,0x1dc3e # loadFunction+0x316>
	lui	s7,0x80000
	li	s2,0
	not	s7,s7
	j	0x1dc58 # loadFunction+0x330>
	ld	a5,104(s0)
	addi	s2,s2,16
	mv	a1,s0
	mv	a0,s1
	add	s3,a5,s2
	jal	ra,0x1d862 # loadStringN>
	ld	s5,104(s0)
	mv	a1,s7
	sd	a0,0(s3)
	mv	a0,s1
	jal	ra,0x1d7dc # loadUnsigned>
	ld	s3,104(s0)
	add	s5,s5,s2
	sw	a0,8(s5) # 0xffffffff80000008 # __BSS_END__+0xffffffff7ffb1c80>
	mv	a1,s7
	mv	a0,s1
	add	s3,s3,s2
	jal	ra,0x1d7dc # loadUnsigned>
	sw	a0,12(s3)
	bne	s6,s2,0x1dc54 # loadFunction+0x32c>
	lui	a1,0x80000
	not	a1,a1
	mv	a0,s1
	jal	ra,0x1d7dc # loadUnsigned>
	sext.w	a5,a0
	blez	a5,0x1dccc # loadFunction+0x3a4>
	addiw	s3,a0,-1
	slli	s3,s3,0x20
	srli	s3,s3,0x20
	addi	s3,s3,1
	slli	s3,s3,0x4
	ld	s2,80(s0)
	mv	a1,s0
	mv	a0,s1
	add	s2,s2,s4
	jal	ra,0x1d862 # loadStringN>
	sd	a0,0(s2)
	addi	s4,s4,16
	bne	s3,s4,0x1dcb4 # loadFunction+0x38c>
	ld	ra,120(sp)
	ld	s0,112(sp)
	ld	s1,104(sp)
	ld	s2,96(sp)
	ld	s3,88(sp)
	ld	s4,80(sp)
	ld	s5,72(sp)
	ld	s6,64(sp)
	ld	s7,56(sp)
	ld	s8,48(sp)
	ld	s9,40(sp)
	ld	s10,32(sp)
	ld	s11,24(sp)
	addi	sp,sp,128
	ret
	ld	a0,8(s1)
	li	a2,8
	mv	a1,s9
	jal	ra,0x2154c # luaZ_read>
	bnez	a0,0x1dd42 # loadFunction+0x41a>
	fld	fa5,0(sp)
	li	a5,19
	sb	a5,8(s3)
	fsd	fa5,0(s3)
	j	0x1da34 # loadFunction+0x10c>
	sb	s8,8(s3)
	j	0x1da34 # loadFunction+0x10c>
	ld	a0,8(s1)
	li	a2,8
	mv	a1,s10
	jal	ra,0x2154c # luaZ_read>
	bnez	a0,0x1dd42 # loadFunction+0x41a>
	ld	a4,8(sp)
	li	a5,3
	sb	a5,8(s3)
	sd	a4,0(s3)
	j	0x1da34 # loadFunction+0x10c>
	sb	s7,8(s3)
	j	0x1da34 # loadFunction+0x10c>
	ld	a0,0(s1)
	mv	a2,a1
	mv	a1,s0
	jal	ra,0x1706e # luaC_barrier_>
	ld	a5,72(s0)
	add	a5,a5,s2
	ld	a1,0(a5)
	j	0x1db62 # loadFunction+0x23a>
	sd	s2,112(s0)
	j	0x1d954 # loadFunction+0x2c>
	auipc	a1,0x25
	addi	a1,a1,-842 # 0x429f8 # udatatypename+0x30>
	mv	a0,s1
	jal	ra,0x1d754 # error>
	auipc	a1,0x25
	addi	a1,a1,-792 # 0x42a38 # udatatypename+0x70>
	mv	a0,s1
	jal	ra,0x1d754 # error>

luaU_undump:
	addi	sp,sp,-112
	sd	s1,88(sp)
	sd	ra,104(sp)
	sd	s0,96(sp)
	sd	s2,80(sp)
	lbu	a5,0(a2)
	li	a4,64
	mv	s1,a0
	mv	a0,a1
	beq	a5,a4,0x1dd8a # luaU_undump+0x2c>
	li	a4,61
	beq	a5,a4,0x1dd8a # luaU_undump+0x2c>
	li	a4,27
	beq	a5,a4,0x1dee8 # luaU_undump+0x18a>
	sd	a2,72(sp)
	j	0x1dd8e # luaU_undump+0x30>
	addi	a2,a2,1
	sd	a2,72(sp)
	addi	s0,sp,24
	li	a2,3
	mv	a1,s0
	sd	s1,56(sp)
	sd	a0,64(sp)
	jal	ra,0x2154c # luaZ_read>
	bnez	a0,0x1def4 # luaU_undump+0x196>
	lbu	a4,24(sp)
	li	a5,76
	beq	a4,a5,0x1ddba # luaU_undump+0x5c>
	auipc	a1,0x25
	addi	a1,a1,-836 # 0x42a68 # udatatypename+0xa0>
	addi	a0,sp,56
	jal	ra,0x1d754 # error>
	lbu	a4,1(s0)
	li	a5,117
	bne	a4,a5,0x1ddac # luaU_undump+0x4e>
	lbu	a4,2(s0)
	li	a5,97
	bne	a4,a5,0x1ddac # luaU_undump+0x4e>
	addi	s0,sp,56
	mv	a0,s0
	jal	ra,0x1d776 # loadByte>
	li	a5,84
	bne	a0,a5,0x1df12 # luaU_undump+0x1b4>
	mv	a0,s0
	jal	ra,0x1d776 # loadByte>
	bnez	a0,0x1df04 # luaU_undump+0x1a6>
	ld	a0,64(sp)
	addi	s2,sp,40
	li	a2,6
	mv	a1,s2
	jal	ra,0x2154c # luaZ_read>
	bnez	a0,0x1def6 # luaU_undump+0x198>
	lw	a4,40(sp)
	lui	a5,0xa0d9
	addi	a5,a5,793 # 0xa0d9319 # __BSS_END__+0xa08af91>
	beq	a4,a5,0x1de1a # luaU_undump+0xbc>
	auipc	a1,0x25
	addi	a1,a1,-884 # 0x42a98 # udatatypename+0xd0>
	mv	a0,s0
	jal	ra,0x1d754 # error>
	lhu	a4,4(s2)
	lui	a5,0x1
	addi	a5,a5,-1510 # 0xa1a # exit-0xf706>
	bne	a4,a5,0x1de0c # luaU_undump+0xae>
	mv	a0,s0
	jal	ra,0x1d776 # loadByte>
	li	a5,4
	bne	a0,a5,0x1df58 # luaU_undump+0x1fa>
	mv	a0,s0
	jal	ra,0x1d776 # loadByte>
	li	a5,8
	mv	s2,a0
	bne	a0,a5,0x1df4a # luaU_undump+0x1ec>
	mv	a0,s0
	jal	ra,0x1d776 # loadByte>
	bne	a0,s2,0x1df3c # luaU_undump+0x1de>
	ld	a0,64(sp)
	li	a2,8
	addi	a1,sp,16
	jal	ra,0x2154c # luaZ_read>
	bnez	a0,0x1def6 # luaU_undump+0x198>
	ld	a4,16(sp)
	lui	a5,0x5
	addi	a5,a5,1656 # 0x5678 # exit-0xaaa8>
	bne	a4,a5,0x1df2e # luaU_undump+0x1d0>
	ld	a0,64(sp)
	li	a2,8
	addi	a1,sp,8
	jal	ra,0x2154c # luaZ_read>
	bnez	a0,0x1def6 # luaU_undump+0x198>
	fld	fa4,8(sp)
	auipc	a5,0x24
	fld	fa5,-1338(a5) # 0x41938 # lua_ident+0x5a0>
	feq.d	a5,fa4,fa5
	beqz	a5,0x1df20 # luaU_undump+0x1c2>
	mv	a0,s0
	jal	ra,0x1d776 # loadByte>
	sext.w	a1,a0
	mv	a0,s1
	jal	ra,0x1562a # luaF_newLclosure>
	ld	a5,16(s1)
	li	a4,70
	mv	s2,a0
	sd	a0,0(a5)
	sb	a4,8(a5)
	mv	a0,s1
	jal	ra,0x1451e # luaD_inctop>
	mv	a0,s1
	jal	ra,0x15968 # luaF_newproto>
	lbu	a5,9(s2)
	sd	a0,24(s2)
	mv	a1,a0
	andi	a5,a5,32
	beqz	a5,0x1dec2 # luaU_undump+0x164>
	lbu	a5,9(a0)
	andi	a5,a5,24
	bnez	a5,0x1ded8 # luaU_undump+0x17a>
	mv	a0,s0
	li	a2,0
	jal	ra,0x1d928 # loadFunction>
	ld	ra,104(sp)
	ld	s0,96(sp)
	ld	s1,88(sp)
	mv	a0,s2
	ld	s2,80(sp)
	addi	sp,sp,112
	ret
	mv	a2,a0
	mv	a1,s2
	mv	a0,s1
	jal	ra,0x1706e # luaC_barrier_>
	ld	a1,24(s2)
	j	0x1dec2 # luaU_undump+0x164>
	auipc	a5,0x25
	addi	a5,a5,-1168 # 0x42a58 # udatatypename+0x90>
	sd	a5,72(sp)
	j	0x1dd8e # luaU_undump+0x30>
	addi	s0,sp,56
	auipc	a1,0x25
	addi	a1,a1,-1278 # 0x429f8 # udatatypename+0x30>
	mv	a0,s0
	jal	ra,0x1d754 # error>
	auipc	a1,0x25
	addi	a1,a1,-1060 # 0x42ae0 # udatatypename+0x118>
	mv	a0,s0
	jal	ra,0x1d754 # error>
	auipc	a1,0x25
	addi	a1,a1,-1170 # 0x42a80 # udatatypename+0xb8>
	mv	a0,s0
	jal	ra,0x1d754 # error>
	auipc	a1,0x25
	addi	a1,a1,-1072 # 0x42af0 # udatatypename+0x128>
	mv	a0,s0
	jal	ra,0x1d754 # error>
	auipc	a1,0x25
	addi	a1,a1,-1110 # 0x42ad8 # udatatypename+0x110>
	mv	a0,s0
	jal	ra,0x1d754 # error>
	auipc	a1,0x25
	addi	a1,a1,-1140 # 0x42ac8 # udatatypename+0x100>
	mv	a0,s0
	jal	ra,0x1d7bc # fchecksize.part.0>
	auipc	a1,0x25
	addi	a1,a1,-1170 # 0x42ab8 # udatatypename+0xf0>
	mv	a0,s0
	jal	ra,0x1d7bc # fchecksize.part.0>
	auipc	a1,0x25
	addi	a1,a1,-1200 # 0x42aa8 # udatatypename+0xe0>
	mv	a0,s0
	jal	ra,0x1d7bc # fchecksize.part.0>

l_strcmp:
	addi	sp,sp,-48
	sd	s0,32(sp)
	sd	ra,40(sp)
	sd	s1,24(sp)
	sd	s2,16(sp)
	sd	s3,8(sp)
	lbu	a4,8(a0)
	li	a5,4
	addi	s0,a0,24
	beq	a4,a5,0x1dfce # l_strcmp+0x68>
	lbu	a4,8(a1)
	li	a5,4
	ld	s1,16(a0)
	addi	s2,a1,24
	beq	a4,a5,0x1dfe0 # l_strcmp+0x7a>
	ld	s3,16(a1)
	j	0x1dfb0 # l_strcmp+0x4a>
	jal	ra,0x369fa # strlen>
	addi	a5,a0,1
	beq	s3,a0,0x1dfe6 # l_strcmp+0x80>
	beq	s1,a0,0x1dffe # l_strcmp+0x98>
	add	s0,s0,a5
	sub	s1,s1,a5
	add	s2,s2,a5
	sub	s3,s3,a5
	mv	a1,s2
	mv	a0,s0
	jal	ra,0x2fbc0 # strcoll>
	mv	a5,a0
	mv	a0,s0
	beqz	a5,0x1df96 # l_strcmp+0x30>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	mv	a0,a5
	addi	sp,sp,48
	ret
	lbu	a4,8(a1)
	li	a5,4
	lbu	s1,11(a0)
	addi	s2,a1,24
	bne	a4,a5,0x1df90 # l_strcmp+0x2a>
	lbu	s3,11(a1)
	j	0x1dfb0 # l_strcmp+0x4a>
	ld	ra,40(sp)
	ld	s0,32(sp)
	sub	a5,s1,s3
	snez	a5,a5
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	mv	a0,a5
	addi	sp,sp,48
	ret
	ld	ra,40(sp)
	ld	s0,32(sp)
	li	a5,-1
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	mv	a0,a5
	addi	sp,sp,48
	ret

luaV_concat.part.0:
	addi	sp,sp,-192
	sd	s5,136(sp)
	addi	a5,sp,40
	li	s5,-1
	sd	s0,176(sp)
	sd	s4,144(sp)
	sd	s6,128(sp)
	sd	s9,104(sp)
	sd	s10,96(sp)
	ld	s0,16(a0)
	sd	ra,184(sp)
	sd	s1,168(sp)
	sd	s2,160(sp)
	sd	s3,152(sp)
	sd	s7,120(sp)
	sd	s8,112(sp)
	sd	s11,88(sp)
	mv	s10,a0
	mv	s9,a1
	li	s4,4
	li	s6,3
	srli	s5,s5,0x1
	sd	a5,8(sp)
	j	0x1e060 # luaV_concat.part.0+0x50>
	beq	a3,s6,0x1e16c # luaV_concat.part.0+0x15c>
	mv	a0,s10
	jal	ra,0x1d48c # luaT_tryconcatTM>
	addiw	s9,s9,-1
	li	s3,-16
	ld	s0,16(s10)
	li	a5,1
	add	s0,s0,s3
	sd	s0,16(s10)
	ble	s9,a5,0x1e0ba # luaV_concat.part.0+0xaa>
	lbu	a4,-24(s0)
	li	a3,1
	andi	a5,a4,15
	addiw	a5,a5,-3
	bltu	a3,a5,0x1e046 # luaV_concat.part.0+0x36>
	lbu	a5,-8(s0)
	andi	a3,a5,15
	bne	a3,s4,0x1e042 # luaV_concat.part.0+0x32>
	li	a2,68
	ld	a3,-16(s0)
	beq	a5,a2,0x1e150 # luaV_concat.part.0+0x140>
	li	a2,68
	bne	a4,a2,0x1e0d8 # luaV_concat.part.0+0xc8>
	ld	a4,-32(s0)
	lbu	a4,11(a4)
	bnez	a4,0x1e0d8 # luaV_concat.part.0+0xc8>
	ld	a4,-16(s0)
	sb	a5,-24(s0)
	li	s3,-16
	sd	a4,-32(s0)
	ld	s0,16(s10)
	addiw	s9,s9,-1
	li	a5,1
	add	s0,s0,s3
	sd	s0,16(s10)
	blt	a5,s9,0x1e060 # luaV_concat.part.0+0x50>
	ld	ra,184(sp)
	ld	s0,176(sp)
	ld	s1,168(sp)
	ld	s2,160(sp)
	ld	s3,152(sp)
	ld	s4,144(sp)
	ld	s5,136(sp)
	ld	s6,128(sp)
	ld	s7,120(sp)
	ld	s8,112(sp)
	ld	s9,104(sp)
	ld	s10,96(sp)
	ld	s11,88(sp)
	addi	sp,sp,192
	ret
	lbu	a5,8(a3)
	beq	a5,s4,0x1e180 # luaV_concat.part.0+0x170>
	ld	s7,16(a3)
	li	a5,1
	addi	s1,s0,-32
	li	s3,1
	li	s2,1
	blt	a5,s9,0x1e110 # luaV_concat.part.0+0x100>
	j	0x1e2b0 # luaV_concat.part.0+0x2a0>
	ld	a5,16(a5)
	sub	a4,s5,s7
	bleu	a4,a5,0x1e142 # luaV_concat.part.0+0x132>
	addi	s3,s3,1
	addiw	s11,s2,1
	sext.w	s2,s3
	add	s7,s7,a5
	addi	s1,s1,-16
	ble	s9,s2,0x1e186 # luaV_concat.part.0+0x176>
	lbu	a5,8(s1)
	mv	s8,s2
	slli	a4,s3,0x4
	andi	a5,a5,15
	beq	a5,s4,0x1e12c # luaV_concat.part.0+0x11c>
	bne	a5,s6,0x1e294 # luaV_concat.part.0+0x284>
	mv	a1,s1
	mv	a0,s10
	jal	ra,0x183b6 # luaO_tostring>
	ld	a5,0(s1)
	lbu	a4,8(a5)
	bne	a4,s4,0x1e0f4 # luaV_concat.part.0+0xe4>
	lbu	a5,11(a5)
	sub	a4,s5,s7
	bltu	a5,a4,0x1e0fe # luaV_concat.part.0+0xee>
	auipc	a1,0x25
	addi	a1,a1,-1506 # 0x42b60 # udatatypename+0x198>
	mv	a0,s10
	jal	ra,0x13d34 # luaG_runerror>
	lbu	a2,11(a3)
	bnez	a2,0x1e088 # luaV_concat.part.0+0x78>
	andi	a4,a4,15
	addiw	s9,s9,-1
	li	s3,-16
	bne	a4,s6,0x1e050 # luaV_concat.part.0+0x40>
	addi	a1,s0,-32
	mv	a0,s10
	jal	ra,0x183b6 # luaO_tostring>
	j	0x1e050 # luaV_concat.part.0+0x40>
	addi	a1,s0,-16
	mv	a0,s10
	jal	ra,0x183b6 # luaO_tostring>
	lbu	a5,-8(s0)
	lbu	a4,-24(s0)
	j	0x1e07c # luaV_concat.part.0+0x6c>
	lbu	s7,11(a3)
	j	0x1e0e4 # luaV_concat.part.0+0xd4>
	slli	s3,s11,0x4
	li	a6,1
	neg	a5,s3
	sub	a6,a6,s11
	sd	a5,24(sp)
	subw	s9,s9,s8
	slli	s3,a6,0x4
	li	a5,40
	bltu	a5,s7,0x1e1f4 # luaV_concat.part.0+0x1e4>
	addiw	s2,s11,-1
	slli	s2,s2,0x20
	srli	s2,s2,0x20
	sub	s2,s2,s11
	slli	a5,s2,0x4
	slli	s1,s11,0x4
	addi	s2,s0,16
	sub	s1,s0,s1
	add	s2,s2,a5
	li	s8,0
	j	0x1e1e4 # luaV_concat.part.0+0x1d4>
	ld	s11,16(a1)
	ld	a5,8(sp)
	mv	a2,s11
	addi	a1,a1,24
	add	a0,a5,s8
	addi	s1,s1,16
	jal	ra,0x3632a # memcpy>
	add	s8,s8,s11
	beq	s2,s1,0x1e272 # luaV_concat.part.0+0x262>
	ld	a1,0(s1)
	lbu	a5,8(a1)
	bne	a5,s4,0x1e1ca # luaV_concat.part.0+0x1ba>
	lbu	s11,11(a1)
	j	0x1e1ce # luaV_concat.part.0+0x1be>
	mv	a1,s7
	mv	a0,s10
	jal	ra,0x1bf6e # luaS_createlngstrobj>
	addiw	a5,s11,-1
	slli	a5,a5,0x20
	srli	a5,a5,0x20
	sub	a5,a5,s11
	slli	s1,s11,0x4
	slli	a5,a5,0x4
	addi	s11,s0,16
	sd	a0,16(sp)
	addi	s8,a0,24
	sub	s1,s0,s1
	add	s11,s11,a5
	li	s2,0
	j	0x1e23a # luaV_concat.part.0+0x22a>
	ld	s7,16(a1)
	add	a0,s8,s2
	addi	a1,a1,24
	mv	a2,s7
	addi	s1,s1,16
	jal	ra,0x3632a # memcpy>
	add	s2,s2,s7
	beq	s11,s1,0x1e25c # luaV_concat.part.0+0x24c>
	ld	a1,0(s1)
	lbu	a4,8(a1)
	bne	a4,s4,0x1e222 # luaV_concat.part.0+0x212>
	lbu	s7,11(a1)
	add	a0,s8,s2
	addi	a1,a1,24
	mv	a2,s7
	addi	s1,s1,16
	jal	ra,0x3632a # memcpy>
	add	s2,s2,s7
	bne	s11,s1,0x1e23a # luaV_concat.part.0+0x22a>
	ld	a5,24(sp)
	add	s0,s0,a5
	ld	a5,16(sp)
	sd	a5,0(s0)
	lbu	a5,8(a5)
	ori	a5,a5,64
	sb	a5,8(s0)
	j	0x1e050 # luaV_concat.part.0+0x40>
	ld	a1,8(sp)
	mv	a2,s7
	mv	a0,s10
	jal	ra,0x1bfce # luaS_newlstr>
	ld	a5,24(sp)
	sd	a0,16(sp)
	add	s0,s0,a5
	ld	a5,16(sp)
	sd	a5,0(s0)
	lbu	a5,8(a5)
	ori	a5,a5,64
	sb	a5,8(s0)
	j	0x1e050 # luaV_concat.part.0+0x40>
	li	a6,1
	addiw	a5,s2,-1
	sub	a6,a6,s3
	neg	a4,a4
	sd	a4,24(sp)
	subw	s9,s9,a5
	slli	s3,a6,0x4
	mv	s11,s2
	j	0x1e19e # luaV_concat.part.0+0x18e>
	li	a5,-16
	li	s3,0
	sd	a5,24(sp)
	li	s11,1
	j	0x1e19e # luaV_concat.part.0+0x18e>

LEnum:
	addi	sp,sp,-48
	sd	s1,24(sp)
	sd	ra,40(sp)
	sd	s0,32(sp)
	fsd	fs0,8(sp)
	lbu	a5,8(a0)
	li	a3,3
	lbu	a4,8(a1)
	ld	s1,0(a1)
	beq	a5,a3,0x1e312 # LEnum+0x58>
	li	a5,19
	fld	fs0,0(a0)
	bne	a4,a5,0x1e2f0 # LEnum+0x36>
	fmv.d.x	fa5,s1
	fle.d	a0,fs0,fa5
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	fld	fs0,8(sp)
	addi	sp,sp,48
	ret
	li	a5,1
	slli	a4,a5,0x35
	add	a4,a4,s1
	slli	a5,a5,0x36
	bltu	a5,a4,0x1e34a # LEnum+0x90>
	fcvt.d.l	fa5,s1
	ld	ra,40(sp)
	ld	s0,32(sp)
	fle.d	a0,fs0,fa5
	ld	s1,24(sp)
	fld	fs0,8(sp)
	addi	sp,sp,48
	ret
	ld	s0,0(a0)
	bne	a4,a5,0x1e32e # LEnum+0x74>
	slt	a0,s1,s0
	ld	ra,40(sp)
	ld	s0,32(sp)
	xori	a0,a0,1
	ld	s1,24(sp)
	fld	fs0,8(sp)
	sext.w	a0,a0
	addi	sp,sp,48
	ret
	li	a5,1
	slli	a4,a5,0x35
	add	a4,a4,s0
	slli	a5,a5,0x36
	bltu	a5,a4,0x1e39a # LEnum+0xe0>
	fcvt.d.l	fa5,s0
	fmv.d.x	fa4,s1
	fle.d	a0,fa5,fa4
	j	0x1e2e4 # LEnum+0x2a>
	fmv.d	fa0,fs0
	jal	ra,0x31cd0 # floor>
	feq.d	a5,fs0,fa0
	bnez	a5,0x1e364 # LEnum+0xaa>
	auipc	a5,0x25
	fld	fa5,-1456(a5) # 0x42da8 # udatatypename+0x3e0>
	fadd.d	fa0,fa0,fa5
	auipc	a5,0x24
	fld	fa5,1268(a5) # 0x42858 # dummynode_+0x78>
	fle.d	a5,fa5,fa0
	beqz	a5,0x1e390 # LEnum+0xd6>
	auipc	a5,0x24
	fld	fa5,1262(a5) # 0x42860 # dummynode_+0x80>
	flt.d	a5,fa0,fa5
	beqz	a5,0x1e390 # LEnum+0xd6>
	fcvt.l.d	a0,fa0,rtz
	slt	a0,s1,a0
	xori	a0,a0,1
	sext.w	a0,a0
	j	0x1e2e4 # LEnum+0x2a>
	fmv.d.x	fa5,zero
	flt.d	a0,fs0,fa5
	j	0x1e2e4 # LEnum+0x2a>
	fmv.d.x	fa0,s1
	jal	ra,0x31cd0 # floor>
	auipc	a5,0x24
	fld	fa5,1206(a5) # 0x42858 # dummynode_+0x78>
	fle.d	a5,fa5,fa0
	beqz	a5,0x1e3ce # LEnum+0x114>
	auipc	a5,0x24
	fld	fa5,1200(a5) # 0x42860 # dummynode_+0x80>
	flt.d	a5,fa0,fa5
	beqz	a5,0x1e3ce # LEnum+0x114>
	fcvt.l.d	a0,fa0,rtz
	slt	a0,a0,s0
	xori	a0,a0,1
	sext.w	a0,a0
	j	0x1e2e4 # LEnum+0x2a>
	fmv.d.x	fa5,zero
	fmv.d.x	fa4,s1
	flt.d	a0,fa5,fa4
	j	0x1e2e4 # LEnum+0x2a>

LTnum:
	addi	sp,sp,-48
	sd	s0,32(sp)
	sd	ra,40(sp)
	sd	s1,24(sp)
	fsd	fs0,8(sp)
	lbu	a5,8(a0)
	li	a3,3
	lbu	a4,8(a1)
	ld	s0,0(a1)
	beq	a5,a3,0x1e434 # LTnum+0x58>
	li	a5,19
	fld	fs0,0(a0)
	bne	a4,a5,0x1e412 # LTnum+0x36>
	fmv.d.x	fa5,s0
	flt.d	a0,fs0,fa5
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	fld	fs0,8(sp)
	addi	sp,sp,48
	ret
	li	a5,1
	slli	a4,a5,0x35
	add	a4,a4,s0
	slli	a5,a5,0x36
	bltu	a5,a4,0x1e45a # LTnum+0x7e>
	fcvt.d.l	fa5,s0
	ld	ra,40(sp)
	ld	s0,32(sp)
	flt.d	a0,fs0,fa5
	ld	s1,24(sp)
	fld	fs0,8(sp)
	addi	sp,sp,48
	ret
	ld	s1,0(a0)
	slt	a0,s1,s0
	beq	a4,a5,0x1e406 # LTnum+0x2a>
	li	a5,1
	slli	a4,a5,0x35
	add	a4,a4,s1
	slli	a5,a5,0x36
	bltu	a5,a4,0x1e492 # LTnum+0xb6>
	fcvt.d.l	fa5,s1
	fmv.d.x	fa4,s0
	flt.d	a0,fa5,fa4
	j	0x1e406 # LTnum+0x2a>
	fmv.d	fa0,fs0
	jal	ra,0x31cd0 # floor>
	auipc	a5,0x24
	fld	fa5,1014(a5) # 0x42858 # dummynode_+0x78>
	fle.d	a5,fa5,fa0
	beqz	a5,0x1e488 # LTnum+0xac>
	auipc	a5,0x24
	fld	fa5,1008(a5) # 0x42860 # dummynode_+0x80>
	flt.d	a5,fa0,fa5
	beqz	a5,0x1e488 # LTnum+0xac>
	fcvt.l.d	a0,fa0,rtz
	slt	a0,a0,s0
	j	0x1e406 # LTnum+0x2a>
	fmv.d.x	fa5,zero
	flt.d	a0,fs0,fa5
	j	0x1e406 # LTnum+0x2a>
	fmv.d.x	fa0,s0
	jal	ra,0x31cd0 # floor>
	fmv.d.x	fa5,s0
	feq.d	a5,fa5,fa0
	bnez	a5,0x1e4b0 # LTnum+0xd4>
	auipc	a5,0x25
	fld	fa5,-1788(a5) # 0x42da8 # udatatypename+0x3e0>
	fadd.d	fa0,fa0,fa5
	auipc	a5,0x24
	fld	fa5,936(a5) # 0x42858 # dummynode_+0x78>
	fle.d	a5,fa5,fa0
	beqz	a5,0x1e4d6 # LTnum+0xfa>
	auipc	a5,0x24
	fld	fa5,930(a5) # 0x42860 # dummynode_+0x80>
	flt.d	a5,fa0,fa5
	beqz	a5,0x1e4d6 # LTnum+0xfa>
	fcvt.l.d	a5,fa0,rtz
	slt	a0,s1,a5
	j	0x1e406 # LTnum+0x2a>
	fmv.d.x	fa5,zero
	fmv.d.x	fa4,s0
	flt.d	a0,fa5,fa4
	j	0x1e406 # LTnum+0x2a>

luaV_tonumber_:
	addi	sp,sp,-48
	sd	s0,32(sp)
	sd	s2,16(sp)
	sd	ra,40(sp)
	sd	s1,24(sp)
	lbu	a5,8(a0)
	li	a4,3
	mv	s0,a0
	mv	s2,a1
	beq	a5,a4,0x1e514 # luaV_tonumber_+0x30>
	andi	s1,a5,15
	li	a5,4
	beq	s1,a5,0x1e52a # luaV_tonumber_+0x46>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	li	a0,0
	addi	sp,sp,48
	ret
	ld	a5,0(a0)
	ld	ra,40(sp)
	ld	s0,32(sp)
	fcvt.d.l	fa5,a5
	ld	s1,24(sp)
	ld	s2,16(sp)
	fsd	fa5,0(a1)
	li	a0,1
	addi	sp,sp,48
	ret
	ld	a0,0(a0)
	mv	a1,sp
	addi	a0,a0,24
	jal	ra,0x1813a # luaO_str2num>
	ld	a5,0(s0)
	lbu	a4,8(a5)
	beq	a4,s1,0x1e56c # luaV_tonumber_+0x88>
	ld	a5,16(a5)
	addi	a5,a5,1
	bne	a0,a5,0x1e506 # luaV_tonumber_+0x22>
	lbu	a4,8(sp)
	li	a5,3
	beq	a4,a5,0x1e564 # luaV_tonumber_+0x80>
	fld	fa5,0(sp)
	ld	ra,40(sp)
	ld	s0,32(sp)
	fsd	fa5,0(s2)
	ld	s1,24(sp)
	ld	s2,16(sp)
	li	a0,1
	addi	sp,sp,48
	ret
	ld	a5,0(sp)
	fcvt.d.l	fa5,a5
	j	0x1e552 # luaV_tonumber_+0x6e>
	lbu	a5,11(a5)
	addi	a5,a5,1
	j	0x1e542 # luaV_tonumber_+0x5e>

luaV_flttointeger:
	addi	sp,sp,-48
	fsd	fs0,8(sp)
	fmv.d	fs0,fa0
	sd	s0,32(sp)
	sd	s1,24(sp)
	sd	ra,40(sp)
	mv	s1,a0
	mv	s0,a1
	jal	ra,0x31cd0 # floor>
	feq.d	a5,fs0,fa0
	bnez	a5,0x1e59a # luaV_flttointeger+0x26>
	li	a0,0
	beqz	s0,0x1e5be # luaV_flttointeger+0x4a>
	li	a5,2
	beq	s0,a5,0x1e5d8 # luaV_flttointeger+0x64>
	auipc	a5,0x24
	fld	fa5,702(a5) # 0x42858 # dummynode_+0x78>
	fle.d	a5,fa5,fa0
	beqz	a5,0x1e5ca # luaV_flttointeger+0x56>
	auipc	a5,0x24
	fld	fa5,696(a5) # 0x42860 # dummynode_+0x80>
	flt.d	a5,fa0,fa5
	beqz	a5,0x1e5ca # luaV_flttointeger+0x56>
	fcvt.l.d	a5,fa0,rtz
	li	a0,1
	sd	a5,0(s1)
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	fld	fs0,8(sp)
	addi	sp,sp,48
	ret
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	fld	fs0,8(sp)
	li	a0,0
	addi	sp,sp,48
	ret
	auipc	a5,0x24
	fld	fa5,2000(a5) # 0x42da8 # udatatypename+0x3e0>
	fadd.d	fa0,fa0,fa5
	auipc	a5,0x24
	fld	fa5,628(a5) # 0x42858 # dummynode_+0x78>
	fle.d	a5,fa5,fa0
	beqz	a5,0x1e5ca # luaV_flttointeger+0x56>
	j	0x1e5a8 # luaV_flttointeger+0x34>

luaV_tointegerns:
	lbu	a4,8(a0)
	li	a3,19
	mv	a5,a0
	beq	a4,a3,0x1e612 # luaV_tointegerns+0x1e>
	li	a3,3
	li	a0,0
	beq	a4,a3,0x1e60a # luaV_tointegerns+0x16>
	ret
	ld	a5,0(a5)
	li	a0,1
	sd	a5,0(a1)
	ret
	addi	sp,sp,-48
	fsd	fs0,24(sp)
	fld	fs0,0(a0)
	sd	a1,0(sp)
	sd	ra,40(sp)
	fmv.d	fa0,fs0
	sd	a2,8(sp)
	jal	ra,0x31cd0 # floor>
	feq.d	a5,fs0,fa0
	ld	a1,0(sp)
	bnez	a5,0x1e646 # luaV_tointegerns+0x52>
	ld	a2,8(sp)
	li	a0,0
	beqz	a2,0x1e66a # luaV_tointegerns+0x76>
	li	a5,2
	bne	a2,a5,0x1e646 # luaV_tointegerns+0x52>
	auipc	a5,0x24
	fld	fa5,1902(a5) # 0x42da8 # udatatypename+0x3e0>
	fadd.d	fa0,fa0,fa5
	auipc	a5,0x24
	fld	fa5,530(a5) # 0x42858 # dummynode_+0x78>
	fle.d	a5,fa5,fa0
	beqz	a5,0x1e672 # luaV_tointegerns+0x7e>
	auipc	a5,0x24
	fld	fa5,524(a5) # 0x42860 # dummynode_+0x80>
	flt.d	a5,fa0,fa5
	beqz	a5,0x1e672 # luaV_tointegerns+0x7e>
	fcvt.l.d	a5,fa0,rtz
	li	a0,1
	sd	a5,0(a1)
	ld	ra,40(sp)
	fld	fs0,24(sp)
	addi	sp,sp,48
	ret
	li	a0,0
	j	0x1e66a # luaV_tointegerns+0x76>

luaV_tointeger:
	addi	sp,sp,-80
	sd	s0,64(sp)
	sd	s1,56(sp)
	sd	s2,48(sp)
	sd	s3,40(sp)
	sd	ra,72(sp)
	sd	s4,32(sp)
	fsd	fs0,24(sp)
	lbu	a5,8(a0)
	li	a4,4
	mv	s0,a0
	andi	s2,a5,15
	mv	s3,a1
	mv	s1,a2
	beq	s2,a4,0x1e6c2 # luaV_tointeger+0x4c>
	li	a4,19
	beq	a5,a4,0x1e6ec # luaV_tointeger+0x76>
	li	a4,3
	li	a0,0
	bne	a5,a4,0x1e6b0 # luaV_tointeger+0x3a>
	ld	a5,0(s0)
	li	a0,1
	sd	a5,0(s3)
	ld	ra,72(sp)
	ld	s0,64(sp)
	ld	s1,56(sp)
	ld	s2,48(sp)
	ld	s3,40(sp)
	ld	s4,32(sp)
	fld	fs0,24(sp)
	addi	sp,sp,80
	ret
	ld	a0,0(a0)
	mv	s4,sp
	mv	a1,s4
	addi	a0,a0,24
	jal	ra,0x1813a # luaO_str2num>
	ld	a5,0(s0)
	lbu	a4,8(a5)
	beq	a4,s2,0x1e73a # luaV_tointeger+0xc4>
	ld	a5,16(a5)
	addi	a5,a5,1
	bne	a0,a5,0x1e746 # luaV_tointeger+0xd0>
	lbu	a5,8(sp)
	li	a4,19
	mv	s0,s4
	bne	a5,a4,0x1e6a0 # luaV_tointeger+0x2a>
	fld	fs0,0(s0)
	fmv.d	fa0,fs0
	jal	ra,0x31cd0 # floor>
	feq.d	a5,fs0,fa0
	bnez	a5,0x1e712 # luaV_tointeger+0x9c>
	li	a0,0
	beqz	s1,0x1e6b0 # luaV_tointeger+0x3a>
	li	a5,2
	bne	s1,a5,0x1e712 # luaV_tointeger+0x9c>
	auipc	a5,0x24
	fld	fa5,1698(a5) # 0x42da8 # udatatypename+0x3e0>
	fadd.d	fa0,fa0,fa5
	auipc	a5,0x24
	fld	fa5,326(a5) # 0x42858 # dummynode_+0x78>
	fle.d	a5,fa5,fa0
	beqz	a5,0x1e742 # luaV_tointeger+0xcc>
	auipc	a5,0x24
	fld	fa5,320(a5) # 0x42860 # dummynode_+0x80>
	flt.d	a5,fa0,fa5
	beqz	a5,0x1e742 # luaV_tointeger+0xcc>
	fcvt.l.d	a5,fa0,rtz
	li	a0,1
	sd	a5,0(s3)
	j	0x1e6b0 # luaV_tointeger+0x3a>
	lbu	a5,11(a5)
	addi	a5,a5,1
	j	0x1e6dc # luaV_tointeger+0x66>
	li	a0,0
	j	0x1e6b0 # luaV_tointeger+0x3a>
	lbu	a5,8(s0)
	j	0x1e69a # luaV_tointeger+0x24>

luaV_finishget:
	addi	sp,sp,-80
	sd	s1,56(sp)
	sd	s2,48(sp)
	sd	s3,40(sp)
	sd	s4,32(sp)
	sd	s5,24(sp)
	sd	s6,16(sp)
	sd	s7,8(sp)
	sd	s8,0(sp)
	mv	s2,a0
	sd	ra,72(sp)
	sd	s0,64(sp)
	mv	a0,a4
	mv	s8,a1
	mv	s6,a2
	mv	s7,a3
	li	s1,0
	li	s3,6
	li	s4,69
	li	s5,2000
	beqz	a0,0x1e80e # luaV_finishget+0xc2>
	ld	a5,0(s8)
	ld	a0,40(a5)
	beqz	a0,0x1e834 # luaV_finishget+0xe8>
	lbu	a5,10(a0)
	andi	a5,a5,1
	bnez	a5,0x1e834 # luaV_finishget+0xe8>
	ld	a5,24(s2)
	li	a1,0
	ld	a2,280(a5)
	jal	ra,0x1d190 # luaT_gettm>
	mv	s0,a0
	beqz	a0,0x1e834 # luaV_finishget+0xe8>
	lbu	a5,8(a0)
	andi	a4,a5,15
	beq	a4,s3,0x1e7ce # luaV_finishget+0x82>
	beq	a5,s4,0x1e7f2 # luaV_finishget+0xa6>
	addiw	s1,s1,1
	beq	s1,s5,0x1e850 # luaV_finishget+0x104>
	li	a2,0
	mv	a1,s0
	mv	a0,s2
	jal	ra,0x1d1d0 # luaT_gettmbyobj>
	lbu	a5,8(a0)
	andi	a4,a5,15
	beqz	a4,0x1e824 # luaV_finishget+0xd8>
	mv	s8,s0
	mv	s0,a0
	bne	a4,s3,0x1e7a8 # luaV_finishget+0x5c>
	mv	a1,s0
	ld	s0,64(sp)
	ld	ra,72(sp)
	ld	s1,56(sp)
	ld	s3,40(sp)
	ld	s4,32(sp)
	ld	s5,24(sp)
	mv	a4,s7
	mv	a3,s6
	ld	s7,8(sp)
	ld	s6,16(sp)
	mv	a2,s8
	mv	a0,s2
	ld	s8,0(sp)
	ld	s2,48(sp)
	addi	sp,sp,80
	j	0x1d2e2 # luaT_callTMres>
	ld	a0,0(s0)
	mv	a1,s6
	jal	ra,0x1c6d4 # luaH_get>
	lbu	a5,8(a0)
	andi	a4,a5,15
	bnez	a4,0x1e85e # luaV_finishget+0x112>
	addiw	s1,s1,1
	beq	s1,s5,0x1e850 # luaV_finishget+0x104>
	mv	s8,s0
	bnez	a0,0x1e77a # luaV_finishget+0x2e>
	mv	s0,s8
	li	a2,0
	mv	a1,s0
	mv	a0,s2
	jal	ra,0x1d1d0 # luaT_gettmbyobj>
	lbu	a5,8(a0)
	andi	a4,a5,15
	bnez	a4,0x1e7c6 # luaV_finishget+0x7a>
	auipc	a2,0x25
	addi	a2,a2,1828 # 0x43f48 # optsnum.0+0x100>
	mv	a1,s0
	mv	a0,s2
	jal	ra,0x13dac # luaG_typeerror>
	sb	zero,8(s7) # 0xffffffff80000008 # __BSS_END__+0xffffffff7ffb1c80>
	ld	ra,72(sp)
	ld	s0,64(sp)
	ld	s1,56(sp)
	ld	s2,48(sp)
	ld	s3,40(sp)
	ld	s4,32(sp)
	ld	s5,24(sp)
	ld	s6,16(sp)
	ld	s7,8(sp)
	ld	s8,0(sp)
	addi	sp,sp,80
	ret
	auipc	a1,0x24
	addi	a1,a1,808 # 0x42b78 # udatatypename+0x1b0>
	mv	a0,s2
	jal	ra,0x13d34 # luaG_runerror>
	ld	a4,0(a0)
	sb	a5,8(s7)
	sd	a4,0(s7)
	j	0x1e838 # luaV_finishget+0xec>

luaV_finishset:
	addi	sp,sp,-96
	sd	s1,72(sp)
	sd	s2,64(sp)
	sd	s3,56(sp)
	sd	s4,48(sp)
	sd	s5,40(sp)
	sd	s6,32(sp)
	sd	s7,24(sp)
	sd	s8,16(sp)
	sd	s9,8(sp)
	sd	ra,88(sp)
	sd	s0,80(sp)
	sd	s10,0(sp)
	mv	s2,a4
	mv	s3,a0
	mv	s1,a1
	mv	s7,a2
	mv	s8,a3
	li	s9,0
	li	s4,6
	li	s5,69
	li	s6,2000
	beqz	s2,0x1e93a # luaV_finishset+0xd0>
	ld	s10,0(s1)
	ld	a0,40(s10)
	beqz	a0,0x1e960 # luaV_finishset+0xf6>
	lbu	a5,10(a0)
	andi	a5,a5,2
	bnez	a5,0x1e960 # luaV_finishset+0xf6>
	ld	a5,24(s3)
	li	a1,1
	ld	a2,288(a5)
	jal	ra,0x1d190 # luaT_gettm>
	mv	s0,a0
	beqz	a0,0x1e960 # luaV_finishset+0xf6>
	lbu	a5,8(a0)
	andi	a4,a5,15
	beq	a4,s4,0x1e8f4 # luaV_finishset+0x8a>
	beq	a5,s5,0x1e91c # luaV_finishset+0xb2>
	addiw	s9,s9,1
	beq	s9,s6,0x1e9b8 # luaV_finishset+0x14e>
	li	a2,1
	mv	a1,s0
	mv	a0,s3
	jal	ra,0x1d1d0 # luaT_gettmbyobj>
	lbu	a5,8(a0)
	andi	a4,a5,15
	beqz	a4,0x1e950 # luaV_finishset+0xe6>
	mv	s1,s0
	mv	s0,a0
	bne	a4,s4,0x1e8ce # luaV_finishset+0x64>
	mv	a1,s0
	ld	s0,80(sp)
	ld	ra,88(sp)
	ld	s2,64(sp)
	ld	s4,48(sp)
	ld	s5,40(sp)
	ld	s6,32(sp)
	ld	s9,8(sp)
	ld	s10,0(sp)
	mv	a4,s8
	mv	a3,s7
	ld	s8,16(sp)
	ld	s7,24(sp)
	mv	a2,s1
	mv	a0,s3
	ld	s1,72(sp)
	ld	s3,56(sp)
	addi	sp,sp,96
	j	0x1d288 # luaT_callTM>
	ld	a0,0(s0)
	mv	a1,s7
	jal	ra,0x1c6d4 # luaH_get>
	lbu	a5,8(a0)
	mv	s2,a0
	andi	a5,a5,15
	bnez	a5,0x1e9c6 # luaV_finishset+0x15c>
	addiw	s9,s9,1
	beq	s9,s6,0x1e9b8 # luaV_finishset+0x14e>
	mv	s1,s0
	bnez	s2,0x1e89e # luaV_finishset+0x34>
	mv	s0,s1
	li	a2,1
	mv	a1,s0
	mv	a0,s3
	jal	ra,0x1d1d0 # luaT_gettmbyobj>
	lbu	a5,8(a0)
	andi	a4,a5,15
	bnez	a4,0x1e8ec # luaV_finishset+0x82>
	auipc	a2,0x25
	addi	a2,a2,1528 # 0x43f48 # optsnum.0+0x100>
	mv	a1,s0
	mv	a0,s3
	jal	ra,0x13dac # luaG_typeerror>
	mv	a4,s8
	mv	a3,s2
	mv	a2,s7
	mv	a1,s10
	mv	a0,s3
	jal	ra,0x1ce50 # luaH_finishset>
	lbu	a5,10(s10)
	andi	a5,a5,-64
	sb	a5,10(s10)
	lbu	a5,8(s8)
	andi	a5,a5,64
	beqz	a5,0x1e99c # luaV_finishset+0x132>
	lbu	a5,9(s10)
	andi	a5,a5,32
	beqz	a5,0x1e99c # luaV_finishset+0x132>
	ld	a5,0(s8)
	mv	a1,s10
	lbu	a5,9(a5)
	andi	a5,a5,24
	bnez	a5,0x1e9f6 # luaV_finishset+0x18c>
	ld	ra,88(sp)
	ld	s0,80(sp)
	ld	s1,72(sp)
	ld	s2,64(sp)
	ld	s3,56(sp)
	ld	s4,48(sp)
	ld	s5,40(sp)
	ld	s6,32(sp)
	ld	s7,24(sp)
	ld	s8,16(sp)
	ld	s9,8(sp)
	ld	s10,0(sp)
	addi	sp,sp,96
	ret
	auipc	a1,0x24
	addi	a1,a1,488 # 0x42ba0 # udatatypename+0x1d8>
	mv	a0,s3
	jal	ra,0x13d34 # luaG_runerror>
	ld	a5,0(s8)
	sd	a5,0(a0)
	lbu	a5,8(s8)
	sb	a5,8(a0)
	lbu	a5,8(s8)
	andi	a5,a5,64
	beqz	a5,0x1e99c # luaV_finishset+0x132>
	ld	a1,0(s0)
	lbu	a5,9(a1)
	andi	a5,a5,32
	beqz	a5,0x1e99c # luaV_finishset+0x132>
	ld	a5,0(s8)
	lbu	a5,9(a5)
	andi	a5,a5,24
	beqz	a5,0x1e99c # luaV_finishset+0x132>
	ld	s0,80(sp)
	ld	ra,88(sp)
	ld	s1,72(sp)
	ld	s2,64(sp)
	ld	s4,48(sp)
	ld	s5,40(sp)
	ld	s6,32(sp)
	ld	s7,24(sp)
	ld	s8,16(sp)
	ld	s9,8(sp)
	ld	s10,0(sp)
	mv	a0,s3
	ld	s3,56(sp)
	addi	sp,sp,96
	j	0x170d0 # luaC_barrierback_>

luaV_lessthan:
	lbu	a5,8(a1)
	li	a3,3
	mv	a4,a1
	andi	a5,a5,15
	bne	a5,a3,0x1ea36 # luaV_lessthan+0x20>
	lbu	a3,8(a2)
	andi	a3,a3,15
	beq	a3,a5,0x1ea5c # luaV_lessthan+0x46>
	li	a3,20
	mv	a1,a4
	j	0x1d50a # luaT_callorderTM>
	li	a3,4
	bne	a5,a3,0x1ea2e # luaV_lessthan+0x18>
	lbu	a3,8(a2)
	andi	a3,a3,15
	bne	a3,a5,0x1ea2e # luaV_lessthan+0x18>
	ld	a1,0(a2)
	ld	a0,0(a4)
	addi	sp,sp,-16
	sd	ra,8(sp)
	jal	ra,0x1df66 # l_strcmp>
	ld	ra,8(sp)
	srliw	a0,a0,0x1f
	addi	sp,sp,16
	ret
	mv	a1,a2
	mv	a0,a4
	j	0x1e3dc # LTnum>

luaV_lessequal:
	lbu	a5,8(a1)
	li	a3,3
	mv	a4,a1
	andi	a5,a5,15
	bne	a5,a3,0x1ea82 # luaV_lessequal+0x20>
	lbu	a3,8(a2)
	andi	a3,a3,15
	beq	a3,a5,0x1eaa8 # luaV_lessequal+0x46>
	li	a3,21
	mv	a1,a4
	j	0x1d50a # luaT_callorderTM>
	li	a3,4
	bne	a5,a3,0x1ea7a # luaV_lessequal+0x18>
	lbu	a3,8(a2)
	andi	a3,a3,15
	bne	a3,a5,0x1ea7a # luaV_lessequal+0x18>
	ld	a1,0(a2)
	ld	a0,0(a4)
	addi	sp,sp,-16
	sd	ra,8(sp)
	jal	ra,0x1df66 # l_strcmp>
	ld	ra,8(sp)
	slti	a0,a0,1
	addi	sp,sp,16
	ret
	mv	a1,a2
	mv	a0,a4
	j	0x1e2ba # LEnum>

luaV_equalobj:
	addi	sp,sp,-64
	sd	s0,48(sp)
	sd	s3,24(sp)
	sd	ra,56(sp)
	sd	s1,40(sp)
	sd	s2,32(sp)
	fsd	fs0,8(sp)
	lbu	a5,8(a1)
	lbu	s1,8(a2)
	mv	s0,a1
	mv	s3,a2
	xor	a4,a5,s1
	andi	a1,a4,63
	beqz	a1,0x1eaf2 # luaV_equalobj+0x44>
	andi	a4,a4,15
	bnez	a4,0x1eae0 # luaV_equalobj+0x32>
	andi	a4,a5,15
	li	a2,3
	beq	a4,a2,0x1eb2c # luaV_equalobj+0x7e>
	li	a0,0
	ld	ra,56(sp)
	ld	s0,48(sp)
	ld	s1,40(sp)
	ld	s2,32(sp)
	ld	s3,24(sp)
	fld	fs0,8(sp)
	addi	sp,sp,64
	ret
	andi	a5,a5,63
	li	a4,22
	bltu	a4,a5,0x1eb10 # luaV_equalobj+0x62>
	auipc	a4,0x24
	addi	a4,a4,348 # 0x42c58 # udatatypename+0x290>
	slli	a5,a5,0x2
	add	a5,a5,a4
	lw	a5,0(a5)
	mv	s2,a0
	add	a5,a5,a4
	jr	a5
	ld	a0,0(s0)
	ld	a5,0(s3)
	ld	ra,56(sp)
	ld	s0,48(sp)
	sub	a0,a0,a5
	ld	s1,40(sp)
	ld	s2,32(sp)
	ld	s3,24(sp)
	fld	fs0,8(sp)
	seqz	a0,a0
	addi	sp,sp,64
	ret
	li	a2,19
	beq	a5,a2,0x1ec02 # luaV_equalobj+0x154>
	bne	a5,a4,0x1eae0 # luaV_equalobj+0x32>
	ld	s0,0(s0)
	li	a5,19
	beq	s1,a5,0x1ec66 # luaV_equalobj+0x1b8>
	li	a5,3
	bne	s1,a5,0x1eae0 # luaV_equalobj+0x32>
	ld	a0,0(s3)
	sub	a0,s0,a0
	seqz	a0,a0
	j	0x1eae2 # luaV_equalobj+0x34>
	ld	a5,0(s0)
	ld	a4,0(a2)
	bne	a5,a4,0x1ebea # luaV_equalobj+0x13c>
	li	a0,1
	ld	ra,56(sp)
	ld	s0,48(sp)
	ld	s1,40(sp)
	ld	s2,32(sp)
	ld	s3,24(sp)
	fld	fs0,8(sp)
	addi	sp,sp,64
	ret
	ld	a0,0(s0)
	ld	s0,48(sp)
	ld	ra,56(sp)
	ld	s1,40(sp)
	ld	s2,32(sp)
	ld	s3,24(sp)
	fld	fs0,8(sp)
	ld	a1,0(a2)
	addi	sp,sp,64
	j	0x1bc5e # luaS_eqlngstr>
	ld	a5,0(s0)
	ld	a4,0(a2)
	beq	a5,a4,0x1eb5a # luaV_equalobj+0xac>
	beqz	a0,0x1eae0 # luaV_equalobj+0x32>
	ld	a0,40(a5)
	beqz	a0,0x1eb9a # luaV_equalobj+0xec>
	lbu	a5,10(a0)
	andi	a5,a5,32
	beqz	a5,0x1ec3a # luaV_equalobj+0x18c>
	ld	a0,40(a4)
	beqz	a0,0x1eae0 # luaV_equalobj+0x32>
	lbu	a5,10(a0)
	andi	a5,a5,32
	bnez	a5,0x1eae0 # luaV_equalobj+0x32>
	ld	a5,24(s2)
	li	a1,5
	ld	a2,320(a5)
	jal	ra,0x1d190 # luaT_gettm>
	beqz	a0,0x1eae0 # luaV_equalobj+0x32>
	ld	a4,16(s2)
	mv	a1,a0
	mv	a3,s3
	mv	a2,s0
	mv	a0,s2
	jal	ra,0x1d2e2 # luaT_callTMres>
	ld	a5,16(s2)
	li	a4,1
	lbu	a5,8(a5)
	beq	a5,a4,0x1eae0 # luaV_equalobj+0x32>
	andi	a5,a5,15
	beqz	a5,0x1eae0 # luaV_equalobj+0x32>
	li	a0,1
	j	0x1eb5c # luaV_equalobj+0xae>
	fld	fa4,0(s0)
	fld	fa5,0(a2)
	feq.d	a0,fa4,fa5
	j	0x1eae2 # luaV_equalobj+0x34>
	beqz	a0,0x1eae0 # luaV_equalobj+0x32>
	ld	a0,24(a5)
	beqz	a0,0x1ebfc # luaV_equalobj+0x14e>
	lbu	a5,10(a0)
	andi	a5,a5,32
	beqz	a5,0x1ec50 # luaV_equalobj+0x1a2>
	ld	a0,24(a4)
	bnez	a0,0x1eb9e # luaV_equalobj+0xf0>
	j	0x1eae0 # luaV_equalobj+0x32>
	fld	fs0,0(s0)
	fmv.d	fa0,fs0
	jal	ra,0x31cd0 # floor>
	feq.d	a5,fs0,fa0
	beqz	a5,0x1eae0 # luaV_equalobj+0x32>
	auipc	a5,0x24
	fld	fa5,-956(a5) # 0x42858 # dummynode_+0x78>
	fle.d	a5,fa5,fa0
	beqz	a5,0x1eae0 # luaV_equalobj+0x32>
	auipc	a5,0x24
	fld	fa5,-964(a5) # 0x42860 # dummynode_+0x80>
	flt.d	a5,fa0,fa5
	beqz	a5,0x1eae0 # luaV_equalobj+0x32>
	fcvt.l.d	s0,fa0,rtz
	j	0x1eb38 # luaV_equalobj+0x8a>
	ld	a5,24(s2)
	li	a1,5
	ld	a2,320(a5)
	jal	ra,0x1d190 # luaT_gettm>
	bnez	a0,0x1ebb8 # luaV_equalobj+0x10a>
	ld	a4,0(s3)
	j	0x1eb9a # luaV_equalobj+0xec>
	ld	a5,24(s2)
	li	a1,5
	ld	a2,320(a5)
	jal	ra,0x1d190 # luaT_gettm>
	bnez	a0,0x1ebb8 # luaV_equalobj+0x10a>
	ld	a4,0(s3)
	j	0x1ebfc # luaV_equalobj+0x14e>
	fld	fs0,0(s3)
	fmv.d	fa0,fs0
	jal	ra,0x31cd0 # floor>
	feq.d	a5,fs0,fa0
	beqz	a5,0x1eae0 # luaV_equalobj+0x32>
	auipc	a5,0x24
	fld	fa5,-1058(a5) # 0x42858 # dummynode_+0x78>
	fle.d	a5,fa5,fa0
	beqz	a5,0x1eae0 # luaV_equalobj+0x32>
	auipc	a5,0x24
	fld	fa5,-1066(a5) # 0x42860 # dummynode_+0x80>
	flt.d	a5,fa0,fa5
	beqz	a5,0x1eae0 # luaV_equalobj+0x32>
	fcvt.l.d	a0,fa0,rtz
	j	0x1eb48 # luaV_equalobj+0x9a>

luaV_concat:
	li	a5,1
	beq	a1,a5,0x1ecaa # luaV_concat+0xa>
	j	0x1e010 # luaV_concat.part.0>
	ret

luaV_objlen:
	addi	sp,sp,-48
	sd	s0,32(sp)
	sd	s1,24(sp)
	sd	s2,16(sp)
	sd	ra,40(sp)
	sd	s3,8(sp)
	lbu	a5,8(a2)
	li	a4,5
	mv	s0,a2
	andi	a5,a5,63
	mv	s2,a0
	mv	s1,a1
	beq	a5,a4,0x1ed38 # luaV_objlen+0x8c>
	li	a4,20
	beq	a5,a4,0x1ed1e # luaV_objlen+0x72>
	li	a4,4
	beq	a5,a4,0x1ed02 # luaV_objlen+0x56>
	mv	a1,s0
	li	a2,4
	jal	ra,0x1d1d0 # luaT_gettmbyobj>
	lbu	a5,8(a0)
	mv	a1,a0
	andi	a5,a5,15
	beqz	a5,0x1ed7a # luaV_objlen+0xce>
	mv	a3,s0
	mv	a2,s0
	ld	s0,32(sp)
	ld	ra,40(sp)
	ld	s3,8(sp)
	mv	a4,s1
	mv	a0,s2
	ld	s1,24(sp)
	ld	s2,16(sp)
	addi	sp,sp,48
	j	0x1d2e2 # luaT_callTMres>
	ld	a5,0(a2)
	li	a4,3
	lbu	a5,11(a5)
	sb	a4,8(a1)
	ld	ra,40(sp)
	ld	s0,32(sp)
	sd	a5,0(a1)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	addi	sp,sp,48
	ret
	ld	a5,0(a2)
	li	a4,3
	ld	a5,16(a5)
	sb	a4,8(a1)
	ld	ra,40(sp)
	ld	s0,32(sp)
	sd	a5,0(a1)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	addi	sp,sp,48
	ret
	ld	s3,0(a2)
	ld	a0,40(s3)
	beqz	a0,0x1ed4a # luaV_objlen+0x9e>
	lbu	a5,10(a0)
	andi	a5,a5,16
	beqz	a5,0x1ed66 # luaV_objlen+0xba>
	mv	a0,s3
	jal	ra,0x1cf2a # luaH_getn>
	li	a5,3
	sb	a5,8(s1)
	ld	ra,40(sp)
	ld	s0,32(sp)
	sd	a0,0(s1)
	ld	s2,16(sp)
	ld	s1,24(sp)
	ld	s3,8(sp)
	addi	sp,sp,48
	ret
	ld	a5,24(s2)
	li	a1,4
	ld	a2,312(a5)
	jal	ra,0x1d190 # luaT_gettm>
	mv	a1,a0
	bnez	a0,0x1ecea # luaV_objlen+0x3e>
	j	0x1ed4a # luaV_objlen+0x9e>
	auipc	a2,0x24
	addi	a2,a2,-426 # 0x42bd0 # udatatypename+0x208>
	mv	a1,s0
	mv	a0,s2
	jal	ra,0x13dac # luaG_typeerror>

luaV_idiv:
	addi	a4,a2,1
	li	a5,1
	bleu	a4,a5,0x1edae # luaV_idiv+0x24>
	xor	a5,a2,a1
	div	a4,a1,a2
	bgez	a5,0x1edaa # luaV_idiv+0x20>
	rem	a1,a1,a2
	snez	a1,a1
	sub	a4,a4,a1
	mv	a0,a4
	ret
	neg	a4,a1
	bnez	a2,0x1edaa # luaV_idiv+0x20>
	addi	sp,sp,-16
	auipc	a1,0x24
	addi	a1,a1,-470 # 0x42be0 # udatatypename+0x218>
	sd	ra,8(sp)
	jal	ra,0x13d34 # luaG_runerror>

luaV_mod:
	addi	a4,a2,1
	li	a5,1
	bleu	a4,a5,0x1ede6 # luaV_mod+0x22>
	rem	a1,a1,a2
	beqz	a1,0x1eddc # luaV_mod+0x18>
	xor	a5,a2,a1
	bltz	a5,0x1ede0 # luaV_mod+0x1c>
	mv	a0,a1
	ret
	add	a1,a1,a2
	mv	a0,a1
	ret
	li	a1,0
	bnez	a2,0x1eddc # luaV_mod+0x18>
	addi	sp,sp,-16
	auipc	a1,0x24
	addi	a1,a1,-492 # 0x42c00 # udatatypename+0x238>
	sd	ra,8(sp)
	jal	ra,0x13d34 # luaG_runerror>

luaV_modf:
	addi	sp,sp,-32
	fsd	fs0,8(sp)
	sd	ra,24(sp)
	fmv.d	fs0,fa1
	jal	ra,0x31d78 # fmod>
	fmv.d.x	fa5,zero
	flt.d	a5,fa5,fa0
	beqz	a5,0x1ee24 # luaV_modf+0x2a>
	flt.d	a5,fs0,fa5
	beqz	a5,0x1ee1c # luaV_modf+0x22>
	fadd.d	fa0,fa0,fs0
	ld	ra,24(sp)
	fld	fs0,8(sp)
	addi	sp,sp,32
	ret
	flt.d	a5,fa0,fa5
	beqz	a5,0x1ee1c # luaV_modf+0x22>
	flt.d	a5,fa5,fs0
	beqz	a5,0x1ee1c # luaV_modf+0x22>
	fadd.d	fa0,fa0,fs0
	j	0x1ee1c # luaV_modf+0x22>

luaV_shiftl:
	mv	a5,a0
	bltz	a1,0x1ee4e # luaV_shiftl+0x18>
	li	a4,63
	li	a0,0
	ble	a1,a4,0x1ee48 # luaV_shiftl+0x12>
	ret
	sll	a0,a5,a1
	ret
	li	a4,-63
	li	a0,0
	blt	a1,a4,0x1ee46 # luaV_shiftl+0x10>
	negw	a1,a1
	srl	a0,a5,a1
	ret

luaV_finishOp:
	ld	a7,32(a0)
	li	a2,59
	ld	a3,32(a7)
	ld	a1,0(a7)
	lw	a4,-4(a3)
	addi	a1,a1,16
	andi	a5,a4,127
	addiw	a5,a5,-11
	sext.w	a6,a5
	bltu	a2,a6,0x1eea2 # luaV_finishOp+0x40>
	slli	a5,a5,0x20
	srli	a5,a5,0x20
	auipc	a2,0x24
	addi	a2,a2,-470 # 0x42cb4 # udatatypename+0x2ec>
	slli	a5,a5,0x2
	add	a5,a5,a2
	lw	a5,0(a5)
	add	a5,a5,a2
	jr	a5
	addi	a3,a3,-4
	sd	a3,32(a7)
	ret
	ld	a3,16(a0)
	srliw	a5,a4,0x7
	andi	a5,a5,255
	ld	a4,-16(a3)
	slli	a5,a5,0x4
	addi	a2,a3,-16
	sd	a2,16(a0)
	add	a1,a1,a5
	sd	a4,0(a1)
	lbu	a5,-8(a3)
	sb	a5,8(a1)
	ret
	ld	a5,16(a0)
	li	a6,1
	li	a1,0
	lbu	a2,-8(a5)
	beq	a2,a6,0x1eedc # luaV_finishOp+0x7a>
	andi	a2,a2,15
	snez	a1,a2
	lhu	a2,62(a7)
	addi	a5,a5,-16
	lui	a6,0x2
	sd	a5,16(a0)
	and	a5,a2,a6
	beqz	a5,0x1eef8 # luaV_finishOp+0x96>
	xor	a2,a2,a6
	sh	a2,62(a7)
	xori	a1,a1,1
	srliw	a4,a4,0xf
	andi	a4,a4,1
	beq	a4,a1,0x1eea2 # luaV_finishOp+0x40>
	addi	a3,a3,4
	sd	a3,32(a7)
	ret
	lw	a5,-8(a3)
	ld	a4,16(a0)
	srliw	a5,a5,0x7
	ld	a3,-16(a4)
	andi	a5,a5,255
	slli	a5,a5,0x4
	addi	a2,a4,-16
	sd	a2,16(a0)
	add	a1,a1,a5
	sd	a3,0(a1)
	lbu	a5,-8(a4)
	sb	a5,8(a1)
	ret
	ld	a5,16(a0)
	srliw	a4,a4,0x7
	andi	a4,a4,255
	ld	a6,-16(a5)
	lbu	a2,-8(a5)
	slli	a4,a4,0x4
	addi	a3,a5,-32
	add	a1,a1,a4
	sub	a1,a3,a1
	sd	a6,-48(a5)
	sb	a2,-40(a5)
	srai	a1,a1,0x4
	sext.w	a1,a1
	sd	a3,16(a0)
	li	a5,1
	beq	a1,a5,0x1eea2 # luaV_finishOp+0x40>
	j	0x1e010 # luaV_concat.part.0>

luaV_execute:
	addi	sp,sp,-208
	sd	s6,144(sp)
	sd	s7,136(sp)
	sd	s8,128(sp)
	fsd	fs2,72(sp)
	fsd	fs3,64(sp)
	sd	ra,200(sp)
	sd	s0,192(sp)
	sd	s1,184(sp)
	sd	s2,176(sp)
	sd	s3,168(sp)
	sd	s4,160(sp)
	sd	s5,152(sp)
	sd	s9,120(sp)
	sd	s10,112(sp)
	sd	s11,104(sp)
	fsd	fs0,88(sp)
	fsd	fs1,80(sp)
	fsd	fs4,56(sp)
	mv	s8,a0
	mv	s7,a1
	auipc	s6,0x2d
	addi	s6,s6,-458 # 0x4bdc8 # disptab.0>
	auipc	a5,0x24
	fld	fs3,-1858(a5) # 0x42858 # dummynode_+0x78>
	auipc	a5,0x24
	fld	fs2,-1858(a5) # 0x42860 # dummynode_+0x80>
	ld	s4,0(s7)
	lw	s3,192(s8)
	ld	s2,32(s7)
	ld	s10,0(s4)
	sext.w	s3,s3
	addi	s4,s4,16
	ld	a5,24(s10)
	ld	s9,56(a5)
	bnez	s3,0x1f390 # luaV_execute+0x428>
	lw	s0,0(s2)
	auipc	a5,0x24
	fld	fs0,-1910(a5) # 0x42858 # dummynode_+0x78>
	addi	s2,s2,4
	andi	a5,s0,127
	slli	a5,a5,0x3
	srliw	s5,s0,0x7
	add	a5,a5,s6
	andi	s1,s5,255
	ld	a5,0(a5)
	slli	s1,s1,0x4
	add	s1,s1,s4
	auipc	a4,0x24
	fld	fs1,-1934(a4) # 0x42860 # dummynode_+0x80>
	addi	s11,s1,64
	jr	a5
	srliw	a5,s0,0x10
	andi	a5,a5,255
	slli	a5,a5,0x4
	add	a5,a5,s4
	ld	a4,0(a5)
	sd	a4,0(s1)
	lbu	a5,8(a5)
	sb	a5,8(s1)
	bnez	s3,0x1f09e # luaV_execute+0x136>
	lw	s0,0(s2)
	addi	s2,s2,4
	andi	a5,s0,127
	slli	a5,a5,0x3
	srliw	s5,s0,0x7
	add	a5,a5,s6
	andi	s1,s5,255
	ld	a5,0(a5)
	slli	s1,s1,0x4
	add	s1,s1,s4
	addi	s11,s1,64
	jr	a5
	srliw	a4,s0,0x10
	srli	a5,s0,0xf
	andi	a4,a4,255
	slli	a4,a4,0x4
	srliw	s0,s0,0x18
	andi	a5,a5,1
	add	s5,s4,a4
	slli	s0,s0,0x4
	bnez	a5,0x1f05a # luaV_execute+0xf2>
	j	0x20846 # luaV_execute+0x18de>
	lbu	a3,8(s5)
	li	a4,3
	lbu	a5,8(s1)
	add	s0,s0,s9
	bne	a3,a4,0x1f06e # luaV_execute+0x106>
	j	0x2085a # luaV_execute+0x18f2>
	li	a3,69
	li	a4,0
	bne	a5,a3,0x1f07c # luaV_execute+0x114>
	j	0x20e50 # luaV_execute+0x1ee8>
	ld	a5,8(s7)
	sd	s2,32(s7)
	mv	a3,s0
	sd	a5,16(s8)
	mv	a2,s5
	mv	a1,s1
	mv	a0,s8
	jal	ra,0x1e86a # luaV_finishset>
	lw	s3,40(s7)
	sext.w	s3,s3
	beqz	s3,0x1f018 # luaV_execute+0xb0>
	mv	a1,s2
	mv	a0,s8
	jal	ra,0x13f0e # luaG_traceexec>
	ld	s4,0(s7)
	mv	s3,a0
	addi	s4,s4,16
	lw	s0,0(s2)
	j	0x1f01c # luaV_execute+0xb4>
	ld	a5,8(s7)
	sd	s2,32(s7)
	addi	a1,s1,48
	sd	a5,16(s8)
	mv	a0,s8
	jal	ra,0x1576e # luaF_newtbcupval>
	srliw	a1,s0,0xf
	slli	a1,a1,0x2
	add	a1,a1,s2
	lw	s0,0(a1)
	addi	s2,a1,4
	addi	s11,s1,64
	li	a2,48
	mv	a1,s1
	mv	a0,s11
	jal	ra,0x3632a # memcpy>
	addi	a5,s1,112
	sd	a5,16(s8)
	sd	s2,32(s7)
	srliw	a2,s0,0x18
	mv	a1,s11
	mv	a0,s8
	jal	ra,0x14d1c # luaD_call>
	lw	s3,40(s7)
	sext.w	s3,s3
	beqz	s3,0x1f10e # luaV_execute+0x1a6>
	j	0x20d74 # luaV_execute+0x1e0c>
	lw	s0,0(s2)
	addi	s2,s2,4
	lbu	a5,8(s11)
	andi	a4,a5,15
	beqz	a4,0x1f132 # luaV_execute+0x1ca>
	ld	a4,0(s11)
	srliw	s0,s0,0xf
	slli	s0,s0,0x2
	sd	a4,32(s1)
	sb	a5,40(s1)
	sub	s2,s2,s0
	bnez	s3,0x1f174 # luaV_execute+0x20c>
	lw	s0,0(s2)
	j	0x1f01c # luaV_execute+0xb4>
	lbu	a5,40(s1)
	li	a4,3
	beq	a5,a4,0x1f14a # luaV_execute+0x1e2>
	j	0x208de # luaV_execute+0x1976>
	ld	a4,16(s1)
	beqz	a4,0x1f16a # luaV_execute+0x202>
	ld	a3,0(s1)
	ld	a0,32(s1)
	srliw	a2,s0,0xf
	addi	a4,a4,-1
	add	a3,a3,a0
	slli	a2,a2,0x2
	sd	a4,16(s1)
	sd	a3,0(s1)
	sd	a3,48(s1)
	sb	a5,56(s1)
	sub	s2,s2,a2
	lw	s3,40(s7)
	sext.w	s3,s3
	beqz	s3,0x1f136 # luaV_execute+0x1ce>
	mv	a1,s2
	mv	a0,s8
	jal	ra,0x13f0e # luaG_traceexec>
	ld	s4,0(s7)
	lw	s0,0(s2)
	mv	s3,a0
	addi	s4,s4,16
	j	0x1f01c # luaV_execute+0xb4>
	srliw	a5,s0,0x10
	srliw	a2,s0,0x18
	andi	a5,a5,255
	addiw	a2,a2,-1
	beqz	a5,0x1f1a2 # luaV_execute+0x23a>
	slli	a5,a5,0x4
	add	a5,a5,s1
	sd	a5,16(s8)
	sd	s2,32(s7)
	mv	a1,s1
	mv	a0,s8
	jal	ra,0x14a8e # luaD_precall>
	beqz	a0,0x1f1b4 # luaV_execute+0x24c>
	j	0x21490 # luaV_execute+0x2528>
	lw	s3,40(s7)
	sext.w	s3,s3
	bnez	s3,0x1f09e # luaV_execute+0x136>
	lw	s0,0(s2)
	j	0x1f01c # luaV_execute+0xb4>
	srliw	a5,s0,0x10
	andi	a5,a5,255
	slli	a5,a5,0x4
	add	a5,a5,s4
	lbu	a2,8(a5)
	li	a4,1
	beq	a2,a4,0x1f1e2 # luaV_execute+0x27a>
	andi	a4,a2,15
	seqz	a4,a4
	srliw	a3,s0,0xf
	andi	a3,a3,1
	beq	a3,a4,0x1f230 # luaV_execute+0x2c8>
	ld	a4,0(a5)
	sb	a2,8(s1)
	lw	a1,0(s2)
	lw	s3,40(s7)
	lui	a5,0xff000
	srliw	a1,a1,0x7
	addi	a5,a5,2
	add	a1,a1,a5
	slli	a1,a1,0x2
	sd	a4,0(s1)
	sext.w	s3,s3
	add	s2,s2,a1
	beqz	s3,0x1f136 # luaV_execute+0x1ce>
	j	0x1f174 # luaV_execute+0x20c>
	lbu	a5,8(s1)
	li	a3,1
	li	a4,0
	beq	a5,a3,0x1f226 # luaV_execute+0x2be>
	andi	a5,a5,15
	snez	a4,a5
	srliw	a5,s0,0xf
	andi	a5,a5,1
	beq	a5,a4,0x1f270 # luaV_execute+0x308>
	addi	s2,s2,4
	beqz	s3,0x1f136 # luaV_execute+0x1ce>
	j	0x1f174 # luaV_execute+0x20c>
	lbu	a4,8(s1)
	srliw	a5,s0,0x10
	andi	a5,a5,255
	li	a3,3
	addiw	a2,a5,-127
	bne	a4,a3,0x1f252 # luaV_execute+0x2ea>
	j	0x20b66 # luaV_execute+0x1bfe>
	li	a3,19
	beq	a4,a3,0x1f25c # luaV_execute+0x2f4>
	j	0x20c66 # luaV_execute+0x1cfe>
	fcvt.d.w	fa5,a2
	fld	fa4,0(s1)
	fle.d	a0,fa5,fa4
	srliw	a5,s0,0xf
	andi	a5,a5,1
	bne	a5,a0,0x1f230 # luaV_execute+0x2c8>
	lw	a1,0(s2)
	lw	s3,40(s7)
	lui	a5,0xff000
	srliw	a1,a1,0x7
	addi	a5,a5,2
	add	a1,a1,a5
	slli	a1,a1,0x2
	sext.w	s3,s3
	add	s2,s2,a1
	beqz	s3,0x1f136 # luaV_execute+0x1ce>
	j	0x1f174 # luaV_execute+0x20c>
	lbu	a4,8(s1)
	srliw	a5,s0,0x10
	andi	a5,a5,255
	li	a3,3
	addiw	a2,a5,-127
	bne	a4,a3,0x1f2aa # luaV_execute+0x342>
	j	0x20b56 # luaV_execute+0x1bee>
	li	a3,19
	beq	a4,a3,0x1f2b4 # luaV_execute+0x34c>
	j	0x20c46 # luaV_execute+0x1cde>
	fcvt.d.w	fa5,a2
	fld	fa4,0(s1)
	fle.d	a0,fa4,fa5
	j	0x1f266 # luaV_execute+0x2fe>
	lbu	a4,8(s1)
	srliw	a5,s0,0x10
	andi	a5,a5,255
	li	a3,3
	addiw	a2,a5,-127
	bne	a4,a3,0x1f2da # luaV_execute+0x372>
	j	0x20b76 # luaV_execute+0x1c0e>
	li	a3,19
	beq	a4,a3,0x1f2e4 # luaV_execute+0x37c>
	j	0x20c7c # luaV_execute+0x1d14>
	fcvt.d.w	fa5,a2
	fld	fa4,0(s1)
	flt.d	a0,fa4,fa5
	j	0x1f266 # luaV_execute+0x2fe>
	srliw	a5,s0,0x10
	lbu	a3,8(s1)
	andi	a5,a5,255
	addiw	a2,a5,-127
	li	a4,3
	mv	a5,a2
	bne	a3,a4,0x1f30c # luaV_execute+0x3a4>
	j	0x20ab2 # luaV_execute+0x1b4a>
	li	a2,19
	li	a4,0
	bne	a3,a2,0x1f226 # luaV_execute+0x2be>
	fcvt.d.w	fa5,a5
	fld	fa4,0(s1)
	feq.d	a4,fa4,fa5
	j	0x1f226 # luaV_execute+0x2be>
	srliw	a2,s0,0x10
	andi	a2,a2,255
	slli	a2,a2,0x4
	add	a2,a2,s9
	mv	a1,s1
	li	a0,0
	jal	ra,0x1eaae # luaV_equalobj>
	srliw	a5,s0,0xf
	andi	a5,a5,1
	beq	a5,a0,0x1f270 # luaV_execute+0x308>
	addi	s2,s2,4
	j	0x1f232 # luaV_execute+0x2ca>
	lw	a5,192(s8)
	sext.w	a5,a5
	beqz	a5,0x1f34e # luaV_execute+0x3e6>
	j	0x21080 # luaV_execute+0x2118>
	ld	a3,16(s7)
	lh	a4,60(s7)
	addi	a5,s4,-16
	sd	a3,32(s8)
	sd	a5,16(s8)
	blez	a4,0x1f36a # luaV_execute+0x402>
	j	0x21278 # luaV_execute+0x2310>
	lhu	a5,62(s7)
	andi	a5,a5,4
	bnez	a5,0x1f3e0 # luaV_execute+0x478>
	ld	s7,16(s7)
	ld	s4,0(s7)
	ld	s2,32(s7)
	ld	s10,0(s4)
	addi	s4,s4,16
	ld	a5,24(s10)
	ld	s9,56(a5) # 0xffffffffff000038 # __BSS_END__+0xfffffffffefb1cb0>
	beqz	s3,0x1efca # luaV_execute+0x62>
	ld	a4,64(a5)
	bne	a4,s2,0x1f39a # luaV_execute+0x432>
	j	0x20e66 # luaV_execute+0x1efe>
	li	a5,1
	sw	a5,40(s7)
	mv	a1,s2
	mv	a0,s8
	jal	ra,0x13f0e # luaG_traceexec>
	ld	s4,0(s7)
	mv	s3,a0
	addi	s4,s4,16
	j	0x1efca # luaV_execute+0x62>
	lw	a5,192(s8)
	sext.w	a5,a5
	beqz	a5,0x1f3be # luaV_execute+0x456>
	j	0x21098 # luaV_execute+0x2130>
	ld	a4,16(s7)
	lh	a5,60(s7)
	addi	a3,s4,-16
	sd	a4,32(s8)
	beqz	a5,0x1f3d4 # luaV_execute+0x46c>
	j	0x20ca6 # luaV_execute+0x1d3e>
	lhu	a5,62(s7)
	sd	a3,16(s8)
	andi	a5,a5,4
	beqz	a5,0x1f372 # luaV_execute+0x40a>
	ld	ra,200(sp)
	ld	s0,192(sp)
	ld	s1,184(sp)
	ld	s2,176(sp)
	ld	s3,168(sp)
	ld	s4,160(sp)
	ld	s5,152(sp)
	ld	s6,144(sp)
	ld	s7,136(sp)
	ld	s8,128(sp)
	ld	s9,120(sp)
	ld	s10,112(sp)
	ld	s11,104(sp)
	fld	fs0,88(sp)
	fld	fs1,80(sp)
	fld	fs2,72(sp)
	fld	fs3,64(sp)
	fld	fs4,56(sp)
	addi	sp,sp,208
	ret
	srliw	a5,s0,0x10
	andi	a5,a5,255
	srliw	s10,s0,0x18
	srliw	s9,s0,0x18
	addiw	s3,a5,-1
	bnez	a5,0x1f42c # luaV_execute+0x4c4>
	ld	s3,16(s8)
	sub	s3,s3,s1
	srai	s3,s3,0x4
	sext.w	s3,s3
	srli	a5,s0,0xf
	sd	s2,32(s7)
	andi	a5,a5,1
	beqz	a5,0x1f460 # luaV_execute+0x4f8>
	ld	a5,8(s7)
	ld	a4,16(s8)
	bleu	a5,a4,0x1f448 # luaV_execute+0x4e0>
	sd	a5,16(s8)
	li	a3,1
	li	a2,-1
	mv	a1,s4
	mv	a0,s8
	jal	ra,0x1587e # luaF_close>
	lw	a5,40(s7)
	sext.w	a5,a5
	beqz	a5,0x1f460 # luaV_execute+0x4f8>
	j	0x213ee # luaV_execute+0x2486>
	beqz	s9,0x1f47a # luaV_execute+0x512>
	lw	a5,44(s7)
	ld	a4,0(s7)
	addw	a5,a5,s10
	slli	a5,a5,0x4
	sub	a5,a4,a5
	sd	a5,0(s7)
	slli	a5,s3,0x4
	add	s1,s1,a5
	sd	s1,16(s8)
	mv	a2,s3
	j	0x1f53c # luaV_execute+0x5d4>
	srliw	s3,s0,0x10
	srliw	a5,s0,0x18
	andi	s3,s3,255
	srliw	a4,s0,0x18
	li	s9,0
	beqz	a5,0x1f4aa # luaV_execute+0x542>
	lw	s9,44(s7)
	addw	s9,s9,a4
	slli	s9,s9,0x4
	neg	s9,s9
	bnez	s3,0x1f4b2 # luaV_execute+0x54a>
	j	0x2081c # luaV_execute+0x18b4>
	slli	a5,s3,0x4
	add	a5,a5,s1
	sd	a5,16(s8)
	srli	a5,s0,0xf
	sd	s2,32(s7)
	andi	a5,a5,1
	beqz	a5,0x1f4cc # luaV_execute+0x564>
	j	0x2083a # luaV_execute+0x18d2>
	lbu	a5,8(s1)
	li	a4,6
	li	s2,16
	andi	a3,a5,15
	li	s0,6
	beq	a3,a4,0x1f506 # luaV_execute+0x59e>
	mv	a1,s1
	mv	a0,s8
	jal	ra,0x146fe # luaD_tryfuncTM>
	ld	a5,40(s8)
	ld	a4,16(s8)
	addiw	s3,s3,1
	sub	a5,a5,a4
	blt	s2,a5,0x1f4fa # luaV_execute+0x592>
	j	0x20754 # luaV_execute+0x17ec>
	lbu	a5,8(s1)
	andi	a4,a5,15
	bne	a4,s0,0x1f4de # luaV_execute+0x576>
	li	a4,70
	bne	a5,a4,0x1f512 # luaV_execute+0x5aa>
	j	0x21452 # luaV_execute+0x24ea>
	li	a2,-1
	mv	a1,s1
	mv	a0,s8
	jal	ra,0x14a8e # luaD_precall>
	lw	a5,40(s7)
	sext.w	a5,a5
	beqz	a5,0x1f528 # luaV_execute+0x5c0>
	j	0x20f22 # luaV_execute+0x1fba>
	ld	a5,0(s7)
	ld	a2,16(s8)
	add	a5,a5,s9
	sd	a5,0(s7)
	sub	a2,a2,s1
	srai	a2,a2,0x4
	sext.w	a2,a2
	mv	a1,s7
	mv	a0,s8
	jal	ra,0x14758 # luaD_poscall>
	lw	s3,40(s7)
	sext.w	s3,s3
	j	0x1f36a # luaV_execute+0x402>
	ld	a5,8(s7)
	sd	s2,32(s7)
	li	a4,3
	sd	a5,16(s8)
	lbu	a5,8(s1)
	addi	s5,s1,16
	addi	s11,s1,32
	bne	a5,a4,0x1f56e # luaV_execute+0x606>
	j	0x209dc # luaV_execute+0x1a74>
	lbu	a4,24(s1)
	li	a5,19
	beq	a4,a5,0x1f57c # luaV_execute+0x614>
	j	0x20916 # luaV_execute+0x19ae>
	fld	fa5,16(s1)
	fsd	fa5,24(sp)
	lbu	a4,40(s1)
	li	a5,19
	beq	a4,a5,0x1f58e # luaV_execute+0x626>
	j	0x20948 # luaV_execute+0x19e0>
	fld	fa5,32(s1)
	fsd	fa5,32(sp)
	lbu	a4,8(s1)
	li	a5,19
	beq	a4,a5,0x1f5a0 # luaV_execute+0x638>
	j	0x209be # luaV_execute+0x1a56>
	fld	fa5,0(s1)
	fsd	fa5,16(sp)
	fld	fa5,32(sp)
	fmv.d.x	fa4,zero
	feq.d	a5,fa5,fa4
	beqz	a5,0x1f5b4 # luaV_execute+0x64c>
	j	0x214ee # luaV_execute+0x2586>
	flt.d	a5,fa4,fa5
	fld	fa3,24(sp)
	fld	fa4,16(sp)
	bnez	a5,0x1f5c2 # luaV_execute+0x65a>
	j	0x20c9e # luaV_execute+0x1d36>
	flt.d	a5,fa3,fa4
	beqz	a5,0x1f5cc # luaV_execute+0x664>
	j	0x20980 # luaV_execute+0x1a18>
	li	a5,19
	fsd	fa3,16(s1)
	sb	a5,24(s1)
	fsd	fa5,32(s1)
	sb	a5,40(s1)
	fsd	fa4,0(s1)
	sb	a5,8(s1)
	fsd	fa4,48(s1)
	sb	a5,56(s1)
	beqz	s3,0x1f136 # luaV_execute+0x1ce>
	j	0x1f174 # luaV_execute+0x20c>
	ld	a3,24(s10)
	mv	a2,s7
	sd	s2,32(s7)
	andi	a1,s5,255
	mv	a0,s8
	jal	ra,0x1d5dc # luaT_adjustvarargs>
	lw	s3,40(s7)
	sext.w	s3,s3
	beqz	s3,0x1f60e # luaV_execute+0x6a6>
	j	0x210b2 # luaV_execute+0x214a>
	ld	s4,0(s7)
	lw	s0,0(s2)
	addi	s4,s4,16
	j	0x1f01c # luaV_execute+0xb4>
	ld	a3,24(s10)
	srliw	a5,s0,0xf
	slli	a4,a5,0x3
	ld	a5,72(a3)
	ld	a3,8(s7)
	mv	a0,s8
	add	a5,a5,a4
	ld	s5,0(a5)
	sd	s2,32(s7)
	sd	a3,16(s8)
	lw	s11,16(s5)
	addi	a5,s10,32
	ld	s0,80(s5)
	mv	a1,s11
	sd	a5,0(sp)
	jal	ra,0x1562a # luaF_newLclosure>
	sd	s5,24(a0)
	li	a4,70
	sd	a0,0(s1)
	sb	a4,8(s1)
	mv	a3,a0
	bgtz	s11,0x1f668 # luaV_execute+0x700>
	j	0x20724 # luaV_execute+0x17bc>
	addiw	a4,s11,-1
	slli	a4,a4,0x20
	srli	a4,a4,0x1c
	addi	a2,s0,24
	addi	s5,s0,8
	addi	s11,a0,32
	add	s0,a4,a2
	j	0x1f6b4 # luaV_execute+0x74c>
	ld	a5,0(sp)
	slli	a1,a1,0x3
	add	a1,a1,a5
	ld	a5,0(a1)
	sd	a5,0(s11)
	lbu	a5,9(a3)
	andi	a5,a5,32
	beqz	a5,0x1f6a8 # luaV_execute+0x740>
	ld	a2,0(s11)
	lbu	a5,9(a2)
	andi	a5,a5,24
	beqz	a5,0x1f6a8 # luaV_execute+0x740>
	j	0x2070c # luaV_execute+0x17a4>
	addi	s5,s5,16
	addi	s11,s11,8
	bne	s0,s5,0x1f6b4 # luaV_execute+0x74c>
	j	0x20724 # luaV_execute+0x17bc>
	lbu	a5,0(s5)
	lbu	a1,1(s5)
	beqz	a5,0x1f682 # luaV_execute+0x71a>
	slli	a1,a1,0x4
	add	a1,a1,s4
	mv	a0,s8
	sd	a3,8(sp)
	jal	ra,0x156f4 # luaF_findupval>
	ld	a3,8(sp)
	sd	a0,0(s11)
	j	0x1f68e # luaV_execute+0x726>
	ld	a5,8(s7)
	sd	s2,32(s7)
	srliw	a3,s0,0x18
	sd	a5,16(s8)
	addiw	a3,a3,-1
	mv	a2,s1
	mv	a1,s7
	mv	a0,s8
	jal	ra,0x1d698 # luaT_getvarargs>
	j	0x1f1b4 # luaV_execute+0x24c>
	srliw	a3,s0,0x10
	andi	a3,a3,255
	ld	s5,0(s1)
	srliw	a5,s0,0x18
	beqz	a3,0x1f706 # luaV_execute+0x79e>
	j	0x207ca # luaV_execute+0x1862>
	ld	a3,16(s8)
	srli	a4,s0,0xf
	addi	a2,s2,4
	sub	a3,a3,s1
	srai	a3,a3,0x4
	addiw	a3,a3,-1
	addw	s0,a5,a3
	andi	a4,a4,1
	sd	a2,0(sp)
	mv	a5,s0
	sext.w	s11,a3
	bnez	a4,0x1f72c # luaV_execute+0x7c4>
	j	0x207ee # luaV_execute+0x1886>
	lw	s0,0(s2)
	mv	a0,s5
	sd	a3,8(sp)
	srliw	s0,s0,0x7
	slliw	s0,s0,0x8
	addw	s0,s0,a5
	jal	ra,0x1c350 # luaH_realasize>
	sext.w	a5,a0
	ld	a3,8(sp)
	addi	s2,s2,8
	bleu	s0,a5,0x1f752 # luaV_execute+0x7ea>
	j	0x2080c # luaV_execute+0x18a4>
	slli	a2,a3,0x4
	subw	s11,s0,s11
	blez	a3,0x1f7a4 # luaV_execute+0x83c>
	ld	a5,16(s5)
	add	a4,s1,a2
	addiw	s0,s0,-1
	ld	a0,0(a4)
	slli	a3,s0,0x20
	srli	a3,a3,0x1c
	add	a5,a5,a3
	sd	a0,0(a5)
	lbu	a3,8(a4)
	sb	a3,8(a5)
	lbu	a5,8(a4)
	andi	a5,a5,64
	beqz	a5,0x1f79e # luaV_execute+0x836>
	lbu	a5,9(s5)
	andi	a5,a5,32
	beqz	a5,0x1f79e # luaV_execute+0x836>
	ld	a5,0(a4)
	lbu	a5,9(a5)
	andi	a5,a5,24
	beqz	a5,0x1f79e # luaV_execute+0x836>
	j	0x207ba # luaV_execute+0x1852>
	addi	a2,a2,-16
	bne	s0,s11,0x1f75e # luaV_execute+0x7f6>
	beqz	s3,0x1f7ac # luaV_execute+0x844>
	j	0x20f34 # luaV_execute+0x1fcc>
	ld	a5,0(sp)
	lw	s0,0(a5)
	j	0x1f01e # luaV_execute+0xb6>
	srliw	a5,s0,0xf
	slli	a5,a5,0x4
	add	a5,a5,s9
	j	0x1f008 # luaV_execute+0xa0>
	lui	a4,0xffff0
	srliw	a5,s0,0xf
	addiw	a4,a4,1
	addw	a5,a5,a4
	fcvt.d.w	fa5,a5
	li	a5,19
	sb	a5,8(s1)
	fsd	fa5,0(s1)
	bnez	s3,0x1f09e # luaV_execute+0x136>
	lw	s0,0(s2)
	j	0x1f01c # luaV_execute+0xb4>
	lui	a4,0xffff0
	srliw	a5,s0,0xf
	addiw	a4,a4,1
	addw	a5,a5,a4
	sd	a5,0(s1)
	li	a5,3
	sb	a5,8(s1)
	bnez	s3,0x1f09e # luaV_execute+0x136>
	lw	s0,0(s2)
	j	0x1f01c # luaV_execute+0xb4>
	lbu	a4,8(s1)
	srliw	a5,s0,0x10
	andi	a5,a5,255
	li	a3,3
	addiw	a2,a5,-127
	bne	a4,a3,0x1f816 # luaV_execute+0x8ae>
	j	0x20c0e # luaV_execute+0x1ca6>
	li	a3,19
	beq	a4,a3,0x1f820 # luaV_execute+0x8b8>
	j	0x20c92 # luaV_execute+0x1d2a>
	fcvt.d.w	fa5,a2
	fld	fa4,0(s1)
	flt.d	a0,fa5,fa4
	j	0x1f266 # luaV_execute+0x2fe>
	srliw	a5,s0,0x10
	andi	a5,a5,255
	addi	a5,a5,4
	slli	a5,a5,0x3
	add	a5,a5,s10
	ld	a5,0(a5)
	srliw	a2,s0,0x18
	slli	a2,a2,0x4
	ld	s0,16(a5)
	add	a2,a2,s9
	li	a5,69
	lbu	a3,8(s0)
	ld	a1,0(a2)
	li	a4,0
	bne	a3,a5,0x1f85a # luaV_execute+0x8f2>
	j	0x20b80 # luaV_execute+0x1c18>
	ld	a5,8(s7)
	sd	s2,32(s7)
	mv	a3,s1
	sd	a5,16(s8)
	mv	a1,s0
	mv	a0,s8
	jal	ra,0x1e74c # luaV_finishget>
	lw	s3,40(s7)
	sext.w	s3,s3
	beqz	s3,0x1f018 # luaV_execute+0xb0>
	j	0x1f09e # luaV_execute+0x136>
	srliw	a5,s0,0x10
	andi	a5,a5,255
	addi	a5,a5,4
	slli	a5,a5,0x3
	add	a5,a5,s10
	ld	a1,0(a5)
	ld	a4,0(s1)
	ld	a5,16(a1)
	sd	a4,0(a5)
	lbu	a4,8(s1)
	sb	a4,8(a5)
	lbu	a5,8(s1)
	andi	a5,a5,64
	beqz	a5,0x1f09a # luaV_execute+0x132>
	lbu	a5,9(a1)
	andi	a5,a5,32
	beqz	a5,0x1f09a # luaV_execute+0x132>
	ld	a2,0(s1)
	lbu	a5,9(a2)
	andi	a5,a5,24
	beqz	a5,0x1f09a # luaV_execute+0x132>
	mv	a0,s8
	jal	ra,0x1706e # luaC_barrier_>
	beqz	s3,0x1f018 # luaV_execute+0xb0>
	j	0x1f09e # luaV_execute+0x136>
	srliw	a2,s0,0x10
	lbu	a5,8(s1)
	andi	a2,a2,255
	slli	a2,a2,0x4
	li	a4,3
	add	a2,a2,s4
	bne	a5,a4,0x1f8e8 # luaV_execute+0x980>
	j	0x20b36 # luaV_execute+0x1bce>
	andi	a5,a5,15
	bne	a5,a4,0x1f8f2 # luaV_execute+0x98a>
	j	0x20d56 # luaV_execute+0x1dee>
	ld	a5,8(s7)
	sd	s2,32(s7)
	li	a4,4
	sd	a5,16(s8)
	lbu	a5,8(s1)
	andi	a5,a5,15
	bne	a5,a4,0x1f918 # luaV_execute+0x9b0>
	lbu	a4,8(a2)
	andi	a4,a4,15
	bne	a4,a5,0x1f918 # luaV_execute+0x9b0>
	j	0x20e98 # luaV_execute+0x1f30>
	li	a3,21
	mv	a1,s1
	mv	a0,s8
	jal	ra,0x1d50a # luaT_callorderTM>
	lw	s3,40(s7)
	sext.w	s3,s3
	j	0x1f266 # luaV_execute+0x2fe>
	srliw	a2,s0,0x10
	lbu	a5,8(s1)
	andi	a2,a2,255
	slli	a2,a2,0x4
	li	a4,3
	add	a2,a2,s4
	bne	a5,a4,0x1f944 # luaV_execute+0x9dc>
	j	0x20b16 # luaV_execute+0x1bae>
	andi	a5,a5,15
	bne	a5,a4,0x1f94e # luaV_execute+0x9e6>
	j	0x20d50 # luaV_execute+0x1de8>
	ld	a5,8(s7)
	sd	s2,32(s7)
	li	a4,4
	sd	a5,16(s8)
	lbu	a5,8(s1)
	andi	a5,a5,15
	bne	a5,a4,0x1f974 # luaV_execute+0xa0c>
	lbu	a4,8(a2)
	andi	a4,a4,15
	bne	a4,a5,0x1f974 # luaV_execute+0xa0c>
	j	0x20ea8 # luaV_execute+0x1f40>
	li	a3,20
	mv	a1,s1
	mv	a0,s8
	jal	ra,0x1d50a # luaT_callorderTM>
	j	0x1f922 # luaV_execute+0x9ba>
	ld	a5,8(s7)
	srliw	a2,s0,0x10
	andi	a2,a2,255
	sd	s2,32(s7)
	slli	a2,a2,0x4
	sd	a5,16(s8)
	add	a2,a2,s4
	mv	a1,s1
	mv	a0,s8
	jal	ra,0x1eaae # luaV_equalobj>
	lw	s3,40(s7)
	srliw	a5,s0,0xf
	andi	a5,a5,1
	sext.w	s3,s3
	beq	a5,a0,0x1f270 # luaV_execute+0x308>
	addi	s2,s2,4
	j	0x1f232 # luaV_execute+0x2ca>
	ld	a5,8(s7)
	sd	s2,32(s7)
	mv	a1,s1
	sd	a5,16(s8)
	mv	a0,s8
	jal	ra,0x1576e # luaF_newtbcupval>
	bnez	s3,0x1f09e # luaV_execute+0x136>
	lw	s0,0(s2)
	j	0x1f01c # luaV_execute+0xb4>
	lw	s3,40(s7)
	lui	a1,0xff000
	addiw	a1,a1,1
	addw	a1,s5,a1
	slli	a1,a1,0x2
	sext.w	s3,s3
	add	s2,s2,a1
	bnez	s3,0x1f174 # luaV_execute+0x20c>
	lw	s0,0(s2)
	j	0x1f01c # luaV_execute+0xb4>
	ld	a5,8(s7)
	sd	s2,32(s7)
	li	a3,1
	sd	a5,16(s8)
	li	a2,0
	mv	a1,s1
	mv	a0,s8
	jal	ra,0x1587e # luaF_close>
	lw	s3,40(s7)
	sext.w	s3,s3
	bnez	s3,0x1f09e # luaV_execute+0x136>
	lw	s0,0(s2)
	j	0x1f01c # luaV_execute+0xb4>
	srliw	a1,s0,0x10
	andi	a1,a1,255
	slli	a5,a1,0x4
	add	s1,s1,a5
	sd	s1,16(s8)
	sd	s2,32(s7)
	li	a5,1
	beq	a1,a5,0x1fa40 # luaV_execute+0xad8>
	mv	a0,s8
	jal	ra,0x1e010 # luaV_concat.part.0>
	ld	a5,24(s8)
	lw	s3,40(s7)
	ld	a5,24(a5)
	sext.w	s3,s3
	blez	a5,0x1f09a # luaV_execute+0x132>
	sd	s2,32(s7)
	mv	a0,s8
	jal	ra,0x17420 # luaC_step>
	lw	s3,40(s7)
	sext.w	s3,s3
	beqz	s3,0x1f018 # luaV_execute+0xb0>
	j	0x1f09e # luaV_execute+0x136>
	ld	a5,8(s7)
	srliw	a2,s0,0x10
	andi	a2,a2,255
	sd	s2,32(s7)
	slli	a2,a2,0x4
	sd	a5,16(s8)
	add	a2,a2,s4
	mv	a1,s1
	mv	a0,s8
	jal	ra,0x1ecac # luaV_objlen>
	lw	s3,40(s7)
	sext.w	s3,s3
	bnez	s3,0x1f09e # luaV_execute+0x136>
	lw	s0,0(s2)
	j	0x1f01c # luaV_execute+0xb4>
	srliw	a5,s0,0x10
	andi	a5,a5,255
	slli	a5,a5,0x4
	add	a5,a5,s4
	lbu	a5,8(a5)
	li	a3,1
	li	a4,17
	beq	a5,a3,0x1fab8 # luaV_execute+0xb50>
	andi	a5,a5,15
	beqz	a5,0x1fab8 # luaV_execute+0xb50>
	li	a4,1
	sb	a4,8(s1)
	bnez	s3,0x1f09e # luaV_execute+0x136>
	lw	s0,0(s2)
	j	0x1f01c # luaV_execute+0xb4>
	srliw	s0,s0,0x10
	andi	s0,s0,255
	slli	s0,s0,0x4
	add	s0,s0,s4
	lbu	a5,8(s0)
	li	a4,3
	beq	a5,a4,0x1fae2 # luaV_execute+0xb7a>
	j	0x20eb8 # luaV_execute+0x1f50>
	ld	a5,0(s0)
	not	a5,a5
	sd	a5,0(s1)
	li	a5,3
	sb	a5,8(s1)
	beqz	s3,0x1f018 # luaV_execute+0xb0>
	j	0x1f09e # luaV_execute+0x136>
	srliw	a2,s0,0x10
	andi	a2,a2,255
	slli	a2,a2,0x4
	add	a2,a2,s4
	lbu	a5,8(a2)
	li	a4,3
	bne	a5,a4,0x1fb12 # luaV_execute+0xbaa>
	j	0x20afe # luaV_execute+0x1b96>
	li	a4,19
	bne	a5,a4,0x1fb1c # luaV_execute+0xbb4>
	j	0x20d38 # luaV_execute+0x1dd0>
	ld	a5,8(s7)
	sd	s2,32(s7)
	li	a4,18
	sd	a5,16(s8)
	mv	a3,s1
	mv	a1,a2
	mv	a0,s8
	jal	ra,0x1d40e # luaT_trybinTM>
	lw	s3,40(s7)
	sext.w	s3,s3
	beqz	s3,0x1f018 # luaV_execute+0xb0>
	j	0x1f09e # luaV_execute+0x136>
	lw	a4,-8(s2)
	ld	a5,8(s7)
	srliw	a2,s0,0x10
	srliw	a4,a4,0x7
	andi	a4,a4,255
	sd	s2,32(s7)
	slli	a4,a4,0x4
	andi	a2,a2,255
	srliw	a3,s0,0xf
	sd	a5,16(s8)
	add	a4,a4,s4
	srliw	a5,s0,0x18
	andi	a3,a3,1
	addiw	a2,a2,-127
	mv	a1,s1
	mv	a0,s8
	jal	ra,0x1d4da # luaT_trybiniTM>
	lw	s3,40(s7)
	sext.w	s3,s3
	bnez	s3,0x1f09e # luaV_execute+0x136>
	lw	s0,0(s2)
	j	0x1f01c # luaV_execute+0xb4>
	lw	a3,-8(s2)
	ld	a5,8(s7)
	srliw	a2,s0,0x10
	srliw	a3,a3,0x7
	andi	a3,a3,255
	andi	a2,a2,255
	sd	s2,32(s7)
	slli	a3,a3,0x4
	slli	a2,a2,0x4
	sd	a5,16(s8)
	srliw	a4,s0,0x18
	add	a3,a3,s4
	add	a2,a2,s4
	mv	a1,s1
	mv	a0,s8
	jal	ra,0x1d40e # luaT_trybinTM>
	lw	s3,40(s7)
	sext.w	s3,s3
	bnez	s3,0x1f09e # luaV_execute+0x136>
	lw	s0,0(s2)
	j	0x1f01c # luaV_execute+0xb4>
	srliw	a5,s0,0x10
	andi	a5,a5,255
	slli	a5,a5,0x4
	add	a5,a5,s4
	lbu	a4,8(a5)
	srliw	s0,s0,0x18
	slli	s0,s0,0x4
	li	a3,3
	add	s0,s0,s4
	beq	a4,a3,0x1fbf6 # luaV_execute+0xc8e>
	j	0x211fc # luaV_execute+0x2294>
	ld	s11,0(a5)
	lbu	a5,8(s0)
	li	a4,3
	beq	a5,a4,0x1fc08 # luaV_execute+0xca0>
	j	0x2123a # luaV_execute+0x22d2>
	ld	a5,0(s0)
	addi	s5,s2,4
	bltz	a5,0x20996 # luaV_execute+0x1a2e>
	li	a3,63
	li	a4,0
	blt	a3,a5,0x1fc20 # luaV_execute+0xcb8>
	sll	a4,s11,a5
	li	a5,3
	sd	a4,0(s1)
	sb	a5,8(s1)
	bnez	s3,0x1ffd4 # luaV_execute+0x106c>
	lw	s0,0(s5)
	addi	s2,s5,4
	j	0x1f01e # luaV_execute+0xb6>
	lw	a4,-8(s2)
	ld	a5,8(s7)
	srliw	a2,s0,0x10
	srliw	a4,a4,0x7
	andi	a4,a4,255
	andi	a2,a2,255
	sd	s2,32(s7)
	slli	a4,a4,0x4
	slli	a2,a2,0x4
	srliw	a3,s0,0xf
	sd	a5,16(s8)
	add	a4,a4,s4
	srliw	a5,s0,0x18
	andi	a3,a3,1
	add	a2,a2,s9
	mv	a1,s1
	mv	a0,s8
	jal	ra,0x1d4c6 # luaT_trybinassocTM>
	lw	s3,40(s7)
	sext.w	s3,s3
	bnez	s3,0x1f09e # luaV_execute+0x136>
	lw	s0,0(s2)
	j	0x1f01c # luaV_execute+0xb4>
	srliw	a5,s0,0x10
	andi	a5,a5,255
	slli	a5,a5,0x4
	add	a5,a5,s4
	lbu	a4,8(a5)
	srliw	s0,s0,0x18
	slli	s0,s0,0x4
	li	a3,3
	add	s0,s0,s4
	beq	a4,a3,0x1fca6 # luaV_execute+0xd3e>
	j	0x211be # luaV_execute+0x2256>
	ld	s11,0(a5)
	lbu	a5,8(s0)
	li	a4,3
	beq	a5,a4,0x1fcb8 # luaV_execute+0xd50>
	j	0x212e2 # luaV_execute+0x237a>
	ld	a5,0(s0)
	addi	s5,s2,4
	bgtz	a5,0x209ac # luaV_execute+0x1a44>
	li	a3,-63
	li	a4,0
	blt	a5,a3,0x1fc20 # luaV_execute+0xcb8>
	neg	a5,a5
	sll	a4,s11,a5
	j	0x1fc20 # luaV_execute+0xcb8>
	srliw	a5,s0,0x10
	andi	a5,a5,255
	slli	a5,a5,0x4
	add	a5,a5,s4
	lbu	a4,8(a5)
	srliw	s0,s0,0x18
	slli	s0,s0,0x4
	li	a3,3
	add	s0,s0,s4
	beq	a4,a3,0x1fcf8 # luaV_execute+0xd90>
	j	0x21170 # luaV_execute+0x2208>
	ld	s5,0(a5)
	lbu	a5,8(s0)
	li	a4,3
	beq	a5,a4,0x1fd0a # luaV_execute+0xda2>
	j	0x2129c # luaV_execute+0x2334>
	ld	a5,0(s0)
	xor	s5,s5,a5
	li	a5,3
	addi	s11,s2,4
	sd	s5,0(s1)
	sb	a5,8(s1)
	bnez	s3,0x20278 # luaV_execute+0x1310>
	lw	s0,0(s11)
	addi	s2,s11,4
	j	0x1f01e # luaV_execute+0xb6>
	srliw	a5,s0,0x10
	andi	a5,a5,255
	slli	a5,a5,0x4
	add	a5,a5,s4
	lbu	a4,8(a5)
	li	a3,19
	srliw	s0,s0,0x18
	beq	a4,a3,0x20ae6 # luaV_execute+0x1b7e>
	li	a3,3
	bne	a4,a3,0x1f132 # luaV_execute+0x1ca>
	ld	a5,0(a5)
	li	a3,19
	fcvt.d.l	fa0,a5
	slli	a5,s0,0x20
	srli	a5,a5,0x1c
	add	a5,a5,s9
	lbu	a4,8(a5)
	beq	a4,a3,0x20afa # luaV_execute+0x1b92>
	li	a3,3
	bne	a4,a3,0x1f132 # luaV_execute+0x1ca>
	ld	a5,0(a5)
	addi	s2,s2,4
	fcvt.d.l	fa1,a5
	auipc	a5,0x22
	fld	fa5,852(a5) # 0x420c8 # log_2.0+0x178>
	feq.d	a5,fa1,fa5
	bnez	a5,0x20bd4 # luaV_execute+0x1c6c>
	jal	ra,0x32528 # pow>
	j	0x20bd8 # luaV_execute+0x1c70>
	srliw	a5,s0,0x10
	andi	a5,a5,255
	slli	a5,a5,0x4
	add	a5,a5,s4
	lbu	a3,8(a5)
	srliw	a4,s0,0x18
	slli	a4,a4,0x4
	li	a2,3
	add	a4,a4,s4
	beq	a3,a2,0x201ce # luaV_execute+0x1266>
	li	a1,19
	addi	s5,s2,4
	beq	a3,a1,0x206e4 # luaV_execute+0x177c>
	bnez	s3,0x1fe8a # luaV_execute+0xf22>
	lw	s0,0(s2)
	mv	s2,s5
	j	0x1f01e # luaV_execute+0xb6>
	srliw	a5,s0,0x10
	andi	a5,a5,255
	slli	a5,a5,0x4
	add	a5,a5,s4
	lbu	a3,8(a5)
	srliw	a4,s0,0x18
	slli	a4,a4,0x4
	li	a2,3
	add	a4,a4,s4
	beq	a3,a2,0x20c18 # luaV_execute+0x1cb0>
	li	a1,19
	addi	s5,s2,4
	bne	a3,a1,0x1fdb4 # luaV_execute+0xe4c>
	lbu	a1,8(a4) # 0xffffffffffff0008 # __BSS_END__+0xfffffffffffa1c80>
	fld	fa4,0(a5)
	beq	a1,a3,0x20c30 # luaV_execute+0x1cc8>
	bne	a1,a2,0x1fdb4 # luaV_execute+0xe4c>
	ld	a5,0(a4)
	mv	s2,s5
	fcvt.d.l	fa5,a5
	j	0x20aa0 # luaV_execute+0x1b38>
	srliw	a5,s0,0x10
	andi	a5,a5,255
	li	a3,-1
	sb	zero,8(s1)
	addiw	a5,a5,-1
	addi	s1,s1,16
	bne	a5,a3,0x1fe0e # luaV_execute+0xea6>
	beqz	s3,0x1f018 # luaV_execute+0xb0>
	j	0x1f09e # luaV_execute+0x136>
	li	a5,1
	sb	a5,8(s1)
	addi	s2,s2,4
	bnez	s3,0x1f174 # luaV_execute+0x20c>
	lw	s0,0(s2)
	j	0x1f01c # luaV_execute+0xb4>
	srliw	a5,s0,0x10
	andi	a5,a5,255
	slli	a5,a5,0x4
	add	a5,a5,s4
	lbu	a3,8(a5)
	srliw	a4,s0,0x18
	slli	a4,a4,0x4
	li	a2,3
	add	a4,a4,s4
	beq	a3,a2,0x2044a # luaV_execute+0x14e2>
	li	a1,19
	addi	s5,s2,4
	bne	a3,a1,0x1fdb4 # luaV_execute+0xe4c>
	lbu	a1,8(a4)
	fld	fa5,0(a5)
	beq	a1,a3,0x20462 # luaV_execute+0x14fa>
	bne	a1,a2,0x1fdb4 # luaV_execute+0xe4c>
	ld	a5,0(a4)
	mv	s2,s5
	fcvt.d.l	fa0,a5
	fdiv.d	fa0,fa5,fa0
	addi	s5,s5,4
	jal	ra,0x31cd0 # floor>
	li	a5,19
	sb	a5,8(s1)
	fsd	fa0,0(s1)
	beqz	s3,0x1fdb8 # luaV_execute+0xe50>
	mv	a1,s2
	mv	a0,s8
	jal	ra,0x13f0e # luaG_traceexec>
	ld	s4,0(s7)
	mv	s3,a0
	addi	s4,s4,16
	j	0x1fdb8 # luaV_execute+0xe50>
	srliw	a5,s0,0x10
	andi	a5,a5,255
	slli	a5,a5,0x4
	add	a5,a5,s4
	lbu	a3,8(a5)
	srliw	a4,s0,0x18
	slli	a4,a4,0x4
	li	a2,19
	add	a4,a4,s4
	beq	a3,a2,0x20bb4 # luaV_execute+0x1c4c>
	li	a2,3
	bne	a3,a2,0x1f132 # luaV_execute+0x1ca>
	ld	a5,0(a5)
	li	a3,19
	fcvt.d.l	fa0,a5
	lbu	a5,8(a4)
	beq	a5,a3,0x20bc0 # luaV_execute+0x1c58>
	li	a3,3
	bne	a5,a3,0x1f132 # luaV_execute+0x1ca>
	ld	a5,0(a4)
	fcvt.d.l	fa1,a5
	j	0x20bc2 # luaV_execute+0x1c5a>
	srliw	s5,s0,0x10
	andi	s5,s5,255
	srliw	a4,s0,0x18
	srliw	s11,s0,0x18
	beqz	s5,0x1fefc # luaV_execute+0xf94>
	addiw	s5,s5,-1
	li	a5,1
	sllw	s5,a5,s5
	srli	a5,s0,0xf
	andi	a5,a5,1
	beqz	a5,0x1ff14 # luaV_execute+0xfac>
	lw	a5,0(s2)
	srliw	a5,a5,0x7
	slliw	a5,a5,0x8
	addw	s11,a5,a4
	addi	s0,s1,16
	sd	s0,16(s8)
	mv	a0,s8
	jal	ra,0x1c4ce # luaH_new>
	li	a4,69
	sd	a0,0(s1)
	sb	a4,8(s1)
	or	a5,s5,s11
	addi	s2,s2,4
	bnez	a5,0x20c36 # luaV_execute+0x1cce>
	ld	a5,24(s8)
	ld	a5,24(a5)
	blez	a5,0x1f132 # luaV_execute+0x1ca>
	sd	s2,32(s7)
	sd	s0,16(s8)
	mv	a0,s8
	jal	ra,0x17420 # luaC_step>
	lw	s3,40(s7)
	sext.w	s3,s3
	beqz	s3,0x1f136 # luaV_execute+0x1ce>
	j	0x1f174 # luaV_execute+0x20c>
	srliw	a4,s0,0x10
	andi	a4,a4,255
	srli	a5,s0,0xf
	slli	a4,a4,0x4
	srliw	a3,s0,0x18
	andi	a5,a5,1
	add	a2,s9,a4
	slli	a3,a3,0x4
	bnez	a5,0x20676 # luaV_execute+0x170e>
	lbu	a0,8(s1)
	li	a5,69
	ld	a1,0(a2)
	add	a3,a3,s4
	li	a4,0
	beq	a0,a5,0x20688 # luaV_execute+0x1720>
	ld	a5,8(s7)
	sd	s2,32(s7)
	sd	a5,16(s8)
	j	0x1f08c # luaV_execute+0x124>
	srliw	a5,s0,0x10
	andi	a5,a5,255
	slli	a5,a5,0x4
	add	a5,a5,s4
	srliw	a4,s0,0x18
	lbu	a3,8(a5)
	slli	a4,a4,0x4
	add	a4,a4,s9
	li	a2,3
	ld	s0,0(a4)
	beq	a3,a2,0x1ffc0 # luaV_execute+0x1058>
	j	0x21122 # luaV_execute+0x21ba>
	ld	a5,0(a5)
	or	a5,a5,s0
	sd	a5,0(s1)
	li	a5,3
	sb	a5,8(s1)
	addi	s5,s2,4
	beqz	s3,0x1fc2c # luaV_execute+0xcc4>
	mv	a1,s5
	mv	a0,s8
	jal	ra,0x13f0e # luaG_traceexec>
	ld	s4,0(s7)
	mv	s3,a0
	addi	s4,s4,16
	j	0x1fc2c # luaV_execute+0xcc4>
	srliw	a5,s0,0x10
	andi	a5,a5,255
	slli	a5,a5,0x4
	add	a5,a5,s4
	srliw	a4,s0,0x18
	lbu	a3,8(a5)
	slli	a4,a4,0x4
	add	a4,a4,s9
	li	a2,3
	ld	s0,0(a4)
	beq	a3,a2,0x2000a # luaV_execute+0x10a2>
	j	0x210d4 # luaV_execute+0x216c>
	ld	a5,0(a5)
	and	a5,a5,s0
	sd	a5,0(s1)
	li	a5,3
	addi	s5,s2,4
	sb	a5,8(s1)
	j	0x1fc28 # luaV_execute+0xcc0>
	srliw	a5,s0,0x10
	andi	a5,a5,255
	addi	a5,a5,4
	slli	a5,a5,0x3
	add	a5,a5,s10
	ld	a5,0(a5)
	ld	a5,16(a5)
	j	0x1f008 # luaV_execute+0xa0>
	li	a5,17
	sb	a5,8(s1)
	beqz	s3,0x20040 # luaV_execute+0x10d8>
	j	0x1f09e # luaV_execute+0x136>
	lw	s0,0(s2)
	j	0x1f01c # luaV_execute+0xb4>
	li	a5,1
	sb	a5,8(s1)
	beqz	s3,0x20056 # luaV_execute+0x10ee>
	j	0x1f09e # luaV_execute+0x136>
	lw	s0,0(s2)
	j	0x1f01c # luaV_execute+0xb4>
	lw	a5,0(s2)
	addi	s2,s2,4
	srliw	a5,a5,0x7
	slli	a5,a5,0x4
	add	a5,a5,s9
	ld	a4,0(a5)
	sd	a4,0(s1)
	lbu	a5,8(a5)
	sb	a5,8(s1)
	bnez	s3,0x1f174 # luaV_execute+0x20c>
	lw	s0,0(s2)
	j	0x1f01c # luaV_execute+0xb4>
	srliw	a5,s0,0x10
	andi	a5,a5,255
	slli	a5,a5,0x4
	add	a5,a5,s4
	lbu	a3,8(a5)
	srliw	a4,s0,0x18
	slli	a4,a4,0x4
	li	a2,3
	add	a4,a4,s9
	beq	a3,a2,0x203a2 # luaV_execute+0x143a>
	li	a1,19
	addi	s5,s2,4
	bne	a3,a1,0x1fdb4 # luaV_execute+0xe4c>
	lbu	a1,8(a4)
	fld	fa5,0(a5)
	beq	a1,a3,0x203ba # luaV_execute+0x1452>
	bne	a1,a2,0x1fdb4 # luaV_execute+0xe4c>
	ld	a5,0(a4)
	mv	s2,s5
	fcvt.d.l	fa4,a5
	fmul.d	fa5,fa5,fa4
	li	a5,19
	sb	a5,8(s1)
	addi	s5,s5,4
	fsd	fa5,0(s1)
	j	0x1fdb4 # luaV_execute+0xe4c>
	srliw	a5,s0,0x10
	andi	a5,a5,255
	slli	a5,a5,0x4
	add	a5,a5,s4
	lbu	a3,8(a5)
	srliw	a4,s0,0x18
	slli	a4,a4,0x4
	li	a2,3
	add	a4,a4,s9
	beq	a3,a2,0x20a84 # luaV_execute+0x1b1c>
	li	a1,19
	addi	s5,s2,4
	bne	a3,a1,0x1fdb4 # luaV_execute+0xe4c>
	lbu	a1,8(a4)
	fld	fa5,0(a5)
	beq	a1,a3,0x20a9c # luaV_execute+0x1b34>
	bne	a1,a2,0x1fdb4 # luaV_execute+0xe4c>
	ld	a5,0(a4)
	mv	s2,s5
	fcvt.d.l	fa4,a5
	j	0x20aa0 # luaV_execute+0x1b38>
	srliw	a5,s0,0x10
	andi	a5,a5,255
	slli	a5,a5,0x4
	add	a5,a5,s4
	lbu	a3,8(a5)
	srliw	a4,s0,0x18
	li	a2,3
	addiw	a1,a4,-127
	beq	a3,a2,0x20bf8 # luaV_execute+0x1c90>
	li	a2,19
	addi	s0,s2,4
	beq	a3,a2,0x20d5c # luaV_execute+0x1df4>
	mv	a5,s0
	mv	s0,s2
	mv	s2,a5
	bnez	s3,0x20db0 # luaV_execute+0x1e48>
	lw	s0,0(s0)
	j	0x1f01e # luaV_execute+0xb6>
	srliw	s5,s0,0x10
	andi	s5,s5,255
	srli	a5,s0,0xf
	slli	s5,s5,0x4
	srliw	a2,s0,0x18
	andi	a5,a5,1
	add	s5,s5,s4
	slli	a2,a2,0x4
	beqz	a5,0x208da # luaV_execute+0x1972>
	add	a2,a2,s9
	ld	a4,0(s5)
	ld	a1,0(a2)
	li	a5,69
	sd	a4,16(s1)
	lbu	a3,8(s5)
	li	a4,0
	sb	a3,24(s1)
	lbu	a3,8(s5)
	beq	a3,a5,0x20bec # luaV_execute+0x1c84>
	ld	a5,8(s7)
	sd	s2,32(s7)
	mv	a3,s1
	sd	a5,16(s8)
	mv	a1,s5
	mv	a0,s8
	jal	ra,0x1e74c # luaV_finishget>
	lw	s3,40(s7)
	sext.w	s3,s3
	bnez	s3,0x201ac # luaV_execute+0x1244>
	j	0x1f018 # luaV_execute+0xb0>
	j	0x1f09e # luaV_execute+0x136>
	srliw	a5,s0,0x10
	andi	a5,a5,255
	slli	a5,a5,0x4
	add	a5,a5,s4
	lbu	a3,8(a5)
	srliw	a4,s0,0x18
	slli	a4,a4,0x4
	li	a2,3
	add	a4,a4,s9
	bne	a3,a2,0x1fdaa # luaV_execute+0xe42>
	lbu	a2,8(a4)
	addi	s5,s2,4
	beq	a2,a3,0x20d06 # luaV_execute+0x1d9e>
	li	a3,19
	ld	a5,0(a5)
	bne	a2,a3,0x1fdb4 # luaV_execute+0xe4c>
	fcvt.d.l	fa5,a5
	fld	fa4,0(a4)
	mv	s2,s5
	j	0x206fa # luaV_execute+0x1792>
	srliw	a5,s0,0x10
	andi	a5,a5,255
	slli	a5,a5,0x4
	add	a5,a5,s4
	lbu	a4,8(a5)
	li	a3,3
	srliw	s0,s0,0x18
	bne	a4,a3,0x20fe4 # luaV_execute+0x207c>
	ld	a2,0(a5)
	li	a5,127
	subw	a4,a5,s0
	addi	s5,s2,4
	bltz	a4,0x20934 # luaV_execute+0x19cc>
	li	a5,63
	li	a3,0
	blt	a5,a4,0x20226 # luaV_execute+0x12be>
	sll	a3,a2,a4
	li	a5,3
	sd	a3,0(s1)
	sb	a5,8(s1)
	j	0x1fc28 # luaV_execute+0xcc0>
	srliw	a5,s0,0x10
	andi	a5,a5,255
	slli	a5,a5,0x4
	add	a5,a5,s4
	lbu	a4,8(a5)
	srliw	s0,s0,0x18
	slli	s0,s0,0x4
	li	a3,3
	add	s0,s0,s4
	bne	a4,a3,0x20f96 # luaV_execute+0x202e>
	ld	s5,0(a5)
	lbu	a5,8(s0)
	li	a4,3
	beq	a5,a4,0x20260 # luaV_execute+0x12f8>
	j	0x2136e # luaV_execute+0x2406>
	ld	a5,0(s0)
	and	s5,s5,a5
	li	a5,3
	sd	s5,0(s1)
	sb	a5,8(s1)
	addi	s11,s2,4
	beqz	s3,0x1fd22 # luaV_execute+0xdba>
	mv	a1,s11
	mv	a0,s8
	jal	ra,0x13f0e # luaG_traceexec>
	ld	s4,0(s7)
	mv	s3,a0
	addi	s4,s4,16
	j	0x1fd22 # luaV_execute+0xdba>
	srliw	a5,s0,0x10
	andi	a5,a5,255
	slli	a5,a5,0x4
	add	a5,a5,s4
	lbu	a3,8(a5)
	srliw	a4,s0,0x18
	slli	a4,a4,0x4
	li	a2,19
	add	a4,a4,s4
	beq	a3,a2,0x20abe # luaV_execute+0x1b56>
	li	a2,3
	beq	a3,a2,0x202b2 # luaV_execute+0x134a>
	j	0x1f132 # luaV_execute+0x1ca>
	ld	a5,0(a5)
	li	a3,19
	fcvt.d.l	fa5,a5
	lbu	a5,8(a4)
	beq	a5,a3,0x20aca # luaV_execute+0x1b62>
	li	a3,3
	beq	a5,a3,0x202cc # luaV_execute+0x1364>
	j	0x1f132 # luaV_execute+0x1ca>
	ld	a5,0(a4)
	fcvt.d.l	fa4,a5
	j	0x20acc # luaV_execute+0x1b64>
	srliw	a5,s0,0x10
	andi	a5,a5,255
	slli	a5,a5,0x4
	add	a5,a5,s4
	lbu	a4,8(a5)
	srliw	s0,s0,0x18
	slli	s0,s0,0x4
	li	a3,3
	add	s0,s0,s4
	bne	a4,a3,0x20f48 # luaV_execute+0x1fe0>
	ld	s5,0(a5)
	lbu	a5,8(s0)
	li	a4,3
	beq	a5,a4,0x20306 # luaV_execute+0x139e>
	j	0x21320 # luaV_execute+0x23b8>
	ld	a5,0(s0)
	or	s5,s5,a5
	li	a5,3
	addi	s11,s2,4
	sd	s5,0(s1)
	sb	a5,8(s1)
	j	0x1fd1e # luaV_execute+0xdb6>
	srliw	a5,s0,0x10
	andi	a5,a5,255
	slli	a5,a5,0x4
	add	a5,a5,s4
	lbu	a3,8(a5)
	srliw	a4,s0,0x18
	slli	a4,a4,0x4
	li	a2,3
	add	a4,a4,s4
	beq	a3,a2,0x20570 # luaV_execute+0x1608>
	li	a1,19
	addi	s5,s2,4
	bne	a3,a1,0x1fdb4 # luaV_execute+0xe4c>
	lbu	a1,8(a4)
	fld	fa0,0(a5)
	beq	a1,a3,0x20588 # luaV_execute+0x1620>
	bne	a1,a2,0x1fdb4 # luaV_execute+0xe4c>
	ld	a5,0(a4)
	mv	s2,s5
	fcvt.d.l	fs4,a5
	fmv.d	fa1,fs4
	jal	ra,0x31d78 # fmod>
	fmv.d.x	fa5,zero
	flt.d	a5,fa5,fa0
	beqz	a5,0x205a2 # luaV_execute+0x163a>
	flt.d	a5,fs4,fa5
	beqz	a5,0x20378 # luaV_execute+0x1410>
	fadd.d	fa0,fa0,fs4
	li	a5,19
	fsd	fa0,0(s1)
	sb	a5,8(s1)
	addi	s5,s5,4
	j	0x1fdb4 # luaV_execute+0xe4c>
	srliw	a5,s0,0x10
	andi	a5,a5,255
	slli	a5,a5,0x4
	add	a5,a5,s4
	lbu	a3,8(a5)
	srliw	a4,s0,0x18
	slli	a4,a4,0x4
	li	a2,3
	add	a4,a4,s4
	bne	a3,a2,0x200a2 # luaV_execute+0x113a>
	lbu	a2,8(a4)
	addi	s5,s2,4
	beq	a2,a3,0x20d1e # luaV_execute+0x1db6>
	li	a3,19
	ld	a5,0(a5)
	bne	a2,a3,0x1fdb4 # luaV_execute+0xe4c>
	fcvt.d.l	fa5,a5
	fld	fa4,0(a4)
	mv	s2,s5
	j	0x200c2 # luaV_execute+0x115a>
	srliw	a5,s0,0x10
	andi	a5,a5,255
	slli	a5,a5,0x4
	add	a5,a5,s4
	lbu	a4,8(a5)
	srliw	s0,s0,0x18
	li	a3,3
	addiw	s0,s0,-127
	bne	a4,a3,0x21032 # luaV_execute+0x20ca>
	ld	a5,0(a5)
	addi	s5,s2,4
	bltz	a5,0x20966 # luaV_execute+0x19fe>
	li	a3,63
	li	a4,0
	blt	a3,a5,0x1fc20 # luaV_execute+0xcb8>
	sll	a4,s0,a5
	j	0x1fc20 # luaV_execute+0xcb8>
	srliw	a5,s0,0x10
	andi	a5,a5,255
	slli	a5,a5,0x4
	add	a5,a5,s4
	srliw	a4,s0,0x18
	lbu	a3,8(a5)
	slli	a4,a4,0x4
	add	a4,a4,s9
	li	a2,3
	ld	s0,0(a4)
	bne	a3,a2,0x20ed4 # luaV_execute+0x1f6c>
	ld	a5,0(a5)
	xor	a5,a5,s0
	sd	a5,0(s1)
	li	a5,3
	addi	s5,s2,4
	sb	a5,8(s1)
	j	0x1fc28 # luaV_execute+0xcc0>
	srliw	a5,s0,0x10
	andi	a5,a5,255
	slli	a5,a5,0x4
	add	a5,a5,s4
	lbu	a3,8(a5)
	srliw	a4,s0,0x18
	slli	a4,a4,0x4
	li	a2,3
	add	a4,a4,s9
	bne	a3,a2,0x1fe54 # luaV_execute+0xeec>
	lbu	a2,8(a4)
	addi	s5,s2,4
	beq	a2,a3,0x20de2 # luaV_execute+0x1e7a>
	li	a3,19
	ld	a5,0(a5)
	bne	a2,a3,0x1fdb4 # luaV_execute+0xe4c>
	fcvt.d.l	fa5,a5
	fld	fa0,0(a4)
	mv	s2,s5
	j	0x1fe74 # luaV_execute+0xf0c>
	srliw	a5,s0,0x10
	andi	a5,a5,255
	slli	a5,a5,0x4
	add	a5,a5,s4
	lbu	a4,8(a5)
	li	a3,19
	srliw	s0,s0,0x18
	beq	a4,a3,0x20b9c # luaV_execute+0x1c34>
	li	a3,3
	beq	a4,a3,0x2048c # luaV_execute+0x1524>
	j	0x1f132 # luaV_execute+0x1ca>
	ld	a5,0(a5)
	li	a3,19
	fcvt.d.l	fa5,a5
	slli	a5,s0,0x20
	srli	a5,a5,0x1c
	add	a5,a5,s9
	lbu	a4,8(a5)
	beq	a4,a3,0x20bb0 # luaV_execute+0x1c48>
	li	a3,3
	beq	a4,a3,0x204ae # luaV_execute+0x1546>
	j	0x1f132 # luaV_execute+0x1ca>
	ld	a5,0(a5)
	fcvt.d.l	fa4,a5
	j	0x20acc # luaV_execute+0x1b64>
	srliw	a5,s0,0x10
	andi	a5,a5,255
	slli	a5,a5,0x4
	add	s5,s4,a5
	srliw	a2,s0,0x18
	lbu	a3,8(s5)
	slli	a2,a2,0x4
	add	a2,a2,s9
	li	a5,69
	ld	a1,0(a2)
	li	a4,0
	bne	a3,a5,0x20188 # luaV_execute+0x1220>
	ld	a0,0(s5)
	sd	a2,0(sp)
	jal	ra,0x1c614 # luaH_getshortstr>
	lbu	a5,8(a0)
	ld	a2,0(sp)
	mv	a4,a0
	andi	a3,a5,15
	beqz	a3,0x20188 # luaV_execute+0x1220>
	j	0x2053e # luaV_execute+0x15d6>
	srliw	s5,s0,0x10
	andi	s5,s5,255
	slli	s5,s5,0x4
	add	s5,s5,s4
	lbu	a4,8(s5)
	li	a5,69
	srliw	s0,s0,0x18
	bne	a4,a5,0x2079a # luaV_execute+0x1832>
	ld	a0,0(s5)
	slli	s0,s0,0x20
	srli	s0,s0,0x20
	lwu	a5,12(a0)
	addi	a4,s0,-1
	bleu	a5,a4,0x20dd6 # luaV_execute+0x1e6e>
	ld	a4,16(a0)
	slli	a5,s0,0x4
	addi	a5,a5,-16
	add	a4,a4,a5
	lbu	a5,8(a4)
	andi	a3,a5,15
	beqz	a3,0x207a0 # luaV_execute+0x1838>
	ld	a4,0(a4)
	sb	a5,8(s1)
	sd	a4,0(s1)
	bnez	s3,0x2054e # luaV_execute+0x15e6>
	j	0x1f018 # luaV_execute+0xb0>
	j	0x1f09e # luaV_execute+0x136>
	srliw	a5,s0,0x10
	andi	a5,a5,255
	slli	a5,a5,0x4
	add	a5,a5,s4
	lbu	a3,8(a5)
	srliw	a4,s0,0x18
	slli	a4,a4,0x4
	li	a2,3
	add	a4,a4,s9
	bne	a3,a2,0x2033a # luaV_execute+0x13d2>
	lbu	a2,8(a4)
	addi	s5,s2,4
	beq	a2,a3,0x20e0c # luaV_execute+0x1ea4>
	li	a3,19
	ld	a5,0(a5)
	bne	a2,a3,0x1fdb4 # luaV_execute+0xe4c>
	fcvt.d.l	fa0,a5
	fld	fs4,0(a4)
	mv	s2,s5
	fmv.d	fa1,fs4
	jal	ra,0x31d78 # fmod>
	fmv.d.x	fa5,zero
	flt.d	a5,fa5,fa0
	bnez	a5,0x2036e # luaV_execute+0x1406>
	flt.d	a5,fa0,fa5
	beqz	a5,0x20378 # luaV_execute+0x1410>
	flt.d	a5,fa5,fs4
	beqz	a5,0x20378 # luaV_execute+0x1410>
	fadd.d	fa0,fa0,fs4
	j	0x20378 # luaV_execute+0x1410>
	srli	a5,s0,0xf
	srliw	a4,s0,0x10
	srliw	a3,s0,0x18
	andi	a5,a5,1
	andi	s5,a4,255
	slli	a3,a3,0x4
	beqz	a5,0x208d6 # luaV_execute+0x196e>
	add	a3,a3,s9
	lbu	a4,8(s1)
	li	a5,69
	bne	a4,a5,0x2077e # luaV_execute+0x1816>
	ld	a0,0(s1)
	addi	a5,s5,-1
	lwu	a4,12(a0)
	bleu	a4,a5,0x20dc6 # luaV_execute+0x1e5e>
	ld	a5,16(a0)
	slli	a4,s5,0x4
	addi	a4,a4,-16
	add	a4,a4,a5
	lbu	a5,8(a4)
	andi	a5,a5,15
	beqz	a5,0x20780 # luaV_execute+0x1818>
	ld	a5,0(a3)
	sd	a5,0(a4)
	lbu	a5,8(a3)
	sb	a5,8(a4)
	lbu	a5,8(a3)
	andi	a5,a5,64
	bnez	a5,0x2061a # luaV_execute+0x16b2>
	j	0x1f09a # luaV_execute+0x132>
	ld	a1,0(s1)
	lbu	a5,9(a1) # 0xffffffffff000009 # __BSS_END__+0xfffffffffefb1c81>
	andi	a5,a5,32
	bnez	a5,0x2062a # luaV_execute+0x16c2>
	j	0x1f09a # luaV_execute+0x132>
	ld	a5,0(a3)
	lbu	a5,9(a5)
	andi	a5,a5,24
	bnez	a5,0x20638 # luaV_execute+0x16d0>
	j	0x1f09a # luaV_execute+0x132>
	mv	a0,s8
	jal	ra,0x170d0 # luaC_barrierback_>
	bnez	s3,0x20646 # luaV_execute+0x16de>
	j	0x1f018 # luaV_execute+0xb0>
	j	0x1f09e # luaV_execute+0x136>
	andi	a5,s5,255
	addi	a5,a5,4
	slli	a5,a5,0x3
	add	a5,a5,s10
	ld	a3,0(a5)
	srliw	a4,s0,0x10
	andi	a4,a4,255
	srli	a5,s0,0xf
	ld	s1,16(a3)
	slli	a4,a4,0x4
	srliw	a3,s0,0x18
	andi	a5,a5,1
	add	a2,s9,a4
	slli	a3,a3,0x4
	beqz	a5,0x1ff7a # luaV_execute+0x1012>
	lbu	a0,8(s1)
	li	a5,69
	ld	a1,0(a2)
	add	a3,a3,s9
	li	a4,0
	bne	a0,a5,0x1ff8c # luaV_execute+0x1024>
	sd	a2,8(sp)
	sd	a3,0(sp)
	ld	a0,0(s1)
	jal	ra,0x1c614 # luaH_getshortstr>
	lbu	a5,8(a0)
	ld	a3,0(sp)
	ld	a2,8(sp)
	andi	a5,a5,15
	mv	a4,a0
	beqz	a5,0x1ff8c # luaV_execute+0x1024>
	j	0x20600 # luaV_execute+0x1698>
	srliw	s5,s0,0x18
	slli	s5,s5,0x4
	add	s5,s5,s4
	srliw	s0,s0,0x10
	andi	s0,s0,255
	lbu	a4,8(s5)
	slli	s0,s0,0x4
	add	s0,s0,s4
	li	a5,3
	lbu	a3,8(s0)
	beq	a4,a5,0x20a38 # luaV_execute+0x1ad0>
	li	a5,69
	li	a4,0
	beq	a3,a5,0x20e3a # luaV_execute+0x1ed2>
	ld	a5,8(s7)
	sd	s2,32(s7)
	mv	a3,s1
	sd	a5,16(s8)
	mv	a2,s5
	j	0x1f868 # luaV_execute+0x900>
	lbu	a1,8(a4)
	fld	fa5,0(a5)
	beq	a1,a3,0x201e6 # luaV_execute+0x127e>
	bne	a1,a2,0x1fdb4 # luaV_execute+0xe4c>
	ld	a5,0(a4)
	mv	s2,s5
	fcvt.d.l	fa4,a5
	fsub.d	fa5,fa5,fa4
	li	a5,19
	sb	a5,8(s1)
	addi	s5,s5,4
	fsd	fa5,0(s1)
	j	0x1fdb4 # luaV_execute+0xe4c>
	mv	a1,a3
	mv	a0,s8
	sd	a3,8(sp)
	addi	s5,s5,16
	jal	ra,0x1706e # luaC_barrier_>
	ld	a3,8(sp)
	addi	s11,s11,8
	beq	s0,s5,0x20724 # luaV_execute+0x17bc>
	j	0x1f6b4 # luaV_execute+0x74c>
	ld	a5,24(s8)
	ld	a5,24(a5)
	bgtz	a5,0x20732 # luaV_execute+0x17ca>
	j	0x1f09a # luaV_execute+0x132>
	sd	s2,32(s7)
	addi	s1,s1,16
	sd	s1,16(s8)
	mv	a0,s8
	jal	ra,0x17420 # luaC_step>
	lw	s3,40(s7)
	sext.w	s3,s3
	bnez	s3,0x20750 # luaV_execute+0x17e8>
	j	0x1f018 # luaV_execute+0xb0>
	j	0x1f09e # luaV_execute+0x136>
	ld	a5,24(s8)
	ld	a4,48(s8)
	ld	a5,24(a5)
	sub	s1,s1,a4
	blez	a5,0x2076a # luaV_execute+0x1802>
	mv	a0,s8
	jal	ra,0x17420 # luaC_step>
	li	a2,1
	li	a1,1
	mv	a0,s8
	jal	ra,0x143e2 # luaD_growstack>
	ld	a5,48(s8)
	add	s1,s1,a5
	j	0x1f4fa # luaV_execute+0x592>
	li	a4,0
	li	a5,3
	sb	a5,40(sp)
	ld	a5,8(s7)
	sd	s5,32(sp)
	sd	s2,32(s7)
	sd	a5,16(s8)
	addi	a2,sp,32
	j	0x1f08c # luaV_execute+0x124>
	slli	s0,s0,0x20
	li	a4,0
	srli	s0,s0,0x20
	li	a5,3
	sb	a5,40(sp)
	ld	a5,8(s7)
	sd	s0,32(sp)
	sd	s2,32(s7)
	sd	a5,16(s8)
	mv	a3,s1
	addi	a2,sp,32
	j	0x20196 # luaV_execute+0x122e>
	mv	a1,s5
	mv	a0,s8
	sd	a2,8(sp)
	jal	ra,0x170d0 # luaC_barrierback_>
	ld	a2,8(sp)
	j	0x1f79e # luaV_execute+0x836>
	ld	a4,8(s7)
	addi	a2,s2,4
	sd	a2,0(sp)
	sd	a4,16(s8)
	srli	a4,s0,0xf
	andi	a4,a4,1
	addw	s0,a5,a3
	mv	a5,s0
	sext.w	s11,a3
	beqz	a4,0x207ee # luaV_execute+0x1886>
	j	0x1f72c # luaV_execute+0x7c4>
	addi	a5,s2,4
	mv	a0,s5
	sd	s2,0(sp)
	sd	a3,8(sp)
	mv	s2,a5
	jal	ra,0x1c350 # luaH_realasize>
	sext.w	a5,a0
	ld	a3,8(sp)
	bltu	a5,s0,0x2080c # luaV_execute+0x18a4>
	j	0x1f752 # luaV_execute+0x7ea>
	mv	a2,s0
	mv	a1,s5
	mv	a0,s8
	jal	ra,0x1ce3e # luaH_resizearray>
	ld	a3,8(sp)
	j	0x1f752 # luaV_execute+0x7ea>
	ld	s3,16(s8)
	srli	a5,s0,0xf
	sd	s2,32(s7)
	sub	s3,s3,s1
	srai	s3,s3,0x4
	andi	a5,a5,1
	sext.w	s3,s3
	bnez	a5,0x2083a # luaV_execute+0x18d2>
	j	0x1f4cc # luaV_execute+0x564>
	mv	a1,s4
	mv	a0,s8
	jal	ra,0x15816 # luaF_closeupval>
	j	0x1f4cc # luaV_execute+0x564>
	lbu	a3,8(s5)
	li	a4,3
	lbu	a5,8(s1)
	add	s0,s0,s4
	beq	a3,a4,0x2085a # luaV_execute+0x18f2>
	j	0x1f06e # luaV_execute+0x106>
	li	a3,69
	ld	a1,0(s5)
	li	a4,0
	beq	a5,a3,0x2086c # luaV_execute+0x1904>
	j	0x1f07c # luaV_execute+0x114>
	ld	a0,0(s1)
	addi	a5,a1,-1
	lwu	a4,12(a0)
	bleu	a4,a5,0x21448 # luaV_execute+0x24e0>
	ld	a4,16(a0)
	slli	a5,a1,0x4
	addi	a5,a5,-16
	add	a4,a4,a5
	lbu	a5,8(a4)
	andi	a5,a5,15
	snez	a5,a5
	bnez	a5,0x20894 # luaV_execute+0x192c>
	j	0x1f07c # luaV_execute+0x114>
	ld	a5,0(s0)
	sd	a5,0(a4)
	lbu	a5,8(s0)
	sb	a5,8(a4)
	lbu	a5,8(s0)
	andi	a5,a5,64
	bnez	a5,0x208ae # luaV_execute+0x1946>
	j	0x1f09a # luaV_execute+0x132>
	ld	a1,0(s1)
	lbu	a5,9(a1)
	andi	a5,a5,32
	bnez	a5,0x208be # luaV_execute+0x1956>
	j	0x1f09a # luaV_execute+0x132>
	ld	a5,0(s0)
	lbu	a5,9(a5)
	andi	a5,a5,24
	bnez	a5,0x20638 # luaV_execute+0x16d0>
	bnez	s3,0x208d2 # luaV_execute+0x196a>
	j	0x1f018 # luaV_execute+0xb0>
	j	0x1f09e # luaV_execute+0x136>
	add	a3,a3,s4
	j	0x205d2 # luaV_execute+0x166a>
	add	a2,a2,s4
	j	0x2016a # luaV_execute+0x1202>
	fld	fa5,32(s1)
	fmv.d.x	fa2,zero
	fld	fa3,0(s1)
	fld	fa4,16(s1)
	flt.d	a5,fa2,fa5
	fadd.d	fa5,fa5,fa3
	beqz	a5,0x20d8e # luaV_execute+0x1e26>
	fle.d	a5,fa5,fa4
	bnez	a5,0x208fe # luaV_execute+0x1996>
	j	0x1f16a # luaV_execute+0x202>
	srliw	a1,s0,0xf
	slli	a1,a1,0x2
	li	a5,19
	fsd	fa5,0(s1)
	fsd	fa5,48(s1)
	sb	a5,56(s1)
	sub	s2,s2,a1
	j	0x1f16a # luaV_execute+0x202>
	addi	a1,sp,24
	mv	a0,s5
	jal	ra,0x1e4e4 # luaV_tonumber_>
	beqz	a0,0x20924 # luaV_execute+0x19bc>
	j	0x1f580 # luaV_execute+0x618>
	auipc	a2,0x22
	addi	a2,a2,788 # 0x42c38 # udatatypename+0x270>
	mv	a1,s5
	mv	a0,s8
	jal	ra,0x13e6c # luaG_forerror>
	li	a1,-63
	li	a3,0
	blt	a4,a1,0x20226 # luaV_execute+0x12be>
	negw	a5,a4
	srl	a3,a2,a5
	j	0x20226 # luaV_execute+0x12be>
	addi	a1,sp,32
	mv	a0,s11
	jal	ra,0x1e4e4 # luaV_tonumber_>
	beqz	a0,0x20956 # luaV_execute+0x19ee>
	j	0x1f592 # luaV_execute+0x62a>
	auipc	a2,0x22
	addi	a2,a2,746 # 0x42c40 # udatatypename+0x278>
	mv	a1,s11
	mv	a0,s8
	jal	ra,0x13e6c # luaG_forerror>
	li	a3,-63
	li	a4,0
	blt	a5,a3,0x1fc20 # luaV_execute+0xcb8>
	negw	a5,a5
	srl	a4,s0,a5
	j	0x1fc20 # luaV_execute+0xcb8>
	blez	s11,0x2149a # luaV_execute+0x2532>
	srliw	a1,s0,0xf
	addiw	a1,a1,1
	slli	a1,a1,0x2
	add	s2,s2,a1
	bnez	s3,0x20992 # luaV_execute+0x1a2a>
	j	0x1f136 # luaV_execute+0x1ce>
	j	0x1f174 # luaV_execute+0x20c>
	li	a3,-63
	li	a4,0
	blt	a5,a3,0x1fc20 # luaV_execute+0xcb8>
	negw	a5,a5
	srl	a4,s11,a5
	j	0x1fc20 # luaV_execute+0xcb8>
	li	a3,63
	li	a4,0
	blt	a3,a5,0x1fc20 # luaV_execute+0xcb8>
	srl	a4,s11,a5
	j	0x1fc20 # luaV_execute+0xcb8>
	addi	a1,sp,16
	mv	a0,s1
	jal	ra,0x1e4e4 # luaV_tonumber_>
	beqz	a0,0x209cc # luaV_execute+0x1a64>
	j	0x1f5a4 # luaV_execute+0x63c>
	auipc	a2,0x22
	addi	a2,a2,636 # 0x42c48 # udatatypename+0x280>
	mv	a1,s1
	mv	a0,s8
	jal	ra,0x13e6c # luaG_forerror>
	lbu	a3,40(s1)
	beq	a3,a5,0x209e8 # luaV_execute+0x1a80>
	j	0x1f56e # luaV_execute+0x606>
	ld	s11,32(s1)
	ld	a4,0(s1)
	beqz	s11,0x214ee # luaV_execute+0x2586>
	sd	a4,48(s1)
	sb	a3,56(s1)
	sd	a4,0(sp)
	bltz	s11,0x213bc # luaV_execute+0x2454>
	li	a2,1
	addi	a1,sp,24
	mv	a0,s5
	jal	ra,0x1e676 # luaV_tointeger>
	ld	a4,0(sp)
	beqz	a0,0x21400 # luaV_execute+0x2498>
	ld	a5,24(sp)
	slt	a5,a5,a4
	bnez	a5,0x20980 # luaV_execute+0x1a18>
	ld	a5,24(sp)
	blez	s11,0x2146c # luaV_execute+0x2504>
	sub	a5,a5,a4
	divu	s11,a5,s11
	li	a5,3
	sd	s11,16(s1)
	sb	a5,24(s1)
	bnez	s3,0x20a34 # luaV_execute+0x1acc>
	j	0x1f136 # luaV_execute+0x1ce>
	j	0x1f174 # luaV_execute+0x20c>
	li	a5,69
	ld	a1,0(s5)
	li	a4,0
	bne	a3,a5,0x206d0 # luaV_execute+0x1768>
	ld	a0,0(s0)
	addi	a5,a1,-1
	lwu	a4,12(a0)
	bleu	a4,a5,0x2143e # luaV_execute+0x24d6>
	ld	a4,16(a0)
	slli	a5,a1,0x4
	addi	a5,a5,-16
	add	a4,a4,a5
	lbu	a5,8(a4)
	andi	a5,a5,15
	snez	a5,a5
	beqz	a5,0x206d0 # luaV_execute+0x1768>
	ld	a5,0(a4)
	sd	a5,0(s1)
	lbu	a5,8(a4)
	sb	a5,8(s1)
	bnez	s3,0x20a80 # luaV_execute+0x1b18>
	j	0x1f018 # luaV_execute+0xb0>
	j	0x1f09e # luaV_execute+0x136>
	lbu	a2,8(a4)
	addi	s5,s2,4
	beq	a2,a3,0x20cee # luaV_execute+0x1d86>
	li	a3,19
	ld	a5,0(a5)
	bne	a2,a3,0x1fdb4 # luaV_execute+0xe4c>
	fcvt.d.l	fa5,a5
	fld	fa4,0(a4)
	mv	s2,s5
	fadd.d	fa5,fa5,fa4
	li	a5,19
	sb	a5,8(s1)
	addi	s5,s5,4
	fsd	fa5,0(s1)
	j	0x1fdb4 # luaV_execute+0xe4c>
	ld	a4,0(s1)
	sub	a4,a4,a2
	seqz	a4,a4
	j	0x1f226 # luaV_execute+0x2be>
	fld	fa5,0(a5)
	lbu	a5,8(a4)
	li	a3,19
	bne	a5,a3,0x202c2 # luaV_execute+0x135a>
	fld	fa4,0(a4)
	fdiv.d	fa5,fa5,fa4
	li	a5,19
	sb	a5,8(s1)
	addi	s2,s2,4
	fsd	fa5,0(s1)
	bnez	s3,0x20ae2 # luaV_execute+0x1b7a>
	j	0x1f136 # luaV_execute+0x1ce>
	j	0x1f174 # luaV_execute+0x20c>
	fld	fa0,0(a5)
	slli	a5,s0,0x20
	srli	a5,a5,0x1c
	add	a5,a5,s9
	lbu	a4,8(a5)
	li	a3,19
	bne	a4,a3,0x1fd66 # luaV_execute+0xdfe>
	fld	fa1,0(a5)
	j	0x20bc2 # luaV_execute+0x1c5a>
	ld	a4,0(a2)
	sb	a5,8(s1)
	neg	a5,a4
	sd	a5,0(s1)
	bnez	s3,0x20b12 # luaV_execute+0x1baa>
	j	0x1f018 # luaV_execute+0xb0>
	j	0x1f09e # luaV_execute+0x136>
	lbu	a4,8(a2)
	beq	a4,a5,0x20e7a # luaV_execute+0x1f12>
	andi	a4,a4,15
	li	a5,3
	beq	a4,a5,0x20b2a # luaV_execute+0x1bc2>
	j	0x1f94e # luaV_execute+0x9e6>
	mv	a1,a2
	mv	a0,s1
	jal	ra,0x1e3dc # LTnum>
	j	0x1f266 # luaV_execute+0x2fe>
	lbu	a4,8(a2)
	beq	a4,a5,0x20e86 # luaV_execute+0x1f1e>
	andi	a4,a4,15
	li	a5,3
	beq	a4,a5,0x20b4a # luaV_execute+0x1be2>
	j	0x1f8f2 # luaV_execute+0x98a>
	mv	a1,a2
	mv	a0,s1
	jal	ra,0x1e2ba # LEnum>
	j	0x1f266 # luaV_execute+0x2fe>
	ld	a5,0(s1)
	slt	a0,a2,a5
	xori	a0,a0,1
	sext.w	a0,a0
	j	0x1f266 # luaV_execute+0x2fe>
	ld	a5,0(s1)
	slt	a0,a5,a2
	xori	a0,a0,1
	sext.w	a0,a0
	j	0x1f266 # luaV_execute+0x2fe>
	ld	a0,0(s1)
	slt	a0,a0,a2
	j	0x1f266 # luaV_execute+0x2fe>
	ld	a0,0(s0)
	sd	a2,0(sp)
	jal	ra,0x1c614 # luaH_getshortstr>
	lbu	a5,8(a0)
	ld	a2,0(sp)
	mv	a4,a0
	andi	a3,a5,15
	bnez	a3,0x20b9a # luaV_execute+0x1c32>
	j	0x1f85a # luaV_execute+0x8f2>
	j	0x2053e # luaV_execute+0x15d6>
	fld	fa5,0(a5)
	slli	a5,s0,0x20
	srli	a5,a5,0x1c
	add	a5,a5,s9
	lbu	a4,8(a5)
	li	a3,19
	bne	a4,a3,0x204a4 # luaV_execute+0x153c>
	fld	fa4,0(a5)
	j	0x20acc # luaV_execute+0x1b64>
	fld	fa0,0(a5)
	lbu	a5,8(a4)
	li	a3,19
	bne	a5,a3,0x1fed0 # luaV_execute+0xf68>
	fld	fa1,0(a4)
	auipc	a5,0x21
	fld	fa5,1286(a5) # 0x420c8 # log_2.0+0x178>
	feq.d	a5,fa1,fa5
	addi	s2,s2,4
	beqz	a5,0x1fd84 # luaV_execute+0xe1c>
	fmul.d	fa0,fa0,fa0
	li	a5,19
	fsd	fa0,0(s1)
	sb	a5,8(s1)
	bnez	s3,0x20be8 # luaV_execute+0x1c80>
	j	0x1f136 # luaV_execute+0x1ce>
	j	0x1f174 # luaV_execute+0x20c>
	ld	a0,0(s5)
	sd	a2,0(sp)
	jal	ra,0x1c660 # luaH_getstr>
	j	0x204e6 # luaV_execute+0x157e>
	ld	a5,0(a5)
	sb	a3,8(s1)
	addi	s0,s2,4
	add	a5,a5,a1
	sd	a5,0(s1)
	addi	s2,s2,8
	beqz	s3,0x20146 # luaV_execute+0x11de>
	j	0x20db0 # luaV_execute+0x1e48>
	ld	a0,0(s1)
	slt	a0,a2,a0
	j	0x1f266 # luaV_execute+0x2fe>
	lbu	a2,8(a4)
	addi	s5,s2,4
	beq	a2,a3,0x20cee # luaV_execute+0x1d86>
	li	a3,19
	ld	a5,0(a5)
	bne	a2,a3,0x1fdb4 # luaV_execute+0xe4c>
	fcvt.d.l	fa4,a5
	fld	fa5,0(a4)
	mv	s2,s5
	j	0x20aa0 # luaV_execute+0x1b38>
	mv	a1,a0
	mv	a3,s5
	mv	a2,s11
	mv	a0,s8
	jal	ra,0x1cb1e # luaH_resize>
	j	0x1ff36 # luaV_execute+0xfce>
	ld	a4,8(s7)
	sd	s2,32(s7)
	li	a5,21
	sd	a4,16(s8)
	li	a3,0
	srliw	a4,s0,0x18
	mv	a1,s1
	mv	a0,s8
	jal	ra,0x1d5a4 # luaT_callorderiTM>
	j	0x1f922 # luaV_execute+0x9ba>
	ld	a4,8(s7)
	sd	s2,32(s7)
	li	a5,21
	sd	a4,16(s8)
	li	a3,1
	srliw	a4,s0,0x18
	j	0x20c5a # luaV_execute+0x1cf2>
	ld	a4,8(s7)
	sd	s2,32(s7)
	li	a5,20
	sd	a4,16(s8)
	li	a3,0
	srliw	a4,s0,0x18
	j	0x20c5a # luaV_execute+0x1cf2>
	ld	a4,8(s7)
	sd	s2,32(s7)
	li	a5,20
	j	0x20c70 # luaV_execute+0x1d08>
	flt.d	a5,fa4,fa3
	j	0x1f5c6 # luaV_execute+0x65e>
	ld	a2,0(s1)
	li	a4,1
	sd	a2,-16(s4)
	lbu	a2,8(s1)
	sb	a2,8(a3)
	sd	s4,16(s8)
	blt	a4,a5,0x20cc2 # luaV_execute+0x1d5a>
	j	0x1f36a # luaV_execute+0x402>
	addiw	a4,a5,-2
	slli	a4,a4,0x20
	srli	a4,a4,0x1c
	addi	a2,s4,24
	addi	a3,s4,8
	add	a4,a4,a2
	sb	zero,0(a3)
	addi	a3,a3,16
	bne	a4,a3,0x20cd4 # luaV_execute+0x1d6c>
	addiw	a5,a5,-1
	slli	a5,a5,0x20
	srli	a5,a5,0x1c
	add	s4,s4,a5
	sd	s4,16(s8)
	j	0x1f36a # luaV_execute+0x402>
	ld	a3,0(a4)
	ld	a5,0(a5)
	addi	a4,s2,8
	sb	a2,8(s1)
	add	a5,a5,a3
	mv	s2,s5
	sd	a5,0(s1)
	mv	s5,a4
	j	0x1fdb4 # luaV_execute+0xe4c>
	ld	a3,0(a4)
	ld	a5,0(a5)
	addi	a4,s2,8
	sb	a2,8(s1)
	sub	a5,a5,a3
	mv	s2,s5
	sd	a5,0(s1)
	mv	s5,a4
	j	0x1fdb4 # luaV_execute+0xe4c>
	ld	a3,0(a4)
	ld	a5,0(a5)
	addi	a4,s2,8
	sb	a2,8(s1)
	mul	a5,a5,a3
	mv	s2,s5
	mv	s5,a4
	sd	a5,0(s1)
	j	0x1fdb4 # luaV_execute+0xe4c>
	fld	fa5,0(a2)
	sb	a5,8(s1)
	fneg.d	fa5,fa5
	fsd	fa5,0(s1)
	bnez	s3,0x20d4c # luaV_execute+0x1de4>
	j	0x1f018 # luaV_execute+0xb0>
	j	0x1f09e # luaV_execute+0x136>
	lbu	a4,8(a2)
	j	0x20b1e # luaV_execute+0x1bb6>
	lbu	a4,8(a2)
	j	0x20b3e # luaV_execute+0x1bd6>
	fld	fa5,0(a5)
	fcvt.d.w	fa4,a1
	sb	a3,8(s1)
	addi	s2,s2,8
	fadd.d	fa5,fa5,fa4
	fsd	fa5,0(s1)
	beqz	s3,0x20146 # luaV_execute+0x11de>
	j	0x20db0 # luaV_execute+0x1e48>
	ld	s4,0(s7)
	srliw	s1,s0,0x7
	andi	s1,s1,255
	addi	s4,s4,16
	slli	s1,s1,0x4
	add	s1,s1,s4
	addi	s11,s1,64
	j	0x1f10e # luaV_execute+0x1a6>
	fle.d	a5,fa4,fa5
	bnez	a5,0x20d98 # luaV_execute+0x1e30>
	j	0x1f16a # luaV_execute+0x202>
	srliw	a1,s0,0xf
	slli	a1,a1,0x2
	li	a5,19
	fsd	fa5,0(s1)
	fsd	fa5,48(s1)
	sb	a5,56(s1)
	sub	s2,s2,a1
	j	0x1f16a # luaV_execute+0x202>
	mv	a1,s0
	mv	a0,s8
	jal	ra,0x13f0e # luaG_traceexec>
	ld	s4,0(s7)
	lw	s0,0(s0)
	mv	s3,a0
	addi	s4,s4,16
	j	0x1f01e # luaV_execute+0xb6>
	mv	a1,s5
	sd	a3,0(sp)
	jal	ra,0x1c554 # luaH_getint>
	ld	a3,0(sp)
	mv	a4,a0
	j	0x205f6 # luaV_execute+0x168e>
	mv	a1,s0
	jal	ra,0x1c554 # luaH_getint>
	mv	a4,a0
	j	0x20532 # luaV_execute+0x15ca>
	ld	a4,0(a4)
	li	a3,1
	ld	a5,0(a5)
	addi	a2,a4,1
	bleu	a2,a3,0x214ac # luaV_execute+0x2544>
	xor	a2,a5,a4
	div	a3,a5,a4
	bltz	a2,0x213d4 # luaV_execute+0x246c>
	li	a5,3
	mv	s2,s5
	sd	a3,0(s1)
	sb	a5,8(s1)
	addi	s5,s5,4
	j	0x1fdb4 # luaV_execute+0xe4c>
	ld	a4,0(a4)
	li	a3,1
	ld	a5,0(a5)
	addi	a2,a4,1
	bleu	a2,a3,0x214a6 # luaV_execute+0x253e>
	rem	a5,a5,a4
	beqz	a5,0x20e2a # luaV_execute+0x1ec2>
	xor	a3,a4,a5
	bgez	a3,0x20e2a # luaV_execute+0x1ec2>
	add	a5,a5,a4
	sd	a5,0(s1)
	li	a5,3
	mv	s2,s5
	sb	a5,8(s1)
	addi	s5,s5,4
	j	0x1fdb4 # luaV_execute+0xe4c>
	ld	a0,0(s0)
	mv	a1,s5
	jal	ra,0x1c6d4 # luaH_get>
	lbu	a5,8(a0)
	mv	a4,a0
	andi	a5,a5,15
	snez	a5,a5
	j	0x20a68 # luaV_execute+0x1b00>
	ld	a0,0(s1)
	mv	a1,s5
	jal	ra,0x1c6d4 # luaH_get>
	lbu	a5,8(a0)
	mv	a4,a0
	andi	a5,a5,15
	snez	a5,a5
	j	0x2088e # luaV_execute+0x1926>
	lbu	a5,11(a5)
	beqz	a5,0x21432 # luaV_execute+0x24ca>
	li	a5,1
	sw	a5,40(s7)
	li	s3,0
	j	0x1efca # luaV_execute+0x62>
	ld	a0,0(s1)
	ld	a5,0(a2)
	slt	a0,a0,a5
	j	0x1f266 # luaV_execute+0x2fe>
	ld	a5,0(s1)
	ld	a0,0(a2)
	slt	a0,a0,a5
	xori	a0,a0,1
	sext.w	a0,a0
	j	0x1f266 # luaV_execute+0x2fe>
	ld	a1,0(a2)
	ld	a0,0(s1)
	jal	ra,0x1df66 # l_strcmp>
	slti	a0,a0,1
	j	0x1f922 # luaV_execute+0x9ba>
	ld	a1,0(a2)
	ld	a0,0(s1)
	jal	ra,0x1df66 # l_strcmp>
	srliw	a0,a0,0x1f
	j	0x1f922 # luaV_execute+0x9ba>
	li	a4,19
	beq	a5,a4,0x214b4 # luaV_execute+0x254c>
	ld	a5,8(s7)
	sd	s2,32(s7)
	li	a4,19
	sd	a5,16(s8)
	mv	a3,s1
	mv	a2,s0
	j	0x1fb2c # luaV_execute+0xbc4>
	li	a4,19
	mv	s5,s2
	beq	a3,a4,0x20ee0 # luaV_execute+0x1f78>
	j	0x1fc28 # luaV_execute+0xcc0>
	fld	fs4,0(a5)
	fmv.d	fa0,fs4
	jal	ra,0x31cd0 # floor>
	feq.d	a5,fs4,fa0
	bnez	a5,0x20ef6 # luaV_execute+0x1f8e>
	j	0x1fc28 # luaV_execute+0xcc0>
	auipc	a5,0x22
	fld	fa4,-1694(a5) # 0x42858 # dummynode_+0x78>
	fle.d	a5,fa4,fa0
	bnez	a5,0x20f08 # luaV_execute+0x1fa0>
	j	0x1fc28 # luaV_execute+0xcc0>
	auipc	a5,0x22
	fld	fa4,-1704(a5) # 0x42860 # dummynode_+0x80>
	flt.d	a5,fa0,fa4
	bnez	a5,0x20f1a # luaV_execute+0x1fb2>
	j	0x1fc28 # luaV_execute+0xcc0>
	fcvt.l.d	a5,fa0,rtz
	j	0x2041a # luaV_execute+0x14b2>
	ld	a5,0(s7)
	andi	s1,s5,255
	addi	s1,s1,1
	slli	s1,s1,0x4
	add	s1,s1,a5
	j	0x1f52c # luaV_execute+0x5c4>
	ld	a1,0(sp)
	mv	a0,s8
	jal	ra,0x13f0e # luaG_traceexec>
	ld	s4,0(s7)
	mv	s3,a0
	addi	s4,s4,16
	j	0x1f7ac # luaV_execute+0x844>
	li	a3,19
	mv	s11,s2
	beq	a4,a3,0x20f54 # luaV_execute+0x1fec>
	j	0x1fd1e # luaV_execute+0xdb6>
	fld	fs4,0(a5)
	fmv.d	fa0,fs4
	jal	ra,0x31cd0 # floor>
	feq.d	a5,fs4,fa0
	bnez	a5,0x20f6a # luaV_execute+0x2002>
	j	0x1fd1e # luaV_execute+0xdb6>
	auipc	a5,0x22
	fld	fa4,-1810(a5) # 0x42858 # dummynode_+0x78>
	fle.d	a5,fa4,fa0
	bnez	a5,0x20f7c # luaV_execute+0x2014>
	j	0x1fd1e # luaV_execute+0xdb6>
	auipc	a5,0x22
	fld	fa4,-1820(a5) # 0x42860 # dummynode_+0x80>
	flt.d	a5,fa0,fa4
	bnez	a5,0x20f8e # luaV_execute+0x2026>
	j	0x1fd1e # luaV_execute+0xdb6>
	fcvt.l.d	s5,fa0,rtz
	j	0x202f8 # luaV_execute+0x1390>
	li	a3,19
	mv	s11,s2
	beq	a4,a3,0x20fa2 # luaV_execute+0x203a>
	j	0x1fd1e # luaV_execute+0xdb6>
	fld	fs4,0(a5)
	fmv.d	fa0,fs4
	jal	ra,0x31cd0 # floor>
	feq.d	a5,fs4,fa0
	bnez	a5,0x20fb8 # luaV_execute+0x2050>
	j	0x1fd1e # luaV_execute+0xdb6>
	auipc	a5,0x22
	fld	fa4,-1888(a5) # 0x42858 # dummynode_+0x78>
	fle.d	a5,fa4,fa0
	bnez	a5,0x20fca # luaV_execute+0x2062>
	j	0x1fd1e # luaV_execute+0xdb6>
	auipc	a5,0x22
	fld	fa4,-1898(a5) # 0x42860 # dummynode_+0x80>
	flt.d	a5,fa0,fa4
	bnez	a5,0x20fdc # luaV_execute+0x2074>
	j	0x1fd1e # luaV_execute+0xdb6>
	fcvt.l.d	s5,fa0,rtz
	j	0x20252 # luaV_execute+0x12ea>
	li	a3,19
	mv	s5,s2
	beq	a4,a3,0x20ff0 # luaV_execute+0x2088>
	j	0x1fc28 # luaV_execute+0xcc0>
	fld	fs4,0(a5)
	fmv.d	fa0,fs4
	jal	ra,0x31cd0 # floor>
	feq.d	a5,fs4,fa0
	bnez	a5,0x21006 # luaV_execute+0x209e>
	j	0x1fc28 # luaV_execute+0xcc0>
	auipc	a5,0x22
	fld	fa4,-1966(a5) # 0x42858 # dummynode_+0x78>
	fle.d	a5,fa4,fa0
	bnez	a5,0x21018 # luaV_execute+0x20b0>
	j	0x1fc28 # luaV_execute+0xcc0>
	auipc	a5,0x22
	fld	fa4,-1976(a5) # 0x42860 # dummynode_+0x80>
	flt.d	a5,fa0,fa4
	bnez	a5,0x2102a # luaV_execute+0x20c2>
	j	0x1fc28 # luaV_execute+0xcc0>
	fcvt.l.d	a2,fa0,rtz
	j	0x20208 # luaV_execute+0x12a0>
	li	a3,19
	mv	s5,s2
	beq	a4,a3,0x2103e # luaV_execute+0x20d6>
	j	0x1fc28 # luaV_execute+0xcc0>
	fld	fs4,0(a5)
	fmv.d	fa0,fs4
	jal	ra,0x31cd0 # floor>
	feq.d	a5,fs4,fa0
	bnez	a5,0x21054 # luaV_execute+0x20ec>
	j	0x1fc28 # luaV_execute+0xcc0>
	auipc	a5,0x22
	fld	fa4,-2044(a5) # 0x42858 # dummynode_+0x78>
	fle.d	a5,fa4,fa0
	bnez	a5,0x21066 # luaV_execute+0x20fe>
	j	0x1fc28 # luaV_execute+0xcc0>
	auipc	a5,0x21
	fld	fa4,2042(a5) # 0x42860 # dummynode_+0x80>
	flt.d	a5,fa0,fa4
	bnez	a5,0x21078 # luaV_execute+0x2110>
	j	0x1fc28 # luaV_execute+0xcc0>
	fcvt.l.d	a5,fa0,rtz
	j	0x203e0 # luaV_execute+0x1478>
	sd	s1,16(s8)
	sd	s2,32(s7)
	li	a2,0
	mv	a1,s7
	mv	a0,s8
	jal	ra,0x14758 # luaD_poscall>
	li	s3,1
	j	0x1f36a # luaV_execute+0x402>
	addi	s1,s1,16
	sd	s1,16(s8)
	sd	s2,32(s7)
	li	a2,1
	mv	a1,s7
	mv	a0,s8
	jal	ra,0x14758 # luaD_poscall>
	li	s3,1
	j	0x1f36a # luaV_execute+0x402>
	mv	a1,s7
	mv	a0,s8
	jal	ra,0x146b8 # luaD_hookcall>
	li	a5,1
	sw	a5,180(s8)
	mv	a1,s2
	mv	a0,s8
	jal	ra,0x13f0e # luaG_traceexec>
	ld	s4,0(s7)
	mv	s3,a0
	addi	s4,s4,16
	j	0x1f0ae # luaV_execute+0x146>
	li	a4,19
	mv	s5,s2
	beq	a3,a4,0x210e0 # luaV_execute+0x2178>
	j	0x1fc28 # luaV_execute+0xcc0>
	fld	fs4,0(a5)
	fmv.d	fa0,fs4
	jal	ra,0x31cd0 # floor>
	feq.d	a5,fs4,fa0
	bnez	a5,0x210f6 # luaV_execute+0x218e>
	j	0x1fc28 # luaV_execute+0xcc0>
	auipc	a5,0x21
	fld	fa4,1890(a5) # 0x42858 # dummynode_+0x78>
	fle.d	a5,fa4,fa0
	bnez	a5,0x21108 # luaV_execute+0x21a0>
	j	0x1fc28 # luaV_execute+0xcc0>
	auipc	a5,0x21
	fld	fa4,1880(a5) # 0x42860 # dummynode_+0x80>
	flt.d	a5,fa0,fa4
	bnez	a5,0x2111a # luaV_execute+0x21b2>
	j	0x1fc28 # luaV_execute+0xcc0>
	fcvt.l.d	a5,fa0,rtz
	j	0x2000c # luaV_execute+0x10a4>
	li	a4,19
	mv	s5,s2
	beq	a3,a4,0x2112e # luaV_execute+0x21c6>
	j	0x1fc28 # luaV_execute+0xcc0>
	fld	fs4,0(a5)
	fmv.d	fa0,fs4
	jal	ra,0x31cd0 # floor>
	feq.d	a5,fs4,fa0
	bnez	a5,0x21144 # luaV_execute+0x21dc>
	j	0x1fc28 # luaV_execute+0xcc0>
	auipc	a5,0x21
	fld	fa4,1812(a5) # 0x42858 # dummynode_+0x78>
	fle.d	a5,fa4,fa0
	bnez	a5,0x21156 # luaV_execute+0x21ee>
	j	0x1fc28 # luaV_execute+0xcc0>
	auipc	a5,0x21
	fld	fa4,1802(a5) # 0x42860 # dummynode_+0x80>
	flt.d	a5,fa0,fa4
	bnez	a5,0x21168 # luaV_execute+0x2200>
	j	0x1fc28 # luaV_execute+0xcc0>
	fcvt.l.d	a5,fa0,rtz
	j	0x1ffc2 # luaV_execute+0x105a>
	li	a3,19
	mv	s11,s2
	beq	a4,a3,0x2117c # luaV_execute+0x2214>
	j	0x1fd1e # luaV_execute+0xdb6>
	fld	fs4,0(a5)
	fmv.d	fa0,fs4
	jal	ra,0x31cd0 # floor>
	feq.d	a5,fs4,fa0
	bnez	a5,0x21192 # luaV_execute+0x222a>
	j	0x1fd1e # luaV_execute+0xdb6>
	auipc	a5,0x21
	fld	fa4,1734(a5) # 0x42858 # dummynode_+0x78>
	fle.d	a5,fa4,fa0
	bnez	a5,0x211a4 # luaV_execute+0x223c>
	j	0x1fd1e # luaV_execute+0xdb6>
	auipc	a5,0x21
	fld	fa4,1724(a5) # 0x42860 # dummynode_+0x80>
	flt.d	a5,fa0,fa4
	bnez	a5,0x211b6 # luaV_execute+0x224e>
	j	0x1fd1e # luaV_execute+0xdb6>
	fcvt.l.d	s5,fa0,rtz
	j	0x1fcfc # luaV_execute+0xd94>
	li	a3,19
	mv	s5,s2
	beq	a4,a3,0x211ca # luaV_execute+0x2262>
	j	0x1fc28 # luaV_execute+0xcc0>
	fld	fs4,0(a5)
	fmv.d	fa0,fs4
	jal	ra,0x31cd0 # floor>
	feq.d	a5,fs4,fa0
	bnez	a5,0x211e0 # luaV_execute+0x2278>
	j	0x1fc28 # luaV_execute+0xcc0>
	fle.d	a5,fs0,fa0
	bnez	a5,0x211ea # luaV_execute+0x2282>
	j	0x1fc28 # luaV_execute+0xcc0>
	flt.d	a5,fa0,fs1
	bnez	a5,0x211f4 # luaV_execute+0x228c>
	j	0x1fc28 # luaV_execute+0xcc0>
	fcvt.l.d	s11,fa0,rtz
	j	0x1fcaa # luaV_execute+0xd42>
	li	a3,19
	mv	s5,s2
	beq	a4,a3,0x21208 # luaV_execute+0x22a0>
	j	0x1fc28 # luaV_execute+0xcc0>
	fld	fs4,0(a5)
	fmv.d	fa0,fs4
	jal	ra,0x31cd0 # floor>
	feq.d	a5,fs4,fa0
	bnez	a5,0x2121e # luaV_execute+0x22b6>
	j	0x1fc28 # luaV_execute+0xcc0>
	fle.d	a5,fs3,fa0
	bnez	a5,0x21228 # luaV_execute+0x22c0>
	j	0x1fc28 # luaV_execute+0xcc0>
	flt.d	a5,fa0,fs2
	bnez	a5,0x21232 # luaV_execute+0x22ca>
	j	0x1fc28 # luaV_execute+0xcc0>
	fcvt.l.d	s11,fa0,rtz
	j	0x1fbfa # luaV_execute+0xc92>
	li	a4,19
	mv	s5,s2
	beq	a5,a4,0x21246 # luaV_execute+0x22de>
	j	0x1fc28 # luaV_execute+0xcc0>
	fld	fs4,0(s0)
	fmv.d	fa0,fs4
	jal	ra,0x31cd0 # floor>
	feq.d	a5,fs4,fa0
	bnez	a5,0x2125c # luaV_execute+0x22f4>
	j	0x1fc28 # luaV_execute+0xcc0>
	fle.d	a5,fs3,fa0
	bnez	a5,0x21266 # luaV_execute+0x22fe>
	j	0x1fc28 # luaV_execute+0xcc0>
	flt.d	a5,fa0,fs2
	bnez	a5,0x21270 # luaV_execute+0x2308>
	j	0x1fc28 # luaV_execute+0xcc0>
	fcvt.l.d	a5,fa0,rtz
	j	0x1fc0a # luaV_execute+0xca2>
	addiw	a3,a4,-1
	slli	a3,a3,0x20
	srli	a3,a3,0x1c
	addi	a3,a3,24
	addi	s4,s4,-8
	add	a3,a3,a5
	sb	zero,0(s4)
	addi	s4,s4,16
	bne	a3,s4,0x21286 # luaV_execute+0x231e>
	slli	a4,a4,0x4
	add	a5,a5,a4
	sd	a5,16(s8)
	j	0x1f36a # luaV_execute+0x402>
	li	a4,19
	mv	s11,s2
	beq	a5,a4,0x212a8 # luaV_execute+0x2340>
	j	0x1fd1e # luaV_execute+0xdb6>
	fld	fs4,0(s0)
	fmv.d	fa0,fs4
	jal	ra,0x31cd0 # floor>
	feq.d	a5,fs4,fa0
	bnez	a5,0x212be # luaV_execute+0x2356>
	j	0x1fd1e # luaV_execute+0xdb6>
	fle.d	a5,fs0,fa0
	bnez	a5,0x212c8 # luaV_execute+0x2360>
	j	0x1fd1e # luaV_execute+0xdb6>
	auipc	a5,0x21
	fld	fa4,1432(a5) # 0x42860 # dummynode_+0x80>
	flt.d	a5,fa0,fa4
	bnez	a5,0x212da # luaV_execute+0x2372>
	j	0x1fd1e # luaV_execute+0xdb6>
	fcvt.l.d	a5,fa0,rtz
	j	0x1fd0c # luaV_execute+0xda4>
	li	a4,19
	mv	s5,s2
	beq	a5,a4,0x212ee # luaV_execute+0x2386>
	j	0x1fc28 # luaV_execute+0xcc0>
	fld	fs4,0(s0)
	fmv.d	fa0,fs4
	jal	ra,0x31cd0 # floor>
	feq.d	a5,fs4,fa0
	bnez	a5,0x21304 # luaV_execute+0x239c>
	j	0x1fc28 # luaV_execute+0xcc0>
	fle.d	a5,fs0,fa0
	bnez	a5,0x2130e # luaV_execute+0x23a6>
	j	0x1fc28 # luaV_execute+0xcc0>
	flt.d	a5,fa0,fs1
	bnez	a5,0x21318 # luaV_execute+0x23b0>
	j	0x1fc28 # luaV_execute+0xcc0>
	fcvt.l.d	a5,fa0,rtz
	j	0x1fcba # luaV_execute+0xd52>
	li	a4,19
	mv	s11,s2
	beq	a5,a4,0x2132c # luaV_execute+0x23c4>
	j	0x1fd1e # luaV_execute+0xdb6>
	fld	fs4,0(s0)
	fmv.d	fa0,fs4
	jal	ra,0x31cd0 # floor>
	feq.d	a5,fs4,fa0
	bnez	a5,0x21342 # luaV_execute+0x23da>
	j	0x1fd1e # luaV_execute+0xdb6>
	auipc	a5,0x21
	fld	fa4,1302(a5) # 0x42858 # dummynode_+0x78>
	fle.d	a5,fa4,fa0
	bnez	a5,0x21354 # luaV_execute+0x23ec>
	j	0x1fd1e # luaV_execute+0xdb6>
	auipc	a5,0x21
	fld	fa4,1292(a5) # 0x42860 # dummynode_+0x80>
	flt.d	a5,fa0,fa4
	bnez	a5,0x21366 # luaV_execute+0x23fe>
	j	0x1fd1e # luaV_execute+0xdb6>
	fcvt.l.d	a5,fa0,rtz
	j	0x20308 # luaV_execute+0x13a0>
	li	a4,19
	mv	s11,s2
	beq	a5,a4,0x2137a # luaV_execute+0x2412>
	j	0x1fd1e # luaV_execute+0xdb6>
	fld	fs4,0(s0)
	fmv.d	fa0,fs4
	jal	ra,0x31cd0 # floor>
	feq.d	a5,fs4,fa0
	bnez	a5,0x21390 # luaV_execute+0x2428>
	j	0x1fd1e # luaV_execute+0xdb6>
	auipc	a5,0x21
	fld	fa4,1224(a5) # 0x42858 # dummynode_+0x78>
	fle.d	a5,fa4,fa0
	bnez	a5,0x213a2 # luaV_execute+0x243a>
	j	0x1fd1e # luaV_execute+0xdb6>
	auipc	a5,0x21
	fld	fa4,1214(a5) # 0x42860 # dummynode_+0x80>
	flt.d	a5,fa0,fa4
	bnez	a5,0x213b4 # luaV_execute+0x244c>
	j	0x1fd1e # luaV_execute+0xdb6>
	fcvt.l.d	a5,fa0,rtz
	j	0x20262 # luaV_execute+0x12fa>
	li	a2,2
	addi	a1,sp,24
	mv	a0,s5
	jal	ra,0x1e676 # luaV_tointeger>
	ld	a4,0(sp)
	beqz	a0,0x21400 # luaV_execute+0x2498>
	ld	a5,24(sp)
	slt	a5,a4,a5
	j	0x20a14 # luaV_execute+0x1aac>
	rem	a5,a5,a4
	mv	s2,s5
	addi	s5,s5,4
	snez	a5,a5
	sub	a3,a3,a5
	li	a5,3
	sd	a3,0(s1)
	sb	a5,8(s1)
	j	0x1fdb4 # luaV_execute+0xe4c>
	ld	s1,0(s7)
	andi	a5,s5,255
	addi	a5,a5,1
	slli	a5,a5,0x4
	add	s1,s1,a5
	j	0x1f460 # luaV_execute+0x4f8>
	lbu	a3,8(s5)
	li	a5,19
	bne	a3,a5,0x2147c # luaV_execute+0x2514>
	fld	fa5,0(s5)
	fsd	fa5,32(sp)
	fmv.d.x	fa4,zero
	flt.d	a5,fa4,fa5
	beqz	a5,0x2097c # luaV_execute+0x1a14>
	bltz	s11,0x20980 # luaV_execute+0x1a18>
	li	a5,-1
	srli	a5,a5,0x1
	sd	a5,24(sp)
	blez	s11,0x213cc # luaV_execute+0x2464>
	slt	a5,a5,a4
	j	0x20a14 # luaV_execute+0x1aac>
	mv	a1,s7
	mv	a0,s8
	jal	ra,0x146b8 # luaD_hookcall>
	j	0x1f39a # luaV_execute+0x432>
	jal	ra,0x1c554 # luaH_getint>
	mv	a4,a0
	j	0x20a5e # luaV_execute+0x1af6>
	jal	ra,0x1c554 # luaH_getint>
	mv	a4,a0
	j	0x20884 # luaV_execute+0x191c>
	ld	a5,0(s7)
	mv	a3,s3
	mv	a2,s1
	add	a5,a5,s9
	sd	a5,0(s7)
	mv	a1,s7
	mv	a0,s8
	jal	ra,0x149ac # luaD_pretailcall>
	j	0x1efaa # luaV_execute+0x42>
	sub	a5,a4,a5
	neg	s11,s11
	divu	s11,a5,s11
	j	0x20a22 # luaV_execute+0x1aba>
	addi	a1,sp,32
	mv	a0,s5
	sd	a4,0(sp)
	jal	ra,0x1e4e4 # luaV_tonumber_>
	ld	a4,0(sp)
	beqz	a0,0x20924 # luaV_execute+0x19bc>
	fld	fa5,32(sp)
	j	0x21410 # luaV_execute+0x24a8>
	sh	zero,62(a0)
	mv	s7,a0
	j	0x1efaa # luaV_execute+0x42>
	li	a5,-1
	slli	a5,a5,0x3f
	sd	a5,24(sp)
	bgtz	s11,0x2142a # luaV_execute+0x24c2>
	j	0x213cc # luaV_execute+0x2464>
	beqz	a4,0x214e0 # luaV_execute+0x2578>
	li	a5,0
	j	0x20e2a # luaV_execute+0x1ec2>
	beqz	a4,0x214fc # luaV_execute+0x2594>
	neg	a3,a5
	j	0x20dfc # luaV_execute+0x1e94>
	fld	fs4,0(s0)
	fmv.d	fa0,fs4
	jal	ra,0x31cd0 # floor>
	feq.d	a5,fs4,fa0
	beqz	a5,0x20ebe # luaV_execute+0x1f56>
	fle.d	a5,fs3,fa0
	beqz	a5,0x20ebe # luaV_execute+0x1f56>
	flt.d	a5,fa0,fs2
	beqz	a5,0x20ebe # luaV_execute+0x1f56>
	fcvt.l.d	a5,fa0,rtz
	j	0x1fae4 # luaV_execute+0xb7c>
	auipc	a1,0x21
	addi	a1,a1,1824 # 0x42c00 # udatatypename+0x238>
	mv	a0,s8
	jal	ra,0x13d34 # luaG_runerror>
	auipc	a1,0x21
	addi	a1,a1,1842 # 0x42c20 # udatatypename+0x258>
	mv	a0,s8
	jal	ra,0x13d34 # luaG_runerror>
	auipc	a1,0x21
	addi	a1,a1,1764 # 0x42be0 # udatatypename+0x218>
	mv	a0,s8
	jal	ra,0x13d34 # luaG_runerror>

luaZ_fill:
	addi	sp,sp,-32
	sd	s0,16(sp)
	ld	a5,16(a0)
	ld	a1,24(a0)
	mv	s0,a0
	ld	a0,32(a0)
	sd	ra,24(sp)
	addi	a2,sp,8
	jalr	a5
	beqz	a0,0x21538 # luaZ_fill+0x2e>
	ld	a5,8(sp)
	beqz	a5,0x21538 # luaZ_fill+0x2e>
	addi	a4,a0,1
	addi	a5,a5,-1
	sd	a5,0(s0)
	sd	a4,8(s0)
	lbu	a0,0(a0)
	ld	ra,24(sp)
	ld	s0,16(sp)
	addi	sp,sp,32
	ret
	li	a0,-1
	j	0x21530 # luaZ_fill+0x26>

luaZ_init:
	sd	a0,32(a1)
	sd	a2,16(a1)
	sd	a3,24(a1)
	sd	zero,0(a1)
	sd	zero,8(a1)
	ret

luaZ_read:
	beqz	a2,0x215ce # luaZ_read+0x82>
	addi	sp,sp,-48
	sd	s0,32(sp)
	sd	s2,16(sp)
	sd	s3,8(sp)
	sd	s4,0(sp)
	ld	a5,0(a0)
	sd	ra,40(sp)
	sd	s1,24(sp)
	mv	s2,a2
	mv	s0,a0
	mv	s3,a1
	li	s4,-1
	j	0x21590 # luaZ_read+0x44>
	ld	a1,8(s0)
	mv	a0,s3
	mv	s1,a5
	bleu	a5,s2,0x21574 # luaZ_read+0x28>
	mv	s1,s2
	mv	a2,s1
	jal	ra,0x3632a # memcpy>
	ld	a5,0(s0)
	ld	a4,8(s0)
	sub	s2,s2,s1
	sub	a5,a5,s1
	add	a4,a4,s1
	sd	a5,0(s0)
	sd	a4,8(s0)
	add	s3,s3,s1
	beqz	s2,0x215aa # luaZ_read+0x5e>
	mv	a0,s0
	bnez	a5,0x21568 # luaZ_read+0x1c>
	jal	ra,0x2150a # luaZ_fill>
	beq	a0,s4,0x215bc # luaZ_read+0x70>
	ld	a5,0(s0)
	ld	a1,8(s0)
	addi	a5,a5,1
	addi	a1,a1,-1
	sd	a5,0(s0)
	sd	a1,8(s0)
	j	0x2156a # luaZ_read+0x1e>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	ld	s4,0(sp)
	li	a0,0
	addi	sp,sp,48
	ret
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s3,8(sp)
	ld	s4,0(sp)
	mv	a0,s2
	ld	s2,16(sp)
	addi	sp,sp,48
	ret
	li	a0,0
	ret

getS:
	ld	a5,8(a1)
	beqz	a5,0x215e0 # getS+0xe>
	sd	a5,0(a2)
	ld	a0,0(a1)
	sd	zero,8(a1)
	ret
	li	a0,0
	ret

findfield:
	bnez	a2,0x215ea # findfield+0x6>
	li	a0,0
	ret
	addi	sp,sp,-48
	sd	s2,16(sp)
	mv	s2,a1
	li	a1,-1
	sd	s0,32(sp)
	sd	s1,24(sp)
	sd	ra,40(sp)
	sd	s3,8(sp)
	mv	s1,a2
	mv	s0,a0
	jal	ra,0x1144a # lua_type>
	li	a5,5
	beq	a0,a5,0x21618 # findfield+0x34>
	li	a0,0
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	addi	sp,sp,48
	ret
	mv	a0,s0
	jal	ra,0x11e16 # lua_pushnil>
	li	s3,4
	addiw	s1,s1,-1
	j	0x2162c # findfield+0x48>
	li	a1,-2
	mv	a0,s0
	jal	ra,0x1110c # lua_settop>
	li	a1,-2
	mv	a0,s0
	jal	ra,0x12cbe # lua_next>
	mv	a5,a0
	li	a1,-2
	mv	a0,s0
	beqz	a5,0x21608 # findfield+0x24>
	jal	ra,0x1144a # lua_type>
	bne	a0,s3,0x21624 # findfield+0x40>
	li	a2,-1
	mv	a1,s2
	mv	a0,s0
	jal	ra,0x11744 # lua_rawequal>
	mv	a5,a0
	mv	a2,s1
	mv	a1,s2
	mv	a0,s0
	bnez	a5,0x2168a # findfield+0xa6>
	jal	ra,0x215e4 # findfield>
	beqz	a0,0x21624 # findfield+0x40>
	auipc	a1,0x21
	addi	a1,a1,1874 # 0x42db0 # udatatypename+0x3e8>
	mv	a0,s0
	jal	ra,0x11e96 # lua_pushstring>
	li	a2,-3
	li	a1,-1
	mv	a0,s0
	jal	ra,0x1129c # lua_copy>
	li	a1,-2
	mv	a0,s0
	jal	ra,0x1110c # lua_settop>
	mv	a0,s0
	li	a1,3
	jal	ra,0x12d8e # lua_concat>
	li	a0,1
	j	0x2160a # findfield+0x26>
	li	a1,-2
	jal	ra,0x1110c # lua_settop>
	li	a0,1
	j	0x2160a # findfield+0x26>

pushglobalfuncname:
	addi	sp,sp,-48
	sd	ra,40(sp)
	sd	s0,32(sp)
	sd	s1,24(sp)
	mv	s0,a0
	sd	s2,16(sp)
	sd	s3,8(sp)
	mv	s1,a1
	jal	ra,0x110fc # lua_gettop>
	mv	s2,a0
	mv	a2,s1
	auipc	a1,0x21
	addi	a1,a1,1804 # 0x42db8 # udatatypename+0x3f0>
	mv	a0,s0
	jal	ra,0x13952 # lua_getinfo>
	lui	a1,0xfff0c
	auipc	a2,0x21
	addi	a2,a2,1794 # 0x42dc0 # udatatypename+0x3f8>
	addi	a1,a1,-1576 # 0xfffffffffff0b9d8 # __BSS_END__+0xffffffffffebd650>
	mv	a0,s0
	jal	ra,0x120a4 # lua_getfield>
	addiw	s3,s2,1
	li	a2,2
	mv	a1,s3
	mv	a0,s0
	jal	ra,0x215e4 # findfield>
	beqz	a0,0x21718 # pushglobalfuncname+0x84>
	li	a2,0
	li	a1,-1
	mv	a0,s0
	jal	ra,0x11a62 # lua_tolstring>
	lbu	a5,0(a0)
	addiw	a5,a5,-95
	beqz	a5,0x21732 # pushglobalfuncname+0x9e>
	mv	a2,s3
	mv	a0,s0
	li	a1,-1
	jal	ra,0x1129c # lua_copy>
	mv	a0,s0
	mv	a1,s3
	jal	ra,0x1110c # lua_settop>
	ld	ra,40(sp)
	ld	s0,32(sp)
	li	s1,1
	ld	s2,16(sp)
	ld	s3,8(sp)
	mv	a0,s1
	ld	s1,24(sp)
	addi	sp,sp,48
	ret
	mv	s1,a0
	mv	a1,s2
	mv	a0,s0
	jal	ra,0x1110c # lua_settop>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	mv	a0,s1
	ld	s1,24(sp)
	addi	sp,sp,48
	ret
	lbu	a5,1(a0)
	addiw	a5,a5,-71
	bnez	a5,0x216f4 # pushglobalfuncname+0x60>
	lbu	a5,2(a0)
	addiw	a5,a5,-46
	bnez	a5,0x216f4 # pushglobalfuncname+0x60>
	addi	a1,a0,3
	mv	a0,s0
	jal	ra,0x11e96 # lua_pushstring>
	mv	a0,s0
	li	a1,-2
	li	a2,-1
	jal	ra,0x111ea # lua_rotate>
	li	a1,-2
	mv	a0,s0
	jal	ra,0x1110c # lua_settop>
	j	0x216f4 # pushglobalfuncname+0x60>

errfile:
	addi	sp,sp,-48
	sd	ra,40(sp)
	sd	s0,32(sp)
	sd	s1,24(sp)
	sd	s2,16(sp)
	sd	s3,8(sp)
	mv	s0,a0
	mv	s1,a2
	mv	s2,a1
	jal	ra,0x2f900 # __errno_location>
	lw	a0,0(a0)
	jal	ra,0x2f93a # strerror>
	mv	a1,s1
	mv	s3,a0
	li	a2,0
	mv	a0,s0
	jal	ra,0x11a62 # lua_tolstring>
	mv	a4,s3
	addi	a3,a0,1
	mv	a2,s2
	auipc	a1,0x21
	addi	a1,a1,1588 # 0x42dc8 # udatatypename+0x400>
	mv	a0,s0
	jal	ra,0x11f0c # lua_pushfstring>
	mv	a1,s1
	mv	a0,s0
	li	a2,-1
	jal	ra,0x111ea # lua_rotate>
	mv	a0,s0
	li	a1,-2
	jal	ra,0x1110c # lua_settop>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	li	a0,6
	addi	sp,sp,48
	ret

resizebox:
	addi	sp,sp,-64
	sd	s0,48(sp)
	mv	s0,a1
	addi	a1,sp,8
	sd	ra,56(sp)
	sd	s1,40(sp)
	sd	s2,32(sp)
	sd	s3,24(sp)
	mv	s2,a2
	mv	s3,a0
	jal	ra,0x12e62 # lua_getallocf>
	mv	s1,a0
	mv	a1,s0
	mv	a0,s3
	jal	ra,0x11c6a # lua_touserdata>
	ld	a2,8(a0)
	ld	a1,0(a0)
	mv	s0,a0
	ld	a0,8(sp)
	mv	a3,s2
	jalr	s1
	mv	s1,a0
	beqz	a0,0x2180c # resizebox+0x48>
	sd	s1,0(s0)
	sd	s2,8(s0)
	ld	ra,56(sp)
	ld	s0,48(sp)
	ld	s2,32(sp)
	ld	s3,24(sp)
	mv	a0,s1
	ld	s1,40(sp)
	addi	sp,sp,64
	ret
	beqz	s2,0x217f6 # resizebox+0x32>
	auipc	a1,0x21
	addi	a1,a1,-272 # 0x42700 # priority+0x80>
	mv	a0,s3
	jal	ra,0x11e96 # lua_pushstring>
	mv	a0,s3
	jal	ra,0x12c90 # lua_error>
	j	0x217f6 # resizebox+0x32>

boxgc:
	addi	sp,sp,-16
	li	a2,0
	li	a1,1
	sd	ra,8(sp)
	jal	ra,0x217c4 # resizebox>
	ld	ra,8(sp)
	li	a0,0
	addi	sp,sp,16
	ret

getF:
	lw	a5,0(a1)
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	ra,24(sp)
	sd	s2,0(sp)
	mv	s0,a1
	mv	s1,a2
	blez	a5,0x21866 # getF+0x2c>
	sd	a5,0(a2)
	sw	zero,0(a1)
	addi	s2,a1,16
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	mv	a0,s2
	ld	s2,0(sp)
	addi	sp,sp,32
	ret
	ld	a0,8(a1)
	li	s2,0
	jal	ra,0x3359a # feof>
	bnez	a0,0x21858 # getF+0x1e>
	ld	a3,8(s0)
	addi	s2,s0,16
	mv	a0,s2
	li	a2,1024
	li	a1,1
	jal	ra,0x33af2 # fread>
	ld	ra,24(sp)
	ld	s0,16(sp)
	sd	a0,0(s1)
	ld	s1,8(sp)
	mv	a0,s2
	ld	s2,0(sp)
	addi	sp,sp,32
	ret

panic:
	addi	sp,sp,-16
	li	a2,0
	li	a1,-1
	sd	ra,8(sp)
	sd	s0,0(sp)
	jal	ra,0x11a62 # lua_tolstring>
	auipc	a2,0x21
	addi	a2,a2,-472 # 0x426c8 # priority+0x48>
	beqz	a0,0x218ac # panic+0x1a>
	mv	a2,a0
	auipc	a5,0x2c
	ld	a5,-1276(a5) # 0x4d3b0 # _GLOBAL_OFFSET_TABLE_+0xa8>
	ld	s0,0(a5)
	auipc	a1,0x21
	addi	a1,a1,1322 # 0x42de0 # udatatypename+0x418>
	mv	a0,s0
	jal	ra,0x33970 # fprintf>
	mv	a0,s0
	jal	ra,0x3362a # fflush>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,0
	addi	sp,sp,16
	ret

l_alloc:
	mv	a0,a1
	beqz	a3,0x218de # l_alloc+0xa>
	mv	a1,a3
	j	0x3100e # realloc>
	addi	sp,sp,-16
	sd	ra,8(sp)
	jal	ra,0x2fbca # free>
	ld	ra,8(sp)
	li	a0,0
	addi	sp,sp,16
	ret

skipcomment:
	addi	sp,sp,-48
	sd	s0,32(sp)
	sd	s1,24(sp)
	sd	s2,16(sp)
	sd	s3,8(sp)
	sd	ra,40(sp)
	mv	s0,a0
	mv	s2,a1
	sw	zero,0(a0)
	auipc	s1,0x21
	addi	s1,s1,1302 # 0x42e18 # udatatypename+0x450>
	li	s3,-1
	j	0x2192a # skipcomment+0x3c>
	lbu	a5,-1(s1)
	bne	a5,a0,0x21956 # skipcomment+0x68>
	lw	a5,0(s0)
	lbu	a4,0(s1)
	addiw	a3,a5,1
	sw	a3,0(s0)
	add	a5,a5,s0
	sb	a0,16(a5)
	beqz	a4,0x2194c # skipcomment+0x5e>
	ld	a0,8(s0)
	addi	s1,s1,1
	jal	ra,0x34132 # getc>
	bne	a0,s3,0x2190e # skipcomment+0x20>
	sw	s3,0(s2)
	li	a5,0
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	mv	a0,a5
	addi	sp,sp,48
	ret
	ld	a0,8(s0)
	sw	zero,0(s0)
	jal	ra,0x34132 # getc>
	sw	a0,0(s2)
	li	a4,35
	li	a5,0
	bne	a0,a4,0x2193c # skipcomment+0x4e>
	li	s1,-1
	li	s3,10
	j	0x2196e # skipcomment+0x80>
	beq	a0,s3,0x21978 # skipcomment+0x8a>
	ld	a0,8(s0)
	jal	ra,0x34132 # getc>
	bne	a0,s1,0x2196a # skipcomment+0x7c>
	ld	a0,8(s0)
	jal	ra,0x34132 # getc>
	ld	ra,40(sp)
	ld	s0,32(sp)
	sw	a0,0(s2)
	li	a5,1
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	mv	a0,a5
	addi	sp,sp,48
	ret

warnfcont:
	addi	sp,sp,-32
	auipc	a5,0x2c
	ld	a5,-1510(a5) # 0x4d3b0 # _GLOBAL_OFFSET_TABLE_+0xa8>
	sd	s1,8(sp)
	ld	s1,0(a5)
	mv	a5,a1
	sd	s0,16(sp)
	mv	a1,s1
	mv	s0,a0
	mv	a0,a5
	sd	s2,0(sp)
	sd	ra,24(sp)
	mv	s2,a2
	jal	ra,0x33abc # fputs>
	mv	a0,s1
	jal	ra,0x3362a # fflush>
	beqz	s2,0x219da # warnfcont+0x46>
	mv	a2,s0
	ld	s0,16(sp)
	ld	ra,24(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	auipc	a1,0x0
	addi	a1,a1,-54 # 0x21994 # warnfcont>
	mv	a0,a2
	addi	sp,sp,32
	j	0x12e78 # lua_setwarnf>
	mv	a1,s1
	li	a0,10
	jal	ra,0x33a6e # fputc>
	mv	a0,s1
	jal	ra,0x3362a # fflush>
	mv	a2,s0
	ld	s0,16(sp)
	ld	ra,24(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	auipc	a1,0x0
	addi	a1,a1,16 # 0x21a02 # warnfon>
	mv	a0,a2
	addi	sp,sp,32
	j	0x12e78 # lua_setwarnf>

warnfon:
	addi	sp,sp,-48
	sd	s0,32(sp)
	sd	s1,24(sp)
	sd	s2,16(sp)
	sd	ra,40(sp)
	sd	s3,8(sp)
	mv	s1,a2
	mv	s2,a0
	mv	s0,a1
	bnez	a2,0x21a22 # warnfon+0x20>
	lbu	a4,0(a1)
	li	a5,64
	beq	a4,a5,0x21a5a # warnfon+0x58>
	auipc	a5,0x2c
	ld	a5,-1650(a5) # 0x4d3b0 # _GLOBAL_OFFSET_TABLE_+0xa8>
	ld	s3,0(a5)
	li	a2,13
	li	a1,1
	mv	a3,s3
	auipc	a0,0x21
	addi	a0,a0,1012 # 0x42e28 # udatatypename+0x460>
	jal	ra,0x34010 # fwrite>
	mv	a0,s3
	jal	ra,0x3362a # fflush>
	mv	a1,s0
	ld	s0,32(sp)
	ld	ra,40(sp)
	ld	s3,8(sp)
	mv	a2,s1
	mv	a0,s2
	ld	s1,24(sp)
	ld	s2,16(sp)
	addi	sp,sp,48
	j	0x21994 # warnfcont>
	addi	s1,a1,1
	mv	a0,s1
	auipc	a1,0x21
	addi	a1,a1,960 # 0x42e20 # udatatypename+0x458>
	jal	ra,0x369dc # strcmp>
	mv	a2,s2
	auipc	a1,0x0
	addi	a1,a1,152 # 0x21b06 # warnfoff>
	beqz	a0,0x21a9a # warnfon+0x98>
	lbu	a5,1(s0)
	addiw	a5,a5,-111
	bnez	a5,0x21aac # warnfon+0xaa>
	lbu	a5,1(s1)
	addiw	a5,a5,-110
	bnez	a5,0x21aac # warnfon+0xaa>
	lbu	a5,2(s1)
	bnez	a5,0x21aac # warnfon+0xaa>
	auipc	a1,0x0
	addi	a1,a1,-144 # 0x21a02 # warnfon>
	ld	s0,32(sp)
	ld	ra,40(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	mv	a0,a2
	addi	sp,sp,48
	j	0x12e78 # lua_setwarnf>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	addi	sp,sp,48
	ret

luaL_getmetafield.part.0:
	addi	sp,sp,-32
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	mv	s0,a0
	jal	ra,0x11e96 # lua_pushstring>
	li	a1,-2
	mv	a0,s0
	jal	ra,0x1219e # lua_rawget>
	mv	s1,a0
	bnez	a0,0x21ae8 # luaL_getmetafield.part.0+0x2e>
	mv	a0,s0
	li	a1,-3
	jal	ra,0x1110c # lua_settop>
	ld	ra,24(sp)
	ld	s0,16(sp)
	mv	a0,s1
	ld	s1,8(sp)
	addi	sp,sp,32
	ret
	mv	a0,s0
	li	a1,-2
	li	a2,-1
	jal	ra,0x111ea # lua_rotate>
	mv	a0,s0
	li	a1,-2
	jal	ra,0x1110c # lua_settop>
	ld	ra,24(sp)
	ld	s0,16(sp)
	mv	a0,s1
	ld	s1,8(sp)
	addi	sp,sp,32
	ret

warnfoff:
	bnez	a2,0x21b7e # warnfoff+0x78>
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	ra,24(sp)
	sd	s1,8(sp)
	sd	s2,0(sp)
	lbu	a4,0(a1)
	li	a5,64
	mv	s0,a1
	beq	a4,a5,0x21b2c # warnfoff+0x26>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret
	addi	s2,a1,1
	mv	s1,a0
	auipc	a1,0x21
	addi	a1,a1,750 # 0x42e20 # udatatypename+0x458>
	mv	a0,s2
	jal	ra,0x369dc # strcmp>
	mv	a2,s1
	auipc	a1,0x0
	addi	a1,a1,-60 # 0x21b06 # warnfoff>
	beqz	a0,0x21b6e # warnfoff+0x68>
	lbu	a5,1(s0)
	addiw	a5,a5,-111
	bnez	a5,0x21b20 # warnfoff+0x1a>
	lbu	a5,1(s2)
	addiw	a5,a5,-110
	bnez	a5,0x21b20 # warnfoff+0x1a>
	lbu	a5,2(s2)
	bnez	a5,0x21b20 # warnfoff+0x1a>
	auipc	a1,0x0
	addi	a1,a1,-356 # 0x21a02 # warnfon>
	ld	s0,16(sp)
	ld	ra,24(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	mv	a0,a2
	addi	sp,sp,32
	j	0x12e78 # lua_setwarnf>
	ret

luaL_where:
	addi	sp,sp,-176
	sd	s1,152(sp)
	addi	s1,sp,8
	mv	a2,s1
	sd	s0,160(sp)
	sd	ra,168(sp)
	mv	s0,a0
	jal	ra,0x137d0 # lua_getstack>
	beqz	a0,0x21baa # luaL_where+0x2a>
	mv	a2,s1
	auipc	a1,0x21
	addi	a1,a1,674 # 0x42e38 # udatatypename+0x470>
	mv	a0,s0
	jal	ra,0x13952 # lua_getinfo>
	lw	a3,56(sp)
	bgtz	a3,0x21bc2 # luaL_where+0x42>
	mv	a0,s0
	auipc	a1,0x1f
	addi	a1,a1,1588 # 0x411e0 # __clzdi2+0x318>
	jal	ra,0x11f0c # lua_pushfstring>
	ld	ra,168(sp)
	ld	s0,160(sp)
	ld	s1,152(sp)
	addi	sp,sp,176
	ret
	addi	a2,sp,76
	mv	a0,s0
	auipc	a1,0x21
	addi	a1,a1,634 # 0x42e40 # udatatypename+0x478>
	jal	ra,0x11f0c # lua_pushfstring>
	ld	ra,168(sp)
	ld	s0,160(sp)
	ld	s1,152(sp)
	addi	sp,sp,176
	ret

luaL_error:
	addi	sp,sp,-96
	sd	s1,24(sp)
	sd	a5,72(sp)
	mv	s1,a1
	addi	a5,sp,48
	li	a1,1
	sd	ra,40(sp)
	sd	s0,32(sp)
	sd	a3,56(sp)
	mv	s0,a0
	sd	a4,64(sp)
	sd	a6,80(sp)
	sd	a7,88(sp)
	sd	a5,8(sp)
	sd	a2,48(sp)
	jal	ra,0x21b80 # luaL_where>
	ld	a2,8(sp)
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x11ee2 # lua_pushvfstring>
	mv	a0,s0
	li	a1,2
	jal	ra,0x12d8e # lua_concat>
	mv	a0,s0
	jal	ra,0x12c90 # lua_error>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	addi	sp,sp,96
	ret

luaL_argerror:
	addi	sp,sp,-192
	sd	s3,152(sp)
	addi	s3,sp,8
	sd	s0,176(sp)
	sd	s2,160(sp)
	mv	s0,a1
	mv	s2,a2
	li	a1,0
	mv	a2,s3
	sd	s1,168(sp)
	sd	ra,184(sp)
	mv	s1,a0
	jal	ra,0x137d0 # lua_getstack>
	beqz	a0,0x21ca4 # luaL_argerror+0x84>
	auipc	a1,0x21
	addi	a1,a1,544 # 0x42e60 # udatatypename+0x498>
	mv	a2,s3
	mv	a0,s1
	jal	ra,0x13952 # lua_getinfo>
	ld	a0,24(sp)
	auipc	a1,0x1f
	addi	a1,a1,2038 # 0x41448 # lua_ident+0xb0>
	jal	ra,0x369dc # strcmp>
	bnez	a0,0x21c8a # luaL_argerror+0x6a>
	addiw	s0,s0,-1
	ld	a2,16(sp)
	beqz	s0,0x21cc4 # luaL_argerror+0xa4>
	beqz	a2,0x21c8e # luaL_argerror+0x6e>
	mv	a3,a2
	mv	a4,s2
	mv	a2,s0
	auipc	a1,0x21
	addi	a1,a1,538 # 0x42e88 # udatatypename+0x4c0>
	mv	a0,s1
	jal	ra,0x21bdc # luaL_error>
	ld	ra,184(sp)
	ld	s0,176(sp)
	ld	s1,168(sp)
	ld	s2,160(sp)
	ld	s3,152(sp)
	addi	sp,sp,192
	ret
	ld	a2,16(sp)
	bnez	a2,0x21c68 # luaL_argerror+0x48>
	mv	a1,s3
	mv	a0,s1
	jal	ra,0x21694 # pushglobalfuncname>
	auipc	a2,0x1f
	addi	a2,a2,1714 # 0x41348 # __clzdi2+0x480>
	bnez	a0,0x21cd6 # luaL_argerror+0xb6>
	sd	a2,16(sp)
	j	0x21c68 # luaL_argerror+0x48>
	mv	a3,s2
	mv	a2,s0
	mv	a0,s1
	auipc	a1,0x21
	addi	a1,a1,414 # 0x42e48 # udatatypename+0x480>
	jal	ra,0x21bdc # luaL_error>
	ld	ra,184(sp)
	ld	s0,176(sp)
	ld	s1,168(sp)
	ld	s2,160(sp)
	ld	s3,152(sp)
	addi	sp,sp,192
	ret
	mv	a3,s2
	auipc	a1,0x21
	addi	a1,a1,418 # 0x42e68 # udatatypename+0x4a0>
	mv	a0,s1
	jal	ra,0x21bdc # luaL_error>
	j	0x21c7c # luaL_argerror+0x5c>
	li	a2,0
	li	a1,-1
	mv	a0,s1
	jal	ra,0x11a62 # lua_tolstring>
	mv	a2,a0
	sd	a2,16(sp)
	j	0x21c68 # luaL_argerror+0x48>

luaL_typeerror:
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	s2,0(sp)
	sd	ra,24(sp)
	mv	s0,a0
	mv	s1,a1
	mv	s2,a2
	jal	ra,0x122ea # lua_getmetatable>
	bnez	a0,0x21d48 # luaL_typeerror+0x62>
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x1144a # lua_type>
	li	a5,2
	auipc	a3,0x21
	addi	a3,a3,418 # 0x42ea8 # udatatypename+0x4e0>
	bne	a0,a5,0x21d34 # luaL_typeerror+0x4e>
	mv	a2,s2
	auipc	a1,0x21
	addi	a1,a1,420 # 0x42eb8 # udatatypename+0x4f0>
	mv	a0,s0
	jal	ra,0x11f0c # lua_pushfstring>
	mv	a2,a0
	mv	a0,s0
	ld	s0,16(sp)
	ld	ra,24(sp)
	ld	s2,0(sp)
	mv	a1,s1
	ld	s1,8(sp)
	addi	sp,sp,32
	j	0x21c20 # luaL_argerror>
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x1144a # lua_type>
	mv	a1,a0
	mv	a0,s0
	jal	ra,0x114d0 # lua_typename>
	mv	a3,a0
	j	0x21d12 # luaL_typeerror+0x2c>
	auipc	a1,0x21
	addi	a1,a1,-1232 # 0x42878 # dummynode_+0x98>
	mv	a0,s0
	jal	ra,0x21aba # luaL_getmetafield.part.0>
	li	a5,4
	bne	a0,a5,0x21cfc # luaL_typeerror+0x16>
	li	a2,0
	li	a1,-1
	mv	a0,s0
	jal	ra,0x11a62 # lua_tolstring>
	mv	a3,a0
	j	0x21d12 # luaL_typeerror+0x2c>

luaL_fileresult:
	addi	sp,sp,-32
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	s2,0(sp)
	beqz	a1,0x21d8a # luaL_fileresult+0x20>
	li	a1,1
	jal	ra,0x11fdc # lua_pushboolean>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	li	a0,1
	addi	sp,sp,32
	ret
	mv	s0,a0
	mv	s1,a2
	jal	ra,0x2f900 # __errno_location>
	mv	a5,a0
	lw	s2,0(a5)
	mv	a0,s0
	jal	ra,0x11e16 # lua_pushnil>
	mv	a0,s2
	beqz	s1,0x21dce # luaL_fileresult+0x64>
	jal	ra,0x2f93a # strerror>
	mv	a3,a0
	mv	a2,s1
	auipc	a1,0x21
	addi	a1,a1,294 # 0x42ed0 # udatatypename+0x508>
	mv	a0,s0
	jal	ra,0x11f0c # lua_pushfstring>
	mv	a0,s0
	mv	a1,s2
	jal	ra,0x11e32 # lua_pushinteger>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	li	a0,3
	addi	sp,sp,32
	ret
	jal	ra,0x2f93a # strerror>
	mv	a1,a0
	mv	a0,s0
	jal	ra,0x11e96 # lua_pushstring>
	j	0x21db8 # luaL_fileresult+0x4e>

luaL_execresult:
	addi	sp,sp,-48
	sd	s0,32(sp)
	sd	ra,40(sp)
	sd	s1,24(sp)
	sd	s2,16(sp)
	sd	s3,8(sp)
	mv	s0,a0
	beqz	a1,0x21e6e # luaL_execresult+0x92>
	mv	s1,a1
	jal	ra,0x2f900 # __errno_location>
	lw	s2,0(a0)
	bnez	s2,0x21e24 # luaL_execresult+0x48>
	andi	s2,s1,127
	beqz	s2,0x21e62 # luaL_execresult+0x86>
	slli	a5,s1,0x30
	srli	a5,a5,0x30
	addiw	a5,a5,-1
	li	a4,254
	auipc	s3,0x21
	addi	s3,s3,202 # 0x42ed8 # udatatypename+0x510>
	bltu	a4,a5,0x21e50 # luaL_execresult+0x74>
	mv	a0,s0
	jal	ra,0x11e16 # lua_pushnil>
	mv	a1,s3
	j	0x21e32 # luaL_execresult+0x56>
	mv	a0,s0
	jal	ra,0x11e16 # lua_pushnil>
	mv	a0,s2
	jal	ra,0x2f93a # strerror>
	mv	a1,a0
	mv	a0,s0
	jal	ra,0x11e96 # lua_pushstring>
	mv	a0,s0
	mv	a1,s2
	jal	ra,0x11e32 # lua_pushinteger>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	li	a0,3
	addi	sp,sp,48
	ret
	mv	s2,s1
	mv	a0,s0
	auipc	s3,0x21
	addi	s3,s3,140 # 0x42ee0 # udatatypename+0x518>
	jal	ra,0x11e16 # lua_pushnil>
	j	0x21e20 # luaL_execresult+0x44>
	srai	a1,s1,0x8
	andi	s2,a1,255
	bnez	s2,0x21e52 # luaL_execresult+0x76>
	li	a1,1
	mv	a0,s0
	jal	ra,0x11fdc # lua_pushboolean>
	auipc	s3,0x21
	addi	s3,s3,106 # 0x42ee0 # udatatypename+0x518>
	li	s2,0
	mv	a1,s3
	j	0x21e32 # luaL_execresult+0x56>

luaL_newmetatable:
	addi	sp,sp,-32
	sd	s2,0(sp)
	lui	s2,0xfff0c
	sd	s1,8(sp)
	mv	a2,a1
	mv	s1,a1
	addi	a1,s2,-1576 # 0xfffffffffff0b9d8 # __BSS_END__+0xffffffffffebd650>
	sd	s0,16(sp)
	sd	ra,24(sp)
	mv	s0,a0
	jal	ra,0x120a4 # lua_getfield>
	beqz	a0,0x21eb0 # luaL_newmetatable+0x2c>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	li	a0,0
	addi	sp,sp,32
	ret
	mv	a0,s0
	li	a1,-2
	jal	ra,0x1110c # lua_settop>
	li	a2,2
	mv	a0,s0
	li	a1,0
	jal	ra,0x1228e # lua_createtable>
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x11e96 # lua_pushstring>
	auipc	a2,0x21
	addi	a2,a2,-1618 # 0x42878 # dummynode_+0x98>
	mv	a0,s0
	li	a1,-2
	jal	ra,0x124d2 # lua_setfield>
	mv	a0,s0
	li	a1,-1
	jal	ra,0x113c8 # lua_pushvalue>
	mv	a0,s0
	mv	a2,s1
	addi	a1,s2,-1576
	jal	ra,0x124d2 # lua_setfield>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	li	a0,1
	addi	sp,sp,32
	ret

luaL_setmetatable:
	mv	a2,a1
	lui	a1,0xfff0c
	addi	sp,sp,-16
	addi	a1,a1,-1576 # 0xfffffffffff0b9d8 # __BSS_END__+0xffffffffffebd650>
	sd	s0,0(sp)
	sd	ra,8(sp)
	mv	s0,a0
	jal	ra,0x120a4 # lua_getfield>
	mv	a0,s0
	ld	s0,0(sp)
	ld	ra,8(sp)
	li	a1,-2
	addi	sp,sp,16
	j	0x1272e # lua_setmetatable>

luaL_testudata:
	addi	sp,sp,-48
	sd	s1,24(sp)
	sd	s2,16(sp)
	sd	s3,8(sp)
	sd	ra,40(sp)
	sd	s0,32(sp)
	mv	s1,a0
	mv	s2,a1
	mv	s3,a2
	jal	ra,0x11c6a # lua_touserdata>
	beqz	a0,0x21f44 # luaL_testudata+0x24>
	mv	s0,a0
	mv	a1,s2
	mv	a0,s1
	jal	ra,0x122ea # lua_getmetatable>
	bnez	a0,0x21f56 # luaL_testudata+0x36>
	li	s0,0
	ld	ra,40(sp)
	mv	a0,s0
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	addi	sp,sp,48
	ret
	lui	a1,0xfff0c
	mv	a2,s3
	addi	a1,a1,-1576 # 0xfffffffffff0b9d8 # __BSS_END__+0xffffffffffebd650>
	mv	a0,s1
	jal	ra,0x120a4 # lua_getfield>
	li	a1,-1
	li	a2,-2
	mv	a0,s1
	jal	ra,0x11744 # lua_rawequal>
	snez	a5,a0
	neg	a5,a5
	mv	a0,s1
	li	a1,-3
	and	s0,s0,a5
	jal	ra,0x1110c # lua_settop>
	ld	ra,40(sp)
	mv	a0,s0
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	addi	sp,sp,48
	ret

luaL_checkudata:
	addi	sp,sp,-48
	sd	s0,32(sp)
	sd	s1,24(sp)
	sd	s2,16(sp)
	sd	s3,8(sp)
	sd	ra,40(sp)
	mv	s1,a0
	mv	s2,a1
	mv	s3,a2
	jal	ra,0x21f20 # luaL_testudata>
	mv	s0,a0
	beqz	a0,0x21fbc # luaL_checkudata+0x2a>
	ld	ra,40(sp)
	mv	a0,s0
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	addi	sp,sp,48
	ret
	mv	a2,s3
	mv	a1,s2
	mv	a0,s1
	jal	ra,0x21ce6 # luaL_typeerror>
	ld	ra,40(sp)
	mv	a0,s0
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	addi	sp,sp,48
	ret

luaL_checkoption:
	addi	sp,sp,-48
	sd	s0,32(sp)
	sd	s3,8(sp)
	sd	s4,0(sp)
	sd	ra,40(sp)
	sd	s1,24(sp)
	sd	s2,16(sp)
	mv	s3,a0
	mv	s4,a1
	mv	s0,a3
	beqz	a2,0x2206e # luaL_checkoption+0x98>
	mv	s2,a2
	jal	ra,0x1144a # lua_type>
	bgtz	a0,0x2204a # luaL_checkoption+0x74>
	ld	a0,0(s0)
	beqz	a0,0x22024 # luaL_checkoption+0x4e>
	addi	s0,s0,8
	li	s1,0
	j	0x22008 # luaL_checkoption+0x32>
	ld	a0,-8(s0)
	addiw	s1,s1,1
	beqz	a0,0x22024 # luaL_checkoption+0x4e>
	mv	a1,s2
	addi	s0,s0,8
	jal	ra,0x369dc # strcmp>
	bnez	a0,0x22000 # luaL_checkoption+0x2a>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	ld	s4,0(sp)
	mv	a0,s1
	ld	s1,24(sp)
	addi	sp,sp,48
	ret
	mv	a2,s2
	auipc	a1,0x21
	addi	a1,a1,-318 # 0x42ee8 # udatatypename+0x520>
	mv	a0,s3
	jal	ra,0x11f0c # lua_pushfstring>
	ld	s0,32(sp)
	ld	ra,40(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	mv	a2,a0
	mv	a1,s4
	mv	a0,s3
	ld	s4,0(sp)
	ld	s3,8(sp)
	addi	sp,sp,48
	j	0x21c20 # luaL_argerror>
	mv	a1,s4
	li	a2,0
	mv	a0,s3
	jal	ra,0x11a62 # lua_tolstring>
	mv	s2,a0
	li	a1,4
	mv	a0,s3
	bnez	s2,0x21ff6 # luaL_checkoption+0x20>
	jal	ra,0x114d0 # lua_typename>
	mv	a2,a0
	mv	a1,s4
	mv	a0,s3
	jal	ra,0x21ce6 # luaL_typeerror>
	j	0x21ff6 # luaL_checkoption+0x20>
	jal	ra,0x11a62 # lua_tolstring>
	mv	s2,a0
	bnez	a0,0x21ff6 # luaL_checkoption+0x20>
	li	a1,4
	mv	a0,s3
	j	0x2205e # luaL_checkoption+0x88>

luaL_checkstack:
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	ra,24(sp)
	mv	s1,a0
	mv	s0,a2
	jal	ra,0x11002 # lua_checkstack>
	beqz	a0,0x22098 # luaL_checkstack+0x1c>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret
	beqz	s0,0x220b0 # luaL_checkstack+0x34>
	mv	a2,s0
	ld	s0,16(sp)
	ld	ra,24(sp)
	mv	a0,s1
	ld	s1,8(sp)
	auipc	a1,0x21
	addi	a1,a1,-420 # 0x42f00 # udatatypename+0x538>
	addi	sp,sp,32
	j	0x21bdc # luaL_error>
	ld	s0,16(sp)
	ld	ra,24(sp)
	mv	a0,s1
	ld	s1,8(sp)
	auipc	a1,0x1f
	addi	a1,a1,1976 # 0x41870 # lua_ident+0x4d8>
	addi	sp,sp,32
	j	0x21bdc # luaL_error>

luaL_checktype:
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	s2,0(sp)
	sd	ra,24(sp)
	mv	s0,a2
	mv	s1,a0
	mv	s2,a1
	jal	ra,0x1144a # lua_type>
	bne	a0,s0,0x220e8 # luaL_checktype+0x24>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret
	mv	a1,s0
	mv	a0,s1
	jal	ra,0x114d0 # lua_typename>
	ld	s0,16(sp)
	ld	ra,24(sp)
	mv	a2,a0
	mv	a1,s2
	mv	a0,s1
	ld	s2,0(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	j	0x21ce6 # luaL_typeerror>

luaL_checkany:
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	ra,24(sp)
	mv	s0,a0
	mv	s1,a1
	jal	ra,0x1144a # lua_type>
	li	a5,-1
	beq	a0,a5,0x22122 # luaL_checkany+0x20>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret
	mv	a0,s0
	ld	s0,16(sp)
	ld	ra,24(sp)
	mv	a1,s1
	ld	s1,8(sp)
	auipc	a2,0x21
	addi	a2,a2,-532 # 0x42f18 # udatatypename+0x550>
	addi	sp,sp,32
	j	0x21c20 # luaL_argerror>

luaL_checklstring:
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	s2,0(sp)
	sd	ra,24(sp)
	mv	s1,a0
	mv	s2,a1
	jal	ra,0x11a62 # lua_tolstring>
	mv	s0,a0
	beqz	a0,0x2215c # luaL_checklstring+0x24>
	ld	ra,24(sp)
	mv	a0,s0
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret
	li	a1,4
	mv	a0,s1
	jal	ra,0x114d0 # lua_typename>
	mv	a2,a0
	mv	a1,s2
	mv	a0,s1
	jal	ra,0x21ce6 # luaL_typeerror>
	ld	ra,24(sp)
	mv	a0,s0
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret

luaL_optlstring:
	addi	sp,sp,-48
	sd	s0,32(sp)
	sd	s1,24(sp)
	sd	s3,8(sp)
	sd	s4,0(sp)
	sd	ra,40(sp)
	sd	s2,16(sp)
	mv	s3,a0
	mv	s4,a1
	mv	s0,a2
	mv	s1,a3
	jal	ra,0x1144a # lua_type>
	bgtz	a0,0x221be # luaL_optlstring+0x42>
	mv	s2,s0
	beqz	s1,0x221ac # luaL_optlstring+0x30>
	li	a0,0
	beqz	s0,0x221a8 # luaL_optlstring+0x2c>
	mv	a0,s0
	jal	ra,0x369fa # strlen>
	sd	a0,0(s1)
	mv	s2,s0
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s3,8(sp)
	ld	s4,0(sp)
	mv	a0,s2
	ld	s2,16(sp)
	addi	sp,sp,48
	ret
	mv	a2,s1
	mv	a1,s4
	mv	a0,s3
	jal	ra,0x11a62 # lua_tolstring>
	mv	s2,a0
	bnez	a0,0x221ac # luaL_optlstring+0x30>
	li	a1,4
	mv	a0,s3
	jal	ra,0x114d0 # lua_typename>
	mv	a2,a0
	mv	a1,s4
	mv	a0,s3
	jal	ra,0x21ce6 # luaL_typeerror>
	j	0x221ac # luaL_optlstring+0x30>

luaL_checknumber:
	addi	sp,sp,-64
	addi	a2,sp,28
	sd	s0,48(sp)
	sd	s1,40(sp)
	sd	ra,56(sp)
	mv	s0,a0
	mv	s1,a1
	jal	ra,0x118b0 # lua_tonumberx>
	lw	a5,28(sp)
	beqz	a5,0x22200 # luaL_checknumber+0x20>
	ld	ra,56(sp)
	ld	s0,48(sp)
	ld	s1,40(sp)
	addi	sp,sp,64
	ret
	li	a1,3
	mv	a0,s0
	fsd	fa0,8(sp)
	jal	ra,0x114d0 # lua_typename>
	mv	a2,a0
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x21ce6 # luaL_typeerror>
	ld	ra,56(sp)
	ld	s0,48(sp)
	fld	fa0,8(sp)
	ld	s1,40(sp)
	addi	sp,sp,64
	ret

luaL_optnumber:
	addi	sp,sp,-64
	sd	s0,48(sp)
	sd	s1,40(sp)
	fsd	fs0,24(sp)
	sd	ra,56(sp)
	fmv.d	fs0,fa0
	mv	s0,a0
	mv	s1,a1
	jal	ra,0x1144a # lua_type>
	bgtz	a0,0x2224a # luaL_optnumber+0x2a>
	ld	ra,56(sp)
	ld	s0,48(sp)
	fmv.d	fa0,fs0
	ld	s1,40(sp)
	fld	fs0,24(sp)
	addi	sp,sp,64
	ret
	addi	a2,sp,12
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x118b0 # lua_tonumberx>
	lw	a5,12(sp)
	fmv.d	fs0,fa0
	bnez	a5,0x2223a # luaL_optnumber+0x1a>
	li	a1,3
	mv	a0,s0
	jal	ra,0x114d0 # lua_typename>
	mv	a2,a0
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x21ce6 # luaL_typeerror>
	j	0x2223a # luaL_optnumber+0x1a>

luaL_checkinteger:
	addi	sp,sp,-48
	addi	a2,sp,12
	sd	s0,32(sp)
	sd	s1,24(sp)
	sd	s2,16(sp)
	sd	ra,40(sp)
	mv	s1,a0
	mv	s2,a1
	jal	ra,0x11952 # lua_tointegerx>
	lw	a5,12(sp)
	mv	s0,a0
	beqz	a5,0x22298 # luaL_checkinteger+0x28>
	ld	ra,40(sp)
	mv	a0,s0
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	addi	sp,sp,48
	ret
	mv	a1,s2
	mv	a0,s1
	jal	ra,0x115cc # lua_isnumber>
	beqz	a0,0x222b4 # luaL_checkinteger+0x44>
	auipc	a2,0x21
	addi	a2,a2,-890 # 0x42f28 # udatatypename+0x560>
	mv	a1,s2
	mv	a0,s1
	jal	ra,0x21c20 # luaL_argerror>
	j	0x2228a # luaL_checkinteger+0x1a>
	li	a1,3
	mv	a0,s1
	jal	ra,0x114d0 # lua_typename>
	mv	a2,a0
	mv	a1,s2
	mv	a0,s1
	jal	ra,0x21ce6 # luaL_typeerror>
	j	0x2228a # luaL_checkinteger+0x1a>

luaL_optinteger:
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	s2,0(sp)
	sd	ra,24(sp)
	mv	s1,a0
	mv	s2,a1
	mv	s0,a2
	jal	ra,0x1144a # lua_type>
	bgtz	a0,0x222ee # luaL_optinteger+0x26>
	ld	ra,24(sp)
	mv	a0,s0
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret
	ld	s0,16(sp)
	ld	ra,24(sp)
	mv	a1,s2
	mv	a0,s1
	ld	s2,0(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	j	0x22270 # luaL_checkinteger>

luaL_pushresult:
	addi	sp,sp,-32
	sd	s1,8(sp)
	ld	s1,24(a0)
	ld	a2,16(a0)
	ld	a1,0(a0)
	sd	s0,16(sp)
	mv	s0,a0
	mv	a0,s1
	sd	ra,24(sp)
	jal	ra,0x11e42 # lua_pushlstring>
	ld	a5,0(s0)
	addi	s0,s0,32
	beq	a5,s0,0x22326 # luaL_pushresult+0x28>
	li	a1,-2
	mv	a0,s1
	jal	ra,0x11198 # lua_closeslot>
	mv	a0,s1
	li	a1,-2
	li	a2,-1
	jal	ra,0x111ea # lua_rotate>
	ld	s0,16(sp)
	ld	ra,24(sp)
	mv	a0,s1
	ld	s1,8(sp)
	li	a1,-2
	addi	sp,sp,32
	j	0x1110c # lua_settop>

luaL_pushresultsize:
	ld	a4,16(a0)
	add	a4,a4,a1
	sd	a4,16(a0)
	j	0x222fe # luaL_pushresult>

luaL_buffinit:
	addi	a4,a1,32
	sd	a4,0(a1)
	li	a4,1024
	sd	a0,24(a1)
	sd	zero,16(a1)
	sd	a4,8(a1)
	j	0x11ff8 # lua_pushlightuserdata>

luaL_ref:
	addi	sp,sp,-32
	sd	s1,8(sp)
	mv	s1,a1
	li	a1,-1
	sd	s0,16(sp)
	sd	ra,24(sp)
	sd	s2,0(sp)
	mv	s0,a0
	jal	ra,0x1144a # lua_type>
	beqz	a0,0x223f8 # luaL_ref+0x9a>
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x110d6 # lua_absindex>
	mv	s1,a0
	mv	a1,a0
	li	a2,3
	mv	a0,s0
	jal	ra,0x121ea # lua_rawgeti>
	beqz	a0,0x223d0 # luaL_ref+0x72>
	li	a1,-1
	li	a2,0
	mv	a0,s0
	jal	ra,0x11952 # lua_tointegerx>
	sext.w	s2,a0
	li	a1,-2
	mv	a0,s0
	jal	ra,0x1110c # lua_settop>
	beqz	s2,0x223ea # luaL_ref+0x8c>
	mv	a2,s2
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x121ea # lua_rawgeti>
	li	a2,3
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x126cc # lua_rawseti>
	mv	a2,s2
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x126cc # lua_rawseti>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	mv	a0,s2
	ld	s2,0(sp)
	addi	sp,sp,32
	ret
	mv	a0,s0
	li	a1,0
	jal	ra,0x11e32 # lua_pushinteger>
	mv	a1,s1
	mv	a0,s0
	li	a2,3
	jal	ra,0x126cc # lua_rawseti>
	li	a1,-2
	mv	a0,s0
	jal	ra,0x1110c # lua_settop>
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x11b46 # lua_rawlen>
	addiw	s2,a0,1
	j	0x223b8 # luaL_ref+0x5a>
	li	a1,-2
	mv	a0,s0
	jal	ra,0x1110c # lua_settop>
	li	s2,-1
	j	0x223c2 # luaL_ref+0x64>

luaL_unref:
	bgez	a2,0x2240a # luaL_unref+0x6>
	ret
	addi	sp,sp,-32
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	s2,0(sp)
	mv	s1,a0
	mv	s0,a2
	jal	ra,0x110d6 # lua_absindex>
	mv	s2,a0
	mv	a1,a0
	li	a2,3
	mv	a0,s1
	jal	ra,0x121ea # lua_rawgeti>
	mv	a2,s0
	mv	a1,s2
	mv	a0,s1
	jal	ra,0x126cc # lua_rawseti>
	mv	a1,s0
	mv	a0,s1
	jal	ra,0x11e32 # lua_pushinteger>
	ld	s0,16(sp)
	ld	ra,24(sp)
	mv	a1,s2
	mv	a0,s1
	ld	s2,0(sp)
	ld	s1,8(sp)
	li	a2,3
	addi	sp,sp,32
	j	0x126cc # lua_rawseti>

luaL_loadfilex:
	addi	sp,sp,-1120
	sd	s0,1104(sp)
	sd	s1,1096(sp)
	sd	s2,1088(sp)
	sd	s3,1080(sp)
	sd	ra,1112(sp)
	sd	s4,1072(sp)
	sd	s5,1064(sp)
	mv	s0,a0
	mv	s1,a1
	mv	s2,a2
	jal	ra,0x110fc # lua_gettop>
	addiw	s3,a0,1
	beqz	s1,0x225c8 # luaL_loadfilex+0x17a>
	mv	a2,s1
	auipc	a1,0x21
	addi	a1,a1,-1330 # 0x42f50 # udatatypename+0x588>
	mv	a0,s0
	jal	ra,0x11f0c # lua_pushfstring>
	auipc	a1,0x22
	addi	a1,a1,-1024 # 0x44090 # optsnum.0+0x248>
	mv	a0,s1
	jal	ra,0x338ac # fopen>
	sd	a0,24(sp)
	beqz	a0,0x225e8 # luaL_loadfilex+0x19a>
	addi	s5,sp,12
	addi	s4,sp,16
	mv	a1,s5
	mv	a0,s4
	jal	ra,0x218ee # skipcomment>
	bnez	a0,0x22544 # luaL_loadfilex+0xf6>
	lw	a5,12(sp)
	li	a4,27
	beq	a5,a4,0x22560 # luaL_loadfilex+0x112>
	li	a4,-1
	beq	a5,a4,0x224da # luaL_loadfilex+0x8c>
	andi	a5,a5,255
	lw	a4,16(sp)
	addi	a2,sp,1056
	addiw	a3,a4,1
	add	a4,a4,a2
	sw	a3,16(sp)
	sb	a5,-1024(a4)
	li	a1,-1
	li	a2,0
	mv	a0,s0
	jal	ra,0x11a62 # lua_tolstring>
	mv	a3,a0
	mv	a4,s2
	mv	a2,s4
	auipc	a1,0xfffff
	addi	a1,a1,848 # 0x2183a # getF>
	mv	a0,s0
	jal	ra,0x129fa # lua_load>
	mv	s2,a0
	ld	a0,24(sp)
	jal	ra,0x335e2 # ferror>
	mv	s4,a0
	beqz	s1,0x2250a # luaL_loadfilex+0xbc>
	ld	a0,24(sp)
	jal	ra,0x334fc # fclose>
	mv	a1,s3
	mv	a0,s0
	bnez	s4,0x225b0 # luaL_loadfilex+0x162>
	li	a2,-1
	jal	ra,0x111ea # lua_rotate>
	li	a1,-2
	mv	a0,s0
	jal	ra,0x1110c # lua_settop>
	ld	ra,1112(sp)
	ld	s0,1104(sp)
	ld	s1,1096(sp)
	ld	s3,1080(sp)
	ld	s4,1072(sp)
	ld	s5,1064(sp)
	mv	a0,s2
	ld	s2,1088(sp)
	addi	sp,sp,1120
	ret
	lw	a5,16(sp)
	addi	a3,sp,1056
	addiw	a4,a5,1
	sw	a4,16(sp)
	add	a5,a5,a3
	li	a4,10
	sb	a4,-1024(a5)
	lw	a5,12(sp)
	li	a4,27
	bne	a5,a4,0x224be # luaL_loadfilex+0x70>
	beqz	s1,0x225e4 # luaL_loadfilex+0x196>
	ld	a2,24(sp)
	auipc	a1,0x21
	addi	a1,a1,-1540 # 0x42f60 # udatatypename+0x598>
	mv	a0,s1
	jal	ra,0x33bc0 # freopen>
	sd	a0,24(sp)
	beqz	a0,0x225fc # luaL_loadfilex+0x1ae>
	mv	a1,s5
	mv	a0,s4
	jal	ra,0x218ee # skipcomment>
	lw	a5,12(sp)
	li	a4,-1
	bne	a5,a4,0x224c4 # luaL_loadfilex+0x76>
	li	a1,-1
	li	a2,0
	mv	a0,s0
	jal	ra,0x11a62 # lua_tolstring>
	mv	a3,a0
	mv	a4,s2
	mv	a2,s4
	auipc	a1,0xfffff
	addi	a1,a1,676 # 0x2183a # getF>
	mv	a0,s0
	jal	ra,0x129fa # lua_load>
	mv	s2,a0
	ld	a0,24(sp)
	jal	ra,0x335e2 # ferror>
	mv	s4,a0
	j	0x22504 # luaL_loadfilex+0xb6>
	jal	ra,0x1110c # lua_settop>
	mv	a2,s3
	auipc	a1,0x21
	addi	a1,a1,-1606 # 0x42f70 # udatatypename+0x5a8>
	mv	a0,s0
	jal	ra,0x21764 # errfile>
	mv	s2,a0
	j	0x22520 # luaL_loadfilex+0xd2>
	auipc	a1,0x1f
	addi	a1,a1,-1496 # 0x40ff0 # __clzdi2+0x128>
	mv	a0,s0
	jal	ra,0x11e96 # lua_pushstring>
	auipc	a5,0x2b
	ld	a5,-622(a5) # 0x4d368 # _GLOBAL_OFFSET_TABLE_+0x60>
	ld	a5,0(a5)
	sd	a5,24(sp)
	j	0x224a4 # luaL_loadfilex+0x56>
	li	a5,27
	j	0x224c8 # luaL_loadfilex+0x7a>
	mv	a2,s3
	auipc	a1,0x21
	addi	a1,a1,-1682 # 0x42f58 # udatatypename+0x590>
	mv	a0,s0
	jal	ra,0x21764 # errfile>
	mv	s2,a0
	j	0x22520 # luaL_loadfilex+0xd2>
	mv	a2,s3
	auipc	a1,0x21
	addi	a1,a1,-1686 # 0x42f68 # udatatypename+0x5a0>
	mv	a0,s0
	jal	ra,0x21764 # errfile>
	mv	s2,a0
	j	0x22520 # luaL_loadfilex+0xd2>

luaL_loadbufferx:
	addi	sp,sp,-32
	mv	a6,a1
	mv	a5,a2
	auipc	a1,0xfffff
	addi	a1,a1,-68 # 0x215d2 # getS>
	mv	a2,sp
	sd	ra,24(sp)
	sd	a6,0(sp)
	sd	a5,8(sp)
	jal	ra,0x129fa # lua_load>
	ld	ra,24(sp)
	addi	sp,sp,32
	ret

luaL_loadstring:
	addi	sp,sp,-48
	sd	s1,24(sp)
	mv	s1,a0
	mv	a0,a1
	sd	ra,40(sp)
	sd	s0,32(sp)
	mv	s0,a1
	jal	ra,0x369fa # strlen>
	mv	a5,a0
	mv	a3,s0
	mv	a2,sp
	mv	a0,s1
	li	a4,0
	auipc	a1,0xfffff
	addi	a1,a1,-122 # 0x215d2 # getS>
	sd	s0,0(sp)
	sd	a5,8(sp)
	jal	ra,0x129fa # lua_load>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	addi	sp,sp,48
	ret

luaL_getmetafield:
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	ra,24(sp)
	mv	s0,a0
	mv	s1,a2
	jal	ra,0x122ea # lua_getmetatable>
	bnez	a0,0x22682 # luaL_getmetafield+0x1c>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret
	mv	a0,s0
	ld	s0,16(sp)
	ld	ra,24(sp)
	mv	a1,s1
	ld	s1,8(sp)
	addi	sp,sp,32
	j	0x21aba # luaL_getmetafield.part.0>

luaL_callmeta:
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	s2,0(sp)
	sd	ra,24(sp)
	mv	s0,a0
	mv	s2,a2
	jal	ra,0x110d6 # lua_absindex>
	mv	s1,a0
	mv	a1,a0
	mv	a0,s0
	jal	ra,0x122ea # lua_getmetatable>
	bnez	a0,0x226be # luaL_callmeta+0x2c>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	li	a0,0
	addi	sp,sp,32
	ret
	mv	a1,s2
	mv	a0,s0
	jal	ra,0x21aba # luaL_getmetafield.part.0>
	beqz	a0,0x226b0 # luaL_callmeta+0x1e>
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x113c8 # lua_pushvalue>
	mv	a0,s0
	li	a4,0
	li	a3,0
	li	a2,1
	li	a1,1
	jal	ra,0x128c8 # lua_callk>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	li	a0,1
	addi	sp,sp,32
	ret

luaL_len:
	addi	sp,sp,-48
	sd	ra,40(sp)
	sd	s0,32(sp)
	sd	s1,24(sp)
	mv	s0,a0
	jal	ra,0x12de6 # lua_len>
	addi	a2,sp,12
	li	a1,-1
	mv	a0,s0
	jal	ra,0x11952 # lua_tointegerx>
	lw	a5,12(sp)
	mv	s1,a0
	beqz	a5,0x2271e # luaL_len+0x32>
	mv	a0,s0
	li	a1,-2
	jal	ra,0x1110c # lua_settop>
	ld	ra,40(sp)
	ld	s0,32(sp)
	mv	a0,s1
	ld	s1,24(sp)
	addi	sp,sp,48
	ret
	auipc	a1,0x21
	addi	a1,a1,-1958 # 0x42f78 # udatatypename+0x5b0>
	mv	a0,s0
	jal	ra,0x21bdc # luaL_error>
	j	0x2270a # luaL_len+0x1e>

luaL_tolstring:
	addi	sp,sp,-48
	sd	s2,16(sp)
	mv	s2,a2
	auipc	a2,0x1e
	addi	a2,a2,2028 # 0x40f20 # __clzdi2+0x58>
	sd	s0,32(sp)
	sd	s1,24(sp)
	sd	ra,40(sp)
	sd	s3,8(sp)
	mv	s0,a0
	mv	s1,a1
	jal	ra,0x22692 # luaL_callmeta>
	beqz	a0,0x2276e # luaL_tolstring+0x40>
	li	a1,-1
	mv	a0,s0
	jal	ra,0x11656 # lua_isstring>
	beqz	a0,0x227b2 # luaL_tolstring+0x84>
	mv	a0,s0
	ld	s0,32(sp)
	ld	ra,40(sp)
	ld	s1,24(sp)
	ld	s3,8(sp)
	mv	a2,s2
	ld	s2,16(sp)
	li	a1,-1
	addi	sp,sp,48
	j	0x11a62 # lua_tolstring>
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x1144a # lua_type>
	li	a5,3
	beq	a0,a5,0x22814 # luaL_tolstring+0xe6>
	blt	a5,a0,0x227a2 # luaL_tolstring+0x74>
	beqz	a0,0x22804 # luaL_tolstring+0xd6>
	li	a5,1
	bne	a0,a5,0x227cc # luaL_tolstring+0x9e>
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x119ee # lua_toboolean>
	auipc	a1,0x21
	addi	a1,a1,-2040 # 0x42f98 # udatatypename+0x5d0>
	beqz	a0,0x227c2 # luaL_tolstring+0x94>
	mv	a0,s0
	jal	ra,0x11e96 # lua_pushstring>
	j	0x22758 # luaL_tolstring+0x2a>
	li	a5,4
	bne	a0,a5,0x227cc # luaL_tolstring+0x9e>
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x113c8 # lua_pushvalue>
	j	0x22758 # luaL_tolstring+0x2a>
	auipc	a1,0x20
	addi	a1,a1,2038 # 0x42fa8 # udatatypename+0x5e0>
	mv	a0,s0
	jal	ra,0x21bdc # luaL_error>
	j	0x22758 # luaL_tolstring+0x2a>
	auipc	a1,0x20
	addi	a1,a1,2014 # 0x42fa0 # udatatypename+0x5d8>
	j	0x2279a # luaL_tolstring+0x6c>
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x122ea # lua_getmetatable>
	bnez	a0,0x22856 # luaL_tolstring+0x128>
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x1144a # lua_type>
	mv	a1,a0
	mv	a0,s0
	jal	ra,0x114d0 # lua_typename>
	mv	a1,s1
	mv	s1,a0
	mv	a0,s0
	jal	ra,0x11d68 # lua_topointer>
	mv	a3,a0
	mv	a2,s1
	auipc	a1,0x20
	addi	a1,a1,2028 # 0x42fe0 # udatatypename+0x618>
	mv	a0,s0
	jal	ra,0x11f0c # lua_pushfstring>
	j	0x22758 # luaL_tolstring+0x2a>
	auipc	a1,0x20
	addi	a1,a1,396 # 0x42990 # dummynode_+0x1b0>
	mv	a0,s0
	jal	ra,0x11e96 # lua_pushstring>
	j	0x22758 # luaL_tolstring+0x2a>
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x11558 # lua_isinteger>
	mv	a1,s1
	beqz	a0,0x2283a # luaL_tolstring+0x10c>
	mv	a0,s0
	li	a2,0
	jal	ra,0x11952 # lua_tointegerx>
	mv	a2,a0
	auipc	a1,0x20
	addi	a1,a1,1958 # 0x42fd0 # udatatypename+0x608>
	mv	a0,s0
	jal	ra,0x11f0c # lua_pushfstring>
	j	0x22758 # luaL_tolstring+0x2a>
	mv	a0,s0
	li	a2,0
	jal	ra,0x118b0 # lua_tonumberx>
	fmv.x.d	a2,fa0
	auipc	a1,0x20
	addi	a1,a1,1938 # 0x42fd8 # udatatypename+0x610>
	mv	a0,s0
	jal	ra,0x11f0c # lua_pushfstring>
	j	0x22758 # luaL_tolstring+0x2a>
	auipc	a1,0x20
	addi	a1,a1,34 # 0x42878 # dummynode_+0x98>
	mv	a0,s0
	jal	ra,0x21aba # luaL_getmetafield.part.0>
	li	a5,4
	mv	s3,a0
	bne	a0,a5,0x228a6 # luaL_tolstring+0x178>
	li	a2,0
	li	a1,-1
	mv	a0,s0
	jal	ra,0x11a62 # lua_tolstring>
	mv	a1,s1
	mv	s1,a0
	mv	a0,s0
	jal	ra,0x11d68 # lua_topointer>
	mv	a3,a0
	mv	a2,s1
	auipc	a1,0x20
	addi	a1,a1,1884 # 0x42fe0 # udatatypename+0x618>
	mv	a0,s0
	jal	ra,0x11f0c # lua_pushfstring>
	mv	a0,s0
	li	a1,-2
	li	a2,-1
	jal	ra,0x111ea # lua_rotate>
	li	a1,-2
	mv	a0,s0
	jal	ra,0x1110c # lua_settop>
	j	0x22758 # luaL_tolstring+0x2a>
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x1144a # lua_type>
	mv	a1,a0
	mv	a0,s0
	jal	ra,0x114d0 # lua_typename>
	mv	a1,s1
	mv	s1,a0
	mv	a0,s0
	jal	ra,0x11d68 # lua_topointer>
	mv	a3,a0
	mv	a2,s1
	auipc	a1,0x20
	addi	a1,a1,1820 # 0x42fe0 # udatatypename+0x618>
	mv	a0,s0
	jal	ra,0x11f0c # lua_pushfstring>
	beqz	s3,0x22758 # luaL_tolstring+0x2a>
	j	0x22892 # luaL_tolstring+0x164>

luaL_setfuncs:
	addi	sp,sp,-64
	sd	s3,24(sp)
	mv	s3,a1
	mv	a1,a2
	sd	s1,40(sp)
	sd	s2,32(sp)
	sd	ra,56(sp)
	sd	s0,48(sp)
	sd	s4,16(sp)
	sd	s5,8(sp)
	mv	s2,a2
	mv	s1,a0
	jal	ra,0x11002 # lua_checkstack>
	beqz	a0,0x22964 # luaL_setfuncs+0x8c>
	ld	a5,0(s3)
	li	s5,-2
	subw	s5,s5,s2
	negw	s4,s2
	beqz	a5,0x22940 # luaL_setfuncs+0x68>
	ld	a1,8(s3)
	beqz	a1,0x2295a # luaL_setfuncs+0x82>
	li	s0,0
	blez	s2,0x22924 # luaL_setfuncs+0x4c>
	addiw	s0,s0,1
	mv	a1,s4
	mv	a0,s1
	jal	ra,0x113c8 # lua_pushvalue>
	bne	s2,s0,0x22912 # luaL_setfuncs+0x3a>
	ld	a1,8(s3)
	mv	a2,s2
	mv	a0,s1
	jal	ra,0x11f4a # lua_pushcclosure>
	ld	a2,0(s3)
	mv	a1,s5
	mv	a0,s1
	addi	s3,s3,16
	jal	ra,0x124d2 # lua_setfield>
	ld	a5,0(s3)
	bnez	a5,0x22906 # luaL_setfuncs+0x2e>
	ld	s0,48(sp)
	ld	ra,56(sp)
	ld	s3,24(sp)
	ld	s4,16(sp)
	ld	s5,8(sp)
	not	a1,s2
	mv	a0,s1
	ld	s2,32(sp)
	ld	s1,40(sp)
	addi	sp,sp,64
	j	0x1110c # lua_settop>
	li	a1,0
	mv	a0,s1
	jal	ra,0x11fdc # lua_pushboolean>
	j	0x2292c # luaL_setfuncs+0x54>
	auipc	a2,0x20
	addi	a2,a2,1668 # 0x42fe8 # udatatypename+0x620>
	auipc	a1,0x20
	addi	a1,a1,1428 # 0x42f00 # udatatypename+0x538>
	mv	a0,s1
	jal	ra,0x21bdc # luaL_error>
	j	0x228f6 # luaL_setfuncs+0x1e>

prepbuffsize.part.0:
	addi	sp,sp,-48
	sd	s1,24(sp)
	ld	s1,16(a0)
	sd	s0,32(sp)
	sd	s2,16(sp)
	sd	s3,8(sp)
	sd	ra,40(sp)
	not	a4,a1
	ld	a5,8(a0)
	ld	s3,24(a0)
	mv	s0,a0
	mv	s2,a2
	bltu	a4,s1,0x22a42 # prepbuffsize.part.0+0xc6>
	slli	a5,a5,0x1
	add	s1,s1,a1
	bltu	s1,a5,0x229d2 # prepbuffsize.part.0+0x56>
	ld	a4,0(s0)
	addi	a5,s0,32
	beq	a4,a5,0x229de # prepbuffsize.part.0+0x62>
	mv	a1,s2
	mv	a2,s1
	mv	a0,s3
	jal	ra,0x217c4 # resizebox>
	mv	s2,a0
	ld	a0,16(s0)
	sd	s2,0(s0)
	sd	s1,8(s0)
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s3,8(sp)
	add	a0,a0,s2
	ld	s2,16(sp)
	addi	sp,sp,48
	ret
	ld	a4,0(s0)
	mv	s1,a5
	addi	a5,s0,32
	bne	a4,a5,0x229ae # prepbuffsize.part.0+0x32>
	li	a2,-1
	mv	a1,s2
	mv	a0,s3
	jal	ra,0x111ea # lua_rotate>
	li	a1,-2
	mv	a0,s3
	jal	ra,0x1110c # lua_settop>
	li	a1,16
	li	a2,0
	mv	a0,s3
	jal	ra,0x12e88 # lua_newuserdatauv>
	sd	zero,0(a0)
	sd	zero,8(a0)
	auipc	a1,0x20
	addi	a1,a1,1558 # 0x43018 # udatatypename+0x650>
	mv	a0,s3
	jal	ra,0x21e84 # luaL_newmetatable>
	bnez	a0,0x22a54 # prepbuffsize.part.0+0xd8>
	li	a1,-2
	mv	a0,s3
	jal	ra,0x1272e # lua_setmetatable>
	li	a2,1
	mv	a1,s2
	mv	a0,s3
	jal	ra,0x111ea # lua_rotate>
	mv	a1,s2
	mv	a0,s3
	jal	ra,0x12d4a # lua_toclose>
	mv	a2,s1
	mv	a1,s2
	mv	a0,s3
	jal	ra,0x217c4 # resizebox>
	ld	a2,16(s0)
	ld	a1,0(s0)
	mv	s2,a0
	jal	ra,0x3632a # memcpy>
	j	0x229ba # prepbuffsize.part.0+0x3e>
	auipc	a1,0x20
	addi	a1,a1,1470 # 0x43000 # udatatypename+0x638>
	mv	a0,s3
	jal	ra,0x21bdc # luaL_error>
	mv	s1,a0
	j	0x229a4 # prepbuffsize.part.0+0x28>
	li	a2,0
	auipc	a1,0x29
	addi	a1,a1,1546 # 0x4c060 # boxmt>
	mv	a0,s3
	jal	ra,0x228d8 # luaL_setfuncs>
	j	0x22a12 # prepbuffsize.part.0+0x96>

luaL_prepbuffsize:
	ld	a3,16(a0)
	ld	a4,8(a0)
	sub	a4,a4,a3
	bltu	a4,a1,0x22a76 # luaL_prepbuffsize+0x10>
	ld	a0,0(a0)
	add	a0,a0,a3
	ret
	li	a2,-1
	j	0x2297c # prepbuffsize.part.0>

luaL_buffinitsize:
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	ra,24(sp)
	addi	a5,a1,32
	sd	a5,0(a1)
	li	a5,1024
	sd	a5,8(a1)
	sd	a0,24(a1)
	sd	zero,16(a1)
	mv	s0,a1
	mv	s1,a2
	jal	ra,0x11ff8 # lua_pushlightuserdata>
	ld	a4,16(s0)
	ld	a5,8(s0)
	sub	a5,a5,a4
	bltu	a5,s1,0x22ab4 # luaL_buffinitsize+0x3a>
	ld	a0,0(s0)
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	add	a0,a0,a4
	addi	sp,sp,32
	ret
	mv	a0,s0
	ld	s0,16(sp)
	ld	ra,24(sp)
	mv	a1,s1
	ld	s1,8(sp)
	li	a2,-1
	addi	sp,sp,32
	j	0x2297c # prepbuffsize.part.0>

luaL_addvalue:
	addi	sp,sp,-48
	sd	s2,16(sp)
	ld	s2,24(a0)
	sd	s0,32(sp)
	addi	a2,sp,8
	mv	s0,a0
	li	a1,-1
	mv	a0,s2
	sd	s1,24(sp)
	sd	ra,40(sp)
	jal	ra,0x11a62 # lua_tolstring>
	ld	a4,16(s0)
	ld	a5,8(s0)
	ld	a2,8(sp)
	mv	s1,a0
	sub	a5,a5,a4
	bltu	a5,a2,0x22b14 # luaL_addvalue+0x50>
	ld	a5,0(s0)
	add	a0,a5,a4
	mv	a1,s1
	jal	ra,0x3632a # memcpy>
	ld	a5,16(s0)
	ld	a4,8(sp)
	mv	a0,s2
	li	a1,-2
	add	a5,a5,a4
	sd	a5,16(s0)
	jal	ra,0x1110c # lua_settop>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	addi	sp,sp,48
	ret
	mv	a1,a2
	mv	a0,s0
	li	a2,-2
	jal	ra,0x2297c # prepbuffsize.part.0>
	ld	a2,8(sp)
	j	0x22af2 # luaL_addvalue+0x2e>

luaL_addlstring:
	bnez	a2,0x22b26 # luaL_addlstring+0x4>
	ret
	ld	a4,16(a0)
	ld	a5,8(a0)
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	s2,0(sp)
	sd	ra,24(sp)
	sub	a5,a5,a4
	mv	s0,a2
	mv	s1,a0
	mv	s2,a1
	bltu	a5,a2,0x22b5e # luaL_addlstring+0x3c>
	ld	a0,0(a0)
	add	a0,a0,a4
	mv	a2,s0
	mv	a1,s2
	jal	ra,0x3632a # memcpy>
	ld	a2,16(s1)
	ld	ra,24(sp)
	ld	s2,0(sp)
	add	s0,s0,a2
	sd	s0,16(s1)
	ld	s0,16(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret
	li	a2,-1
	mv	a1,s0
	jal	ra,0x2297c # prepbuffsize.part.0>
	j	0x22b44 # luaL_addlstring+0x22>

luaL_addstring:
	addi	sp,sp,-32
	sd	s1,8(sp)
	mv	s1,a0
	mv	a0,a1
	sd	s2,0(sp)
	sd	ra,24(sp)
	sd	s0,16(sp)
	mv	s2,a1
	jal	ra,0x369fa # strlen>
	bnez	a0,0x22b8a # luaL_addstring+0x22>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret
	ld	a4,16(s1)
	ld	a5,8(s1)
	mv	s0,a0
	sub	a5,a5,a4
	bltu	a5,a0,0x22bb4 # luaL_addstring+0x4c>
	ld	a0,0(s1)
	add	a0,a0,a4
	mv	a2,s0
	mv	a1,s2
	jal	ra,0x3632a # memcpy>
	ld	a0,16(s1)
	ld	ra,24(sp)
	ld	s2,0(sp)
	add	s0,s0,a0
	sd	s0,16(s1)
	ld	s0,16(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret
	mv	a1,a0
	li	a2,-1
	mv	a0,s1
	jal	ra,0x2297c # prepbuffsize.part.0>
	j	0x22b9a # luaL_addstring+0x32>

luaL_traceback:
	addi	sp,sp,-1312
	sd	s0,1296(sp)
	sd	s1,1288(sp)
	sd	s2,1280(sp)
	sd	s4,1264(sp)
	sd	s5,1256(sp)
	sd	s6,1248(sp)
	sd	s7,1240(sp)
	sd	ra,1304(sp)
	sd	s3,1272(sp)
	sd	s8,1232(sp)
	sd	s9,1224(sp)
	sd	s10,1216(sp)
	sd	s11,1208(sp)
	mv	s4,a0
	mv	s2,a1
	mv	s7,a2
	mv	s6,a3
	li	s0,1
	li	s5,1
	addi	s1,sp,144
	j	0x22c0e # luaL_traceback+0x4e>
	mv	s5,s0
	sext.w	s0,a5
	mv	a1,s0
	mv	a2,s1
	mv	a0,s2
	jal	ra,0x137d0 # lua_getstack>
	slliw	a5,s0,0x1
	bnez	a0,0x22c08 # luaL_traceback+0x48>
	ble	s0,s5,0x22c40 # luaL_traceback+0x80>
	addw	s3,s5,s0
	sraiw	s8,s3,0x1
	mv	a2,s1
	mv	a1,s8
	mv	a0,s2
	jal	ra,0x137d0 # lua_getstack>
	beqz	a0,0x22d3c # luaL_traceback+0x17c>
	addiw	s5,s8,1
	blt	s5,s0,0x22c22 # luaL_traceback+0x62>
	addiw	s0,s0,-1
	subw	a4,s0,s6
	li	a5,21
	li	s3,10
	blt	a5,a4,0x22c50 # luaL_traceback+0x90>
	li	s3,-1
	addi	a5,sp,176
	sd	a5,144(sp)
	mv	a1,s1
	li	a5,1024
	mv	a0,s4
	sd	s4,168(sp)
	sd	zero,160(sp)
	sd	a5,152(sp)
	jal	ra,0x11ff8 # lua_pushlightuserdata>
	beqz	s7,0x22c8a # luaL_traceback+0xca>
	mv	a1,s7
	mv	a0,s1
	jal	ra,0x22b68 # luaL_addstring>
	ld	a5,160(sp)
	ld	a4,152(sp)
	beq	a5,a4,0x22e38 # luaL_traceback+0x278>
	addi	a4,a5,1
	sd	a4,160(sp)
	ld	a4,144(sp)
	add	a5,a5,a4
	li	a4,10
	sb	a4,0(a5)
	auipc	a1,0x20
	addi	a1,a1,918 # 0x43020 # udatatypename+0x658>
	mv	a0,s1
	jal	ra,0x22b68 # luaL_addstring>
	addi	s5,sp,8
	auipc	s9,0x20
	addi	s9,s9,956 # 0x43058 # udatatypename+0x690>
	auipc	s11,0x20
	addi	s11,s11,1052 # 0x430c0 # udatatypename+0x6f8>
	addi	s8,sp,76
	mv	a1,s6
	mv	a2,s5
	addiw	s6,s6,1
	mv	a0,s2
	mv	s10,s6
	jal	ra,0x137d0 # lua_getstack>
	beqz	a0,0x22cfc # luaL_traceback+0x13c>
	addiw	s7,s3,-1
	bnez	s3,0x22d40 # luaL_traceback+0x180>
	subw	s6,s0,s10
	addiw	a2,s6,-10
	auipc	a1,0x20
	addi	a1,a1,872 # 0x43038 # udatatypename+0x670>
	mv	a0,s4
	mv	s6,a2
	jal	ra,0x11f0c # lua_pushfstring>
	mv	a0,s1
	jal	ra,0x22ac4 # luaL_addvalue>
	addw	s6,s10,s6
	mv	a1,s6
	mv	a2,s5
	addiw	s6,s6,1
	mv	a0,s2
	li	s3,-1
	mv	s10,s6
	jal	ra,0x137d0 # lua_getstack>
	bnez	a0,0x22cc0 # luaL_traceback+0x100>
	mv	a0,s1
	jal	ra,0x222fe # luaL_pushresult>
	ld	ra,1304(sp)
	ld	s0,1296(sp)
	ld	s1,1288(sp)
	ld	s2,1280(sp)
	ld	s3,1272(sp)
	ld	s4,1264(sp)
	ld	s5,1256(sp)
	ld	s6,1248(sp)
	ld	s7,1240(sp)
	ld	s8,1232(sp)
	ld	s9,1224(sp)
	ld	s10,1216(sp)
	ld	s11,1208(sp)
	addi	sp,sp,1312
	ret
	mv	s0,s8
	j	0x22c1e # luaL_traceback+0x5e>
	mv	a2,s5
	mv	a1,s9
	mv	a0,s2
	jal	ra,0x13952 # lua_getinfo>
	lw	a3,56(sp)
	mv	a2,s8
	blez	a3,0x22dba # luaL_traceback+0x1fa>
	auipc	a1,0x20
	addi	a1,a1,798 # 0x43070 # udatatypename+0x6a8>
	mv	a0,s4
	jal	ra,0x11f0c # lua_pushfstring>
	mv	a0,s1
	jal	ra,0x22ac4 # luaL_addvalue>
	mv	a1,s5
	mv	a0,s4
	jal	ra,0x21694 # pushglobalfuncname>
	bnez	a0,0x22dd8 # luaL_traceback+0x218>
	ld	a2,24(sp)
	lbu	a5,0(a2)
	bnez	a5,0x22e06 # luaL_traceback+0x246>
	ld	a5,32(sp)
	li	a4,109
	lbu	a5,0(a5)
	beq	a5,a4,0x22e28 # luaL_traceback+0x268>
	li	a4,67
	beq	a5,a4,0x22e18 # luaL_traceback+0x258>
	lw	a3,60(sp)
	mv	a2,s8
	auipc	a1,0x20
	addi	a1,a1,790 # 0x430a8 # udatatypename+0x6e0>
	mv	a0,s4
	jal	ra,0x11f0c # lua_pushfstring>
	mv	a0,s1
	jal	ra,0x22ac4 # luaL_addvalue>
	lbu	a5,71(sp)
	mv	s3,s7
	beqz	a5,0x22cb0 # luaL_traceback+0xf0>
	mv	a1,s11
	mv	a0,s1
	jal	ra,0x22b68 # luaL_addstring>
	j	0x22cb0 # luaL_traceback+0xf0>
	auipc	a1,0x20
	addi	a1,a1,678 # 0x43060 # udatatypename+0x698>
	mv	a0,s4
	jal	ra,0x11f0c # lua_pushfstring>
	mv	a0,s1
	jal	ra,0x22ac4 # luaL_addvalue>
	mv	a1,s5
	mv	a0,s4
	jal	ra,0x21694 # pushglobalfuncname>
	beqz	a0,0x22d70 # luaL_traceback+0x1b0>
	li	a1,-1
	mv	a0,s4
	li	a2,0
	jal	ra,0x11a62 # lua_tolstring>
	mv	a2,a0
	auipc	a1,0x20
	addi	a1,a1,668 # 0x43080 # udatatypename+0x6b8>
	mv	a0,s4
	jal	ra,0x11f0c # lua_pushfstring>
	mv	a0,s4
	li	a2,-1
	li	a1,-2
	jal	ra,0x111ea # lua_rotate>
	li	a1,-2
	mv	a0,s4
	jal	ra,0x1110c # lua_settop>
	j	0x22da0 # luaL_traceback+0x1e0>
	ld	a3,16(sp)
	auipc	a1,0x20
	addi	a1,a1,648 # 0x43090 # udatatypename+0x6c8>
	mv	a0,s4
	jal	ra,0x11f0c # lua_pushfstring>
	j	0x22da0 # luaL_traceback+0x1e0>
	auipc	a1,0x1e
	addi	a1,a1,1328 # 0x41348 # __clzdi2+0x480>
	mv	a0,s4
	jal	ra,0x11e96 # lua_pushstring>
	j	0x22da0 # luaL_traceback+0x1e0>
	auipc	a1,0x20
	addi	a1,a1,624 # 0x43098 # udatatypename+0x6d0>
	mv	a0,s4
	jal	ra,0x11e96 # lua_pushstring>
	j	0x22da0 # luaL_traceback+0x1e0>
	li	a2,-1
	li	a1,1
	mv	a0,s1
	jal	ra,0x2297c # prepbuffsize.part.0>
	ld	a5,160(sp)
	j	0x22c7a # luaL_traceback+0xba>

luaL_getsubtable:
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	s2,0(sp)
	sd	ra,24(sp)
	mv	s0,a0
	mv	s2,a1
	mv	s1,a2
	jal	ra,0x120a4 # lua_getfield>
	li	a5,5
	bne	a0,a5,0x22e6e # luaL_getsubtable+0x28>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	li	a0,1
	addi	sp,sp,32
	ret
	mv	a0,s0
	li	a1,-2
	jal	ra,0x1110c # lua_settop>
	mv	a1,s2
	mv	a0,s0
	jal	ra,0x110d6 # lua_absindex>
	mv	s2,a0
	li	a2,0
	mv	a0,s0
	li	a1,0
	jal	ra,0x1228e # lua_createtable>
	mv	a0,s0
	li	a1,-1
	jal	ra,0x113c8 # lua_pushvalue>
	mv	a0,s0
	mv	a2,s1
	mv	a1,s2
	jal	ra,0x124d2 # lua_setfield>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	li	a0,0
	addi	sp,sp,32
	ret

luaL_requiref:
	addi	sp,sp,-48
	sd	s1,24(sp)
	mv	s1,a1
	lui	a1,0xfff0c
	sd	s3,8(sp)
	addi	a1,a1,-1576 # 0xfffffffffff0b9d8 # __BSS_END__+0xffffffffffebd650>
	mv	s3,a2
	auipc	a2,0x20
	addi	a2,a2,-252 # 0x42dc0 # udatatypename+0x3f8>
	sd	ra,40(sp)
	sd	s0,32(sp)
	sd	s2,16(sp)
	mv	s0,a0
	mv	s2,a3
	jal	ra,0x22e46 # luaL_getsubtable>
	li	a1,-1
	mv	a2,s1
	mv	a0,s0
	jal	ra,0x120a4 # lua_getfield>
	li	a1,-1
	mv	a0,s0
	jal	ra,0x119ee # lua_toboolean>
	beqz	a0,0x22f0a # luaL_requiref+0x60>
	li	a1,-2
	mv	a0,s0
	li	a2,-1
	jal	ra,0x111ea # lua_rotate>
	li	a1,-2
	mv	a0,s0
	jal	ra,0x1110c # lua_settop>
	bnez	s2,0x22f46 # luaL_requiref+0x9c>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	addi	sp,sp,48
	ret
	mv	a0,s0
	li	a1,-2
	jal	ra,0x1110c # lua_settop>
	li	a2,0
	mv	a1,s3
	mv	a0,s0
	jal	ra,0x11f4a # lua_pushcclosure>
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x11e96 # lua_pushstring>
	li	a4,0
	li	a3,0
	li	a2,1
	mv	a0,s0
	li	a1,1
	jal	ra,0x128c8 # lua_callk>
	mv	a0,s0
	li	a1,-1
	jal	ra,0x113c8 # lua_pushvalue>
	mv	a2,s1
	li	a1,-3
	mv	a0,s0
	jal	ra,0x124d2 # lua_setfield>
	j	0x22ee6 # luaL_requiref+0x3c>
	mv	a0,s0
	li	a1,-1
	jal	ra,0x113c8 # lua_pushvalue>
	mv	a0,s0
	ld	s0,32(sp)
	ld	ra,40(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	mv	a1,s1
	ld	s1,24(sp)
	addi	sp,sp,48
	j	0x12430 # lua_setglobal>

luaL_addgsub:
	addi	sp,sp,-64
	sd	s2,32(sp)
	mv	s2,a0
	mv	a0,a2
	sd	ra,56(sp)
	sd	s0,48(sp)
	sd	s1,40(sp)
	sd	s4,16(sp)
	mv	s1,a1
	sd	s5,8(sp)
	sd	s6,0(sp)
	mv	s5,a2
	mv	s4,a3
	sd	s3,24(sp)
	jal	ra,0x369fa # strlen>
	mv	s6,a0
	mv	a1,s5
	mv	a0,s1
	jal	ra,0x36e20 # strstr>
	mv	s0,a0
	beqz	a0,0x22fb2 # luaL_addgsub+0x50>
	sub	s3,s0,s1
	bne	s0,s1,0x22ff6 # luaL_addgsub+0x94>
	mv	a0,s4
	jal	ra,0x369fa # strlen>
	mv	s1,a0
	bnez	a0,0x22fca # luaL_addgsub+0x68>
	add	s1,s0,s6
	mv	a1,s5
	mv	a0,s1
	jal	ra,0x36e20 # strstr>
	mv	s0,a0
	bnez	a0,0x22f90 # luaL_addgsub+0x2e>
	ld	s0,48(sp)
	ld	ra,56(sp)
	ld	s3,24(sp)
	ld	s4,16(sp)
	ld	s5,8(sp)
	ld	s6,0(sp)
	mv	a1,s1
	mv	a0,s2
	ld	s1,40(sp)
	ld	s2,32(sp)
	addi	sp,sp,64
	j	0x22b68 # luaL_addstring>
	ld	a4,16(s2)
	ld	a5,8(s2)
	sub	a5,a5,a4
	bltu	a5,a0,0x2301e # luaL_addgsub+0xbc>
	ld	a0,0(s2)
	add	a0,a0,a4
	mv	a2,s1
	mv	a1,s4
	jal	ra,0x3632a # memcpy>
	ld	a0,16(s2)
	add	s1,s1,a0
	sd	s1,16(s2)
	add	s1,s0,s6
	j	0x22fa6 # luaL_addgsub+0x44>
	ld	a4,16(s2)
	ld	a5,8(s2)
	sub	a5,a5,a4
	bltu	a5,s3,0x2302a # luaL_addgsub+0xc8>
	ld	a0,0(s2)
	add	a0,a0,a4
	mv	a2,s3
	mv	a1,s1
	jal	ra,0x3632a # memcpy>
	ld	a5,16(s2)
	add	s3,s3,a5
	sd	s3,16(s2)
	j	0x22f98 # luaL_addgsub+0x36>
	mv	a1,a0
	li	a2,-1
	mv	a0,s2
	jal	ra,0x2297c # prepbuffsize.part.0>
	j	0x22fde # luaL_addgsub+0x7c>
	li	a2,-1
	mv	a1,s3
	mv	a0,s2
	jal	ra,0x2297c # prepbuffsize.part.0>
	j	0x2300a # luaL_addgsub+0xa8>

luaL_gsub:
	addi	sp,sp,-1104
	sd	s0,1088(sp)
	addi	a5,sp,32
	mv	s0,sp
	sd	s2,1072(sp)
	sd	a5,0(sp)
	mv	s2,a1
	li	a5,1024
	mv	a1,s0
	sd	ra,1096(sp)
	sd	s1,1080(sp)
	sd	s3,1064(sp)
	sd	s4,1056(sp)
	sd	a5,8(sp)
	mv	s1,a0
	mv	s3,a2
	mv	s4,a3
	sd	a0,24(sp)
	sd	zero,16(sp)
	jal	ra,0x11ff8 # lua_pushlightuserdata>
	mv	a3,s4
	mv	a2,s3
	mv	a1,s2
	mv	a0,s0
	jal	ra,0x22f62 # luaL_addgsub>
	mv	a0,s0
	jal	ra,0x222fe # luaL_pushresult>
	mv	a0,s1
	li	a2,0
	li	a1,-1
	jal	ra,0x11a62 # lua_tolstring>
	ld	ra,1096(sp)
	ld	s0,1088(sp)
	ld	s1,1080(sp)
	ld	s2,1072(sp)
	ld	s3,1064(sp)
	ld	s4,1056(sp)
	addi	sp,sp,1104
	ret

luaL_newstate:
	addi	sp,sp,-16
	li	a1,0
	auipc	a0,0xfffff
	addi	a0,a0,-2010 # 0x218d4 # l_alloc>
	sd	s0,0(sp)
	sd	ra,8(sp)
	jal	ra,0x1b666 # lua_newstate>
	mv	s0,a0
	beqz	a0,0x230de # luaL_newstate+0x34>
	auipc	a1,0xffffe
	addi	a1,a1,2000 # 0x21892 # panic>
	jal	ra,0x110c0 # lua_atpanic>
	mv	a2,s0
	auipc	a1,0xfffff
	addi	a1,a1,-1482 # 0x21b06 # warnfoff>
	mv	a0,s0
	jal	ra,0x12e78 # lua_setwarnf>
	ld	ra,8(sp)
	mv	a0,s0
	ld	s0,0(sp)
	addi	sp,sp,16
	ret

luaL_checkversion_:
	addi	sp,sp,-48
	sd	s0,32(sp)
	sd	s1,24(sp)
	fsd	fs0,8(sp)
	sd	ra,40(sp)
	fmv.d	fs0,fa0
	mv	s1,a0
	mv	s0,a1
	jal	ra,0x110cc # lua_version>
	li	a5,136
	bne	s0,a5,0x23118 # luaL_checkversion_+0x30>
	feq.d	a5,fa0,fs0
	beqz	a5,0x23130 # luaL_checkversion_+0x48>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	fld	fs0,8(sp)
	addi	sp,sp,48
	ret
	ld	s0,32(sp)
	ld	ra,40(sp)
	fld	fs0,8(sp)
	mv	a0,s1
	ld	s1,24(sp)
	auipc	a1,0x20
	addi	a1,a1,-74 # 0x430d8 # udatatypename+0x710>
	addi	sp,sp,48
	j	0x21bdc # luaL_error>
	ld	s0,32(sp)
	ld	ra,40(sp)
	fmv.x.d	a2,fs0
	mv	a0,s1
	fld	fs0,8(sp)
	ld	s1,24(sp)
	fmv.x.d	a3,fa0
	auipc	a1,0x20
	addi	a1,a1,-50 # 0x43110 # udatatypename+0x748>
	addi	sp,sp,48
	j	0x21bdc # luaL_error>

luaL_openlibs:
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	ra,24(sp)
	mv	s1,a0
	auipc	a1,0x20
	addi	a1,a1,-18 # 0x43148 # udatatypename+0x780>
	auipc	s0,0x2a
	addi	s0,s0,-530 # 0x4cf50 # loadedlibs>
	auipc	a2,0x2a
	ld	a2,590(a2) # 0x4d3b8 # _GLOBAL_OFFSET_TABLE_+0xb0>
	j	0x23176 # luaL_openlibs+0x26>
	ld	a1,0(s0)
	li	a3,1
	mv	a0,s1
	jal	ra,0x22eaa # luaL_requiref>
	li	a1,-2
	mv	a0,s1
	addi	s0,s0,16
	jal	ra,0x1110c # lua_settop>
	ld	a2,8(s0)
	bnez	a2,0x23174 # luaL_openlibs+0x24>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret

savelineinfo:
	lw	a5,40(a0)
	addi	sp,sp,-48
	sd	s1,24(sp)
	subw	a5,a2,a5
	lw	s1,32(a0)
	sraiw	a3,a5,0x1f
	xor	a4,a5,a3
	sd	s0,32(sp)
	sd	s2,16(sp)
	sd	s3,8(sp)
	sd	s4,0(sp)
	subw	a4,a4,a3
	addiw	s4,s1,-1
	sd	ra,40(sp)
	li	a3,127
	mv	s0,a0
	mv	s3,a2
	mv	s1,s4
	mv	s2,a1
	blt	a3,a4,0x231ec # savelineinfo+0x56>
	lbu	a4,69(a0)
	addiw	a3,a4,1
	slliw	a4,a4,0x18
	sb	a3,69(a0)
	sraiw	a4,a4,0x18
	bltz	a4,0x231ec # savelineinfo+0x56>
	slliw	s1,a5,0x18
	sraiw	s1,s1,0x18
	j	0x23230 # savelineinfo+0x9a>
	ld	a5,16(s0)
	lw	a2,52(s0)
	ld	a1,96(s2)
	ld	a0,56(a5)
	lui	a5,0x80000
	not	a5,a5
	li	a4,8
	auipc	a6,0x20
	addi	a6,a6,-128 # 0x43180 # udatatypename+0x7b8>
	addi	a3,s2,40
	jal	ra,0x17b0e # luaM_growaux_>
	lw	a5,52(s0)
	sd	a0,96(s2)
	slli	a4,a5,0x3
	add	a0,a0,a4
	sw	s1,0(a0)
	addiw	a5,a5,1
	sw	a5,52(s0)
	sw	s3,4(a0)
	li	a5,1
	sb	a5,69(s0)
	li	s1,-128
	ld	a5,16(s0)
	ld	a1,88(s2)
	addi	a3,s2,28
	ld	a0,56(a5)
	lui	a5,0x80000
	mv	a2,s4
	auipc	a6,0x20
	addi	a6,a6,-186 # 0x43188 # udatatypename+0x7c0>
	not	a5,a5
	li	a4,1
	jal	ra,0x17b0e # luaM_growaux_>
	sd	a0,88(s2)
	add	a0,a0,s4
	sb	s1,0(a0)
	sw	s3,40(s0)
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	ld	s4,0(sp)
	addi	sp,sp,48
	ret

addk:
	ld	a5,16(a0)
	addi	sp,sp,-96
	sd	s2,64(sp)
	mv	s2,a0
	ld	a0,80(a5)
	sd	s0,80(sp)
	sd	s1,72(sp)
	sd	s3,56(sp)
	ld	s1,56(a5)
	sd	s4,48(sp)
	ld	s3,0(s2)
	sd	ra,88(sp)
	sd	s5,40(sp)
	sd	s6,32(sp)
	mv	s0,a1
	mv	s4,a2
	jal	ra,0x1c6d4 # luaH_get>
	lbu	a4,8(a0)
	li	a5,3
	mv	a3,a0
	bne	a4,a5,0x2339e # addk+0x12c>
	lw	s6,0(a0)
	lw	s5,44(s2)
	blt	s6,s5,0x2336e # addk+0xfc>
	ld	a5,16(s2)
	mv	a2,s0
	addi	a4,sp,16
	ld	a1,80(a5)
	mv	a0,s1
	li	a5,3
	sb	a5,24(sp)
	lw	s0,20(s3)
	sd	s5,16(sp)
	jal	ra,0x1ce50 # luaH_finishset>
	ld	a1,56(s3)
	lui	a5,0x2000
	addi	a5,a5,-1
	auipc	a6,0x20
	addi	a6,a6,-326 # 0x43190 # udatatypename+0x7c8>
	li	a4,16
	addi	a3,s3,20
	mv	a2,s5
	mv	a0,s1
	jal	ra,0x17b0e # luaM_growaux_>
	lw	a5,20(s3)
	sd	a0,56(s3)
	ble	a5,s0,0x2331a # addk+0xa8>
	addiw	a4,a5,-1
	subw	a4,a4,s0
	slli	a4,a4,0x20
	srli	a4,a4,0x20
	add	a4,a4,s0
	addi	a4,a4,1
	slli	a5,s0,0x4
	slli	a4,a4,0x4
	add	a5,a5,a0
	add	a4,a4,a0
	sb	zero,8(a5) # 0x2000008 # __BSS_END__+0x1fb1c80>
	addi	a5,a5,16
	bne	a5,a4,0x23310 # addk+0x9e>
	ld	a4,0(s4)
	slli	a5,s5,0x4
	add	a5,a5,a0
	sd	a4,0(a5)
	lbu	a4,8(s4)
	sb	a4,8(a5)
	lw	a5,44(s2)
	addiw	a5,a5,1
	sw	a5,44(s2)
	lbu	a5,8(s4)
	andi	a5,a5,64
	beqz	a5,0x23358 # addk+0xe6>
	lbu	a5,9(s3)
	andi	a5,a5,32
	beqz	a5,0x23358 # addk+0xe6>
	ld	a2,0(s4)
	lbu	a5,9(a2)
	andi	a5,a5,24
	bnez	a5,0x233a4 # addk+0x132>
	ld	ra,88(sp)
	ld	s0,80(sp)
	ld	s1,72(sp)
	ld	s2,64(sp)
	ld	s3,56(sp)
	ld	s4,48(sp)
	ld	s6,32(sp)
	mv	a0,s5
	ld	s5,40(sp)
	addi	sp,sp,96
	ret
	ld	a4,56(s3)
	slli	a1,s6,0x4
	lbu	a2,8(s4)
	add	a1,a1,a4
	lbu	a5,8(a1)
	xor	a5,a5,a2
	andi	a5,a5,63
	bnez	a5,0x232b0 # addk+0x3e>
	sd	a0,8(sp)
	mv	a2,s4
	li	a0,0
	jal	ra,0x1eaae # luaV_equalobj>
	mv	s5,s6
	bnez	a0,0x23358 # addk+0xe6>
	lw	s5,44(s2)
	ld	a3,8(sp)
	j	0x232b0 # addk+0x3e>
	lw	s5,44(s2)
	j	0x232b0 # addk+0x3e>
	mv	a1,s3
	mv	a0,s1
	jal	ra,0x1706e # luaC_barrier_>
	j	0x23358 # addk+0xe6>

isSCnumber:
	lw	a5,0(a0)
	addi	sp,sp,-48
	sd	s0,32(sp)
	sd	s1,24(sp)
	sd	ra,40(sp)
	sd	s2,16(sp)
	li	a4,6
	mv	s0,a0
	mv	s1,a1
	beq	a5,a4,0x233ee # isSCnumber+0x40>
	li	a4,5
	beq	a5,a4,0x233d8 # isSCnumber+0x2a>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	li	a0,0
	addi	sp,sp,48
	ret
	fld	fa0,8(a0)
	li	a1,0
	addi	a0,sp,8
	mv	s2,a2
	jal	ra,0x1e574 # luaV_flttointeger>
	beqz	a0,0x233ca # isSCnumber+0x1c>
	li	a5,1
	sw	a5,0(s2)
	j	0x233f2 # isSCnumber+0x44>
	ld	a5,8(a0)
	sd	a5,8(sp)
	lw	a4,16(s0)
	lw	a5,20(s0)
	bne	a4,a5,0x233ca # isSCnumber+0x1c>
	ld	a5,8(sp)
	li	a4,255
	addi	a3,a5,127
	bltu	a4,a3,0x233ca # isSCnumber+0x1c>
	ld	ra,40(sp)
	ld	s0,32(sp)
	addiw	a5,a5,127
	sw	a5,0(s1)
	ld	s2,16(sp)
	ld	s1,24(sp)
	li	a0,1
	addi	sp,sp,48
	ret

need_value:
	li	a5,-1
	beq	a1,a5,0x23488 # need_value+0x6c>
	ld	a5,0(a0)
	lui	a6,0xff000
	auipc	t3,0x1f
	addi	t3,t3,-840 # 0x420e0 # luaP_opmodes>
	ld	t1,64(a5)
	li	a7,67
	addiw	a6,a6,1
	li	a2,-1
	j	0x23454 # need_value+0x38>
	lw	a1,0(a5)
	srliw	a1,a1,0x7
	addw	a5,a1,a6
	addw	a1,a0,a5
	beq	a5,a2,0x23488 # need_value+0x6c>
	beq	a1,a2,0x23488 # need_value+0x6c>
	slli	a5,a1,0x2
	add	a5,a5,t1
	addiw	a0,a1,1
	mv	a3,a5
	blez	a1,0x2347a # need_value+0x5e>
	lw	a4,-4(a5)
	andi	a4,a4,127
	add	a4,a4,t3
	lbu	a4,0(a4)
	andi	a4,a4,16
	beqz	a4,0x2347a # need_value+0x5e>
	addi	a3,a5,-4
	lw	a4,0(a3)
	andi	a4,a4,127
	beq	a4,a7,0x2343e # need_value+0x22>
	li	a0,1
	ret
	li	a0,0
	ret

removevalues:
	li	a5,-1
	beq	a1,a5,0x23512 # removevalues+0x86>
	ld	a5,0(a0)
	lui	a7,0x8
	lui	a6,0xff000
	ld	t4,64(a5)
	auipc	t5,0x1f
	addi	t5,t5,-958 # 0x420e0 # luaP_opmodes>
	li	t3,67
	addi	a7,a7,-128 # 0x7f80 # exit-0x81a0>
	lui	t1,0x8
	addiw	a6,a6,1
	li	a0,-1
	slli	a4,a1,0x2
	add	a4,a4,t4
	mv	a2,a4
	blez	a1,0x234d6 # removevalues+0x4a>
	lw	a5,-4(a4)
	andi	a5,a5,127
	add	a5,a5,t5
	lbu	a5,0(a5)
	andi	a5,a5,16
	beqz	a5,0x234d6 # removevalues+0x4a>
	addi	a2,a4,-4
	lw	a3,0(a2)
	srliw	a5,a3,0x10
	slliw	a5,a5,0x7
	and	t6,a3,t1
	and	a5,a5,a7
	or	a5,a5,t6
	andi	a3,a3,127
	ori	a5,a5,66
	bne	a3,t3,0x234fa # removevalues+0x6e>
	sw	a5,0(a2)
	lw	a5,0(a4)
	addiw	a1,a1,1
	srliw	a5,a5,0x7
	addw	a4,a5,a6
	addw	a1,a1,a4
	beq	a4,a0,0x23512 # removevalues+0x86>
	bne	a1,a0,0x234b4 # removevalues+0x28>
	ret
	ret

luaK_exp2K.part.0:
	lw	a4,0(a1)
	li	a5,7
	bltu	a5,a4,0x235e8 # luaK_exp2K.part.0+0xd4>
	lwu	a5,0(a1)
	auipc	a4,0x20
	addi	a4,a4,-848 # 0x431d0 # udatatypename+0x808>
	addi	sp,sp,-48
	slli	a5,a5,0x2
	add	a5,a5,a4
	lw	a5,0(a5)
	sd	s0,32(sp)
	sd	ra,40(sp)
	add	a5,a5,a4
	mv	s0,a1
	jr	a5
	ld	a5,8(a1)
	addi	a2,sp,16
	mv	a1,a2
	sd	a5,16(sp)
	lbu	a5,8(a5)
	ori	a5,a5,64
	sb	a5,24(sp)
	jal	ra,0x23272 # addk>
	mv	a5,a0
	li	a4,255
	li	a0,0
	blt	a4,a5,0x23566 # luaK_exp2K.part.0+0x52>
	li	a4,4
	sw	a4,0(s0)
	sw	a5,8(s0)
	li	a0,1
	ld	ra,40(sp)
	ld	s0,32(sp)
	addi	sp,sp,48
	ret
	ld	a5,16(a0)
	sb	zero,24(sp)
	addi	a2,sp,16
	ld	a5,80(a5)
	mv	a1,sp
	sd	a5,0(sp)
	li	a5,69
	sb	a5,8(sp)
	jal	ra,0x23272 # addk>
	mv	a5,a0
	j	0x23554 # luaK_exp2K.part.0+0x40>
	addi	a2,sp,16
	li	a5,17
	mv	a1,a2
	sb	a5,24(sp)
	jal	ra,0x23272 # addk>
	mv	a5,a0
	j	0x23554 # luaK_exp2K.part.0+0x40>
	addi	a2,sp,16
	li	a5,1
	mv	a1,a2
	sb	a5,24(sp)
	jal	ra,0x23272 # addk>
	mv	a5,a0
	j	0x23554 # luaK_exp2K.part.0+0x40>
	lw	a5,8(a1)
	j	0x23554 # luaK_exp2K.part.0+0x40>
	fld	fa5,8(a1)
	addi	a2,sp,16
	li	a5,19
	mv	a1,a2
	sb	a5,24(sp)
	fsd	fa5,16(sp)
	jal	ra,0x23272 # addk>
	mv	a5,a0
	j	0x23554 # luaK_exp2K.part.0+0x40>
	ld	a5,8(a1)
	li	a4,2
	addi	a2,sp,16
	sd	a5,0(sp)
	sd	a5,16(sp)
	mv	a1,sp
	li	a5,3
	sb	a5,24(sp)
	sb	a4,8(sp)
	jal	ra,0x23272 # addk>
	mv	a5,a0
	j	0x23554 # luaK_exp2K.part.0+0x40>
	li	a0,0
	ret
	li	a0,0
	j	0x23566 # luaK_exp2K.part.0+0x52>

patchlistaux:
	li	a5,-1
	beq	a1,a5,0x23736 # patchlistaux+0x146>
	ld	a5,0(a0)
	addi	sp,sp,-80
	sd	s2,48(sp)
	lui	s2,0x8
	sd	s0,64(sp)
	addi	s2,s2,-128 # 0x7f80 # exit-0x81a0>
	slliw	s0,a3,0x7
	ld	t2,64(a5)
	sd	s4,32(sp)
	and	s0,s0,s2
	lui	t5,0xff000
	lui	t4,0x1000
	lui	s4,0xffff8
	sd	s1,56(sp)
	sd	s3,40(sp)
	sd	s5,24(sp)
	sd	ra,72(sp)
	sd	s6,16(sp)
	sd	s7,8(sp)
	sd	s8,0(sp)
	sext.w	s0,s0
	addiw	t5,t5,1
	li	t3,-1
	auipc	s1,0x1f
	addi	s1,s1,-1360 # 0x420e0 # luaP_opmodes>
	li	t0,67
	li	s3,255
	addiw	t4,t4,-1
	lui	t6,0x2000
	lui	s5,0x8
	addi	s4,s4,127 # 0xffffffffffff807f # __BSS_END__+0xfffffffffffa9cf7>
	slli	a6,a1,0x2
	add	a6,a6,t2
	lw	a7,0(a6) # 0xffffffffff000000 # __BSS_END__+0xfffffffffefb1c78>
	addiw	a5,a1,1
	srliw	s6,a7,0x7
	addw	t1,s6,t5
	beq	t1,t3,0x2366a # patchlistaux+0x7a>
	addw	t1,t1,a5
	blez	a1,0x236b6 # patchlistaux+0xc6>
	lw	a1,-4(a6)
	andi	s6,a1,127
	add	s6,s6,s1
	lbu	s6,0(s6)
	andi	s7,a1,127
	andi	s6,s6,16
	beqz	s6,0x236b6 # patchlistaux+0xc6>
	addi	s6,a6,-4
	mv	s8,a1
	beq	s7,t0,0x236c4 # patchlistaux+0xd4>
	subw	a5,a4,a5
	addw	a1,a5,t4
	bleu	t6,a1,0x23738 # patchlistaux+0x148>
	andi	a7,a7,127
	slliw	a5,a1,0x7
	or	a7,a7,a5
	sw	a7,0(a6)
	beq	t1,t3,0x23706 # patchlistaux+0x116>
	mv	a1,t1
	j	0x2364c # patchlistaux+0x5c>
	mv	a1,a7
	andi	s7,a7,127
	mv	s6,a6
	mv	s8,a1
	bne	s7,t0,0x23692 # patchlistaux+0xa2>
	srliw	a7,a1,0x10
	beq	a3,s3,0x2371e # patchlistaux+0x12e>
	andi	s7,a7,255
	beq	a3,s7,0x2371e # patchlistaux+0x12e>
	and	a1,s8,s4
	or	a1,a1,s0
	sext.w	a1,a1
	subw	a5,a2,a5
	addw	a5,a5,t4
	sw	a1,0(s6)
	sext.w	a1,a5
	bleu	t6,a1,0x23746 # patchlistaux+0x156>
	lw	a1,0(a6)
	slliw	a5,a5,0x7
	andi	a1,a1,127
	or	a5,a5,a1
	sw	a5,0(a6)
	bne	t1,t3,0x236b2 # patchlistaux+0xc2>
	ld	ra,72(sp)
	ld	s0,64(sp)
	ld	s1,56(sp)
	ld	s2,48(sp)
	ld	s3,40(sp)
	ld	s4,32(sp)
	ld	s5,24(sp)
	ld	s6,16(sp)
	ld	s7,8(sp)
	ld	s8,0(sp)
	addi	sp,sp,80
	ret
	slliw	a7,a7,0x7
	and	a7,s2,a7
	and	a1,a1,s5
	or	a1,a7,a1
	ori	a1,a1,66
	sext.w	a1,a1
	j	0x236dc # patchlistaux+0xec>
	ret
	ld	a0,16(a0)
	auipc	a1,0x1f
	addi	a1,a1,-1034 # 0x42330 # luaP_opmodes+0x250>
	jal	ra,0x25b74 # luaX_syntaxerror>
	ld	a0,16(a0)
	auipc	a1,0x1f
	addi	a1,a1,-1048 # 0x42330 # luaP_opmodes+0x250>
	jal	ra,0x25b74 # luaX_syntaxerror>

freeexps:
	lw	a4,0(a1)
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	ra,24(sp)
	sd	s1,8(sp)
	sd	s2,0(sp)
	li	a5,8
	lw	a3,0(a2)
	mv	s0,a0
	beq	a4,a5,0x237d8 # freeexps+0x84>
	beq	a3,a5,0x237a6 # freeexps+0x52>
	li	s1,-1
	li	s2,-1
	mv	a0,s0
	jal	ra,0x1b31e # luaY_nvarstack>
	blt	s1,a0,0x23786 # freeexps+0x32>
	lbu	a5,68(s0)
	addiw	a5,a5,-1
	sb	a5,68(s0)
	mv	a0,s0
	jal	ra,0x1b31e # luaY_nvarstack>
	blt	s2,a0,0x2379a # freeexps+0x46>
	lbu	a5,68(s0)
	addiw	a5,a5,-1
	sb	a5,68(s0)
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret
	lw	s1,8(a2)
	li	s2,-1
	ble	s2,s1,0x23772 # freeexps+0x1e>
	mv	a0,s0
	jal	ra,0x1b31e # luaY_nvarstack>
	blt	s2,a0,0x237c2 # freeexps+0x6e>
	lbu	a5,68(s0)
	addiw	a5,a5,-1
	sb	a5,68(s0)
	mv	a0,s0
	jal	ra,0x1b31e # luaY_nvarstack>
	ble	a0,s1,0x23790 # freeexps+0x3c>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret
	lw	s2,8(a1)
	li	s1,-1
	bne	a3,a4,0x237aa # freeexps+0x56>
	lw	s1,8(a2)
	j	0x237aa # freeexps+0x56>

constfolding:
	lw	a4,16(a2)
	lw	a5,20(a2)
	beq	a4,a5,0x237f2 # constfolding+0xc>
	li	a0,0
	ret
	lw	a5,0(a2)
	addi	sp,sp,-112
	sd	s0,96(sp)
	sd	s1,88(sp)
	sd	s2,80(sp)
	sd	ra,104(sp)
	sd	s3,72(sp)
	sd	s4,64(sp)
	li	a4,5
	mv	s0,a2
	mv	s2,a0
	mv	s1,a1
	beq	a5,a4,0x238f0 # constfolding+0x10a>
	li	a4,6
	bne	a5,a4,0x238b6 # constfolding+0xd0>
	ld	a5,8(a2)
	li	a4,3
	sb	a4,24(sp)
	sd	a5,16(sp)
	lw	a4,16(a3)
	lw	a5,20(a3)
	bne	a4,a5,0x238b6 # constfolding+0xd0>
	lw	a5,0(a3)
	li	a4,5
	beq	a5,a4,0x238c8 # constfolding+0xe2>
	li	a4,6
	bne	a5,a4,0x238b6 # constfolding+0xd0>
	ld	a3,8(a3)
	li	a4,3
	sb	a4,40(sp)
	sd	a3,32(sp)
	li	a2,11
	blt	a2,s1,0x2389c # constfolding+0xb6>
	blt	a5,s1,0x238a2 # constfolding+0xbc>
	beq	s1,a4,0x238fc # constfolding+0x116>
	addiw	a5,s1,-5
	li	a4,1
	bleu	a5,a4,0x238fc # constfolding+0x116>
	addi	s3,sp,48
	addi	s4,sp,16
	addi	a3,sp,32
	ld	a5,16(s2)
	mv	a4,s3
	mv	a2,s4
	ld	a0,56(a5)
	mv	a1,s1
	jal	ra,0x17f7c # luaO_rawarith>
	lbu	a4,56(sp)
	li	a5,3
	beq	a4,a5,0x23920 # constfolding+0x13a>
	fld	fa5,48(sp)
	feq.d	a5,fa5,fa5
	beqz	a5,0x238b6 # constfolding+0xd0>
	fmv.d.x	fa4,zero
	feq.d	a5,fa5,fa4
	bnez	a5,0x238b6 # constfolding+0xd0>
	li	a5,5
	sw	a5,0(s0)
	fsd	fa5,8(s0)
	li	a0,1
	j	0x238b8 # constfolding+0xd2>
	li	a5,11
	ble	s1,a5,0x238a2 # constfolding+0xbc>
	li	a5,13
	bne	s1,a5,0x23856 # constfolding+0x70>
	addi	s3,sp,48
	addi	s4,sp,16
	li	a2,0
	mv	a1,s3
	mv	a0,s4
	jal	ra,0x1e5f4 # luaV_tointegerns>
	bnez	a0,0x2390c # constfolding+0x126>
	li	a0,0
	ld	ra,104(sp)
	ld	s0,96(sp)
	ld	s1,88(sp)
	ld	s2,80(sp)
	ld	s3,72(sp)
	ld	s4,64(sp)
	addi	sp,sp,112
	ret
	fld	fa5,8(a3)
	li	a5,19
	sb	a5,40(sp)
	fsd	fa5,32(sp)
	li	a5,6
	blt	a5,s1,0x23896 # constfolding+0xb0>
	li	a5,4
	blt	a5,s1,0x238e4 # constfolding+0xfe>
	li	a5,3
	bne	s1,a5,0x23856 # constfolding+0x70>
	fmv.d.x	fa4,zero
	feq.d	a5,fa5,fa4
	bnez	a5,0x238b6 # constfolding+0xd0>
	j	0x23856 # constfolding+0x70>
	fld	fa5,8(a2)
	li	a5,19
	sb	a5,24(sp)
	fsd	fa5,16(sp)
	j	0x2381e # constfolding+0x38>
	fcvt.d.l	fa4,a3
	fmv.d.x	fa5,zero
	feq.d	a5,fa4,fa5
	bnez	a5,0x238b6 # constfolding+0xd0>
	j	0x23856 # constfolding+0x70>
	addi	a3,sp,32
	mv	a0,a3
	li	a2,0
	mv	a1,s3
	sd	a3,8(sp)
	jal	ra,0x1e5f4 # luaV_tointegerns>
	ld	a3,8(sp)
	bnez	a0,0x23860 # constfolding+0x7a>
	j	0x238b6 # constfolding+0xd0>
	li	a5,6
	sw	a5,0(s0)
	ld	a5,48(sp)
	li	a0,1
	sd	a5,8(s0)
	j	0x238b8 # constfolding+0xd2>

luaK_semerror:
	addi	sp,sp,-16
	sd	ra,8(sp)
	sw	zero,16(a0)
	jal	ra,0x25b74 # luaX_syntaxerror>

luaK_exp2const:
	lw	a4,16(a1)
	lw	a5,20(a1)
	bne	a4,a5,0x2395c # luaK_exp2const+0x24>
	lw	a3,0(a1)
	li	a5,11
	bltu	a5,a3,0x239b2 # luaK_exp2const+0x7a>
	auipc	a6,0x20
	addi	a6,a6,-1880 # 0x431f0 # udatatypename+0x828>
	slli	a4,a3,0x2
	add	a4,a4,a6
	lw	a5,0(a4)
	add	a5,a5,a6
	jr	a5
	li	a0,0
	ret
	ld	a5,16(a0)
	lw	a4,8(a1)
	li	a0,1
	ld	a3,88(a5)
	slli	a5,a4,0x1
	add	a5,a5,a4
	ld	a4,0(a3)
	slli	a5,a5,0x3
	add	a5,a5,a4
	ld	a4,0(a5)
	sd	a4,0(a2)
	lbu	a5,8(a5)
	sb	a5,8(a2)
	ret
	ld	a5,8(a1)
	li	a0,1
	sd	a5,0(a2)
	lbu	a5,8(a5)
	ori	a5,a5,64
	sb	a5,8(a2)
	ret
	li	a5,1
	sb	a5,8(a2)
	li	a0,1
	ret
	li	a5,17
	sb	a5,8(a2)
	li	a0,1
	ret
	sb	zero,8(a2)
	li	a0,1
	ret
	li	a5,5
	beq	a3,a5,0x239d0 # luaK_exp2const+0x98>
	li	a5,6
	li	a0,0
	bne	a3,a5,0x2395e # luaK_exp2const+0x26>
	li	a0,1
	beqz	a2,0x2395e # luaK_exp2const+0x26>
	ld	a5,8(a1)
	li	a4,3
	sb	a4,8(a2)
	sd	a5,0(a2)
	ret
	li	a0,1
	beqz	a2,0x2395e # luaK_exp2const+0x26>
	fld	fa5,8(a1)
	li	a5,19
	sb	a5,8(a2)
	fsd	fa5,0(a2)
	ret

luaK_concat:
	li	a4,-1
	beq	a2,a4,0x23a3c # luaK_concat+0x5c>
	lw	a5,0(a1)
	beq	a5,a4,0x23a3e # luaK_concat+0x5e>
	ld	a4,0(a0)
	lui	t1,0xff000
	addiw	t1,t1,1
	ld	t4,64(a4)
	li	a6,-1
	slli	a3,a5,0x2
	add	a3,a3,t4
	lw	a1,0(a3)
	addiw	t3,a5,1
	srliw	a4,a1,0x7
	addw	a7,a4,t1
	beq	a7,a6,0x23a1a # luaK_concat+0x3a>
	addw	a5,a7,t3
	bne	a5,a6,0x239fa # luaK_concat+0x1a>
	lui	a5,0x1000
	addiw	a5,a5,-1
	subw	a2,a2,t3
	addw	a4,a2,a5
	lui	a5,0x2000
	bleu	a5,a4,0x23a42 # luaK_concat+0x62>
	andi	a1,a1,127
	slliw	a2,a4,0x7
	or	a1,a1,a2
	sw	a1,0(a3)
	ret
	sw	a2,0(a1)
	ret
	ld	a0,16(a0)
	addi	sp,sp,-16
	auipc	a1,0x1f
	addi	a1,a1,-1814 # 0x42330 # luaP_opmodes+0x250>
	sd	ra,8(sp)
	jal	ra,0x25b74 # luaX_syntaxerror>

luaK_getlabel:
	mv	a5,a0
	lw	a0,32(a0)
	sw	a0,36(a5)
	ret

luaK_patchlist:
	mv	a4,a2
	li	a3,255
	j	0x235f0 # patchlistaux>

luaK_patchtohere:
	lw	a4,32(a0)
	li	a3,255
	sw	a4,36(a0)
	mv	a2,a4
	j	0x235f0 # patchlistaux>

luaK_code:
	addi	sp,sp,-32
	sd	s1,8(sp)
	ld	a5,16(a0)
	ld	s1,0(a0)
	sd	s0,16(sp)
	sd	s2,0(sp)
	mv	s0,a0
	lw	a2,32(a0)
	mv	s2,a1
	ld	a0,56(a5)
	ld	a1,64(s1)
	lui	a5,0x80000
	addi	a3,s1,24
	auipc	a6,0x1f
	addi	a6,a6,1786 # 0x43188 # udatatypename+0x7c0>
	not	a5,a5
	li	a4,4
	sd	ra,24(sp)
	jal	ra,0x17b0e # luaM_growaux_>
	lw	a5,32(s0)
	ld	a4,16(s0)
	sd	a0,64(s1)
	addiw	a3,a5,1
	slli	a5,a5,0x2
	sw	a3,32(s0)
	add	a0,a0,a5
	sw	s2,0(a0)
	lw	a2,8(a4)
	mv	a0,s0
	mv	a1,s1
	jal	ra,0x23196 # savelineinfo>
	lw	a0,32(s0)
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addiw	a0,a0,-1
	addi	sp,sp,32
	ret

luaK_jump:
	lui	a1,0x80000
	xori	a1,a1,-200
	j	0x23a70 # luaK_code>

luaK_nil:
	lw	a5,32(a0)
	lw	a4,36(a0)
	ble	a5,a4,0x23b22 # luaK_nil+0x48>
	ld	a4,0(a0)
	slli	a5,a5,0x2
	addi	a5,a5,-4
	ld	a3,64(a4)
	li	a4,8
	add	a5,a5,a3
	lw	a7,0(a5) # 0xffffffff80000000 # __BSS_END__+0xffffffff7ffb1c78>
	andi	a3,a7,127
	bne	a3,a4,0x23b22 # luaK_nil+0x48>
	srliw	a4,a7,0x7
	srliw	a3,a7,0x10
	addw	t1,a1,a2
	andi	a4,a4,255
	andi	a3,a3,255
	mv	a6,t1
	addw	a3,a3,a4
	blt	a1,a4,0x23b36 # luaK_nil+0x5c>
	addiw	t3,a3,1
	ble	a1,t3,0x23b3a # luaK_nil+0x60>
	beq	a1,a4,0x23b36 # luaK_nil+0x5c>
	addiw	a2,a2,-1
	slliw	a2,a2,0x10
	slliw	a1,a1,0x7
	or	a1,a1,a2
	ori	a1,a1,8
	sext.w	a1,a1
	j	0x23a70 # luaK_code>
	blt	t1,a4,0x23b22 # luaK_nil+0x48>
	sext.w	a2,a1
	ble	a1,a4,0x23b46 # luaK_nil+0x6c>
	sext.w	a2,a4
	lui	a1,0x8
	addi	a1,a1,-128 # 0x7f80 # exit-0x81a0>
	slliw	a4,a2,0x7
	and	a4,a4,a1
	lui	a1,0xffff8
	addi	a1,a1,127 # 0xffffffffffff807f # __BSS_END__+0xfffffffffffa9cf7>
	and	a7,a7,a1
	lui	a1,0xff010
	or	a7,a4,a7
	addiw	a0,a6,-1
	addi	a1,a1,-1
	sext.w	a4,a3
	mv	a6,a0
	and	a7,a7,a1
	ble	a4,a0,0x23b7a # luaK_nil+0xa0>
	mv	a6,a3
	subw	a6,a6,a2
	slliw	a6,a6,0x10
	lui	a4,0xff0
	and	a6,a6,a4
	or	a6,a7,a6
	sw	a6,0(a5)
	ret

luaK_ret:
	li	a5,71
	beqz	a2,0x23ba8 # luaK_ret+0x14>
	li	a4,1
	li	a5,72
	beq	a2,a4,0x23ba8 # luaK_ret+0x14>
	li	a5,70
	addiw	a2,a2,1
	slliw	a2,a2,0x10
	slliw	a1,a1,0x7
	or	a1,a1,a2
	or	a1,a1,a5
	sext.w	a1,a1
	j	0x23a70 # luaK_code>

luaK_codek.isra.0:
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	ra,24(sp)
	sd	s1,8(sp)
	lui	a4,0x20
	slliw	a5,a1,0x7
	sext.w	s0,a2
	ble	a4,a2,0x23be8 # luaK_codek.isra.0+0x2e>
	slliw	a1,s0,0xf
	ld	s0,16(sp)
	ld	ra,24(sp)
	ld	s1,8(sp)
	or	a1,a1,a5
	ori	a1,a1,3
	sext.w	a1,a1
	addi	sp,sp,32
	j	0x23a70 # luaK_code>
	ori	a1,a5,4
	sext.w	a1,a1
	mv	s1,a0
	jal	ra,0x23a70 # luaK_code>
	slliw	a1,s0,0x7
	ld	s0,16(sp)
	ld	ra,24(sp)
	mv	a0,s1
	ld	s1,8(sp)
	ori	a1,a1,82
	sext.w	a1,a1
	addi	sp,sp,32
	j	0x23a70 # luaK_code>

luaK_codeABCk:
	slliw	a4,a4,0x18
	or	a1,a1,a4
	slliw	a5,a5,0xf
	or	a1,a1,a5
	slliw	a3,a3,0x10
	or	a1,a1,a3
	slliw	a2,a2,0x7
	or	a1,a1,a2
	sext.w	a1,a1
	j	0x23a70 # luaK_code>

luaK_codeABx:
	slliw	a3,a3,0xf
	or	a1,a1,a3
	slliw	a2,a2,0x7
	or	a1,a1,a2
	sext.w	a1,a1
	j	0x23a70 # luaK_code>

luaK_codeAsBx:
	lui	a5,0x10
	addiw	a5,a5,-1
	slliw	a2,a2,0x7
	addw	a5,a5,a3
	or	a1,a1,a2
	slliw	a5,a5,0xf
	or	a1,a1,a5
	sext.w	a1,a1
	j	0x23a70 # luaK_code>

luaK_checkstack:
	ld	a4,0(a0)
	lbu	a5,68(a0)
	lbu	a3,12(a4) # 0x2000c # luaV_execute+0x10a4>
	addw	a1,a1,a5
	ble	a1,a3,0x23c68 # luaK_checkstack+0x1c>
	li	a5,254
	blt	a5,a1,0x23c6a # luaK_checkstack+0x1e>
	sb	a1,12(a4)
	ret
	ld	a0,16(a0)
	addi	sp,sp,-16
	auipc	a1,0x1f
	addi	a1,a1,1330 # 0x431a0 # udatatypename+0x7d8>
	sd	ra,8(sp)
	jal	ra,0x25b74 # luaX_syntaxerror>

luaK_reserveregs:
	ld	a4,0(a0)
	lbu	a5,68(a0)
	lbu	a3,12(a4)
	addw	a5,a5,a1
	mv	a1,a5
	ble	a5,a3,0x23c9a # luaK_reserveregs+0x1e>
	li	a3,254
	blt	a3,a5,0x23ca0 # luaK_reserveregs+0x24>
	sb	a5,12(a4)
	sb	a1,68(a0)
	ret
	ld	a0,16(a0)
	addi	sp,sp,-16
	auipc	a1,0x1f
	addi	a1,a1,1276 # 0x431a0 # udatatypename+0x7d8>
	sd	ra,8(sp)
	jal	ra,0x25b74 # luaX_syntaxerror>

luaK_int:
	mv	a5,a2
	lui	a2,0x10
	addi	sp,sp,-64
	addi	a2,a2,-1
	sd	s0,48(sp)
	sd	ra,56(sp)
	sd	s1,40(sp)
	add	a3,a5,a2
	lui	a4,0x20
	mv	s0,a1
	bleu	a4,a3,0x23cea # luaK_int+0x38>
	addw	a5,a5,a2
	ld	s0,48(sp)
	slliw	a5,a5,0xf
	slliw	a1,a1,0x7
	ld	ra,56(sp)
	ld	s1,40(sp)
	or	a1,a1,a5
	ori	a1,a1,1
	sext.w	a1,a1
	addi	sp,sp,64
	j	0x23a70 # luaK_code>
	addi	a2,sp,16
	mv	a1,sp
	sd	a5,0(sp)
	sd	a5,16(sp)
	li	a4,2
	li	a5,3
	mv	s1,a0
	sb	a4,8(sp)
	sb	a5,24(sp)
	jal	ra,0x23272 # addk>
	mv	a1,s0
	ld	s0,48(sp)
	ld	ra,56(sp)
	mv	a2,a0
	mv	a0,s1
	ld	s1,40(sp)
	addi	sp,sp,64
	j	0x23bba # luaK_codek.isra.0>

luaK_setreturns:
	ld	a6,0(a0)
	lw	a5,8(a1)
	addiw	a2,a2,1
	ld	a4,64(a6)
	slli	a5,a5,0x2
	lw	a1,0(a1)
	add	a4,a4,a5
	lw	a5,0(a4)
	slliw	a2,a2,0x18
	li	a3,18
	slli	a5,a5,0x28
	srli	a5,a5,0x28
	or	a5,a5,a2
	sext.w	a5,a5
	bne	a1,a3,0x23d3e # luaK_setreturns+0x2a>
	sw	a5,0(a4)
	ret
	lbu	a3,68(a0)
	lui	a2,0xffff8
	addi	a2,a2,127 # 0xffffffffffff807f # __BSS_END__+0xfffffffffffa9cf7>
	and	a5,a5,a2
	slliw	a2,a3,0x7
	or	a5,a5,a2
	sw	a5,0(a4)
	lbu	a4,12(a6)
	addi	a5,a3,1
	addiw	a3,a3,1
	blt	a4,a5,0x23d6a # luaK_setreturns+0x56>
	andi	a3,a3,255
	sb	a3,68(a0)
	ret
	li	a4,254
	blt	a4,a5,0x23d80 # luaK_setreturns+0x6c>
	andi	a3,a3,255
	sb	a3,12(a6)
	sb	a3,68(a0)
	ret
	ld	a0,16(a0)
	addi	sp,sp,-16
	auipc	a1,0x1f
	addi	a1,a1,1052 # 0x431a0 # udatatypename+0x7d8>
	sd	ra,8(sp)
	jal	ra,0x25b74 # luaX_syntaxerror>

luaK_setoneret:
	lw	a5,0(a1)
	li	a4,18
	beq	a5,a4,0x23dc0 # luaK_setoneret+0x2e>
	li	a4,19
	beq	a5,a4,0x23da2 # luaK_setoneret+0x10>
	ret
	ld	a4,0(a0)
	lw	a5,8(a1)
	lui	a3,0x2000
	ld	a4,64(a4)
	slli	a5,a5,0x2
	add	a4,a4,a5
	lw	a5,0(a4)
	slli	a5,a5,0x28
	srli	a5,a5,0x28
	or	a5,a5,a3
	sw	a5,0(a4)
	li	a5,17
	sw	a5,0(a1)
	ret
	ld	a5,0(a0)
	lw	a4,8(a1)
	li	a3,8
	ld	a5,64(a5)
	slli	a4,a4,0x2
	sw	a3,0(a1)
	add	a5,a5,a4
	lw	a5,0(a5)
	srliw	a5,a5,0x7
	andi	a5,a5,255
	sw	a5,8(a1)
	ret

luaK_dischargevars:
	lw	a5,0(a1)
	li	a4,10
	addiw	a5,a5,-9
	sext.w	a3,a5
	bltu	a4,a3,0x23f52 # luaK_dischargevars+0x176>
	slli	a5,a5,0x20
	srli	a5,a5,0x20
	auipc	a4,0x1f
	addi	a4,a4,1074 # 0x43220 # udatatypename+0x858>
	slli	a5,a5,0x2
	add	a5,a5,a4
	lw	a5,0(a5)
	addi	sp,sp,-48
	sd	s0,32(sp)
	add	a5,a5,a4
	sd	s1,24(sp)
	sd	ra,40(sp)
	sd	s2,16(sp)
	sd	s3,8(sp)
	mv	s0,a1
	mv	s1,a0
	jr	a5
	lw	a1,8(a1)
	slliw	a1,a1,0x10
	ori	a1,a1,9
	sext.w	a1,a1
	jal	ra,0x23a70 # luaK_code>
	li	a5,17
	sw	a0,8(s0)
	sw	a5,0(s0)
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	addi	sp,sp,48
	ret
	ld	s0,32(sp)
	ld	ra,40(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	addi	sp,sp,48
	j	0x23d92 # luaK_setoneret>
	lbu	a5,8(a1)
	ld	ra,40(sp)
	ld	s0,32(sp)
	li	a4,8
	sw	a4,0(a1)
	sw	a5,8(a1)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	addi	sp,sp,48
	ret
	ld	a5,16(a0)
	lw	a4,8(a1)
	li	a3,20
	ld	a2,88(a5)
	slli	a5,a4,0x1
	add	a5,a5,a4
	ld	a4,0(a2)
	slli	a5,a5,0x3
	add	a4,a4,a5
	lbu	a5,8(a4)
	ld	a2,0(a4)
	andi	a5,a5,63
	bltu	a3,a5,0x23e26 # luaK_dischargevars+0x4a>
	auipc	a4,0x1f
	addi	a4,a4,976 # 0x4324c # udatatypename+0x884>
	slli	a5,a5,0x2
	add	a5,a5,a4
	lw	a5,0(a5)
	add	a5,a5,a4
	jr	a5
	lbu	s2,10(a1)
	lh	s3,8(a1)
	ble	s2,s3,0x23f54 # luaK_dischargevars+0x178>
	jal	ra,0x1b31e # luaY_nvarstack>
	blt	s2,a0,0x23eac # luaK_dischargevars+0xd0>
	lbu	a5,68(s1)
	addiw	a5,a5,-1
	sb	a5,68(s1)
	mv	a0,s1
	jal	ra,0x1b31e # luaY_nvarstack>
	blt	s3,a0,0x23ec0 # luaK_dischargevars+0xe4>
	lbu	a5,68(s1)
	addiw	a5,a5,-1
	sb	a5,68(s1)
	lbu	a1,10(s0)
	lh	a5,8(s0)
	mv	a0,s1
	slliw	a1,a1,0x10
	slliw	a5,a5,0x18
	or	a1,a1,a5
	ori	a1,a1,12
	j	0x23e1a # luaK_dischargevars+0x3e>
	lbu	a1,10(a1)
	lh	a5,8(s0)
	slliw	a1,a1,0x10
	slliw	a5,a5,0x18
	or	a1,a1,a5
	ori	a1,a1,11
	j	0x23e1a # luaK_dischargevars+0x3e>
	lbu	s2,10(a1)
	jal	ra,0x1b31e # luaY_nvarstack>
	blt	s2,a0,0x23f08 # luaK_dischargevars+0x12c>
	lbu	a5,68(s1)
	addiw	a5,a5,-1
	sb	a5,68(s1)
	lbu	a1,10(s0)
	lh	a5,8(s0)
	mv	a0,s1
	slliw	a1,a1,0x10
	slliw	a5,a5,0x18
	or	a1,a1,a5
	ori	a1,a1,13
	j	0x23e1a # luaK_dischargevars+0x3e>
	lbu	s2,10(a1)
	jal	ra,0x1b31e # luaY_nvarstack>
	blt	s2,a0,0x23f38 # luaK_dischargevars+0x15c>
	lbu	a5,68(s1)
	addiw	a5,a5,-1
	sb	a5,68(s1)
	lbu	a1,10(s0)
	lh	a5,8(s0)
	mv	a0,s1
	slliw	a1,a1,0x10
	slliw	a5,a5,0x18
	or	a1,a1,a5
	ori	a1,a1,14
	j	0x23e1a # luaK_dischargevars+0x3e>
	ret
	jal	ra,0x1b31e # luaY_nvarstack>
	blt	s3,a0,0x23f66 # luaK_dischargevars+0x18a>
	lbu	a5,68(s1)
	addiw	a5,a5,-1
	sb	a5,68(s1)
	mv	a0,s1
	jal	ra,0x1b31e # luaY_nvarstack>
	blt	s2,a0,0x23ec0 # luaK_dischargevars+0xe4>
	j	0x23eb6 # luaK_dischargevars+0xda>
	li	a5,7
	sw	a5,0(a1)
	sd	a2,8(a1)
	j	0x23e26 # luaK_dischargevars+0x4a>
	li	a5,6
	sw	a5,0(a1)
	sd	a2,8(a1)
	j	0x23e26 # luaK_dischargevars+0x4a>
	li	a5,5
	sw	a5,0(a1)
	sd	a2,8(a1)
	j	0x23e26 # luaK_dischargevars+0x4a>
	li	a5,2
	sw	a5,0(a1)
	j	0x23e26 # luaK_dischargevars+0x4a>
	li	a5,3
	sw	a5,0(a1)
	j	0x23e26 # luaK_dischargevars+0x4a>
	li	a5,1
	sw	a5,0(a1)
	j	0x23e26 # luaK_dischargevars+0x4a>

discharge2reg:
	addi	sp,sp,-80
	sd	s0,64(sp)
	sd	s1,56(sp)
	sd	s2,48(sp)
	mv	s0,a1
	sd	ra,72(sp)
	fsd	fs0,40(sp)
	mv	s1,a0
	mv	s2,a2
	jal	ra,0x23ddc # luaK_dischargevars>
	lw	a4,0(s0)
	li	a5,17
	bltu	a5,a4,0x23ffc # discharge2reg+0x60>
	lwu	a5,0(s0)
	auipc	a4,0x1f
	addi	a4,a4,738 # 0x432a0 # udatatypename+0x8d8>
	slli	a5,a5,0x2
	add	a5,a5,a4
	lw	a5,0(a5)
	add	a5,a5,a4
	jr	a5
	ld	a4,0(s1)
	lw	a5,8(s0)
	lui	a2,0xffff8
	ld	a3,64(a4)
	slli	a5,a5,0x2
	addi	a2,a2,127 # 0xffffffffffff807f # __BSS_END__+0xfffffffffffa9cf7>
	add	a3,a3,a5
	lw	a4,0(a3)
	slliw	a5,s2,0x7
	and	a4,a4,a2
	lui	a2,0x8
	addi	a2,a2,-128 # 0x7f80 # exit-0x81a0>
	and	a5,a5,a2
	or	a5,a5,a4
	sw	a5,0(a3)
	li	a5,8
	sw	s2,8(s0)
	sw	a5,0(s0)
	ld	ra,72(sp)
	ld	s0,64(sp)
	ld	s1,56(sp)
	ld	s2,48(sp)
	fld	fs0,40(sp)
	addi	sp,sp,80
	ret
	li	a2,1
	mv	a1,s2
	mv	a0,s1
	jal	ra,0x23ada # luaK_nil>
	j	0x23ff4 # discharge2reg+0x58>
	slliw	a1,s2,0x7
	ori	a1,a1,7
	sext.w	a1,a1
	mv	a0,s1
	jal	ra,0x23a70 # luaK_code>
	j	0x23ff4 # discharge2reg+0x58>
	slliw	a1,s2,0x7
	ori	a1,a1,5
	sext.w	a1,a1
	mv	a0,s1
	jal	ra,0x23a70 # luaK_code>
	j	0x23ff4 # discharge2reg+0x58>
	lw	a2,8(s0)
	mv	a1,s2
	mv	a0,s1
	jal	ra,0x23bba # luaK_codek.isra.0>
	j	0x23ff4 # discharge2reg+0x58>
	fld	fs0,8(s0)
	li	a1,0
	addi	a0,sp,8
	fmv.d	fa0,fs0
	jal	ra,0x1e574 # luaV_flttointeger>
	beqz	a0,0x24068 # discharge2reg+0xcc>
	ld	a5,8(sp)
	lui	a1,0x10
	addi	a1,a1,-1
	add	a3,a5,a1
	lui	a4,0x20
	bltu	a3,a4,0x240c8 # discharge2reg+0x12c>
	addi	a2,sp,16
	mv	a1,a2
	li	a5,19
	mv	a0,s1
	fsd	fs0,16(sp)
	sb	a5,24(sp)
	jal	ra,0x23272 # addk>
	mv	a2,a0
	j	0x2403c # discharge2reg+0xa0>
	ld	a2,8(s0)
	mv	a1,s2
	mv	a0,s1
	jal	ra,0x23cb2 # luaK_int>
	j	0x23ff4 # discharge2reg+0x58>
	ld	a5,8(s0)
	addi	a2,sp,16
	mv	a1,a2
	sd	a5,16(sp)
	lbu	a5,8(a5) # 0x10008 # exit-0x118>
	mv	a0,s1
	ori	a5,a5,64
	sb	a5,24(sp)
	jal	ra,0x23272 # addk>
	li	a5,4
	mv	a2,a0
	sw	a0,8(s0)
	sw	a5,0(s0)
	j	0x2403c # discharge2reg+0xa0>
	lw	a5,8(s0)
	beq	a5,s2,0x23ff4 # discharge2reg+0x58>
	slliw	a1,s2,0x7
	slliw	a5,a5,0x10
	or	a1,a1,a5
	sext.w	a1,a1
	mv	a0,s1
	jal	ra,0x23a70 # luaK_code>
	j	0x23ff4 # discharge2reg+0x58>
	addw	a1,a1,a5
	slliw	a1,a1,0xf
	slliw	a5,s2,0x7
	or	a1,a1,a5
	ori	a1,a1,2
	sext.w	a1,a1
	mv	a0,s1
	jal	ra,0x23a70 # luaK_code>
	j	0x23ff4 # discharge2reg+0x58>

exp2reg:
	addi	sp,sp,-64
	sd	s0,48(sp)
	sd	s1,40(sp)
	sd	s3,24(sp)
	mv	s0,a1
	sd	ra,56(sp)
	sd	s2,32(sp)
	sd	s4,16(sp)
	sd	s5,8(sp)
	sd	s6,0(sp)
	mv	s1,a0
	mv	s3,a2
	jal	ra,0x23f9c # discharge2reg>
	lw	a4,0(s0)
	li	a5,16
	beq	a4,a5,0x241b6 # exp2reg+0xd4>
	lw	a1,16(s0)
	lw	s2,20(s0)
	bne	a1,s2,0x24130 # exp2reg+0x4e>
	li	a5,-1
	sd	a5,16(s0)
	li	a5,8
	sw	s3,8(s0)
	ld	ra,56(sp)
	sw	a5,0(s0)
	ld	s0,48(sp)
	ld	s1,40(sp)
	ld	s2,32(sp)
	ld	s3,24(sp)
	ld	s4,16(sp)
	ld	s5,8(sp)
	ld	s6,0(sp)
	addi	sp,sp,64
	ret
	mv	a0,s1
	jal	ra,0x2341c # need_value>
	beqz	a0,0x241c4 # exp2reg+0xe2>
	lw	a4,0(s0)
	li	a5,16
	li	s4,-1
	beq	a4,a5,0x24152 # exp2reg+0x70>
	lui	a1,0x80000
	xori	a1,a1,-200
	mv	a0,s1
	jal	ra,0x23a70 # luaK_code>
	mv	s4,a0
	lw	a5,32(s1)
	slliw	s2,s3,0x7
	ori	a1,s2,6
	sext.w	a1,a1
	sw	a5,36(s1)
	mv	a0,s1
	jal	ra,0x23a70 # luaK_code>
	lw	a5,32(s1)
	ori	a1,s2,7
	sext.w	a1,a1
	sw	a5,36(s1)
	mv	s6,a0
	mv	a0,s1
	jal	ra,0x23a70 # luaK_code>
	lw	a4,32(s1)
	mv	s5,a0
	li	a3,255
	mv	a1,s4
	sw	a4,36(s1)
	mv	a2,a4
	mv	a0,s1
	jal	ra,0x235f0 # patchlistaux>
	lw	s2,20(s0)
	lw	s4,32(s1)
	mv	a1,s2
	mv	a0,s1
	mv	a4,s6
	mv	a3,s3
	mv	a2,s4
	sw	s4,36(s1)
	jal	ra,0x235f0 # patchlistaux>
	lw	a1,16(s0)
	mv	a4,s5
	mv	a3,s3
	mv	a2,s4
	mv	a0,s1
	jal	ra,0x235f0 # patchlistaux>
	j	0x24110 # exp2reg+0x2e>
	lw	a2,8(s0)
	addi	a1,s0,16
	mv	a0,s1
	jal	ra,0x239e0 # luaK_concat>
	j	0x24106 # exp2reg+0x24>
	mv	a1,s2
	mv	a0,s1
	jal	ra,0x2341c # need_value>
	bnez	a0,0x24138 # exp2reg+0x56>
	li	s5,-1
	li	s6,-1
	j	0x24190 # exp2reg+0xae>

jumponcond:
	lw	a5,0(a1)
	addi	sp,sp,-48
	sd	s0,32(sp)
	sd	s1,24(sp)
	sd	s2,16(sp)
	sd	ra,40(sp)
	sd	s3,8(sp)
	li	a4,17
	mv	s1,a1
	mv	s0,a0
	mv	s2,a2
	beq	a5,a4,0x24240 # jumponcond+0x6c>
	li	a4,8
	bne	a5,a4,0x2429e # jumponcond+0xca>
	lw	s3,8(s1)
	mv	a0,s0
	jal	ra,0x1b31e # luaY_nvarstack>
	blt	s3,a0,0x2420c # jumponcond+0x38>
	lbu	a5,68(s0)
	addiw	a5,a5,-1
	sb	a5,68(s0)
	lw	a1,8(s1)
	slliw	a2,s2,0xf
	lui	a5,0x8
	slliw	a1,a1,0x10
	or	a1,a1,a2
	addi	a5,a5,-61 # 0x7fc3 # exit-0x815d>
	or	a1,a1,a5
	sext.w	a1,a1
	mv	a0,s0
	jal	ra,0x23a70 # luaK_code>
	mv	a0,s0
	ld	s0,32(sp)
	ld	ra,40(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	lui	a1,0x80000
	xori	a1,a1,-200
	addi	sp,sp,48
	j	0x23a70 # luaK_code>
	ld	a3,0(a0)
	lw	a4,8(a1)
	li	a2,51
	ld	a5,64(a3)
	slli	a4,a4,0x2
	add	a5,a5,a4
	lw	a5,0(a5)
	andi	a4,a5,127
	beq	a4,a2,0x242a2 # jumponcond+0xce>
	lbu	a5,68(s0)
	lbu	a2,12(a3) # 0x200000c # __BSS_END__+0x1fb1c84>
	addi	a4,a5,1
	addiw	a5,a5,1
	blt	a2,a4,0x2428c # jumponcond+0xb8>
	andi	a5,a5,255
	andi	a4,a4,255
	sb	a5,68(s0)
	addiw	a2,a4,-1
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x23f9c # discharge2reg>
	lw	a4,0(s1)
	li	a5,8
	bne	a4,a5,0x2420c # jumponcond+0x38>
	j	0x241f4 # jumponcond+0x20>
	li	a2,254
	blt	a2,a4,0x24302 # jumponcond+0x12e>
	andi	a5,a5,255
	sb	a5,12(a3)
	j	0x2426e # jumponcond+0x9a>
	ld	a3,0(a0)
	j	0x24258 # jumponcond+0x84>
	lw	a4,32(a0)
	ld	a3,88(a3)
	li	a2,-128
	addiw	a1,a4,-1
	add	a3,a3,a1
	lb	a3,0(a3)
	mv	a4,a1
	beq	a3,a2,0x242f2 # jumponcond+0x11e>
	lw	a1,40(a0)
	lbu	a2,69(a0)
	subw	a3,a1,a3
	addiw	a2,a2,-1
	sw	a3,40(a0)
	sb	a2,69(a0)
	srliw	a1,a5,0x10
	lui	a5,0x8
	slliw	a2,s2,0xf
	slliw	a1,a1,0x7
	addi	a5,a5,-128 # 0x7f80 # exit-0x81a0>
	lui	s2,0x8
	and	a1,a1,a5
	xor	a2,a2,s2
	or	a1,a1,a2
	ori	a1,a1,66
	sext.w	a1,a1
	sw	a4,32(s0)
	j	0x24222 # jumponcond+0x4e>
	lw	a3,52(a0)
	li	a2,-127
	sb	a2,69(a0)
	addiw	a3,a3,-1
	sw	a3,52(a0)
	j	0x242cc # jumponcond+0xf8>
	ld	a0,16(s0)
	auipc	a1,0x1f
	addi	a1,a1,-356 # 0x431a0 # udatatypename+0x7d8>
	jal	ra,0x25b74 # luaX_syntaxerror>

luaK_exp2nextreg:
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	ra,24(sp)
	mv	s1,a1
	sd	s2,0(sp)
	mv	s0,a0
	jal	ra,0x23ddc # luaK_dischargevars>
	lw	a4,0(s1)
	li	a5,8
	beq	a4,a5,0x2436e # luaK_exp2nextreg+0x5e>
	lbu	a5,68(s0)
	ld	a4,0(s0)
	addi	a2,a5,1
	addiw	a5,a5,1
	lbu	a3,12(a4) # 0x2000c # luaV_execute+0x10a4>
	blt	a3,a2,0x2435c # luaK_exp2nextreg+0x4c>
	andi	a5,a5,255
	sb	a5,68(s0)
	mv	a0,s0
	ld	s0,16(sp)
	ld	ra,24(sp)
	ld	s2,0(sp)
	mv	a1,s1
	ld	s1,8(sp)
	andi	a2,a2,255
	addiw	a2,a2,-1
	addi	sp,sp,32
	j	0x240e2 # exp2reg>
	li	a3,254
	blt	a3,a2,0x2438c # luaK_exp2nextreg+0x7c>
	andi	a5,a5,255
	sb	a5,12(a4)
	j	0x24342 # luaK_exp2nextreg+0x32>
	lw	s2,8(s1)
	mv	a0,s0
	jal	ra,0x1b31e # luaY_nvarstack>
	lbu	a5,68(s0)
	blt	s2,a0,0x2432e # luaK_exp2nextreg+0x1e>
	addiw	a5,a5,-1
	andi	a5,a5,255
	sb	a5,68(s0)
	j	0x2432e # luaK_exp2nextreg+0x1e>
	ld	a0,16(s0)
	auipc	a1,0x1f
	addi	a1,a1,-494 # 0x431a0 # udatatypename+0x7d8>
	jal	ra,0x25b74 # luaX_syntaxerror>

luaK_exp2anyreg:
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	s1,8(sp)
	mv	s0,a1
	sd	ra,24(sp)
	sd	s2,0(sp)
	mv	s1,a0
	jal	ra,0x23ddc # luaK_dischargevars>
	lw	a4,0(s0)
	li	a5,8
	bne	a4,a5,0x243ca # luaK_exp2anyreg+0x30>
	lw	a4,16(s0)
	lw	a5,20(s0)
	lw	s2,8(s0)
	beq	a4,a5,0x243d6 # luaK_exp2anyreg+0x3c>
	mv	a0,s1
	jal	ra,0x1b31e # luaY_nvarstack>
	ble	a0,s2,0x243e4 # luaK_exp2anyreg+0x4a>
	mv	a1,s0
	mv	a0,s1
	jal	ra,0x24310 # luaK_exp2nextreg>
	lw	s2,8(s0)
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	mv	a0,s2
	ld	s2,0(sp)
	addi	sp,sp,32
	ret
	lw	a2,8(s0)
	mv	a1,s0
	mv	a0,s1
	jal	ra,0x240e2 # exp2reg>
	lw	s2,8(s0)
	j	0x243d6 # luaK_exp2anyreg+0x3c>

codeorder:
	addi	sp,sp,-80
	sd	s3,40(sp)
	sd	s5,24(sp)
	addi	s3,sp,8
	addi	s5,sp,12
	sd	s0,64(sp)
	sd	s1,56(sp)
	sd	s2,48(sp)
	mv	s1,a0
	mv	s2,a1
	mv	s0,a2
	mv	a1,s3
	mv	a2,s5
	mv	a0,a3
	sd	s4,32(sp)
	sd	ra,72(sp)
	mv	s4,a3
	sw	zero,12(sp)
	jal	ra,0x233ae # isSCnumber>
	beqz	a0,0x24484 # codeorder+0x90>
	mv	a1,s0
	mv	a0,s1
	jal	ra,0x2439a # luaK_exp2anyreg>
	lw	s5,8(sp)
	mv	s3,a0
	addiw	s2,s2,4
	mv	a2,s4
	mv	a1,s0
	mv	a0,s1
	jal	ra,0x23754 # freeexps>
	lw	a5,12(sp)
	slliw	a1,s5,0x10
	slliw	s3,s3,0x7
	slliw	a5,a5,0x18
	or	a5,a5,a1
	or	a1,a5,s2
	or	a1,a1,s3
	lui	a5,0x8
	or	a1,a1,a5
	sext.w	a1,a1
	mv	a0,s1
	jal	ra,0x23a70 # luaK_code>
	lui	a1,0x80000
	mv	a0,s1
	xori	a1,a1,-200
	jal	ra,0x23a70 # luaK_code>
	li	a5,16
	ld	ra,72(sp)
	sw	a0,8(s0)
	sw	a5,0(s0)
	ld	s0,64(sp)
	ld	s1,56(sp)
	ld	s2,48(sp)
	ld	s3,40(sp)
	ld	s4,32(sp)
	ld	s5,24(sp)
	addi	sp,sp,80
	ret
	mv	a2,s5
	mv	a1,s3
	mv	a0,s0
	jal	ra,0x233ae # isSCnumber>
	beqz	a0,0x244aa # codeorder+0xb6>
	mv	a1,s4
	mv	a0,s1
	jal	ra,0x2439a # luaK_exp2anyreg>
	addi	a1,s2,-58 # 0x7fc6 # exit-0x815a>
	snez	s2,a1
	lw	s5,8(sp)
	mv	s3,a0
	addi	s2,s2,64
	j	0x24430 # codeorder+0x3c>
	mv	a1,s0
	mv	a0,s1
	jal	ra,0x2439a # luaK_exp2anyreg>
	mv	s3,a0
	mv	a1,s4
	mv	a0,s1
	jal	ra,0x2439a # luaK_exp2anyreg>
	mv	s5,a0
	j	0x24430 # codeorder+0x3c>

codeABRK:
	addi	sp,sp,-48
	sd	s1,24(sp)
	mv	s1,a4
	lw	a5,20(s1)
	lw	a4,16(a4)
	sd	s0,32(sp)
	sd	s2,16(sp)
	sd	s3,8(sp)
	sd	s4,0(sp)
	sd	ra,40(sp)
	mv	s4,a0
	mv	s0,a1
	mv	s2,a2
	mv	s3,a3
	beq	a4,a5,0x24518 # codeABRK+0x58>
	mv	a1,s1
	mv	a0,s4
	jal	ra,0x2439a # luaK_exp2anyreg>
	li	a4,0
	lw	a5,8(s1)
	slliw	a1,s3,0x10
	or	a1,a1,s0
	slliw	s2,s2,0x7
	or	a1,a1,s2
	slliw	s0,a5,0x18
	or	a1,a1,s0
	ld	s0,32(sp)
	ld	ra,40(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	mv	a0,s4
	ld	s4,0(sp)
	or	a1,a1,a4
	sext.w	a1,a1
	addi	sp,sp,48
	j	0x23a70 # luaK_code>
	mv	a1,s1
	jal	ra,0x23514 # luaK_exp2K.part.0>
	beqz	a0,0x244e0 # codeABRK+0x20>
	lui	a4,0x8
	j	0x244ea # codeABRK+0x2a>

luaK_exp2anyregup:
	lw	a4,0(a1)
	li	a5,10
	bne	a4,a5,0x24534 # luaK_exp2anyregup+0x10>
	lw	a4,16(a1)
	lw	a5,20(a1)
	beq	a4,a5,0x24536 # luaK_exp2anyregup+0x12>
	j	0x2439a # luaK_exp2anyreg>
	ret

luaK_exp2val:
	lw	a4,16(a1)
	lw	a5,20(a1)
	beq	a4,a5,0x24542 # luaK_exp2val+0xa>
	j	0x2439a # luaK_exp2anyreg>
	j	0x23ddc # luaK_dischargevars>

luaK_exp2RK:
	lw	a4,16(a1)
	lw	a5,20(a1)
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	ra,24(sp)
	mv	s0,a1
	mv	s1,a0
	beq	a4,a5,0x2456c # luaK_exp2RK+0x28>
	mv	a1,s0
	mv	a0,s1
	jal	ra,0x2439a # luaK_exp2anyreg>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	li	a0,0
	addi	sp,sp,32
	ret
	jal	ra,0x23514 # luaK_exp2K.part.0>
	beqz	a0,0x24558 # luaK_exp2RK+0x14>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	li	a0,1
	addi	sp,sp,32
	ret

luaK_storevar:
	lw	a5,0(a1)
	addi	sp,sp,-48
	sd	s1,24(sp)
	addiw	a5,a5,-9
	sd	s2,16(sp)
	sd	ra,40(sp)
	sd	s0,32(sp)
	sd	s3,8(sp)
	sext.w	a3,a5
	li	a4,6
	mv	s2,a0
	mv	s1,a2
	bltu	a4,a3,0x245c4 # luaK_storevar+0x46>
	slli	a5,a5,0x20
	srli	a5,a5,0x20
	auipc	a4,0x1f
	addi	a4,a4,-696 # 0x432e8 # udatatypename+0x920>
	slli	a5,a5,0x2
	add	a5,a5,a4
	lw	a5,0(a5)
	mv	s0,a1
	add	a5,a5,a4
	jr	a5
	lh	a3,8(a1) # 0xffffffff80000008 # __BSS_END__+0xffffffff7ffb1c80>
	lbu	a2,10(a1)
	mv	a4,s1
	li	a1,16
	jal	ra,0x244c0 # codeABRK>
	lw	a4,0(s1)
	li	a5,8
	beq	a4,a5,0x245f2 # luaK_storevar+0x74>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	addi	sp,sp,48
	ret
	lh	a3,8(a1)
	lbu	a2,10(a1)
	mv	a4,s1
	li	a1,18
	jal	ra,0x244c0 # codeABRK>
	lw	a4,0(s1)
	li	a5,8
	bne	a4,a5,0x245cc # luaK_storevar+0x4e>
	lw	s0,8(s1)
	mv	a0,s2
	jal	ra,0x1b31e # luaY_nvarstack>
	blt	s0,a0,0x245cc # luaK_storevar+0x4e>
	lbu	a5,68(s2)
	addiw	a5,a5,-1
	sb	a5,68(s2)
	j	0x245cc # luaK_storevar+0x4e>
	lw	a4,0(a2)
	li	a5,8
	beq	a4,a5,0x2466c # luaK_storevar+0xee>
	lbu	a2,8(s0)
	ld	s0,32(sp)
	ld	ra,40(sp)
	ld	s3,8(sp)
	mv	a1,s1
	mv	a0,s2
	ld	s1,24(sp)
	ld	s2,16(sp)
	addi	sp,sp,48
	j	0x240e2 # exp2reg>
	mv	a1,a2
	jal	ra,0x2439a # luaK_exp2anyreg>
	lw	a5,8(s0)
	slliw	a4,a0,0x7
	mv	a0,s2
	slliw	a1,a5,0x10
	or	a1,a1,a4
	ori	a1,a1,10
	sext.w	a1,a1
	jal	ra,0x23a70 # luaK_code>
	j	0x245c4 # luaK_storevar+0x46>
	lh	a3,8(a1)
	lbu	a2,10(a1)
	mv	a4,s1
	li	a1,15
	jal	ra,0x244c0 # codeABRK>
	j	0x245c4 # luaK_storevar+0x46>
	lh	a3,8(a1)
	lbu	a2,10(a1)
	mv	a4,s1
	li	a1,17
	jal	ra,0x244c0 # codeABRK>
	j	0x245c4 # luaK_storevar+0x46>
	lw	s3,8(a2)
	jal	ra,0x1b31e # luaY_nvarstack>
	blt	s3,a0,0x24612 # luaK_storevar+0x94>
	lbu	a5,68(s2)
	addiw	a5,a5,-1
	sb	a5,68(s2)
	j	0x24612 # luaK_storevar+0x94>

luaK_self:
	addi	sp,sp,-48
	sd	s0,32(sp)
	sd	s1,24(sp)
	sd	s2,16(sp)
	sd	s4,0(sp)
	mv	s2,a1
	sd	ra,40(sp)
	sd	s3,8(sp)
	mv	s0,a0
	mv	s1,a2
	jal	ra,0x2439a # luaK_exp2anyreg>
	lw	a4,0(s2)
	li	a5,8
	lw	s4,8(s2)
	beq	a4,a5,0x24776 # luaK_self+0xf2>
	lbu	s3,68(s0)
	ld	a4,0(s0)
	sext.w	a5,s3
	li	a3,8
	sw	a5,8(s2)
	sw	a3,0(s2)
	lbu	a3,12(a4)
	addi	a5,a5,2
	blt	a3,a5,0x24722 # luaK_self+0x9e>
	addiw	a5,s3,2
	andi	a5,a5,255
	sb	a5,68(s0)
	lw	a4,16(s1)
	lw	a5,20(s1)
	beq	a4,a5,0x24742 # luaK_self+0xbe>
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x2439a # luaK_exp2anyreg>
	li	a1,0
	lw	a5,8(s1)
	slliw	s4,s4,0x10
	slliw	s3,s3,0x7
	slliw	a5,a5,0x18
	or	a1,a1,a5
	or	a1,a1,s4
	or	a1,a1,s3
	ori	a1,a1,20
	sext.w	a1,a1
	mv	a0,s0
	jal	ra,0x23a70 # luaK_code>
	lw	a4,0(s1)
	li	a5,8
	beq	a4,a5,0x24750 # luaK_self+0xcc>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	ld	s4,0(sp)
	addi	sp,sp,48
	ret
	li	a3,254
	blt	a3,a5,0x24790 # luaK_self+0x10c>
	addiw	a5,s3,2
	andi	a5,a5,255
	sb	a5,12(a4)
	sb	a5,68(s0)
	lw	a4,16(s1)
	lw	a5,20(s1)
	bne	a4,a5,0x246dc # luaK_self+0x58>
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x23514 # luaK_exp2K.part.0>
	beqz	a0,0x246dc # luaK_self+0x58>
	lui	a1,0x8
	j	0x246e6 # luaK_self+0x62>
	lw	s1,8(s1)
	mv	a0,s0
	jal	ra,0x1b31e # luaY_nvarstack>
	blt	s1,a0,0x24712 # luaK_self+0x8e>
	lbu	a5,68(s0)
	addiw	a5,a5,-1
	sb	a5,68(s0)
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	ld	s4,0(sp)
	addi	sp,sp,48
	ret
	mv	a0,s0
	jal	ra,0x1b31e # luaY_nvarstack>
	lbu	s3,68(s0)
	blt	s4,a0,0x246ae # luaK_self+0x2a>
	addiw	s3,s3,-1
	andi	s3,s3,255
	sb	s3,68(s0)
	j	0x246ae # luaK_self+0x2a>
	ld	a0,16(s0)
	auipc	a1,0x1f
	addi	a1,a1,-1522 # 0x431a0 # udatatypename+0x7d8>
	jal	ra,0x25b74 # luaX_syntaxerror>

luaK_goiftrue:
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	s1,8(sp)
	mv	s0,a1
	sd	ra,24(sp)
	mv	s1,a0
	jal	ra,0x23ddc # luaK_dischargevars>
	lw	a5,0(s0)
	li	a4,7
	bleu	a5,a4,0x2482a # luaK_goiftrue+0x8c>
	li	a4,16
	bne	a5,a4,0x24838 # luaK_goiftrue+0x9a>
	ld	a5,0(s1)
	lw	a4,8(s0)
	ld	a5,64(a5)
	slli	a3,a4,0x2
	add	a5,a5,a3
	blez	a4,0x247e8 # luaK_goiftrue+0x4a>
	lw	a4,-4(a5) # 0x7ffc # exit-0x8124>
	andi	a3,a4,127
	auipc	a4,0x1e
	addi	a4,a4,-1780 # 0x420e0 # luaP_opmodes>
	add	a4,a4,a3
	lbu	a4,0(a4)
	andi	a4,a4,16
	beqz	a4,0x247e8 # luaK_goiftrue+0x4a>
	addi	a5,a5,-4
	lw	a4,0(a5)
	lui	a2,0xffff8
	addi	a2,a2,-1
	srliw	a3,a4,0xf
	andi	a3,a3,1
	and	a4,a4,a2
	bnez	a3,0x247fc # luaK_goiftrue+0x5e>
	lui	a3,0x8
	or	a4,a4,a3
	sw	a4,0(a5)
	lw	a2,8(s0)
	addi	a1,s0,20
	mv	a0,s1
	jal	ra,0x239e0 # luaK_concat>
	lw	a4,32(s1)
	lw	a1,16(s0)
	mv	a0,s1
	sw	a4,36(s1)
	li	a3,255
	mv	a2,a4
	jal	ra,0x235f0 # patchlistaux>
	li	a5,-1
	ld	ra,24(sp)
	sw	a5,16(s0)
	ld	s0,16(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret
	li	a4,3
	bltu	a4,a5,0x24846 # luaK_goiftrue+0xa8>
	li	a4,2
	li	a2,-1
	beq	a5,a4,0x24800 # luaK_goiftrue+0x62>
	li	a2,0
	mv	a1,s0
	mv	a0,s1
	jal	ra,0x241d4 # jumponcond>
	mv	a2,a0
	j	0x24800 # luaK_goiftrue+0x62>
	li	a2,-1
	j	0x24800 # luaK_goiftrue+0x62>

luaK_goiffalse:
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	s1,8(sp)
	mv	s0,a1
	sd	ra,24(sp)
	mv	s1,a0
	jal	ra,0x23ddc # luaK_dischargevars>
	lw	a5,0(s0)
	li	a4,3
	beq	a5,a4,0x248a4 # luaK_goiffalse+0x5a>
	li	a4,16
	beq	a5,a4,0x248a8 # luaK_goiffalse+0x5e>
	li	a4,1
	beq	a5,a4,0x248a4 # luaK_goiffalse+0x5a>
	li	a2,1
	mv	a1,s0
	mv	a0,s1
	jal	ra,0x241d4 # jumponcond>
	mv	a2,a0
	addi	a1,s0,16
	mv	a0,s1
	jal	ra,0x239e0 # luaK_concat>
	lw	a4,32(s1)
	lw	a1,20(s0)
	mv	a0,s1
	sw	a4,36(s1)
	li	a3,255
	mv	a2,a4
	jal	ra,0x235f0 # patchlistaux>
	li	a5,-1
	ld	ra,24(sp)
	sw	a5,20(s0)
	ld	s0,16(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret
	li	a2,-1
	j	0x2487a # luaK_goiffalse+0x30>
	lw	a2,8(s0)
	j	0x2487a # luaK_goiffalse+0x30>

luaK_isKint:
	lw	a4,0(a0)
	li	a5,6
	beq	a4,a5,0x248b8 # luaK_isKint+0xc>
	li	a0,0
	ret
	lw	a5,16(a0)
	lw	a0,20(a0)
	sub	a0,a5,a0
	seqz	a0,a0
	ret

luaK_indexed:
	lw	a5,0(a2)
	addi	sp,sp,-48
	sd	s0,32(sp)
	sd	s1,24(sp)
	sd	s2,16(sp)
	sd	ra,40(sp)
	li	a4,7
	mv	s1,a2
	mv	s2,a0
	mv	s0,a1
	beq	a5,a4,0x2498e # luaK_indexed+0xc8>
	lw	a4,0(a1)
	li	a3,10
	beq	a4,a3,0x2495c # luaK_indexed+0x96>
	lbu	a4,8(s0)
	sb	a4,10(s0)
	li	a4,4
	beq	a5,a4,0x2491e # luaK_indexed+0x58>
	li	a4,6
	bne	a5,a4,0x24902 # luaK_indexed+0x3c>
	lw	a4,16(s1)
	lw	a5,20(s1)
	beq	a4,a5,0x249de # luaK_indexed+0x118>
	mv	a1,s1
	mv	a0,s2
	jal	ra,0x2439a # luaK_exp2anyreg>
	li	a5,12
	sh	a0,8(s0)
	sw	a5,0(s0)
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	addi	sp,sp,48
	ret
	lw	a4,16(s1)
	lw	a5,20(s1)
	bne	a4,a5,0x24902 # luaK_indexed+0x3c>
	lw	a5,8(s1)
	li	a4,255
	blt	a4,a5,0x24902 # luaK_indexed+0x3c>
	ld	a3,0(s2)
	slli	a4,a5,0x4
	li	a2,68
	ld	a3,56(a3)
	add	a4,a4,a3
	lbu	a4,8(a4)
	bne	a4,a2,0x24902 # luaK_indexed+0x3c>
	sh	a5,8(s0)
	li	a5,15
	ld	ra,40(sp)
	sw	a5,0(s0)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	addi	sp,sp,48
	ret
	li	a4,4
	beq	a5,a4,0x249b4 # luaK_indexed+0xee>
	mv	a1,s0
	mv	a0,s2
	jal	ra,0x2439a # luaK_exp2anyreg>
	lw	a4,0(s0)
	li	a5,10
	bne	a4,a5,0x249f2 # luaK_indexed+0x12c>
	lw	a5,8(s0)
	li	a4,13
	ld	ra,40(sp)
	sb	a5,10(s0)
	lw	a5,8(s1)
	sw	a4,0(s0)
	ld	s1,24(sp)
	sh	a5,8(s0)
	ld	s0,32(sp)
	ld	s2,16(sp)
	addi	sp,sp,48
	ret
	ld	a4,8(a2)
	mv	a2,sp
	mv	a1,a2
	lbu	a5,8(a4)
	sd	a4,0(sp)
	ori	a5,a5,64
	sb	a5,8(sp)
	jal	ra,0x23272 # addk>
	li	a5,4
	sw	a5,0(s1)
	lw	a4,0(s0)
	li	a3,10
	sw	a0,8(s1)
	bne	a4,a3,0x248e6 # luaK_indexed+0x20>
	lw	a4,16(s1)
	lw	a5,20(s1)
	bne	a4,a5,0x24962 # luaK_indexed+0x9c>
	lw	a5,8(s1)
	li	a4,255
	blt	a4,a5,0x24962 # luaK_indexed+0x9c>
	ld	a4,0(s2)
	slli	a5,a5,0x4
	li	a3,68
	ld	a4,56(a4)
	add	a5,a5,a4
	lbu	a5,8(a5)
	bne	a5,a3,0x24962 # luaK_indexed+0x9c>
	j	0x24972 # luaK_indexed+0xac>
	ld	a5,8(s1)
	li	a4,255
	bltu	a4,a5,0x24902 # luaK_indexed+0x3c>
	sh	a5,8(s0)
	li	a5,14
	sw	a5,0(s0)
	j	0x24912 # luaK_indexed+0x4c>
	lw	a5,0(s1)
	j	0x248e6 # luaK_indexed+0x20>

luaK_infix:
	addi	sp,sp,-48
	sd	s0,32(sp)
	mv	s0,a1
	mv	a1,a2
	sd	s1,24(sp)
	sd	s2,16(sp)
	sd	ra,40(sp)
	mv	s1,a2
	mv	s2,a0
	jal	ra,0x23ddc # luaK_dischargevars>
	li	a5,20
	bltu	a5,s0,0x24a30 # luaK_infix+0x3a>
	auipc	a4,0x1f
	addi	a4,a4,-1806 # 0x43304 # udatatypename+0x93c>
	slli	s0,s0,0x2
	add	s0,s0,a4
	lw	a5,0(s0)
	add	a5,a5,a4
	jr	a5
	addi	a2,sp,12
	addi	a1,sp,8
	mv	a0,s1
	jal	ra,0x233ae # isSCnumber>
	beqz	a0,0x24aac # luaK_infix+0xb6>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	addi	sp,sp,48
	ret
	lw	a4,16(s1)
	lw	a5,20(s1)
	bne	a4,a5,0x24a4e # luaK_infix+0x58>
	lw	a5,0(s1)
	li	a4,1
	addiw	a5,a5,-5
	bleu	a5,a4,0x24a30 # luaK_infix+0x3a>
	ld	s0,32(sp)
	ld	ra,40(sp)
	mv	a1,s1
	mv	a0,s2
	ld	s1,24(sp)
	ld	s2,16(sp)
	addi	sp,sp,48
	j	0x2439a # luaK_exp2anyreg>
	lw	a4,16(s1)
	lw	a5,20(s1)
	bne	a4,a5,0x24a4e # luaK_infix+0x58>
	lw	a5,0(s1)
	li	a4,1
	addiw	a5,a5,-5
	bleu	a5,a4,0x24a30 # luaK_infix+0x3a>
	mv	a1,s1
	mv	a0,s2
	jal	ra,0x23514 # luaK_exp2K.part.0>
	bnez	a0,0x24a30 # luaK_infix+0x3a>
	j	0x24a4e # luaK_infix+0x58>
	ld	s0,32(sp)
	ld	ra,40(sp)
	mv	a1,s1
	mv	a0,s2
	ld	s1,24(sp)
	ld	s2,16(sp)
	addi	sp,sp,48
	j	0x2484a # luaK_goiffalse>
	ld	s0,32(sp)
	ld	ra,40(sp)
	mv	a1,s1
	mv	a0,s2
	ld	s1,24(sp)
	ld	s2,16(sp)
	addi	sp,sp,48
	j	0x24310 # luaK_exp2nextreg>
	ld	s0,32(sp)
	ld	ra,40(sp)
	mv	a1,s1
	mv	a0,s2
	ld	s1,24(sp)
	ld	s2,16(sp)
	addi	sp,sp,48
	j	0x2479e # luaK_goiftrue>
	mv	a1,s1
	mv	a0,s2
	jal	ra,0x2439a # luaK_exp2anyreg>
	j	0x24a30 # luaK_infix+0x3a>

luaK_fixline:
	ld	a3,0(a0)
	lw	a4,32(a0)
	li	a6,-128
	ld	a5,88(a3)
	addiw	a4,a4,-1
	mv	a2,a1
	add	a5,a5,a4
	lb	a5,0(a5)
	beq	a5,a6,0x24ae6 # luaK_fixline+0x30>
	lw	a1,40(a0)
	lbu	a4,69(a0)
	subw	a5,a1,a5
	addiw	a4,a4,-1
	sw	a5,40(a0)
	sb	a4,69(a0)
	mv	a1,a3
	j	0x23196 # savelineinfo>
	lw	a5,52(a0)
	li	a4,-127
	sb	a4,69(a0)
	addiw	a5,a5,-1
	sw	a5,52(a0)
	mv	a1,a3
	j	0x23196 # savelineinfo>

luaK_prefix:
	addi	sp,sp,-64
	sd	s1,40(sp)
	mv	s1,a1
	mv	a1,a2
	sd	s0,48(sp)
	sd	s3,24(sp)
	sd	s4,16(sp)
	sd	ra,56(sp)
	sd	s2,32(sp)
	sd	s5,8(sp)
	mv	s0,a2
	mv	s3,a0
	mv	s4,a3
	jal	ra,0x23ddc # luaK_dischargevars>
	li	a5,2
	beq	s1,a5,0x24b94 # luaK_prefix+0x9a>
	bltu	a5,s1,0x24b4a # luaK_prefix+0x50>
	auipc	a3,0x1f
	addi	a3,a3,-1834 # 0x433f8 # ef.0>
	mv	a2,s0
	addiw	a1,s1,12
	mv	a0,s3
	jal	ra,0x237e6 # constfolding>
	beqz	a0,0x24b50 # luaK_prefix+0x56>
	ld	ra,56(sp)
	ld	s0,48(sp)
	ld	s1,40(sp)
	ld	s2,32(sp)
	ld	s3,24(sp)
	ld	s4,16(sp)
	ld	s5,8(sp)
	addi	sp,sp,64
	ret
	li	a5,3
	bne	s1,a5,0x24b38 # luaK_prefix+0x3e>
	mv	a1,s0
	mv	a0,s3
	jal	ra,0x2439a # luaK_exp2anyreg>
	lw	a4,0(s0)
	li	a5,8
	addiw	s1,s1,49
	mv	s2,a0
	beq	a4,a5,0x24bda # luaK_prefix+0xe0>
	slliw	s2,s2,0x10
	or	s1,s2,s1
	sext.w	a1,s1
	mv	a0,s3
	jal	ra,0x23a70 # luaK_code>
	li	a5,17
	sw	a0,8(s0)
	sw	a5,0(s0)
	ld	s0,48(sp)
	ld	ra,56(sp)
	ld	s1,40(sp)
	ld	s2,32(sp)
	ld	s5,8(sp)
	mv	a1,s4
	mv	a0,s3
	ld	s4,16(sp)
	ld	s3,24(sp)
	addi	sp,sp,64
	j	0x24ab6 # luaK_fixline>
	lw	a3,0(s0)
	li	a5,17
	bltu	a5,a3,0x24bb4 # luaK_prefix+0xba>
	auipc	a2,0x1e
	addi	a2,a2,1980 # 0x43358 # udatatypename+0x990>
	slli	a4,a3,0x2
	add	a4,a4,a2
	lw	a5,0(a4)
	add	a5,a5,a2
	jr	a5
	li	a5,2
	sw	a5,0(s0)
	lw	a1,16(s0)
	lw	a5,20(s0)
	mv	a0,s3
	sw	a1,20(s0)
	sw	a5,16(s0)
	jal	ra,0x2348c # removevalues>
	lw	a1,16(s0)
	ld	s0,48(sp)
	ld	ra,56(sp)
	ld	s1,40(sp)
	ld	s2,32(sp)
	ld	s4,16(sp)
	ld	s5,8(sp)
	mv	a0,s3
	ld	s3,24(sp)
	addi	sp,sp,64
	j	0x2348c # removevalues>
	lw	s5,8(s0)
	mv	a0,s3
	jal	ra,0x1b31e # luaY_nvarstack>
	blt	s5,a0,0x24b66 # luaK_prefix+0x6c>
	lbu	a5,68(s3)
	addiw	a5,a5,-1
	sb	a5,68(s3)
	j	0x24b66 # luaK_prefix+0x6c>
	li	a5,3
	sw	a5,0(s0)
	j	0x24bb4 # luaK_prefix+0xba>
	li	a5,8
	bne	a3,a5,0x24c76 # luaK_prefix+0x17c>
	lw	s1,8(s0)
	mv	a0,s3
	jal	ra,0x1b31e # luaY_nvarstack>
	blt	s1,a0,0x24c16 # luaK_prefix+0x11c>
	lbu	a5,68(s3)
	addiw	a5,a5,-1
	sb	a5,68(s3)
	lw	a1,8(s0)
	mv	a0,s3
	slliw	a1,a1,0x10
	ori	a1,a1,51
	sext.w	a1,a1
	jal	ra,0x23a70 # luaK_code>
	li	a5,17
	sw	a0,8(s0)
	sw	a5,0(s0)
	j	0x24bb4 # luaK_prefix+0xba>
	ld	a5,0(s3)
	lw	a4,8(s0)
	ld	a5,64(a5)
	slli	a3,a4,0x2
	add	a5,a5,a3
	blez	a4,0x24c5e # luaK_prefix+0x164>
	lw	a4,-4(a5)
	andi	a3,a4,127
	auipc	a4,0x1d
	addi	a4,a4,1174 # 0x420e0 # luaP_opmodes>
	add	a4,a4,a3
	lbu	a4,0(a4)
	andi	a4,a4,16
	beqz	a4,0x24c5e # luaK_prefix+0x164>
	addi	a5,a5,-4
	lw	a4,0(a5)
	lui	a2,0xffff8
	addi	a2,a2,-1
	srliw	a3,a4,0xf
	andi	a3,a3,1
	and	a4,a4,a2
	bnez	a3,0x24c72 # luaK_prefix+0x178>
	lui	a3,0x8
	or	a4,a4,a3
	sw	a4,0(a5)
	j	0x24bb4 # luaK_prefix+0xba>
	ld	a4,0(s3)
	lbu	a5,68(s3)
	lbu	a3,12(a4)
	addi	a2,a5,1
	addiw	a5,a5,1
	blt	a3,a2,0x24cac # luaK_prefix+0x1b2>
	andi	a5,a5,255
	andi	a2,a2,255
	sb	a5,68(s3)
	addiw	a2,a2,-1
	mv	a1,s0
	mv	a0,s3
	jal	ra,0x23f9c # discharge2reg>
	lw	a4,0(s0)
	li	a5,8
	bne	a4,a5,0x24c16 # luaK_prefix+0x11c>
	j	0x24c00 # luaK_prefix+0x106>
	li	a3,254
	blt	a3,a2,0x24cbe # luaK_prefix+0x1c4>
	andi	a5,a5,255
	sb	a5,12(a4)
	j	0x24c90 # luaK_prefix+0x196>
	ld	a0,16(s3)
	auipc	a1,0x1e
	addi	a1,a1,1246 # 0x431a0 # udatatypename+0x7d8>
	jal	ra,0x25b74 # luaX_syntaxerror>

finishbinexpval:
	addi	sp,sp,-96
	sd	ra,88(sp)
	sd	s0,80(sp)
	sd	s1,72(sp)
	sd	s2,64(sp)
	sd	s3,56(sp)
	sd	s4,48(sp)
	sd	s5,40(sp)
	sd	s6,32(sp)
	sd	s7,24(sp)
	sd	s8,16(sp)
	sd	s9,8(sp)
	mv	s6,a6
	mv	s2,a0
	mv	s5,a1
	mv	s4,a5
	mv	s0,a7
	lw	s7,96(sp)
	mv	s1,a4
	mv	s9,a2
	mv	s3,a3
	jal	ra,0x2439a # luaK_exp2anyreg>
	slliw	a3,s1,0x18
	or	a3,s3,a3
	slliw	s3,a0,0x10
	or	a3,a3,s3
	mv	a4,a0
	sext.w	a1,a3
	mv	a0,s2
	sext.w	s3,a4
	jal	ra,0x23a70 # luaK_code>
	mv	a2,s9
	mv	s8,a0
	mv	a1,s5
	mv	a0,s2
	jal	ra,0x23754 # freeexps>
	li	a5,17
	mv	a1,s6
	mv	a0,s2
	sw	s8,8(s5) # 0x8008 # exit-0x8118>
	sw	a5,0(s5)
	jal	ra,0x24ab6 # luaK_fixline>
	slliw	a5,s4,0xf
	or	s0,s0,a5
	slliw	a1,s7,0x18
	sext.w	s1,s1
	or	a1,a1,s0
	slliw	s1,s1,0x10
	slliw	a4,s3,0x7
	or	a1,a1,s1
	or	a1,a1,a4
	sext.w	a1,a1
	mv	a0,s2
	jal	ra,0x23a70 # luaK_code>
	ld	s0,80(sp)
	ld	ra,88(sp)
	ld	s1,72(sp)
	ld	s3,56(sp)
	ld	s4,48(sp)
	ld	s5,40(sp)
	ld	s7,24(sp)
	ld	s8,16(sp)
	ld	s9,8(sp)
	mv	a1,s6
	mv	a0,s2
	ld	s6,32(sp)
	ld	s2,64(sp)
	addi	sp,sp,96
	j	0x24ab6 # luaK_fixline>

finishbinexpneg:
	lw	t1,0(a2) # 0xffffffffffff8000 # __BSS_END__+0xfffffffffffa9c78>
	li	a6,6
	beq	t1,a6,0x24d8a # finishbinexpneg+0x10>
	li	a6,0
	mv	a0,a6
	ret
	lw	t3,20(a2)
	lw	t1,16(a2)
	li	a6,0
	bne	t3,t1,0x24d86 # finishbinexpneg+0xc>
	ld	t1,8(a2)
	li	a7,255
	addi	t3,t1,127 # 0xffffffffff00007f # __BSS_END__+0xfffffffffefb1cf7>
	bltu	a7,t3,0x24d86 # finishbinexpneg+0xc>
	li	t3,127
	sub	t3,t3,t1
	bltu	a7,t3,0x24d86 # finishbinexpneg+0xc>
	addi	sp,sp,-48
	mv	a6,a4
	li	a4,127
	sd	a5,0(sp)
	subw	a4,a4,t1
	li	a5,0
	li	a7,47
	sd	s0,32(sp)
	sd	s1,24(sp)
	sd	ra,40(sp)
	mv	s0,a0
	sext.w	s1,t1
	jal	ra,0x24cce # finishbinexpval>
	ld	a4,0(s0)
	lw	a5,32(s0)
	lui	a3,0xff010
	ld	a4,64(a4)
	slli	a5,a5,0x2
	addi	a5,a5,-4
	add	a4,a4,a5
	lw	a5,0(a4)
	addiw	t1,s1,127
	addi	a3,a3,-1
	ld	ra,40(sp)
	ld	s0,32(sp)
	and	a5,a5,a3
	slliw	t1,t1,0x10
	or	t1,a5,t1
	sw	t1,0(a4)
	li	a6,1
	ld	s1,24(sp)
	mv	a0,a6
	addi	sp,sp,48
	ret

codearith:
	addi	sp,sp,-112
	lw	a6,16(a3) # 0xffffffffff010010 # __BSS_END__+0xfffffffffefc1c88>
	sd	s0,96(sp)
	mv	s0,a3
	lw	a3,20(a3)
	sd	s1,88(sp)
	sd	s2,80(sp)
	sd	s3,72(sp)
	sd	s4,64(sp)
	sd	s5,56(sp)
	sd	s6,48(sp)
	sd	ra,104(sp)
	mv	s1,a1
	mv	s5,a0
	mv	s2,a2
	mv	s4,a4
	mv	s3,a5
	addiw	s6,a1,6
	bne	a6,a3,0x24e66 # codearith+0x5a>
	lw	a5,0(s0)
	li	a4,1
	addiw	a5,a5,-5
	bltu	a4,a5,0x24e66 # codearith+0x5a>
	mv	a1,s0
	jal	ra,0x23514 # luaK_exp2K.part.0>
	beqz	a0,0x24e66 # codearith+0x5a>
	lw	a4,8(s0)
	li	a7,48
	sd	s6,0(sp)
	mv	a6,s3
	mv	a5,s4
	addiw	a3,s1,22
	mv	a2,s0
	mv	a1,s2
	mv	a0,s5
	jal	ra,0x24cce # finishbinexpval>
	j	0x24e8e # codearith+0x82>
	addiw	s1,s1,34
	bnez	s4,0x24ea2 # codearith+0x96>
	mv	a1,s0
	mv	a0,s5
	jal	ra,0x2439a # luaK_exp2anyreg>
	mv	a4,a0
	sd	s6,0(sp)
	li	a7,46
	mv	a6,s3
	li	a5,0
	mv	a3,s1
	mv	a2,s0
	mv	a1,s2
	mv	a0,s5
	jal	ra,0x24cce # finishbinexpval>
	ld	ra,104(sp)
	ld	s0,96(sp)
	ld	s1,88(sp)
	ld	s2,80(sp)
	ld	s3,72(sp)
	ld	s4,64(sp)
	ld	s5,56(sp)
	ld	s6,48(sp)
	addi	sp,sp,112
	ret
	ld	a5,0(s0)
	ld	a3,0(s2)
	ld	a4,8(s2)
	sd	a5,0(s2)
	ld	a2,8(s0)
	ld	a5,16(s2)
	sd	a2,8(s2)
	ld	a2,16(s0)
	sd	a2,16(s2)
	sd	a3,0(s0)
	sd	a4,8(s0)
	sd	a5,16(s0)
	j	0x24e6e # codearith+0x62>

luaK_posfix:
	addi	sp,sp,-112
	sd	s1,88(sp)
	mv	s1,a1
	mv	a1,a3
	sd	s0,96(sp)
	sd	s2,80(sp)
	sd	s3,72(sp)
	sd	s4,64(sp)
	mv	s0,a3
	sd	ra,104(sp)
	sd	s5,56(sp)
	sd	s6,48(sp)
	mv	s3,a0
	mv	s2,a2
	mv	s4,a4
	jal	ra,0x23ddc # luaK_dischargevars>
	li	a3,11
	bleu	s1,a3,0x24f40 # luaK_posfix+0x78>
	li	a5,20
	bltu	a5,s1,0x24f2c # luaK_posfix+0x64>
	auipc	t1,0x1e
	addi	t1,t1,1194 # 0x433a0 # udatatypename+0x9d8>
	slli	a7,s1,0x2
	add	a7,a7,t1
	lw	a3,0(a7)
	add	a3,a3,t1
	jr	a3
	lw	a2,16(s2)
	addi	a1,s0,16
	mv	a0,s3
	jal	ra,0x239e0 # luaK_concat>
	ld	a5,0(s0)
	sd	a5,0(s2)
	ld	a5,8(s0)
	sd	a5,8(s2)
	ld	a5,16(s0)
	sd	a5,16(s2)
	ld	ra,104(sp)
	ld	s0,96(sp)
	ld	s1,88(sp)
	ld	s2,80(sp)
	ld	s3,72(sp)
	ld	s4,64(sp)
	ld	s5,56(sp)
	ld	s6,48(sp)
	addi	sp,sp,112
	ret
	mv	a3,s0
	mv	a2,s2
	mv	a1,s1
	mv	a0,s3
	jal	ra,0x237e6 # constfolding>
	beqz	a0,0x24ef0 # luaK_posfix+0x28>
	j	0x24f2c # luaK_posfix+0x64>
	li	a5,7
	mv	a4,s4
	li	a3,21
	mv	a2,s0
	mv	a1,s2
	mv	a0,s3
	jal	ra,0x24d7a # finishbinexpneg>
	bnez	a0,0x24f2c # luaK_posfix+0x64>
	mv	a5,s4
	li	a4,0
	mv	a3,s0
	ld	s0,96(sp)
	ld	ra,104(sp)
	ld	s4,64(sp)
	ld	s5,56(sp)
	ld	s6,48(sp)
	mv	a2,s2
	mv	a1,s1
	ld	s2,80(sp)
	ld	s1,88(sp)
	mv	a0,s3
	ld	s3,72(sp)
	addi	sp,sp,112
	j	0x24e0c # codearith>
	lw	a4,0(s2)
	li	a5,6
	beq	a4,a5,0x25344 # luaK_posfix+0x47c>
	lw	a4,0(s0)
	li	a5,6
	bne	a4,a5,0x24fa4 # luaK_posfix+0xdc>
	lw	a4,16(s0)
	lw	a5,20(s0)
	beq	a4,a5,0x2535a # luaK_posfix+0x492>
	mv	a1,s0
	mv	a0,s3
	jal	ra,0x2439a # luaK_exp2anyreg>
	mv	a1,s0
	mv	a0,s3
	jal	ra,0x2439a # luaK_exp2anyreg>
	addiw	a5,s1,6
	mv	a4,a0
	sd	a5,0(sp)
	li	a7,46
	mv	a6,s4
	li	a5,0
	addiw	a3,s1,34
	mv	a2,s0
	mv	a1,s2
	mv	a0,s3
	jal	ra,0x24cce # finishbinexpval>
	j	0x24f2c # luaK_posfix+0x64>
	lw	a3,16(s2)
	lw	a5,20(s2)
	li	a4,0
	bne	a3,a5,0x25012 # luaK_posfix+0x14a>
	lw	a5,0(s2)
	li	a3,1
	addiw	a5,a5,-5
	bltu	a3,a5,0x25012 # luaK_posfix+0x14a>
	ld	a5,0(s0)
	ld	a3,0(s2)
	ld	a4,8(s2)
	sd	a5,0(s2)
	ld	a2,8(s0)
	ld	a5,16(s2)
	sd	a4,32(sp)
	sd	a2,8(s2)
	ld	a2,16(s0)
	sd	a3,24(sp)
	sd	a5,40(sp)
	sd	a2,16(s2)
	sd	a4,8(s0)
	sd	a3,0(s0)
	sd	a5,16(s0)
	li	a4,1
	bnez	s1,0x2521c # luaK_posfix+0x354>
	lw	a5,0(s0)
	li	a3,6
	bne	a5,a3,0x2521c # luaK_posfix+0x354>
	lw	a2,16(s0)
	lw	a3,20(s0)
	bne	a2,a3,0x2521c # luaK_posfix+0x354>
	ld	a3,8(s0)
	li	a2,255
	addi	a1,a3,127
	bltu	a2,a1,0x2521c # luaK_posfix+0x354>
	sd	a5,0(sp)
	li	a7,47
	mv	a5,a4
	mv	a6,s4
	addiw	a4,a3,127
	mv	a2,s0
	li	a3,21
	mv	a1,s2
	mv	a0,s3
	jal	ra,0x24cce # finishbinexpval>
	j	0x24f2c # luaK_posfix+0x64>
	mv	a3,s0
	mv	a2,s2
	addiw	a1,s1,44
	mv	a0,s3
	ld	s0,96(sp)
	ld	ra,104(sp)
	ld	s1,88(sp)
	ld	s2,80(sp)
	ld	s3,72(sp)
	ld	s4,64(sp)
	ld	s5,56(sp)
	ld	s6,48(sp)
	addi	sp,sp,112
	j	0x243f4 # codeorder>
	lw	a4,0(s2)
	sw	zero,20(sp)
	li	a5,8
	bne	a4,a5,0x2525a # luaK_posfix+0x392>
	mv	a1,s2
	mv	a0,s3
	jal	ra,0x2439a # luaK_exp2anyreg>
	mv	s4,a0
	addi	a2,sp,20
	addi	a1,sp,24
	mv	a0,s0
	jal	ra,0x233ae # isSCnumber>
	beqz	a0,0x25324 # luaK_posfix+0x45c>
	lw	s5,24(sp)
	li	s6,61
	mv	a2,s0
	mv	a1,s2
	mv	a0,s3
	jal	ra,0x23754 # freeexps>
	lw	a1,20(sp)
	addi	s1,s1,-13
	seqz	s1,s1
	slliw	a1,a1,0x18
	slliw	s1,s1,0xf
	or	a1,a1,s1
	slliw	s4,s4,0x7
	or	a1,a1,s4
	or	a1,a1,s6
	slliw	s5,s5,0x10
	or	a1,a1,s5
	sext.w	a1,a1
	mv	a0,s3
	jal	ra,0x23a70 # luaK_code>
	lui	a1,0x80000
	xori	a1,a1,-200
	mv	a0,s3
	jal	ra,0x23a70 # luaK_code>
	li	a5,16
	sw	a0,8(s2)
	sw	a5,0(s2)
	j	0x24f2c # luaK_posfix+0x64>
	ld	a5,0(s0)
	ld	a6,0(s2)
	ld	a4,8(s2)
	sd	a5,0(s2)
	ld	a2,8(s0)
	ld	a5,16(s2)
	mv	a3,s0
	sd	a2,8(s2)
	ld	a0,16(s0)
	mv	a2,s2
	addiw	a1,s1,41
	sd	a0,16(s2)
	sd	a6,0(s0)
	sd	a4,8(s0)
	sd	a5,16(s0)
	mv	a0,s3
	sd	a6,24(sp)
	sd	a4,32(sp)
	sd	a5,40(sp)
	j	0x2505a # luaK_posfix+0x192>
	lw	a2,20(s2)
	addi	a1,s0,20
	j	0x24f14 # luaK_posfix+0x4c>
	lw	a4,0(s0)
	li	a5,6
	beq	a4,a5,0x252ee # luaK_posfix+0x426>
	mv	a1,s0
	mv	a0,s3
	jal	ra,0x2439a # luaK_exp2anyreg>
	li	a5,17
	mv	a4,a0
	sd	a5,0(sp)
	li	a7,46
	mv	a6,s4
	li	a5,0
	li	a3,45
	mv	a2,s0
	mv	a1,s2
	mv	a0,s3
	jal	ra,0x24cce # finishbinexpval>
	j	0x24f2c # luaK_posfix+0x64>
	mv	a1,s0
	mv	a0,s3
	jal	ra,0x24310 # luaK_exp2nextreg>
	lw	a5,32(s3)
	lw	a4,36(s3)
	ble	a5,a4,0x25220 # luaK_posfix+0x358>
	ld	a4,0(s3)
	slli	a5,a5,0x2
	addi	a5,a5,-4
	ld	s5,64(a4)
	li	a3,53
	add	s5,s5,a5
	lw	a4,0(s5)
	andi	a5,a4,127
	bne	a5,a3,0x25220 # luaK_posfix+0x358>
	lw	a3,0(s0)
	srliw	s1,a4,0x10
	li	a5,8
	andi	s1,s1,255
	beq	a3,a5,0x2539a # luaK_posfix+0x4d2>
	lw	a5,8(s2)
	lui	a3,0x8
	addi	a3,a3,-128 # 0x7f80 # exit-0x81a0>
	slliw	a5,a5,0x7
	and	a5,a5,a3
	lui	a3,0xffff8
	addi	a3,a3,127 # 0xffffffffffff807f # __BSS_END__+0xfffffffffffa9cf7>
	and	a3,a3,a4
	or	a5,a5,a3
	lui	a3,0xff010
	addi	a3,a3,-1
	addiw	a4,s1,1
	and	a5,a5,a3
	slliw	a4,a4,0x10
	lui	a3,0xff0
	and	a4,a4,a3
	or	a5,a5,a4
	sw	a5,0(s5)
	j	0x24f2c # luaK_posfix+0x64>
	lw	a4,0(s2)
	li	a5,6
	beq	a4,a5,0x25286 # luaK_posfix+0x3be>
	li	a5,16
	mv	a4,s4
	li	a3,32
	mv	a2,s0
	mv	a1,s2
	mv	a0,s3
	jal	ra,0x24d7a # finishbinexpneg>
	bnez	a0,0x24f2c # luaK_posfix+0x64>
	mv	a1,s0
	mv	a0,s3
	jal	ra,0x2439a # luaK_exp2anyreg>
	li	a5,16
	mv	a4,a0
	sd	a5,0(sp)
	li	a7,46
	mv	a6,s4
	li	a5,0
	li	a3,44
	mv	a2,s0
	mv	a1,s2
	mv	a0,s3
	jal	ra,0x24cce # finishbinexpval>
	j	0x24f2c # luaK_posfix+0x64>
	mv	a5,s4
	j	0x24f66 # luaK_posfix+0x9e>
	lw	a1,8(s2)
	lui	a5,0x20
	addi	a5,a5,53 # 0x20035 # luaV_execute+0x10cd>
	slliw	a1,a1,0x7
	or	a1,a1,a5
	sext.w	a1,a1
	mv	a0,s3
	jal	ra,0x23a70 # luaK_code>
	lw	a4,0(s0)
	li	a5,8
	beq	a4,a5,0x253b6 # luaK_posfix+0x4ee>
	ld	s0,96(sp)
	ld	ra,104(sp)
	ld	s1,88(sp)
	ld	s2,80(sp)
	ld	s5,56(sp)
	ld	s6,48(sp)
	mv	a1,s4
	mv	a0,s3
	ld	s4,64(sp)
	ld	s3,72(sp)
	addi	sp,sp,112
	j	0x24ab6 # luaK_fixline>
	ld	a5,0(s0)
	ld	a3,0(s2)
	ld	a4,8(s2)
	sd	a5,0(s2)
	ld	a2,8(s0)
	ld	a5,16(s2)
	sd	a3,24(sp)
	sd	a2,8(s2)
	ld	a2,16(s0)
	sd	a4,32(sp)
	sd	a5,40(sp)
	sd	a2,16(s2)
	sd	a3,0(s0)
	sd	a4,8(s0)
	sd	a5,16(s0)
	j	0x2507c # luaK_posfix+0x1b4>
	lw	a4,16(s2)
	lw	a5,20(s2)
	bne	a4,a5,0x251e0 # luaK_posfix+0x318>
	ld	t1,8(s2)
	li	a5,255
	addi	a4,t1,127
	bltu	a5,a4,0x251e0 # luaK_posfix+0x318>
	ld	a5,0(s0)
	ld	t4,0(s2)
	li	a4,16
	sd	a5,0(s2)
	ld	a5,8(s0)
	ld	t3,16(s2)
	sd	a4,0(sp)
	sd	a5,8(s2)
	ld	a5,16(s0)
	li	a7,47
	mv	a6,s4
	sd	a5,16(s2)
	sd	t4,0(s0)
	sd	t1,8(s0)
	sd	t3,16(s0)
	li	a5,1
	addiw	a4,t1,127
	li	a3,33
	mv	a2,s0
	mv	a1,s2
	mv	a0,s3
	sd	t4,24(sp)
	sd	t1,32(sp)
	sd	t3,40(sp)
	jal	ra,0x24cce # finishbinexpval>
	j	0x24f2c # luaK_posfix+0x64>
	lw	a4,16(s0)
	lw	a5,20(s0)
	bne	a4,a5,0x25136 # luaK_posfix+0x26e>
	ld	a4,8(s0)
	li	a5,255
	addi	a3,a4,127
	bltu	a5,a3,0x25136 # luaK_posfix+0x26e>
	li	a5,17
	sd	a5,0(sp)
	li	a7,47
	mv	a6,s4
	li	a5,0
	addiw	a4,a4,127
	li	a3,32
	mv	a2,s0
	mv	a1,s2
	mv	a0,s3
	jal	ra,0x24cce # finishbinexpval>
	j	0x24f2c # luaK_posfix+0x64>
	lw	a4,16(s0)
	lw	a5,20(s0)
	beq	a4,a5,0x25386 # luaK_posfix+0x4be>
	mv	a1,s0
	mv	a0,s3
	jal	ra,0x2439a # luaK_exp2anyreg>
	mv	a1,s0
	mv	a0,s3
	jal	ra,0x2439a # luaK_exp2anyreg>
	mv	s5,a0
	li	s6,57
	j	0x2509a # luaK_posfix+0x1d2>
	lw	a4,16(s2)
	lw	a5,20(s2)
	beq	a4,a5,0x253ce # luaK_posfix+0x506>
	mv	a1,s2
	mv	a0,s3
	jal	ra,0x2439a # luaK_exp2anyreg>
	j	0x24f8c # luaK_posfix+0xc4>
	mv	a1,s0
	mv	a0,s3
	jal	ra,0x23514 # luaK_exp2K.part.0>
	beqz	a0,0x24f9c # luaK_posfix+0xd4>
	li	a5,0
	lw	a4,8(s0)
	addiw	a3,s1,6
	sd	a3,0(sp)
	li	a7,48
	mv	a6,s4
	addiw	a3,s1,22
	mv	a2,s0
	mv	a1,s2
	mv	a0,s3
	jal	ra,0x24cce # finishbinexpval>
	j	0x24f2c # luaK_posfix+0x64>
	mv	a1,s0
	mv	a0,s3
	jal	ra,0x23514 # luaK_exp2K.part.0>
	beqz	a0,0x2532c # luaK_posfix+0x464>
	lw	s5,8(s0)
	li	s6,60
	j	0x2509a # luaK_posfix+0x1d2>
	lw	s0,8(s0)
	mv	a0,s3
	jal	ra,0x1b31e # luaY_nvarstack>
	blt	s0,a0,0x253b0 # luaK_posfix+0x4e8>
	lbu	a5,68(s3)
	addiw	a5,a5,-1
	sb	a5,68(s3)
	lw	a4,0(s5)
	j	0x2519e # luaK_posfix+0x2d6>
	lw	s0,8(s0)
	mv	a0,s3
	jal	ra,0x1b31e # luaY_nvarstack>
	blt	s0,a0,0x25242 # luaK_posfix+0x37a>
	lbu	a5,68(s3)
	addiw	a5,a5,-1
	sb	a5,68(s3)
	j	0x25242 # luaK_posfix+0x37a>
	mv	a1,s2
	mv	a0,s3
	jal	ra,0x23514 # luaK_exp2K.part.0>
	beqz	a0,0x25350 # luaK_posfix+0x488>
	ld	a5,0(s0)
	ld	a3,0(s2)
	ld	a4,8(s2)
	sd	a5,0(s2)
	ld	a2,8(s0)
	ld	a5,16(s2)
	sd	a3,24(sp)
	sd	a2,8(s2)
	ld	a2,16(s0)
	sd	a5,40(sp)
	sd	a4,32(sp)
	sd	a2,16(s2)
	sd	a5,16(s0)
	sd	a3,0(s0)
	sd	a4,8(s0)
	li	a5,1
	j	0x25368 # luaK_posfix+0x4a0>

luaK_settablesize:
	ld	a5,0(a0)
	addi	sp,sp,-32
	sd	s2,0(sp)
	ld	s2,64(a5)
	slli	a1,a1,0x2
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	ra,24(sp)
	add	s2,s2,a1
	mv	s1,a2
	mv	s0,a3
	li	a1,0
	bnez	a4,0x2546a # luaK_settablesize+0x64>
	sraiw	a5,s0,0x1f
	slliw	a2,s1,0x7
	srliw	a5,a5,0x18
	li	a3,255
	addw	a5,a5,s0
	slliw	a4,s0,0x18
	or	a1,a1,a2
	slt	s0,a3,s0
	slliw	s0,s0,0xf
	or	a1,a1,a4
	sraiw	a5,a5,0x8
	ld	ra,24(sp)
	or	a1,a1,s0
	slliw	a5,a5,0x7
	ld	s0,16(sp)
	ori	a1,a1,19
	ori	a5,a5,82
	sw	a1,0(s2)
	sw	a5,4(s2)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret
	mv	a0,a4
	jal	ra,0x17f32 # luaO_ceillog2>
	addiw	a0,a0,1
	slliw	a1,a0,0x10
	j	0x25422 # luaK_settablesize+0x1c>

luaK_setlist:
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	s2,0(sp)
	sd	ra,24(sp)
	li	a5,-1
	mv	s1,a1
	mv	s2,a0
	mv	s0,a2
	li	a1,0
	beq	a3,a5,0x25494 # luaK_setlist+0x1c>
	slliw	a1,a3,0x10
	slliw	a4,s0,0x18
	slliw	a5,s1,0x7
	or	a5,a5,a4
	or	a5,a5,a1
	li	a4,255
	sext.w	a5,a5
	blt	a4,s0,0x254c6 # luaK_setlist+0x4e>
	mv	a0,s2
	addiw	s1,s1,1
	ori	a1,a5,78
	jal	ra,0x23a70 # luaK_code>
	sb	s1,68(s2)
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret
	lui	a1,0x8
	addi	a1,a1,78 # 0x804e # exit-0x80d2>
	sraiw	s0,s0,0x8
	or	a1,a1,a5
	mv	a0,s2
	slliw	s0,s0,0x7
	jal	ra,0x23a70 # luaK_code>
	ori	s0,s0,82
	sext.w	a1,s0
	mv	a0,s2
	addiw	s1,s1,1
	jal	ra,0x23a70 # luaK_code>
	sb	s1,68(s2)
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret

luaK_finish:
	addi	sp,sp,-48
	sd	s4,0(sp)
	lw	s4,32(a0)
	sd	ra,40(sp)
	sd	s0,32(sp)
	sd	s1,24(sp)
	sd	s2,16(sp)
	sd	s3,8(sp)
	sext.w	a5,s4
	ld	t6,0(a0)
	blez	a5,0x255a6 # luaK_finish+0xaa>
	ld	t1,64(t6) # 0x2000040 # __BSS_END__+0x1fb1cb8>
	lui	t0,0x1000
	addi	t0,t0,-1
	lui	a7,0xff000
	mv	a1,t1
	li	a6,0
	li	t5,70
	lui	s1,0x8
	li	t4,1
	li	t3,68
	li	a2,56
	addiw	a7,a7,2
	mv	s0,t0
	lui	t2,0x2000
	lw	a5,0(a1)
	addiw	s3,a6,1
	mv	a4,a6
	andi	s2,a5,127
	sext.w	a6,s3
	bltu	t5,s2,0x255b6 # luaK_finish+0xba>
	bltu	t3,s2,0x255d4 # luaK_finish+0xd8>
	li	a3,100
	bne	s2,a2,0x2559c # luaK_finish+0xa0>
	srliw	a5,a5,0x7
	addw	a5,a5,a7
	addiw	a3,a3,-1
	addw	a4,a4,a5
	beqz	a3,0x25582 # luaK_finish+0x86>
	slli	a5,a4,0x2
	add	a5,a5,t1
	lw	a5,0(a5)
	andi	s2,a5,127
	beq	s2,a2,0x25564 # luaK_finish+0x68>
	subw	a4,a4,s3
	addw	a5,a4,s0
	bleu	t2,a5,0x25600 # luaK_finish+0x104>
	slliw	a4,a5,0x7
	ori	a4,a4,56
	sw	a4,0(a1)
	lw	s4,32(a0)
	sext.w	a5,s4
	addi	a1,a1,4
	blt	a6,a5,0x25544 # luaK_finish+0x48>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	ld	s4,0(sp)
	addi	sp,sp,48
	ret
	addiw	s2,s2,-71
	bltu	t4,s2,0x2559c # luaK_finish+0xa0>
	lbu	a4,70(a0)
	bnez	a4,0x255ca # luaK_finish+0xce>
	lbu	a4,11(t6)
	beqz	a4,0x2559c # luaK_finish+0xa0>
	andi	a5,a5,-128
	ori	a5,a5,70
	sw	a5,0(a1)
	lbu	a5,70(a0)
	beqz	a5,0x255e0 # luaK_finish+0xe4>
	lw	a5,0(a1)
	or	a5,a5,s1
	sw	a5,0(a1)
	lbu	a5,11(t6)
	beqz	a5,0x25598 # luaK_finish+0x9c>
	lbu	a4,10(t6)
	lw	a5,0(a1)
	addiw	a4,a4,1
	slliw	a4,a4,0x18
	and	a5,a5,t0
	or	a5,a5,a4
	sw	a5,0(a1)
	lw	s4,32(a0)
	j	0x2559c # luaK_finish+0xa0>
	ld	a0,16(a0)
	auipc	a1,0x1d
	addi	a1,a1,-722 # 0x42330 # luaP_opmodes+0x250>
	jal	ra,0x25b74 # luaX_syntaxerror>

luaX_init:
	addi	sp,sp,-48
	li	a2,4
	auipc	a1,0x1c
	addi	a1,a1,-442 # 0x41458 # lua_ident+0xc0>
	sd	ra,40(sp)
	sd	s1,24(sp)
	sd	s2,16(sp)
	sd	s3,8(sp)
	sd	s4,0(sp)
	mv	s3,a0
	sd	s0,32(sp)
	jal	ra,0x1bfce # luaS_newlstr>
	mv	a1,a0
	mv	a0,s3
	jal	ra,0x17148 # luaC_fix>
	auipc	s2,0x27
	addi	s2,s2,-1436 # 0x4c098 # luaX_tokens+0x8>
	li	s1,1
	auipc	a1,0x1e
	addi	a1,a1,-294 # 0x43518 # luai_ctype_+0x108>
	li	s4,23
	j	0x25650 # luaX_init+0x42>
	ld	a1,0(s2)
	addi	s2,s2,8
	mv	a0,s3
	jal	ra,0x1c032 # luaS_new>
	mv	s0,a0
	mv	a1,a0
	mv	a0,s3
	jal	ra,0x17148 # luaC_fix>
	sb	s1,10(s0)
	addi	s1,s1,1
	bne	s1,s4,0x2564a # luaX_init+0x3c>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	ld	s4,0(sp)
	addi	sp,sp,48
	ret

luaX_token2str:
	li	a5,255
	mv	a2,a1
	blt	a5,a1,0x256a8 # luaX_token2str+0x2e>
	addiw	a4,a1,1
	auipc	a5,0x1e
	addi	a5,a5,-632 # 0x43410 # luai_ctype_>
	add	a5,a5,a4
	lbu	a5,0(a5)
	ld	a0,56(a0)
	andi	a5,a5,4
	beqz	a5,0x256c8 # luaX_token2str+0x4e>
	auipc	a1,0x1e
	addi	a1,a1,-380 # 0x43520 # luai_ctype_+0x110>
	j	0x1865a # luaO_pushfstring>
	addiw	a5,a1,-256
	slli	a4,a5,0x3
	auipc	a5,0x27
	addi	a5,a5,-1568 # 0x4c090 # luaX_tokens>
	add	a5,a5,a4
	li	a4,287
	ld	a5,0(a5)
	ble	a1,a4,0x256d4 # luaX_token2str+0x5a>
	mv	a0,a5
	ret
	auipc	a1,0x1e
	addi	a1,a1,-416 # 0x43528 # luai_ctype_+0x118>
	j	0x1865a # luaO_pushfstring>
	ld	a0,56(a0)
	mv	a2,a5
	auipc	a1,0x1e
	addi	a1,a1,-424 # 0x43530 # luai_ctype_+0x120>
	j	0x1865a # luaO_pushfstring>

lexerror:
	addi	sp,sp,-48
	sd	s0,32(sp)
	sd	s1,24(sp)
	lw	a3,4(a0)
	mv	s1,a2
	mv	s0,a0
	ld	a2,96(a0)
	ld	a0,56(a0)
	sd	ra,40(sp)
	sd	s2,16(sp)
	sd	s3,8(sp)
	jal	ra,0x13c84 # luaG_addinfo>
	bnez	s1,0x25708 # lexerror+0x24>
	ld	a0,56(s0)
	li	a1,3
	jal	ra,0x14162 # luaD_throw>
	addiw	a5,s1,-289
	li	a4,3
	ld	s3,56(s0)
	mv	s2,a0
	bltu	a4,a5,0x25746 # lexerror+0x62>
	li	a1,0
	mv	a0,s0
	jal	ra,0x25752 # save>
	ld	a5,72(s0)
	ld	a0,56(s0)
	auipc	a1,0x1e
	addi	a1,a1,-500 # 0x43530 # luai_ctype_+0x120>
	ld	a2,0(a5)
	jal	ra,0x1865a # luaO_pushfstring>
	mv	a3,a0
	mv	a2,s2
	auipc	a1,0x1e
	addi	a1,a1,-510 # 0x43538 # luai_ctype_+0x128>
	mv	a0,s3
	jal	ra,0x1865a # luaO_pushfstring>
	j	0x25700 # lexerror+0x1c>
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x2567a # luaX_token2str>
	mv	a3,a0
	j	0x25734 # lexerror+0x50>

save:
	addi	sp,sp,-32
	sd	s0,16(sp)
	ld	s0,72(a0)
	sd	s1,8(sp)
	sd	ra,24(sp)
	ld	a4,8(s0)
	ld	a2,16(s0)
	sd	s2,0(sp)
	addi	a3,a4,1
	mv	s1,a1
	bltu	a2,a3,0x25782 # save+0x30>
	ld	a0,0(s0)
	sd	a3,8(s0)
	add	a0,a0,a4
	sb	s1,0(a0)
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret
	li	a4,-5
	srli	a4,a4,0x2
	bltu	a4,a2,0x257a6 # save+0x54>
	ld	a1,0(s0)
	ld	a0,56(a0)
	slli	s2,a2,0x1
	mv	a3,s2
	jal	ra,0x17b9a # luaM_saferealloc_>
	ld	a4,8(s0)
	sd	a0,0(s0)
	sd	s2,16(s0)
	addi	a3,a4,1
	j	0x2576e # save+0x1c>
	li	a2,0
	auipc	a1,0x1e
	addi	a1,a1,-608 # 0x43548 # luai_ctype_+0x138>
	jal	ra,0x256e4 # lexerror>

skip_sep:
	addi	sp,sp,-32
	sd	s2,0(sp)
	lw	s2,0(a0)
	sd	s0,16(sp)
	sd	ra,24(sp)
	mv	a1,s2
	mv	s0,a0
	sd	s1,8(sp)
	jal	ra,0x25752 # save>
	ld	a0,64(s0)
	ld	a5,0(a0)
	addi	a4,a5,-1
	sd	a4,0(a0)
	beqz	a5,0x25848 # skip_sep+0x94>
	ld	a5,8(a0)
	addi	a4,a5,1
	sd	a4,8(a0)
	lbu	a5,0(a5)
	sw	a5,0(s0)
	li	a4,61
	li	s1,0
	beq	a5,a4,0x25808 # skip_sep+0x54>
	j	0x25830 # skip_sep+0x7c>
	ld	a5,8(a0)
	addi	s1,s1,1
	addi	a4,a5,1
	sd	a4,8(a0)
	lbu	a5,0(a5)
	li	a4,61
	sw	a5,0(s0)
	bne	a5,a4,0x25830 # skip_sep+0x7c>
	mv	a0,s0
	li	a1,61
	jal	ra,0x25752 # save>
	ld	a0,64(s0)
	ld	a5,0(a0)
	addi	a4,a5,-1
	sd	a4,0(a0)
	bnez	a5,0x257f0 # skip_sep+0x3c>
	jal	ra,0x2150a # luaZ_fill>
	mv	a5,a0
	sw	a5,0(s0)
	li	a4,61
	addi	s1,s1,1
	beq	a5,a4,0x25808 # skip_sep+0x54>
	seqz	a0,s1
	bne	s2,a5,0x2583c # skip_sep+0x88>
	addi	a0,s1,2 # 0x8002 # exit-0x811e>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret
	jal	ra,0x2150a # luaZ_fill>
	mv	a5,a0
	j	0x257e2 # skip_sep+0x2e>

check_next2:
	addi	sp,sp,-16
	sd	s0,0(sp)
	mv	a5,a1
	sd	ra,8(sp)
	lw	a1,0(a0)
	lbu	a4,0(a5)
	mv	s0,a0
	beq	a4,a1,0x25876 # check_next2+0x26>
	lbu	a5,1(a5)
	li	a0,0
	beq	a5,a1,0x25876 # check_next2+0x26>
	ld	ra,8(sp)
	ld	s0,0(sp)
	addi	sp,sp,16
	ret
	mv	a0,s0
	jal	ra,0x25752 # save>
	ld	a0,64(s0)
	ld	a5,0(a0)
	addi	a4,a5,-1
	sd	a4,0(a0)
	beqz	a5,0x258a0 # check_next2+0x50>
	ld	a5,8(a0)
	addi	a4,a5,1
	sd	a4,8(a0)
	lbu	a0,0(a5)
	sw	a0,0(s0)
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret
	jal	ra,0x2150a # luaZ_fill>
	j	0x25894 # check_next2+0x44>

inclinenumber:
	addi	sp,sp,-32
	sd	s0,16(sp)
	mv	s0,a0
	ld	a0,64(a0)
	sd	s1,8(sp)
	sd	ra,24(sp)
	ld	a5,0(a0)
	lw	s1,0(s0)
	addi	a4,a5,-1
	sd	a4,0(a0)
	beqz	a5,0x25916 # inclinenumber+0x70>
	ld	a5,8(a0)
	addi	a4,a5,1
	sd	a4,8(a0)
	lbu	a0,0(a5)
	sw	a0,0(s0)
	li	a5,10
	beq	a0,a5,0x258f6 # inclinenumber+0x50>
	li	a5,13
	beq	a0,a5,0x258f6 # inclinenumber+0x50>
	lw	a5,4(s0)
	lui	a4,0x80000
	not	a4,a4
	addiw	a3,a5,1
	sw	a3,4(s0)
	beq	a3,a4,0x25924 # inclinenumber+0x7e>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret
	beq	a0,s1,0x258d8 # inclinenumber+0x32>
	ld	a0,64(s0)
	ld	a5,0(a0)
	addi	a4,a5,-1
	sd	a4,0(a0)
	beqz	a5,0x2591c # inclinenumber+0x76>
	ld	a5,8(a0)
	addi	a4,a5,1
	sd	a4,8(a0)
	lbu	a0,0(a5)
	sw	a0,0(s0)
	j	0x258d8 # inclinenumber+0x32>
	jal	ra,0x2150a # luaZ_fill>
	j	0x258ca # inclinenumber+0x24>
	jal	ra,0x2150a # luaZ_fill>
	sw	a0,0(s0)
	j	0x258d8 # inclinenumber+0x32>
	li	a2,0
	auipc	a1,0x1e
	addi	a1,a1,-958 # 0x43568 # luai_ctype_+0x158>
	mv	a0,s0
	jal	ra,0x256e4 # lexerror>

esccheck.part.0:
	lw	a5,0(a0)
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	ra,24(sp)
	li	a4,-1
	mv	s0,a0
	mv	s1,a1
	bne	a5,a4,0x25954 # esccheck.part.0+0x20>
	li	a2,292
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x256e4 # lexerror>
	mv	a1,a5
	jal	ra,0x25752 # save>
	ld	a0,64(s0)
	ld	a5,0(a0)
	addi	a4,a5,-1
	sd	a4,0(a0)
	beqz	a5,0x25976 # esccheck.part.0+0x42>
	ld	a5,8(a0)
	addi	a4,a5,1
	sd	a4,8(a0)
	lbu	a0,0(a5)
	sw	a0,0(s0)
	j	0x25948 # esccheck.part.0+0x14>
	jal	ra,0x2150a # luaZ_fill>
	sw	a0,0(s0)
	j	0x25948 # esccheck.part.0+0x14>

gethexa:
	lw	a1,0(a0)
	addi	sp,sp,-16
	sd	s0,0(sp)
	sd	ra,8(sp)
	mv	s0,a0
	jal	ra,0x25752 # save>
	ld	a0,64(s0)
	ld	a5,0(a0)
	addi	a4,a5,-1
	sd	a4,0(a0)
	beqz	a5,0x259c6 # gethexa+0x48>
	ld	a5,8(a0)
	addi	a4,a5,1
	sd	a4,8(a0)
	lbu	a0,0(a5)
	addiw	a4,a0,1
	auipc	a5,0x1e
	addi	a5,a5,-1432 # 0x43410 # luai_ctype_>
	add	a5,a5,a4
	lbu	a5,0(a5)
	sw	a0,0(s0)
	andi	a5,a5,16
	beqz	a5,0x259cc # gethexa+0x4e>
	ld	s0,0(sp)
	ld	ra,8(sp)
	addi	sp,sp,16
	j	0x18114 # luaO_hexavalue>
	jal	ra,0x2150a # luaZ_fill>
	j	0x259a4 # gethexa+0x26>
	auipc	a1,0x1e
	addi	a1,a1,-1092 # 0x43588 # luai_ctype_+0x178>
	mv	a0,s0
	jal	ra,0x25934 # esccheck.part.0>

read_numeral:
	addi	sp,sp,-80
	sd	s3,40(sp)
	lw	s3,0(a0)
	sd	s5,24(sp)
	mv	s5,a1
	mv	a1,s3
	sd	s0,64(sp)
	sd	ra,72(sp)
	mv	s0,a0
	sd	s1,56(sp)
	sd	s2,48(sp)
	sd	s4,32(sp)
	sd	s6,16(sp)
	jal	ra,0x25752 # save>
	ld	a0,64(s0)
	ld	a5,0(a0)
	addi	a4,a5,-1
	sd	a4,0(a0)
	beqz	a5,0x25b24 # read_numeral+0x14a>
	ld	a5,8(a0)
	li	s2,101
	li	s1,69
	addi	a4,a5,1
	sd	a4,8(a0)
	lbu	a1,0(a5)
	li	a5,48
	sw	a1,0(s0)
	beq	s3,a5,0x25b3c # read_numeral+0x162>
	auipc	s3,0x1e
	addi	s3,s3,-1558 # 0x43410 # luai_ctype_>
	auipc	s6,0x1e
	addi	s6,s6,-1150 # 0x435b0 # luai_ctype_+0x1a0>
	li	s4,46
	beq	s1,a1,0x25a7a # read_numeral+0xa0>
	beq	s2,a1,0x25a7a # read_numeral+0xa0>
	addiw	a5,a1,1
	add	a5,a5,s3
	lbu	a5,0(a5)
	andi	a4,a5,16
	bnez	a4,0x25a56 # read_numeral+0x7c>
	bne	a1,s4,0x25ab6 # read_numeral+0xdc>
	mv	a0,s0
	jal	ra,0x25752 # save>
	ld	a0,64(s0)
	ld	a5,0(a0)
	addi	a4,a5,-1
	sd	a4,0(a0)
	beqz	a5,0x25aa6 # read_numeral+0xcc>
	ld	a5,8(a0)
	addi	a4,a5,1
	sd	a4,8(a0)
	lbu	a1,0(a5)
	sw	a1,0(s0)
	bne	s1,a1,0x25a3e # read_numeral+0x64>
	mv	a0,s0
	jal	ra,0x25752 # save>
	ld	a0,64(s0)
	ld	a5,0(a0)
	addi	a4,a5,-1
	sd	a4,0(a0)
	beqz	a5,0x25ab0 # read_numeral+0xd6>
	ld	a5,8(a0)
	addi	a4,a5,1
	sd	a4,8(a0)
	lbu	a0,0(a5)
	sw	a0,0(s0)
	mv	a1,s6
	mv	a0,s0
	jal	ra,0x25850 # check_next2>
	lw	a1,0(s0)
	j	0x25a3a # read_numeral+0x60>
	jal	ra,0x2150a # luaZ_fill>
	mv	a1,a0
	sw	a1,0(s0)
	j	0x25a76 # read_numeral+0x9c>
	jal	ra,0x2150a # luaZ_fill>
	j	0x25a98 # read_numeral+0xbe>
	andi	a5,a5,1
	bnez	a5,0x25b02 # read_numeral+0x128>
	li	a1,0
	mv	a0,s0
	jal	ra,0x25752 # save>
	ld	a5,72(s0)
	mv	a1,sp
	ld	a0,0(a5)
	jal	ra,0x1813a # luaO_str2num>
	beqz	a0,0x25b62 # read_numeral+0x188>
	lbu	a4,8(sp)
	li	a5,3
	beq	a4,a5,0x25af6 # read_numeral+0x11c>
	fld	fa5,0(sp)
	li	a0,289
	fsd	fa5,0(s5)
	ld	ra,72(sp)
	ld	s0,64(sp)
	ld	s1,56(sp)
	ld	s2,48(sp)
	ld	s3,40(sp)
	ld	s4,32(sp)
	ld	s5,24(sp)
	ld	s6,16(sp)
	addi	sp,sp,80
	ret
	ld	a5,0(sp)
	li	a0,290
	sd	a5,0(s5)
	j	0x25ae2 # read_numeral+0x108>
	mv	a0,s0
	jal	ra,0x25752 # save>
	ld	a0,64(s0)
	ld	a5,0(a0)
	addi	a4,a5,-1
	sd	a4,0(a0)
	beqz	a5,0x25b5a # read_numeral+0x180>
	ld	a5,8(a0)
	addi	a4,a5,1
	sd	a4,8(a0)
	lbu	a0,0(a5)
	sw	a0,0(s0)
	j	0x25aba # read_numeral+0xe0>
	jal	ra,0x2150a # luaZ_fill>
	mv	a1,a0
	sw	a1,0(s0)
	li	a5,48
	li	s2,101
	li	s1,69
	bne	s3,a5,0x25a26 # read_numeral+0x4c>
	auipc	a1,0x1e
	addi	a1,a1,-1428 # 0x435a8 # luai_ctype_+0x198>
	mv	a0,s0
	jal	ra,0x25850 # check_next2>
	lw	a1,0(s0)
	beqz	a0,0x25a26 # read_numeral+0x4c>
	li	s2,112
	li	s1,80
	j	0x25a26 # read_numeral+0x4c>
	jal	ra,0x2150a # luaZ_fill>
	sw	a0,0(s0)
	j	0x25aba # read_numeral+0xe0>
	li	a2,289
	auipc	a1,0x1e
	addi	a1,a1,-1454 # 0x435b8 # luai_ctype_+0x1a8>
	mv	a0,s0
	jal	ra,0x256e4 # lexerror>

luaX_syntaxerror:
	lw	a2,16(a0)
	addi	sp,sp,-16
	sd	ra,8(sp)
	jal	ra,0x256e4 # lexerror>

luaX_newstring:
	addi	sp,sp,-32
	sd	s2,0(sp)
	ld	s2,56(a0)
	sd	s1,8(sp)
	mv	s1,a0
	mv	a0,s2
	sd	ra,24(sp)
	sd	s0,16(sp)
	jal	ra,0x1bfce # luaS_newlstr>
	mv	s0,a0
	ld	a0,80(s1)
	mv	a1,s0
	jal	ra,0x1c660 # luaH_getstr>
	lbu	a5,8(a0)
	andi	a5,a5,15
	beqz	a5,0x25bb6 # luaX_newstring+0x38>
	ld	s0,16(a0)
	ld	ra,24(sp)
	ld	s1,8(sp)
	mv	a0,s0
	ld	s0,16(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret
	ld	a4,16(s2)
	mv	a3,a0
	mv	a0,s2
	addi	a5,a4,16 # 0xffffffff80000010 # __BSS_END__+0xffffffff7ffb1c88>
	sd	a5,16(s2)
	sd	s0,0(a4)
	lbu	a5,8(s0)
	mv	a2,a4
	ori	a5,a5,64
	sb	a5,8(a4)
	ld	a1,80(s1)
	jal	ra,0x1ce50 # luaH_finishset>
	ld	a5,24(s2)
	ld	a5,24(a5)
	bgtz	a5,0x25bfe # luaX_newstring+0x80>
	ld	a5,16(s2)
	addi	a5,a5,-16
	sd	a5,16(s2)
	ld	ra,24(sp)
	mv	a0,s0
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret
	mv	a0,s2
	jal	ra,0x17420 # luaC_step>
	ld	a5,16(s2)
	addi	a5,a5,-16
	sd	a5,16(s2)
	j	0x25bf0 # luaX_newstring+0x72>

read_long_string:
	addi	sp,sp,-64
	sd	s4,16(sp)
	mv	s4,a1
	lw	a1,0(a0)
	sd	s0,48(sp)
	sd	s5,8(sp)
	sd	s6,0(sp)
	mv	s0,a0
	lw	s6,4(a0)
	sd	ra,56(sp)
	sd	s1,40(sp)
	sd	s2,32(sp)
	sd	s3,24(sp)
	mv	s5,a2
	jal	ra,0x25752 # save>
	ld	a0,64(s0)
	ld	a5,0(a0)
	addi	a4,a5,-1
	sd	a4,0(a0)
	beqz	a5,0x25d30 # read_long_string+0x120>
	ld	a5,8(a0)
	addi	a4,a5,1
	sd	a4,8(a0)
	lbu	a1,0(a5)
	sw	a1,0(s0)
	li	a5,10
	beq	a1,a5,0x25d26 # read_long_string+0x116>
	li	a5,13
	beq	a1,a5,0x25d26 # read_long_string+0x116>
	li	s1,13
	li	s3,93
	li	s2,-1
	beq	a1,s1,0x25c7e # read_long_string+0x6e>
	ble	a1,s1,0x25cec # read_long_string+0xdc>
	bne	a1,s3,0x25cf6 # read_long_string+0xe6>
	mv	a0,s0
	jal	ra,0x257b4 # skip_sep>
	beq	a0,s5,0x25c9a # read_long_string+0x8a>
	lw	a1,0(s0)
	bne	a1,s1,0x25c66 # read_long_string+0x56>
	mv	a0,s0
	li	a1,10
	jal	ra,0x25752 # save>
	mv	a0,s0
	jal	ra,0x258a6 # inclinenumber>
	bnez	s4,0x25c78 # read_long_string+0x68>
	ld	a5,72(s0)
	lw	a1,0(s0)
	sd	zero,8(a5)
	j	0x25c62 # read_long_string+0x52>
	lw	a1,0(s0)
	mv	a0,s0
	jal	ra,0x25752 # save>
	ld	a0,64(s0)
	ld	a5,0(a0)
	addi	a4,a5,-1
	sd	a4,0(a0)
	beqz	a5,0x25d38 # read_long_string+0x128>
	ld	a5,8(a0)
	addi	a4,a5,1
	sd	a4,8(a0)
	lbu	a0,0(a5)
	sw	a0,0(s0)
	beqz	s4,0x25cd8 # read_long_string+0xc8>
	ld	a5,72(s0)
	slli	a4,s5,0x1
	mv	a0,s0
	ld	a2,8(a5)
	ld	a1,0(a5)
	sub	a2,a2,a4
	add	a1,a1,s5
	jal	ra,0x25b7e # luaX_newstring>
	sd	a0,0(s4)
	ld	ra,56(sp)
	ld	s0,48(sp)
	ld	s1,40(sp)
	ld	s2,32(sp)
	ld	s3,24(sp)
	ld	s4,16(sp)
	ld	s5,8(sp)
	ld	s6,0(sp)
	addi	sp,sp,64
	ret
	beq	a1,s2,0x25d3e # read_long_string+0x12e>
	li	a5,10
	beq	a1,a5,0x25c7e # read_long_string+0x6e>
	beqz	s4,0x25d00 # read_long_string+0xf0>
	mv	a0,s0
	jal	ra,0x25752 # save>
	ld	a0,64(s0)
	ld	a5,0(a0)
	addi	a4,a5,-1
	sd	a4,0(a0)
	beqz	a5,0x25d1c # read_long_string+0x10c>
	ld	a5,8(a0)
	addi	a4,a5,1
	sd	a4,8(a0)
	lbu	a1,0(a5)
	sw	a1,0(s0)
	j	0x25c62 # read_long_string+0x52>
	jal	ra,0x2150a # luaZ_fill>
	mv	a1,a0
	sw	a1,0(s0)
	j	0x25c62 # read_long_string+0x52>
	mv	a0,s0
	jal	ra,0x258a6 # inclinenumber>
	lw	a1,0(s0)
	j	0x25c5a # read_long_string+0x4a>
	jal	ra,0x2150a # luaZ_fill>
	mv	a1,a0
	j	0x25c4c # read_long_string+0x3c>
	jal	ra,0x2150a # luaZ_fill>
	j	0x25cba # read_long_string+0xaa>
	auipc	a2,0x1f
	addi	a2,a2,418 # 0x44ee0 # cat.0+0x428>
	beqz	s4,0x25d66 # read_long_string+0x156>
	ld	a0,56(s0)
	auipc	a1,0x1e
	addi	a1,a1,-1908 # 0x435d8 # luai_ctype_+0x1c8>
	mv	a3,s6
	jal	ra,0x1865a # luaO_pushfstring>
	mv	a1,a0
	li	a2,288
	mv	a0,s0
	jal	ra,0x256e4 # lexerror>
	auipc	a2,0x1e
	addi	a2,a2,-1942 # 0x435d0 # luai_ctype_+0x1c0>
	j	0x25d4a # read_long_string+0x13a>

llex:
	ld	a5,72(a0)
	addi	sp,sp,-144
	sd	s0,128(sp)
	sd	s1,120(sp)
	sd	s2,112(sp)
	sd	s3,104(sp)
	sd	s4,96(sp)
	sd	s5,88(sp)
	sd	s6,80(sp)
	sd	s7,72(sp)
	sd	s8,64(sp)
	sd	ra,136(sp)
	sd	s9,56(sp)
	sd	s10,48(sp)
	sd	s11,40(sp)
	lw	s1,0(a0)
	mv	s0,a0
	mv	s5,a1
	sd	zero,8(a5)
	li	s3,127
	auipc	s2,0x1e
	addi	s2,s2,-1520 # 0x437ac # luai_ctype_+0x39c>
	li	s8,45
	li	s7,91
	li	s4,10
	li	s6,-1
	addiw	a4,s1,1
	sext.w	a5,a4
	bltu	s3,a5,0x25dca # llex+0x5a>
	slli	a5,a4,0x20
	srli	a5,a5,0x1e
	add	a5,a5,s2
	lw	a5,0(a5)
	add	a5,a5,s2
	jr	a5
	auipc	s2,0x1d
	addi	s2,s2,1606 # 0x43410 # luai_ctype_>
	add	a4,a4,s2
	lbu	a5,0(a4)
	andi	a5,a5,1
	bnez	a5,0x25dfe # llex+0x8e>
	j	0x265a8 # llex+0x838>
	ld	a5,8(a0)
	addi	a4,a5,1
	sd	a4,8(a0)
	lbu	s1,0(a5)
	addiw	a5,s1,1
	add	a5,a5,s2
	lbu	a5,0(a5)
	sw	s1,0(s0)
	andi	a5,a5,3
	beqz	a5,0x26490 # llex+0x720>
	mv	a0,s0
	mv	a1,s1
	jal	ra,0x25752 # save>
	ld	a0,64(s0)
	ld	a5,0(a0)
	addi	a4,a5,-1
	sd	a4,0(a0)
	bnez	a5,0x25de0 # llex+0x70>
	jal	ra,0x2150a # luaZ_fill>
	mv	s1,a0
	j	0x25dec # llex+0x7c>
	mv	a0,s0
	li	a1,46
	jal	ra,0x25752 # save>
	ld	a0,64(s0)
	ld	a5,0(a0)
	addi	a4,a5,-1
	sd	a4,0(a0)
	beqz	a5,0x265f4 # llex+0x884>
	ld	a5,8(a0)
	addi	a4,a5,1
	sd	a4,8(a0)
	lbu	a0,0(a5)
	sw	a0,0(s0)
	li	a5,46
	beq	a0,a5,0x2655e # llex+0x7ee>
	auipc	a5,0x1d
	addi	a5,a5,1480 # 0x43410 # luai_ctype_>
	addiw	a0,a0,1
	add	a0,a0,a5
	lbu	a5,0(a0)
	andi	a5,a5,2
	beqz	a5,0x25fe4 # llex+0x274>
	mv	a0,s0
	ld	s0,128(sp)
	ld	ra,136(sp)
	ld	s1,120(sp)
	ld	s2,112(sp)
	ld	s3,104(sp)
	ld	s4,96(sp)
	ld	s6,80(sp)
	ld	s7,72(sp)
	ld	s8,64(sp)
	ld	s9,56(sp)
	ld	s10,48(sp)
	ld	s11,40(sp)
	mv	a1,s5
	ld	s5,88(sp)
	addi	sp,sp,144
	j	0x259da # read_numeral>
	ld	a0,64(s0)
	ld	a5,0(a0)
	addi	a4,a5,-1
	sd	a4,0(a0)
	beqz	a5,0x265c4 # llex+0x854>
	ld	a5,8(a0)
	addi	a4,a5,1
	sd	a4,8(a0)
	lbu	s1,0(a5)
	sw	s1,0(s0)
	j	0x25db0 # llex+0x40>
	mv	a0,s0
	mv	a1,s1
	jal	ra,0x25752 # save>
	ld	a0,64(s0)
	ld	a5,0(a0)
	addi	a4,a5,-1
	sd	a4,0(a0)
	beqz	a5,0x26602 # llex+0x892>
	ld	a5,8(a0)
	addi	a4,a5,1
	sd	a4,8(a0)
	lbu	a1,0(a5)
	sw	a1,0(s0)
	beq	a1,s1,0x25faa # llex+0x23a>
	li	s3,92
	auipc	s8,0x1e
	addi	s8,s8,-1310 # 0x439ac # luai_ctype_+0x59c>
	auipc	s6,0x1d
	addi	s6,s6,1342 # 0x43410 # luai_ctype_>
	li	s4,13
	lui	s7,0x8000
	addi	s9,sp,24
	bne	a1,s3,0x26034 # llex+0x2c4>
	mv	a0,s0
	li	a1,92
	jal	ra,0x25752 # save>
	ld	a0,64(s0)
	ld	a5,0(a0)
	addi	a4,a5,-1
	sd	a4,0(a0)
	beqz	a5,0x2640c # llex+0x69c>
	ld	a5,8(a0)
	addi	a4,a5,1
	sd	a4,8(a0)
	lbu	a1,0(a5)
	addiw	a4,a1,1
	sw	a1,0(s0)
	sext.w	a3,a4
	li	a5,123
	bltu	a5,a3,0x25f2c # llex+0x1bc>
	slli	a5,a4,0x20
	srli	a5,a5,0x1e
	add	a5,a5,s8
	lw	a5,0(a5)
	add	a5,a5,s8
	jr	a5
	add	a4,a4,s6
	lbu	a5,0(a4)
	andi	a5,a5,2
	beqz	a5,0x26692 # llex+0x922>
	li	s11,0
	li	s10,0
	li	s2,3
	slliw	a4,s10,0x2
	addw	a4,a4,s10
	slliw	a4,a4,0x1
	addw	a4,a4,a1
	mv	a0,s0
	addiw	s10,a4,-48
	jal	ra,0x25752 # save>
	ld	a0,64(s0)
	ld	a5,0(a0)
	addi	a4,a5,-1
	sd	a4,0(a0)
	beqz	a5,0x26488 # llex+0x718>
	ld	a5,8(a0)
	addi	a4,a5,1
	sd	a4,8(a0)
	lbu	a1,0(a5)
	sw	a1,0(s0)
	addiw	s11,s11,1
	beq	s11,s2,0x25f86 # llex+0x216>
	addiw	a5,a1,1
	add	a5,a5,s6
	lbu	a5,0(a5)
	andi	a5,a5,2
	bnez	a5,0x25f3e # llex+0x1ce>
	li	a5,255
	blt	a5,s10,0x266ae # llex+0x93e>
	ld	a4,72(s0)
	mv	a1,s10
	mv	a0,s0
	ld	a5,8(a4)
	sub	a5,a5,s11
	sd	a5,8(a4)
	addi	a5,a5,-1
	sd	a5,8(a4)
	jal	ra,0x25752 # save>
	lw	a1,0(s0)
	bne	s1,a1,0x25ee4 # llex+0x174>
	mv	a0,s0
	jal	ra,0x25752 # save>
	ld	a0,64(s0)
	ld	a5,0(a0)
	addi	a4,a5,-1
	sd	a4,0(a0)
	beqz	a5,0x26612 # llex+0x8a2>
	ld	a5,8(a0)
	addi	a4,a5,1
	sd	a4,8(a0)
	lbu	a0,0(a5)
	ld	a5,72(s0)
	sw	a0,0(s0)
	mv	a0,s0
	ld	a2,8(a5)
	ld	a1,0(a5)
	li	s1,292
	addi	a2,a2,-2
	addi	a1,a1,1
	jal	ra,0x25b7e # luaX_newstring>
	sd	a0,0(s5)
	ld	ra,136(sp)
	ld	s0,128(sp)
	ld	s2,112(sp)
	ld	s3,104(sp)
	ld	s4,96(sp)
	ld	s5,88(sp)
	ld	s6,80(sp)
	ld	s7,72(sp)
	ld	s8,64(sp)
	ld	s9,56(sp)
	ld	s10,48(sp)
	ld	s11,40(sp)
	mv	a0,s1
	ld	s1,120(sp)
	addi	sp,sp,144
	ret
	li	a1,7
	ld	a0,64(s0)
	ld	a5,0(a0)
	addi	a4,a5,-1
	sd	a4,0(a0)
	beqz	a5,0x26172 # llex+0x402>
	ld	a5,8(a0)
	addi	a4,a5,1
	sd	a4,8(a0)
	lbu	a0,0(a5)
	ld	a4,72(s0)
	sw	a0,0(s0)
	ld	a5,8(a4)
	addi	a5,a5,-1
	sd	a5,8(a4)
	mv	a0,s0
	jal	ra,0x25752 # save>
	lw	a1,0(s0)
	j	0x25fa6 # llex+0x236>
	blt	s3,a1,0x26048 # llex+0x2d8>
	li	a5,10
	beq	a1,a5,0x264f0 # llex+0x780>
	beq	a1,s4,0x264f0 # llex+0x780>
	li	a5,-1
	beq	a1,a5,0x26672 # llex+0x902>
	mv	a0,s0
	jal	ra,0x25752 # save>
	ld	a0,64(s0)
	ld	a5,0(a0)
	addi	a4,a5,-1
	sd	a4,0(a0)
	beqz	a5,0x26414 # llex+0x6a4>
	ld	a5,8(a0)
	addi	a4,a5,1
	sd	a4,8(a0)
	lbu	a1,0(a5)
	sw	a1,0(s0)
	bne	s1,a1,0x25ee4 # llex+0x174>
	j	0x25faa # llex+0x23a>
	mv	a0,s0
	jal	ra,0x258a6 # inclinenumber>
	ld	a4,72(s0)
	li	a1,10
	ld	a5,8(a4)
	j	0x26026 # llex+0x2b6>
	ld	a0,64(s0)
	ld	a5,0(a0)
	addi	a4,a5,-1
	sd	a4,0(a0)
	beqz	a5,0x265d0 # llex+0x860>
	ld	a5,8(a0)
	addi	a4,a5,1
	sd	a4,8(a0)
	lbu	a0,0(a5)
	sw	a0,0(s0)
	bne	a0,s8,0x25fe4 # llex+0x274>
	ld	a0,64(s0)
	ld	a5,0(a0)
	addi	a4,a5,-1
	sd	a4,0(a0)
	beqz	a5,0x2660a # llex+0x89a>
	ld	a5,8(a0)
	addi	a4,a5,1
	sd	a4,8(a0)
	lbu	s1,0(a5)
	sw	s1,0(s0)
	beq	s1,s7,0x264bc # llex+0x74c>
	li	s9,13
	bne	s1,s4,0x262ba # llex+0x54a>
	mv	a0,s0
	jal	ra,0x258a6 # inclinenumber>
	lw	s1,0(s0)
	j	0x25db0 # llex+0x40>
	ld	a3,72(s0)
	ld	a0,64(s0)
	ld	a5,8(a3)
	ld	a4,0(a0)
	addi	a5,a5,-1
	sd	a5,8(a3)
	addi	a5,a4,-1
	sd	a5,0(a0)
	beqz	a4,0x2650c # llex+0x79c>
	ld	a5,8(a0)
	addi	a4,a5,1
	sd	a4,8(a0)
	lbu	a1,0(a5)
	addiw	a5,a1,1
	add	a5,a5,s6
	lbu	a5,0(a5)
	sw	a1,0(s0)
	andi	a5,a5,8
	beqz	a5,0x25fa6 # llex+0x236>
	li	s2,10
	beq	a1,s2,0x2613c # llex+0x3cc>
	beq	a1,s4,0x2613c # llex+0x3cc>
	ld	a0,64(s0)
	ld	a5,0(a0)
	addi	a4,a5,-1
	sd	a4,0(a0)
	beqz	a5,0x26426 # llex+0x6b6>
	ld	a5,8(a0)
	addi	a4,a5,1
	sd	a4,8(a0)
	lbu	a1,0(a5)
	sw	a1,0(s0)
	addiw	a5,a1,1
	add	a5,a5,s6
	lbu	a5,0(a5)
	andi	a5,a5,8
	beqz	a5,0x25fa6 # llex+0x236>
	bne	a1,s2,0x26108 # llex+0x398>
	mv	a0,s0
	jal	ra,0x258a6 # inclinenumber>
	lw	a1,0(s0)
	j	0x26128 # llex+0x3b8>
	mv	a0,s0
	jal	ra,0x2597e # gethexa>
	mv	s2,a0
	mv	a0,s0
	jal	ra,0x2597e # gethexa>
	ld	a4,72(s0)
	slliw	s2,s2,0x4
	addw	a1,s2,a0
	ld	a5,8(a4)
	ld	a0,64(s0)
	addi	a5,a5,-2
	sd	a5,8(a4)
	ld	a5,0(a0)
	addi	a4,a5,-1
	sd	a4,0(a0)
	bnez	a5,0x26014 # llex+0x2a4>
	sd	a1,8(sp)
	jal	ra,0x2150a # luaZ_fill>
	ld	a1,8(sp)
	j	0x26020 # llex+0x2b0>
	li	a1,11
	j	0x26006 # llex+0x296>
	mv	a0,s0
	li	a1,117
	jal	ra,0x25752 # save>
	ld	a0,64(s0)
	ld	a5,0(a0)
	addi	a4,a5,-1
	sd	a4,0(a0)
	beqz	a5,0x26506 # llex+0x796>
	ld	a5,8(a0)
	addi	a4,a5,1
	sd	a4,8(a0)
	lbu	a0,0(a5)
	sw	a0,0(s0)
	li	a5,123
	bne	a0,a5,0x266a0 # llex+0x930>
	mv	a0,s0
	jal	ra,0x2597e # gethexa>
	mv	s2,a0
	li	s10,4
	j	0x261e6 # llex+0x476>
	ld	a5,8(a0)
	addi	a4,a5,1
	sd	a4,8(a0)
	lbu	a0,0(a5)
	addiw	a5,a0,1
	add	a5,a5,s6
	lbu	a5,0(a5)
	sw	a0,0(s0)
	andi	a5,a5,16
	beqz	a5,0x2642e # llex+0x6be>
	addiw	s10,s10,1
	bleu	s7,s2,0x26684 # llex+0x914>
	slli	s2,s2,0x4
	jal	ra,0x18114 # luaO_hexavalue>
	add	s2,s2,a0
	lw	a1,0(s0)
	mv	a0,s0
	jal	ra,0x25752 # save>
	ld	a0,64(s0)
	ld	a5,0(a0)
	addi	a4,a5,-1
	sd	a4,0(a0)
	bnez	a5,0x261ba # llex+0x44a>
	jal	ra,0x2150a # luaZ_fill>
	j	0x261c6 # llex+0x456>
	li	a1,9
	j	0x26006 # llex+0x296>
	li	a1,13
	j	0x26006 # llex+0x296>
	li	a1,10
	j	0x26006 # llex+0x296>
	mv	a0,s0
	jal	ra,0x257b4 # skip_sep>
	li	a5,1
	bltu	a5,a0,0x26618 # llex+0x8a8>
	bnez	a0,0x25fe4 # llex+0x274>
	li	a2,292
	auipc	a1,0x1d
	addi	a1,a1,1000 # 0x43608 # luai_ctype_+0x1f8>
	mv	a0,s0
	jal	ra,0x256e4 # lexerror>
	ld	a0,64(s0)
	ld	a5,0(a0)
	addi	a4,a5,-1
	sd	a4,0(a0)
	beqz	a5,0x265d6 # llex+0x866>
	ld	a5,8(a0)
	addi	a4,a5,1
	sd	a4,8(a0)
	lbu	a0,0(a5)
	sw	a0,0(s0)
	li	a5,61
	bne	a0,a5,0x25fe4 # llex+0x274>
	ld	a0,64(s0)
	ld	a5,0(a0)
	addi	a4,a5,-1
	sd	a4,0(a0)
	beqz	a5,0x26638 # llex+0x8c8>
	ld	a5,8(a0)
	addi	a4,a5,1
	sd	a4,8(a0)
	lbu	a0,0(a5)
	sw	a0,0(s0)
	li	s1,284
	j	0x25fe4 # llex+0x274>
	ld	a0,64(s0)
	ld	a5,0(a0)
	addi	a4,a5,-1
	sd	a4,0(a0)
	beqz	a5,0x265dc # llex+0x86c>
	ld	a5,8(a0)
	addi	a4,a5,1
	sd	a4,8(a0)
	lbu	a0,0(a5)
	sw	a0,0(s0)
	li	a5,58
	bne	a0,a5,0x25fe4 # llex+0x274>
	ld	a0,64(s0)
	ld	a5,0(a0)
	addi	a4,a5,-1
	sd	a4,0(a0)
	beqz	a5,0x2663e # llex+0x8ce>
	ld	a5,8(a0)
	addi	a4,a5,1
	sd	a4,8(a0)
	lbu	a0,0(a5)
	sw	a0,0(s0)
	li	s1,287
	j	0x25fe4 # llex+0x274>
	beq	s1,s9,0x26502 # llex+0x792>
	beq	s1,s6,0x26502 # llex+0x792>
	ld	a0,64(s0)
	ld	a5,0(a0)
	addi	a4,a5,-1
	sd	a4,0(a0)
	beqz	a5,0x2641e # llex+0x6ae>
	ld	a5,8(a0)
	addi	a4,a5,1
	sd	a4,8(a0)
	lbu	s1,0(a5)
	sw	s1,0(s0)
	bne	s1,s4,0x262ba # llex+0x54a>
	j	0x25db0 # llex+0x40>
	ld	a0,64(s0)
	ld	a5,0(a0)
	addi	a4,a5,-1
	sd	a4,0(a0)
	beqz	a5,0x265e2 # llex+0x872>
	ld	a5,8(a0)
	addi	a4,a5,1
	sd	a4,8(a0)
	lbu	a0,0(a5)
	sw	a0,0(s0)
	li	a5,61
	beq	a0,a5,0x2651a # llex+0x7aa>
	li	a5,60
	bne	a0,a5,0x25fe4 # llex+0x274>
	ld	a0,64(s0)
	ld	a5,0(a0)
	addi	a4,a5,-1
	sd	a4,0(a0)
	beqz	a5,0x2665e # llex+0x8ee>
	ld	a5,8(a0)
	addi	a4,a5,1
	sd	a4,8(a0)
	lbu	a0,0(a5)
	sw	a0,0(s0)
	li	s1,285
	j	0x25fe4 # llex+0x274>
	ld	a0,64(s0)
	ld	a5,0(a0)
	addi	a4,a5,-1
	sd	a4,0(a0)
	beqz	a5,0x265ee # llex+0x87e>
	ld	a5,8(a0)
	addi	a4,a5,1
	sd	a4,8(a0)
	lbu	a0,0(a5)
	sw	a0,0(s0)
	li	a5,61
	beq	a0,a5,0x2653c # llex+0x7cc>
	li	a5,62
	bne	a0,a5,0x25fe4 # llex+0x274>
	ld	a0,64(s0)
	ld	a5,0(a0)
	addi	a4,a5,-1
	sd	a4,0(a0)
	beqz	a5,0x26664 # llex+0x8f4>
	ld	a5,8(a0)
	addi	a4,a5,1
	sd	a4,8(a0)
	lbu	a0,0(a5)
	sw	a0,0(s0)
	li	s1,286
	j	0x25fe4 # llex+0x274>
	ld	a0,64(s0)
	ld	a5,0(a0)
	addi	a4,a5,-1
	sd	a4,0(a0)
	beqz	a5,0x265e8 # llex+0x878>
	ld	a5,8(a0)
	addi	a4,a5,1
	sd	a4,8(a0)
	lbu	a0,0(a5)
	sw	a0,0(s0)
	li	a5,47
	bne	a0,a5,0x25fe4 # llex+0x274>
	ld	a0,64(s0)
	ld	a5,0(a0)
	addi	a4,a5,-1
	sd	a4,0(a0)
	beqz	a5,0x2664c # llex+0x8dc>
	ld	a5,8(a0)
	addi	a4,a5,1
	sd	a4,8(a0)
	lbu	a0,0(a5)
	sw	a0,0(s0)
	li	s1,278
	j	0x25fe4 # llex+0x274>
	ld	a0,64(s0)
	ld	a5,0(a0)
	addi	a4,a5,-1
	sd	a4,0(a0)
	beqz	a5,0x265fc # llex+0x88c>
	ld	a5,8(a0)
	addi	a4,a5,1
	sd	a4,8(a0)
	lbu	a0,0(a5)
	sw	a0,0(s0)
	li	a5,61
	bne	a0,a5,0x25fe4 # llex+0x274>
	ld	a0,64(s0)
	ld	a5,0(a0)
	addi	a4,a5,-1
	sd	a4,0(a0)
	beqz	a5,0x26652 # llex+0x8e2>
	ld	a5,8(a0)
	addi	a4,a5,1
	sd	a4,8(a0)
	lbu	a0,0(a5)
	sw	a0,0(s0)
	li	s1,281
	j	0x25fe4 # llex+0x274>
	jal	ra,0x2150a # luaZ_fill>
	mv	a1,a0
	j	0x25f0c # llex+0x19c>
	jal	ra,0x2150a # luaZ_fill>
	mv	a1,a0
	sw	a1,0(s0)
	j	0x2606a # llex+0x2fa>
	jal	ra,0x2150a # luaZ_fill>
	mv	s1,a0
	j	0x262dc # llex+0x56c>
	jal	ra,0x2150a # luaZ_fill>
	mv	a1,a0
	j	0x26126 # llex+0x3b6>
	li	a5,125
	bne	a0,a5,0x266bc # llex+0x94c>
	ld	a0,64(s0)
	ld	a5,0(a0)
	addi	a4,a5,-1
	sd	a4,0(a0)
	beqz	a5,0x26514 # llex+0x7a4>
	ld	a5,8(a0)
	addi	a4,a5,1
	sd	a4,8(a0)
	lbu	a0,0(a5)
	ld	a4,72(s0)
	sw	a0,0(s0)
	mv	a1,s2
	ld	a5,8(a4)
	mv	a0,s9
	sub	s10,a5,s10
	sd	s10,8(a4)
	jal	ra,0x18360 # luaO_utf8esc>
	mv	s2,a0
	blez	a0,0x25fa4 # llex+0x234>
	li	s10,8
	subw	s10,s10,a0
	add	s10,s10,s9
	lbu	a1,0(s10)
	mv	a0,s0
	addiw	s2,s2,-1
	jal	ra,0x25752 # save>
	addi	s10,s10,1
	bnez	s2,0x26472 # llex+0x702>
	lw	a1,0(s0)
	j	0x25fa6 # llex+0x236>
	jal	ra,0x2150a # luaZ_fill>
	mv	a1,a0
	j	0x25f70 # llex+0x200>
	ld	a5,72(s0)
	mv	a0,s0
	li	s1,291
	ld	a2,8(a5)
	ld	a1,0(a5)
	jal	ra,0x25b7e # luaX_newstring>
	sd	a0,0(s5)
	lbu	a4,8(a0)
	li	a5,4
	bne	a4,a5,0x25fe4 # llex+0x274>
	lbu	a5,10(a0)
	beqz	a5,0x25fe4 # llex+0x274>
	addi	s1,a5,255
	j	0x25fe4 # llex+0x274>
	mv	a0,s0
	jal	ra,0x257b4 # skip_sep>
	ld	a4,72(s0)
	li	a5,1
	mv	a2,a0
	sd	zero,8(a4)
	bleu	a0,a5,0x26628 # llex+0x8b8>
	li	a1,0
	mv	a0,s0
	jal	ra,0x25c10 # read_long_string>
	ld	a5,72(s0)
	lw	s1,0(s0)
	sd	zero,8(a5)
	j	0x25db0 # llex+0x40>
	li	a1,8
	j	0x26006 # llex+0x296>
	li	a1,12
	j	0x26006 # llex+0x296>
	li	s1,288
	j	0x25fe4 # llex+0x274>
	li	a2,292
	auipc	a1,0x1d
	addi	a1,a1,308 # 0x43628 # luai_ctype_+0x218>
	mv	a0,s0
	jal	ra,0x256e4 # lexerror>
	lw	s1,0(s0)
	j	0x25db0 # llex+0x40>
	jal	ra,0x2150a # luaZ_fill>
	j	0x261a4 # llex+0x434>
	jal	ra,0x2150a # luaZ_fill>
	mv	a1,a0
	j	0x260f0 # llex+0x380>
	jal	ra,0x2150a # luaZ_fill>
	j	0x2644e # llex+0x6de>
	ld	a0,64(s0)
	ld	a5,0(a0)
	addi	a4,a5,-1
	sd	a4,0(a0)
	beqz	a5,0x2662c # llex+0x8bc>
	ld	a5,8(a0)
	addi	a4,a5,1
	sd	a4,8(a0)
	lbu	a0,0(a5)
	sw	a0,0(s0)
	li	s1,283
	j	0x25fe4 # llex+0x274>
	ld	a0,64(s0)
	ld	a5,0(a0)
	addi	a4,a5,-1
	sd	a4,0(a0)
	beqz	a5,0x26632 # llex+0x8c2>
	ld	a5,8(a0)
	addi	a4,a5,1
	sd	a4,8(a0)
	lbu	a0,0(a5)
	sw	a0,0(s0)
	li	s1,282
	j	0x25fe4 # llex+0x274>
	ld	a0,64(s0)
	ld	a5,0(a0)
	addi	a4,a5,-1
	sd	a4,0(a0)
	beqz	a5,0x26658 # llex+0x8e8>
	ld	a5,8(a0)
	addi	a4,a5,1
	sd	a4,8(a0)
	lbu	a0,0(a5)
	sw	a0,0(s0)
	li	a5,46
	li	s1,279
	bne	a0,a5,0x25fe4 # llex+0x274>
	ld	a0,64(s0)
	ld	a5,0(a0)
	addi	a4,a5,-1
	sd	a4,0(a0)
	beqz	a5,0x2666a # llex+0x8fa>
	ld	a5,8(a0)
	addi	a4,a5,1
	sd	a4,8(a0)
	lbu	a5,0(a5)
	sw	a5,0(s0)
	li	s1,280
	j	0x25fe4 # llex+0x274>
	ld	a0,64(s0)
	ld	a5,0(a0)
	addi	a4,a5,-1
	sd	a4,0(a0)
	beqz	a5,0x26644 # llex+0x8d4>
	ld	a5,8(a0)
	addi	a4,a5,1
	sd	a4,8(a0)
	lbu	a0,0(a5)
	sw	a0,0(s0)
	j	0x25fe4 # llex+0x274>
	jal	ra,0x2150a # luaZ_fill>
	mv	s1,a0
	sw	s1,0(s0)
	j	0x25db0 # llex+0x40>
	jal	ra,0x2150a # luaZ_fill>
	j	0x26098 # llex+0x328>
	jal	ra,0x2150a # luaZ_fill>
	j	0x26248 # llex+0x4d8>
	jal	ra,0x2150a # luaZ_fill>
	j	0x2628e # llex+0x51e>
	jal	ra,0x2150a # luaZ_fill>
	j	0x262fe # llex+0x58e>
	jal	ra,0x2150a # luaZ_fill>
	j	0x2639a # llex+0x62a>
	jal	ra,0x2150a # luaZ_fill>
	j	0x2634c # llex+0x5dc>
	jal	ra,0x2150a # luaZ_fill>
	j	0x25e3e # llex+0xce>
	jal	ra,0x2150a # luaZ_fill>
	j	0x263e0 # llex+0x670>
	jal	ra,0x2150a # luaZ_fill>
	mv	a1,a0
	j	0x25ec0 # llex+0x150>
	jal	ra,0x2150a # luaZ_fill>
	mv	s1,a0
	j	0x260b8 # llex+0x348>
	jal	ra,0x2150a # luaZ_fill>
	j	0x25fca # llex+0x25a>
	mv	a2,a0
	mv	a1,s5
	mv	a0,s0
	jal	ra,0x25c10 # read_long_string>
	li	s1,292
	j	0x25fe4 # llex+0x274>
	lw	s1,0(s0)
	j	0x260be # llex+0x34e>
	jal	ra,0x2150a # luaZ_fill>
	j	0x26534 # llex+0x7c4>
	jal	ra,0x2150a # luaZ_fill>
	j	0x26556 # llex+0x7e6>
	jal	ra,0x2150a # luaZ_fill>
	j	0x2626c # llex+0x4fc>
	jal	ra,0x2150a # luaZ_fill>
	j	0x262b2 # llex+0x542>
	jal	ra,0x2150a # luaZ_fill>
	sw	a0,0(s0)
	j	0x25fe4 # llex+0x274>
	jal	ra,0x2150a # luaZ_fill>
	j	0x263be # llex+0x64e>
	jal	ra,0x2150a # luaZ_fill>
	j	0x26404 # llex+0x694>
	jal	ra,0x2150a # luaZ_fill>
	j	0x26578 # llex+0x808>
	jal	ra,0x2150a # luaZ_fill>
	j	0x2632a # llex+0x5ba>
	jal	ra,0x2150a # luaZ_fill>
	j	0x26378 # llex+0x608>
	jal	ra,0x2150a # luaZ_fill>
	mv	a5,a0
	j	0x265a0 # llex+0x830>
	li	a2,288
	auipc	a1,0x1d
	addi	a1,a1,-78 # 0x43628 # luai_ctype_+0x218>
	mv	a0,s0
	jal	ra,0x256e4 # lexerror>
	auipc	a1,0x1d
	addi	a1,a1,-52 # 0x43650 # luai_ctype_+0x240>
	mv	a0,s0
	jal	ra,0x25934 # esccheck.part.0>
	auipc	a1,0x1d
	addi	a1,a1,-26 # 0x43678 # luai_ctype_+0x268>
	mv	a0,s0
	jal	ra,0x25934 # esccheck.part.0>
	auipc	a1,0x1d
	addi	a1,a1,-96 # 0x43640 # luai_ctype_+0x230>
	mv	a0,s0
	jal	ra,0x25934 # esccheck.part.0>
	auipc	a1,0x1d
	addi	a1,a1,-30 # 0x43690 # luai_ctype_+0x280>
	mv	a0,s0
	jal	ra,0x25934 # esccheck.part.0>
	auipc	a1,0x1d
	addi	a1,a1,-84 # 0x43668 # luai_ctype_+0x258>
	mv	a0,s0
	jal	ra,0x25934 # esccheck.part.0>

luaX_setinput:
	addi	sp,sp,-32
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	mv	s0,a1
	mv	a6,a2
	li	a5,1
	sw	a4,0(s0)
	li	a4,288
	sw	a4,32(s0)
	sd	a6,64(s0)
	sw	a5,4(s0)
	sw	a5,8(s0)
	sd	a3,96(s0)
	li	a2,4
	auipc	a1,0x1b
	addi	a1,a1,-660 # 0x41458 # lua_ident+0xc0>
	sw	zero,16(s0)
	sd	a0,56(s0)
	sd	zero,48(s0)
	jal	ra,0x1bfce # luaS_newlstr>
	ld	s1,72(s0)
	mv	a5,a0
	ld	a0,56(s0)
	ld	a2,16(s1)
	ld	a1,0(s1)
	sd	a5,104(s0)
	li	a3,32
	jal	ra,0x17b9a # luaM_saferealloc_>
	ld	a5,72(s0)
	ld	ra,24(sp)
	ld	s0,16(sp)
	sd	a0,0(s1)
	li	a4,32
	sd	a4,16(a5)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret

luaX_next:
	lw	a3,4(a0)
	addi	sp,sp,-16
	lw	a4,32(a0)
	sd	s0,0(sp)
	sd	ra,8(sp)
	li	a5,288
	sw	a3,8(a0)
	mv	s0,a0
	beq	a4,a5,0x26752 # luaX_next+0x28>
	ld	a3,32(a0)
	ld	a4,40(a0)
	ld	ra,8(sp)
	ld	s0,0(sp)
	sw	a5,32(a0)
	sd	a3,16(a0)
	sd	a4,24(a0)
	addi	sp,sp,16
	ret
	addi	a1,a0,24
	jal	ra,0x25d70 # llex>
	ld	ra,8(sp)
	sw	a0,16(s0)
	ld	s0,0(sp)
	addi	sp,sp,16
	ret

luaX_lookahead:
	addi	sp,sp,-16
	addi	a1,a0,40
	sd	s0,0(sp)
	sd	ra,8(sp)
	mv	s0,a0
	jal	ra,0x25d70 # llex>
	ld	ra,8(sp)
	sw	a0,32(s0)
	ld	s0,0(sp)
	addi	sp,sp,16
	ret

dofilecont:
	addi	sp,sp,-16
	sd	ra,8(sp)
	jal	ra,0x110fc # lua_gettop>
	ld	ra,8(sp)
	addiw	a0,a0,-1
	addi	sp,sp,16
	ret

luaB_type:
	addi	sp,sp,-32
	li	a1,1
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	ra,24(sp)
	mv	s0,a0
	jal	ra,0x1144a # lua_type>
	li	a5,-1
	mv	s1,a0
	beq	a0,a5,0x267c2 # luaB_type+0x34>
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x114d0 # lua_typename>
	mv	a1,a0
	mv	a0,s0
	jal	ra,0x11e96 # lua_pushstring>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	li	a0,1
	addi	sp,sp,32
	ret
	auipc	a2,0x1c
	addi	a2,a2,1878 # 0x42f18 # udatatypename+0x550>
	li	a1,1
	mv	a0,s0
	jal	ra,0x21c20 # luaL_argerror>
	j	0x267a6 # luaB_type+0x18>

luaB_tostring:
	addi	sp,sp,-16
	li	a1,1
	sd	ra,8(sp)
	sd	s0,0(sp)
	mv	s0,a0
	jal	ra,0x22102 # luaL_checkany>
	mv	a0,s0
	li	a2,0
	li	a1,1
	jal	ra,0x2272e # luaL_tolstring>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret

luaB_select:
	addi	sp,sp,-32
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	s2,0(sp)
	mv	s1,a0
	jal	ra,0x110fc # lua_gettop>
	mv	s0,a0
	li	a1,1
	mv	a0,s1
	jal	ra,0x1144a # lua_type>
	li	a5,4
	bne	a0,a5,0x2682c # luaB_select+0x36>
	li	a2,0
	li	a1,1
	mv	a0,s1
	jal	ra,0x11a62 # lua_tolstring>
	lbu	a4,0(a0)
	li	a5,35
	beq	a4,a5,0x2685e # luaB_select+0x68>
	li	a1,1
	mv	a0,s1
	jal	ra,0x22270 # luaL_checkinteger>
	add	s2,s0,a0
	bltz	a0,0x26842 # luaB_select+0x4c>
	mv	s2,s0
	blt	a0,s0,0x26856 # luaB_select+0x60>
	blez	s2,0x26876 # luaB_select+0x80>
	subw	a0,s0,s2
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret
	mv	s2,a0
	bgtz	s2,0x26846 # luaB_select+0x50>
	j	0x26876 # luaB_select+0x80>
	mv	a0,s1
	addiw	a1,s0,-1
	jal	ra,0x11e32 # lua_pushinteger>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	li	a0,1
	addi	sp,sp,32
	ret
	auipc	a2,0x1d
	addi	a2,a2,810 # 0x43ba0 # luai_ctype_+0x790>
	li	a1,1
	mv	a0,s1
	jal	ra,0x21c20 # luaL_argerror>
	j	0x26846 # luaB_select+0x50>

luaB_tonumber:
	addi	sp,sp,-96
	li	a1,2
	sd	s5,40(sp)
	sd	ra,88(sp)
	sd	s0,80(sp)
	sd	s1,72(sp)
	sd	s2,64(sp)
	sd	s3,56(sp)
	sd	s4,48(sp)
	sd	s6,32(sp)
	sd	s7,24(sp)
	sd	s8,16(sp)
	mv	s5,a0
	jal	ra,0x1144a # lua_type>
	blez	a0,0x26980 # luaB_tonumber+0xf8>
	li	a1,2
	mv	a0,s5
	jal	ra,0x22270 # luaL_checkinteger>
	mv	s4,a0
	li	a2,4
	li	a1,1
	mv	a0,s5
	jal	ra,0x220c4 # luaL_checktype>
	addi	a2,sp,8
	li	a1,1
	mv	a0,s5
	jal	ra,0x11a62 # lua_tolstring>
	addi	a4,s4,-2
	li	a5,34
	mv	s6,a0
	bltu	a5,a4,0x269e8 # luaB_tonumber+0x160>
	auipc	a1,0x1d
	addi	a1,a1,762 # 0x43bd0 # luai_ctype_+0x7c0>
	mv	a0,s6
	jal	ra,0x36ae8 # strspn>
	add	s2,s6,a0
	lbu	s0,0(s2)
	li	a5,45
	sext.w	s4,s4
	beq	s0,a5,0x26932 # luaB_tonumber+0xaa>
	li	a5,43
	li	s7,0
	bne	s0,a5,0x2693a # luaB_tonumber+0xb2>
	lbu	s0,1(s2)
	addi	s2,s2,1
	sext.w	s3,s0
	mv	a0,s3
	jal	ra,0x2f5ca # isalnum>
	bnez	a0,0x26946 # luaB_tonumber+0xbe>
	mv	a0,s5
	jal	ra,0x11e16 # lua_pushnil>
	ld	ra,88(sp)
	ld	s0,80(sp)
	ld	s1,72(sp)
	ld	s2,64(sp)
	ld	s3,56(sp)
	ld	s4,48(sp)
	ld	s5,40(sp)
	ld	s6,32(sp)
	ld	s7,24(sp)
	ld	s8,16(sp)
	li	a0,1
	addi	sp,sp,96
	ret
	lbu	s0,1(s2)
	li	s7,1
	addi	s2,s2,1
	sext.w	s3,s0
	mv	a0,s3
	jal	ra,0x2f5ca # isalnum>
	beqz	a0,0x26912 # luaB_tonumber+0x8a>
	li	s1,0
	li	s8,9
	j	0x2696c # luaB_tonumber+0xe4>
	addiw	a5,s3,-48
	addi	s2,s2,1
	ble	s4,a5,0x26912 # luaB_tonumber+0x8a>
	mul	s1,s4,s1
	lbu	s0,0(s2)
	sext.w	s3,s0
	mv	a0,s3
	add	s1,s1,a5
	jal	ra,0x2f5ca # isalnum>
	beqz	a0,0x269b4 # luaB_tonumber+0x12c>
	addiw	s0,s0,-48
	mv	a0,s3
	bleu	s0,s8,0x2694c # luaB_tonumber+0xc4>
	jal	ra,0x2f65e # toupper>
	addiw	a5,a0,-55
	j	0x26950 # luaB_tonumber+0xc8>
	li	a1,1
	mv	a0,s5
	jal	ra,0x1144a # lua_type>
	li	a5,3
	beq	a0,a5,0x269de # luaB_tonumber+0x156>
	li	a1,1
	addi	a2,sp,8
	mv	a0,s5
	jal	ra,0x11a62 # lua_tolstring>
	mv	a1,a0
	beqz	a0,0x269aa # luaB_tonumber+0x122>
	mv	a0,s5
	jal	ra,0x11890 # lua_stringtonumber>
	ld	a5,8(sp)
	addi	a5,a5,1
	beq	a0,a5,0x26918 # luaB_tonumber+0x90>
	li	a1,1
	mv	a0,s5
	jal	ra,0x22102 # luaL_checkany>
	j	0x26912 # luaB_tonumber+0x8a>
	mv	a0,s2
	auipc	a1,0x1d
	addi	a1,a1,538 # 0x43bd0 # luai_ctype_+0x7c0>
	jal	ra,0x36ae8 # strspn>
	add	s2,s2,a0
	beqz	s7,0x269cc # luaB_tonumber+0x144>
	neg	s1,s1
	ld	a5,8(sp)
	add	s6,s6,a5
	bne	s2,s6,0x26912 # luaB_tonumber+0x8a>
	mv	a1,s1
	mv	a0,s5
	jal	ra,0x11e32 # lua_pushinteger>
	j	0x26918 # luaB_tonumber+0x90>
	li	a1,1
	mv	a0,s5
	jal	ra,0x1110c # lua_settop>
	j	0x26918 # luaB_tonumber+0x90>
	auipc	a2,0x1d
	addi	a2,a2,464 # 0x43bb8 # luai_ctype_+0x7a8>
	li	a1,2
	mv	a0,s5
	jal	ra,0x21c20 # luaL_argerror>
	j	0x268d6 # luaB_tonumber+0x4e>

luaB_setmetatable:
	addi	sp,sp,-32
	li	a1,2
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	ra,24(sp)
	mv	s0,a0
	jal	ra,0x1144a # lua_type>
	mv	s1,a0
	li	a2,5
	li	a1,1
	mv	a0,s0
	jal	ra,0x220c4 # luaL_checktype>
	beqz	s1,0x26a2e # luaB_setmetatable+0x34>
	li	a5,5
	beq	s1,a5,0x26a2e # luaB_setmetatable+0x34>
	auipc	a2,0x1d
	addi	a2,a2,498 # 0x43c10 # luai_ctype_+0x800>
	li	a1,2
	mv	a0,s0
	jal	ra,0x21ce6 # luaL_typeerror>
	auipc	a2,0x1d
	addi	a2,a2,426 # 0x43bd8 # luai_ctype_+0x7c8>
	li	a1,1
	mv	a0,s0
	jal	ra,0x22666 # luaL_getmetafield>
	bnez	a0,0x26a5c # luaB_setmetatable+0x62>
	mv	a0,s0
	li	a1,2
	jal	ra,0x1110c # lua_settop>
	mv	a0,s0
	li	a1,1
	jal	ra,0x1272e # lua_setmetatable>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	li	a0,1
	addi	sp,sp,32
	ret
	mv	a0,s0
	ld	s0,16(sp)
	ld	ra,24(sp)
	ld	s1,8(sp)
	auipc	a1,0x1d
	addi	a1,a1,388 # 0x43be8 # luai_ctype_+0x7d8>
	addi	sp,sp,32
	j	0x21bdc # luaL_error>

luaB_rawset:
	addi	sp,sp,-16
	li	a2,5
	li	a1,1
	sd	ra,8(sp)
	sd	s0,0(sp)
	mv	s0,a0
	jal	ra,0x220c4 # luaL_checktype>
	mv	a0,s0
	li	a1,2
	jal	ra,0x22102 # luaL_checkany>
	mv	a0,s0
	li	a1,3
	jal	ra,0x22102 # luaL_checkany>
	mv	a0,s0
	li	a1,3
	jal	ra,0x1110c # lua_settop>
	mv	a0,s0
	li	a1,1
	jal	ra,0x125f6 # lua_rawset>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret

luaB_rawget:
	addi	sp,sp,-16
	li	a2,5
	li	a1,1
	sd	ra,8(sp)
	sd	s0,0(sp)
	mv	s0,a0
	jal	ra,0x220c4 # luaL_checktype>
	mv	a0,s0
	li	a1,2
	jal	ra,0x22102 # luaL_checkany>
	mv	a0,s0
	li	a1,2
	jal	ra,0x1110c # lua_settop>
	mv	a0,s0
	li	a1,1
	jal	ra,0x1219e # lua_rawget>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret

luaB_rawlen:
	addi	sp,sp,-16
	li	a1,1
	sd	s0,0(sp)
	sd	ra,8(sp)
	mv	s0,a0
	jal	ra,0x1144a # lua_type>
	addiw	a0,a0,-4
	li	a5,1
	bltu	a5,a0,0x26b0e # luaB_rawlen+0x30>
	li	a1,1
	mv	a0,s0
	jal	ra,0x11b46 # lua_rawlen>
	mv	a1,a0
	mv	a0,s0
	jal	ra,0x11e32 # lua_pushinteger>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret
	auipc	a2,0x1d
	addi	a2,a2,274 # 0x43c20 # luai_ctype_+0x810>
	li	a1,1
	mv	a0,s0
	jal	ra,0x21ce6 # luaL_typeerror>
	j	0x26af4 # luaB_rawlen+0x16>

luaB_rawequal:
	addi	sp,sp,-16
	li	a1,1
	sd	ra,8(sp)
	sd	s0,0(sp)
	mv	s0,a0
	jal	ra,0x22102 # luaL_checkany>
	mv	a0,s0
	li	a1,2
	jal	ra,0x22102 # luaL_checkany>
	li	a2,2
	li	a1,1
	mv	a0,s0
	jal	ra,0x11744 # lua_rawequal>
	mv	a1,a0
	mv	a0,s0
	jal	ra,0x11fdc # lua_pushboolean>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret

luaB_warn:
	addi	sp,sp,-32
	sd	ra,24(sp)
	sd	s1,8(sp)
	sd	s2,0(sp)
	mv	s1,a0
	sd	s0,16(sp)
	jal	ra,0x110fc # lua_gettop>
	mv	s2,a0
	li	a2,0
	li	a1,1
	mv	a0,s1
	jal	ra,0x22138 # luaL_checklstring>
	li	a5,1
	ble	s2,a5,0x26ba2 # luaB_warn+0x50>
	li	s0,2
	mv	a1,s0
	li	a2,0
	addiw	s0,s0,1
	mv	a0,s1
	jal	ra,0x22138 # luaL_checklstring>
	ble	s0,s2,0x26b76 # luaB_warn+0x24>
	li	s0,1
	mv	a1,s0
	li	a2,0
	mv	a0,s1
	jal	ra,0x11a62 # lua_tolstring>
	mv	a1,a0
	addiw	s0,s0,1
	li	a2,1
	mv	a0,s1
	jal	ra,0x12e84 # lua_warning>
	bne	s2,s0,0x26b88 # luaB_warn+0x36>
	mv	a1,s2
	li	a2,0
	mv	a0,s1
	jal	ra,0x11a62 # lua_tolstring>
	mv	a1,a0
	li	a2,0
	mv	a0,s1
	jal	ra,0x12e84 # lua_warning>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	li	a0,0
	addi	sp,sp,32
	ret

luaB_print:
	addi	sp,sp,-80
	sd	s2,48(sp)
	sd	s3,40(sp)
	sd	ra,72(sp)
	sd	s0,64(sp)
	sd	s1,56(sp)
	sd	s4,32(sp)
	sd	s5,24(sp)
	sd	s6,16(sp)
	mv	s2,a0
	jal	ra,0x110fc # lua_gettop>
	auipc	a5,0x26
	ld	a5,1852(a5) # 0x4d318 # _GLOBAL_OFFSET_TABLE_+0x10>
	ld	s3,0(a5)
	blez	a0,0x26c3c # luaB_print+0x78>
	addi	s5,sp,8
	mv	s4,a0
	mv	a2,s5
	li	a1,1
	mv	a0,s2
	jal	ra,0x2272e # luaL_tolstring>
	mv	s1,a0
	li	s0,1
	auipc	s6,0x1d
	addi	s6,s6,48 # 0x43c30 # luai_ctype_+0x820>
	j	0x26c1c # luaB_print+0x58>
	jal	ra,0x2272e # luaL_tolstring>
	mv	s1,a0
	mv	a3,s3
	li	a2,1
	li	a1,1
	mv	a0,s6
	jal	ra,0x34010 # fwrite>
	ld	a2,8(sp)
	mv	a3,s3
	li	a1,1
	mv	a0,s1
	jal	ra,0x34010 # fwrite>
	li	a1,-2
	mv	a0,s2
	jal	ra,0x1110c # lua_settop>
	addiw	s0,s0,1
	mv	a2,s5
	mv	a1,s0
	mv	a0,s2
	ble	s0,s4,0x26c0a # luaB_print+0x46>
	mv	a3,s3
	li	a2,1
	li	a1,1
	auipc	a0,0x1a
	addi	a0,a0,1038 # 0x41050 # __clzdi2+0x188>
	jal	ra,0x34010 # fwrite>
	mv	a0,s3
	jal	ra,0x3362a # fflush>
	ld	ra,72(sp)
	ld	s0,64(sp)
	ld	s1,56(sp)
	ld	s2,48(sp)
	ld	s3,40(sp)
	ld	s4,32(sp)
	ld	s5,24(sp)
	ld	s6,16(sp)
	li	a0,0
	addi	sp,sp,80
	ret

luaB_ipairs:
	addi	sp,sp,-16
	li	a1,1
	sd	ra,8(sp)
	sd	s0,0(sp)
	mv	s0,a0
	jal	ra,0x22102 # luaL_checkany>
	li	a2,0
	mv	a0,s0
	auipc	a1,0x0
	addi	a1,a1,242 # 0x26d6e # ipairsaux>
	jal	ra,0x11f4a # lua_pushcclosure>
	mv	a0,s0
	li	a1,1
	jal	ra,0x113c8 # lua_pushvalue>
	mv	a0,s0
	li	a1,0
	jal	ra,0x11e32 # lua_pushinteger>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,3
	addi	sp,sp,16
	ret

luaB_next:
	addi	sp,sp,-16
	li	a2,5
	li	a1,1
	sd	ra,8(sp)
	sd	s0,0(sp)
	mv	s0,a0
	jal	ra,0x220c4 # luaL_checktype>
	li	a1,2
	mv	a0,s0
	jal	ra,0x1110c # lua_settop>
	li	a1,1
	mv	a0,s0
	jal	ra,0x12cbe # lua_next>
	beqz	a0,0x26cce # luaB_next+0x2c>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,2
	addi	sp,sp,16
	ret
	mv	a0,s0
	jal	ra,0x11e16 # lua_pushnil>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret

generic_reader:
	addi	sp,sp,-32
	sd	s1,8(sp)
	li	a1,2
	mv	s1,a2
	auipc	a2,0x1d
	addi	a2,a2,-174 # 0x43c38 # luai_ctype_+0x828>
	sd	ra,24(sp)
	sd	s0,16(sp)
	mv	s0,a0
	jal	ra,0x2207c # luaL_checkstack>
	li	a1,1
	mv	a0,s0
	jal	ra,0x113c8 # lua_pushvalue>
	li	a1,0
	mv	a0,s0
	li	a4,0
	li	a3,0
	li	a2,1
	jal	ra,0x128c8 # lua_callk>
	li	a1,-1
	mv	a0,s0
	jal	ra,0x1144a # lua_type>
	beqz	a0,0x26d46 # generic_reader+0x68>
	li	a1,-1
	mv	a0,s0
	jal	ra,0x11656 # lua_isstring>
	beqz	a0,0x26d5e # generic_reader+0x80>
	li	a2,5
	mv	a0,s0
	li	a1,-1
	jal	ra,0x1129c # lua_copy>
	mv	a0,s0
	li	a1,-2
	jal	ra,0x1110c # lua_settop>
	mv	a0,s0
	ld	s0,16(sp)
	ld	ra,24(sp)
	mv	a2,s1
	ld	s1,8(sp)
	li	a1,5
	addi	sp,sp,32
	j	0x11a62 # lua_tolstring>
	mv	a0,s0
	li	a1,-2
	jal	ra,0x1110c # lua_settop>
	ld	ra,24(sp)
	ld	s0,16(sp)
	sd	zero,0(s1)
	li	a0,0
	ld	s1,8(sp)
	addi	sp,sp,32
	ret
	auipc	a1,0x1d
	addi	a1,a1,-262 # 0x43c58 # luai_ctype_+0x848>
	mv	a0,s0
	jal	ra,0x21bdc # luaL_error>
	j	0x26d22 # generic_reader+0x44>

ipairsaux:
	addi	sp,sp,-32
	li	a1,2
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	mv	s0,a0
	jal	ra,0x22270 # luaL_checkinteger>
	addi	s1,a0,1
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x11e32 # lua_pushinteger>
	mv	a2,s1
	mv	a0,s0
	li	a1,1
	jal	ra,0x12108 # lua_geti>
	ld	ra,24(sp)
	ld	s0,16(sp)
	snez	a0,a0
	ld	s1,8(sp)
	addi	a0,a0,1
	addi	sp,sp,32
	ret

luaB_error:
	addi	sp,sp,-32
	li	a2,1
	li	a1,2
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	mv	s0,a0
	jal	ra,0x222c8 # luaL_optinteger>
	li	a1,1
	mv	s1,a0
	mv	a0,s0
	jal	ra,0x1110c # lua_settop>
	li	a1,1
	mv	a0,s0
	jal	ra,0x1144a # lua_type>
	li	a5,4
	beq	a0,a5,0x26ddc # luaB_error+0x38>
	mv	a0,s0
	ld	s0,16(sp)
	ld	ra,24(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	j	0x12c90 # lua_error>
	sext.w	a1,s1
	blez	a1,0x26dce # luaB_error+0x2a>
	mv	a0,s0
	jal	ra,0x21b80 # luaL_where>
	mv	a0,s0
	li	a1,1
	jal	ra,0x113c8 # lua_pushvalue>
	mv	a0,s0
	li	a1,2
	jal	ra,0x12d8e # lua_concat>
	mv	a0,s0
	ld	s0,16(sp)
	ld	ra,24(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	j	0x12c90 # lua_error>

luaB_dofile:
	addi	sp,sp,-32
	li	a2,0
	li	a3,0
	li	a1,1
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	mv	s0,a0
	jal	ra,0x2217c # luaL_optlstring>
	mv	s1,a0
	li	a1,1
	mv	a0,s0
	jal	ra,0x1110c # lua_settop>
	li	a2,0
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x2244e # luaL_loadfilex>
	bnez	a0,0x26e58 # luaB_dofile+0x50>
	mv	a0,s0
	auipc	a4,0x0
	addi	a4,a4,-1718 # 0x2677e # dofilecont>
	li	a3,0
	li	a2,-1
	li	a1,0
	jal	ra,0x128c8 # lua_callk>
	mv	a0,s0
	jal	ra,0x110fc # lua_gettop>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	addiw	a0,a0,-1
	addi	sp,sp,32
	ret
	mv	a0,s0
	ld	s0,16(sp)
	ld	ra,24(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	j	0x12c90 # lua_error>

luaB_collectgarbage:
	addi	sp,sp,-32
	auipc	a3,0x25
	addi	a3,a3,848 # 0x4c1b8 # opts.1>
	auipc	a2,0x1d
	addi	a2,a2,-464 # 0x43ca0 # luai_ctype_+0x890>
	li	a1,1
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	ra,24(sp)
	sd	s2,0(sp)
	mv	s0,a0
	jal	ra,0x21fd6 # luaL_checkoption>
	slli	a5,a0,0x2
	auipc	a0,0x1d
	addi	a0,a0,-68 # 0x43e48 # optsnum.0>
	add	a0,a0,a5
	lw	s1,0(a0)
	li	a4,8
	addiw	a5,s1,-3
	sext.w	a3,a5
	bltu	a4,a3,0x26f9c # luaB_collectgarbage+0x136>
	slli	a5,a5,0x20
	srli	a5,a5,0x20
	auipc	a4,0x1d
	addi	a4,a4,-138 # 0x43e20 # luai_ctype_+0xa10>
	slli	a5,a5,0x2
	add	a5,a5,a4
	lw	a5,0(a5)
	add	a5,a5,a4
	jr	a5
	li	a2,0
	li	a1,2
	mv	a0,s0
	jal	ra,0x222c8 # luaL_optinteger>
	sext.w	a2,a0
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x12aba # lua_gc>
	mv	a1,a0
	mv	a0,s0
	jal	ra,0x11e32 # lua_pushinteger>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	li	a0,1
	addi	sp,sp,32
	ret
	mv	a0,s0
	li	a1,9
	jal	ra,0x12aba # lua_gc>
	mv	a1,a0
	mv	a0,s0
	jal	ra,0x11fdc # lua_pushboolean>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	li	a0,1
	addi	sp,sp,32
	ret
	li	a2,0
	li	a1,2
	mv	a0,s0
	jal	ra,0x222c8 # luaL_optinteger>
	mv	s1,a0
	li	a2,0
	li	a1,3
	mv	a0,s0
	jal	ra,0x222c8 # luaL_optinteger>
	sext.w	a3,a0
	li	a1,10
	sext.w	a2,s1
	mv	a0,s0
	jal	ra,0x12aba # lua_gc>
	li	a5,11
	auipc	a1,0x1d
	addi	a1,a1,-686 # 0x43c80 # luai_ctype_+0x870>
	beq	a0,a5,0x26f42 # luaB_collectgarbage+0xdc>
	auipc	a1,0x1d
	addi	a1,a1,-682 # 0x43c90 # luai_ctype_+0x880>
	mv	a0,s0
	jal	ra,0x11e96 # lua_pushstring>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	li	a0,1
	addi	sp,sp,32
	ret
	li	a2,0
	li	a1,2
	mv	a0,s0
	jal	ra,0x222c8 # luaL_optinteger>
	mv	s1,a0
	li	a2,0
	li	a1,3
	mv	a0,s0
	jal	ra,0x222c8 # luaL_optinteger>
	mv	s2,a0
	li	a2,0
	li	a1,4
	mv	a0,s0
	jal	ra,0x222c8 # luaL_optinteger>
	sext.w	a4,a0
	li	a1,11
	sext.w	a3,s2
	sext.w	a2,s1
	mv	a0,s0
	jal	ra,0x12aba # lua_gc>
	li	a5,11
	auipc	a1,0x1d
	addi	a1,a1,-782 # 0x43c80 # luai_ctype_+0x870>
	bne	a0,a5,0x26f3a # luaB_collectgarbage+0xd4>
	j	0x26f42 # luaB_collectgarbage+0xdc>
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x12aba # lua_gc>
	mv	a1,a0
	mv	a0,s0
	jal	ra,0x11e32 # lua_pushinteger>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	li	a0,1
	addi	sp,sp,32
	ret
	li	a1,3
	mv	a0,s0
	jal	ra,0x12aba # lua_gc>
	mv	s1,a0
	li	a1,4
	mv	a0,s0
	jal	ra,0x12aba # lua_gc>
	fcvt.d.w	fa5,s1
	fcvt.d.w	fa0,a0
	auipc	a5,0x1d
	fld	fa4,-356(a5) # 0x43e70 # optsnum.0+0x28>
	mv	a0,s0
	fmadd.d	fa0,fa0,fa4,fa5
	jal	ra,0x11e22 # lua_pushnumber>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	li	a0,1
	addi	sp,sp,32
	ret
	li	a2,0
	li	a1,2
	mv	a0,s0
	jal	ra,0x222c8 # luaL_optinteger>
	sext.w	a2,a0
	li	a1,5
	mv	a0,s0
	jal	ra,0x12aba # lua_gc>
	mv	a1,a0
	mv	a0,s0
	jal	ra,0x11fdc # lua_pushboolean>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	li	a0,1
	addi	sp,sp,32
	ret

finishpcall:
	addi	sp,sp,-32
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	li	a5,1
	bltu	a5,a1,0x27040 # finishpcall+0x20>
	mv	s0,a2
	jal	ra,0x110fc # lua_gettop>
	ld	ra,24(sp)
	subw	a0,a0,s0
	ld	s0,16(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret
	li	a1,0
	mv	s1,a0
	jal	ra,0x11fdc # lua_pushboolean>
	mv	a0,s1
	li	a1,-2
	jal	ra,0x113c8 # lua_pushvalue>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	li	a0,2
	addi	sp,sp,32
	ret

luaB_pairs:
	addi	sp,sp,-16
	li	a1,1
	sd	s0,0(sp)
	sd	ra,8(sp)
	mv	s0,a0
	jal	ra,0x22102 # luaL_checkany>
	auipc	a2,0x1d
	addi	a2,a2,-962 # 0x43ca8 # luai_ctype_+0x898>
	li	a1,1
	mv	a0,s0
	jal	ra,0x22666 # luaL_getmetafield>
	bnez	a0,0x270a4 # luaB_pairs+0x48>
	li	a2,0
	mv	a0,s0
	auipc	a1,0x0
	addi	a1,a1,-990 # 0x26ca2 # luaB_next>
	jal	ra,0x11f4a # lua_pushcclosure>
	mv	a0,s0
	li	a1,1
	jal	ra,0x113c8 # lua_pushvalue>
	mv	a0,s0
	jal	ra,0x11e16 # lua_pushnil>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,3
	addi	sp,sp,16
	ret
	mv	a0,s0
	li	a1,1
	jal	ra,0x113c8 # lua_pushvalue>
	mv	a0,s0
	li	a4,0
	li	a3,0
	li	a2,3
	li	a1,1
	jal	ra,0x128c8 # lua_callk>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,3
	addi	sp,sp,16
	ret

load_aux:
	addi	sp,sp,-16
	sd	s0,0(sp)
	sd	ra,8(sp)
	mv	s0,a0
	bnez	a1,0x270f6 # load_aux+0x32>
	bnez	a2,0x270da # load_aux+0x16>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret
	mv	a1,a2
	jal	ra,0x113c8 # lua_pushvalue>
	li	a2,1
	li	a1,-2
	mv	a0,s0
	jal	ra,0x12fc2 # lua_setupvalue>
	bnez	a0,0x270d0 # load_aux+0xc>
	li	a1,-2
	mv	a0,s0
	jal	ra,0x1110c # lua_settop>
	j	0x270d0 # load_aux+0xc>
	jal	ra,0x11e16 # lua_pushnil>
	mv	a0,s0
	li	a2,1
	li	a1,-2
	jal	ra,0x111ea # lua_rotate>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,2
	addi	sp,sp,16
	ret

luaB_load:
	addi	sp,sp,-64
	addi	a2,sp,8
	li	a1,1
	sd	ra,56(sp)
	sd	s0,48(sp)
	sd	s1,40(sp)
	mv	s0,a0
	sd	s2,32(sp)
	sd	s3,24(sp)
	jal	ra,0x11a62 # lua_tolstring>
	li	a3,0
	auipc	a2,0x1d
	addi	a2,a2,-1142 # 0x43cb0 # luai_ctype_+0x8a0>
	li	a1,3
	mv	s2,a0
	mv	a0,s0
	jal	ra,0x2217c # luaL_optlstring>
	mv	s3,a0
	li	a1,4
	mv	a0,s0
	jal	ra,0x1144a # lua_type>
	addi	s1,a0,1
	snez	s1,s1
	slli	s1,s1,0x2
	beqz	s2,0x27182 # luaB_load+0x74>
	mv	a2,s2
	li	a1,2
	li	a3,0
	mv	a0,s0
	jal	ra,0x2217c # luaL_optlstring>
	ld	a2,8(sp)
	mv	a3,a0
	mv	a1,s2
	mv	a4,s3
	mv	a0,s0
	jal	ra,0x22610 # luaL_loadbufferx>
	mv	a1,a0
	mv	a2,s1
	mv	a0,s0
	jal	ra,0x270c4 # load_aux>
	ld	ra,56(sp)
	ld	s0,48(sp)
	ld	s1,40(sp)
	ld	s2,32(sp)
	ld	s3,24(sp)
	addi	sp,sp,64
	ret
	li	a3,0
	auipc	a2,0x1d
	addi	a2,a2,-1228 # 0x43cb8 # luai_ctype_+0x8a8>
	li	a1,2
	mv	a0,s0
	jal	ra,0x2217c # luaL_optlstring>
	li	a2,6
	mv	s2,a0
	li	a1,1
	mv	a0,s0
	jal	ra,0x220c4 # luaL_checktype>
	li	a1,5
	mv	a0,s0
	jal	ra,0x1110c # lua_settop>
	auipc	a1,0x0
	addi	a1,a1,-1226 # 0x26cde # generic_reader>
	mv	a4,s3
	mv	a3,s2
	li	a2,0
	mv	a0,s0
	jal	ra,0x129fa # lua_load>
	mv	a1,a0
	j	0x2716c # luaB_load+0x5e>

luaB_loadfile:
	addi	sp,sp,-48
	li	a3,0
	li	a2,0
	li	a1,1
	sd	ra,40(sp)
	sd	s0,32(sp)
	sd	s1,24(sp)
	mv	s0,a0
	sd	s2,16(sp)
	sd	s3,8(sp)
	jal	ra,0x2217c # luaL_optlstring>
	li	a3,0
	li	a2,0
	li	a1,2
	mv	s1,a0
	mv	a0,s0
	jal	ra,0x2217c # luaL_optlstring>
	mv	s2,a0
	li	a1,3
	mv	a0,s0
	jal	ra,0x1144a # lua_type>
	li	a5,-1
	li	s3,0
	beq	a0,a5,0x271fa # luaB_loadfile+0x3a>
	li	s3,3
	mv	a2,s2
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x2244e # luaL_loadfilex>
	mv	a1,a0
	mv	a0,s0
	ld	s0,32(sp)
	ld	ra,40(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	mv	a2,s3
	ld	s3,8(sp)
	addi	sp,sp,48
	j	0x270c4 # load_aux>

luaB_getmetatable:
	addi	sp,sp,-16
	li	a1,1
	sd	s0,0(sp)
	sd	ra,8(sp)
	mv	s0,a0
	jal	ra,0x22102 # luaL_checkany>
	li	a1,1
	mv	a0,s0
	jal	ra,0x122ea # lua_getmetatable>
	beqz	a0,0x2724a # luaB_getmetatable+0x32>
	mv	a0,s0
	auipc	a2,0x1d
	addi	a2,a2,-1626 # 0x43bd8 # luai_ctype_+0x7c8>
	li	a1,1
	jal	ra,0x22666 # luaL_getmetafield>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret
	mv	a0,s0
	jal	ra,0x11e16 # lua_pushnil>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret

luaB_assert:
	addi	sp,sp,-16
	li	a1,1
	sd	s0,0(sp)
	sd	ra,8(sp)
	mv	s0,a0
	jal	ra,0x119ee # lua_toboolean>
	beqz	a0,0x27276 # luaB_assert+0x1c>
	mv	a0,s0
	ld	s0,0(sp)
	ld	ra,8(sp)
	addi	sp,sp,16
	j	0x110fc # lua_gettop>
	mv	a0,s0
	li	a1,1
	jal	ra,0x22102 # luaL_checkany>
	li	a2,-1
	mv	a0,s0
	li	a1,1
	jal	ra,0x111ea # lua_rotate>
	mv	a0,s0
	li	a1,-2
	jal	ra,0x1110c # lua_settop>
	auipc	a1,0x1d
	addi	a1,a1,-1488 # 0x43cc0 # luai_ctype_+0x8b0>
	mv	a0,s0
	jal	ra,0x11e96 # lua_pushstring>
	mv	a0,s0
	li	a1,1
	jal	ra,0x1110c # lua_settop>
	mv	a0,s0
	ld	s0,0(sp)
	ld	ra,8(sp)
	addi	sp,sp,16
	j	0x26da4 # luaB_error>

luaB_pcall:
	addi	sp,sp,-16
	li	a1,1
	sd	ra,8(sp)
	sd	s0,0(sp)
	mv	s0,a0
	jal	ra,0x22102 # luaL_checkany>
	li	a1,1
	mv	a0,s0
	jal	ra,0x11fdc # lua_pushboolean>
	li	a2,1
	li	a1,1
	mv	a0,s0
	jal	ra,0x111ea # lua_rotate>
	mv	a0,s0
	jal	ra,0x110fc # lua_gettop>
	auipc	a5,0x0
	addi	a5,a5,-694 # 0x27020 # finishpcall>
	addiw	a1,a0,-2
	li	a4,0
	li	a3,0
	li	a2,-1
	mv	a0,s0
	jal	ra,0x1292a # lua_pcallk>
	sext.w	a0,a0
	li	a5,1
	bltu	a5,a0,0x27302 # luaB_pcall+0x52>
	mv	a0,s0
	ld	s0,0(sp)
	ld	ra,8(sp)
	addi	sp,sp,16
	j	0x110fc # lua_gettop>
	mv	a0,s0
	li	a1,0
	jal	ra,0x11fdc # lua_pushboolean>
	mv	a0,s0
	li	a1,-2
	jal	ra,0x113c8 # lua_pushvalue>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,2
	addi	sp,sp,16
	ret

luaB_xpcall:
	addi	sp,sp,-32
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	mv	s0,a0
	jal	ra,0x110fc # lua_gettop>
	li	a2,6
	mv	s1,a0
	li	a1,2
	mv	a0,s0
	jal	ra,0x220c4 # luaL_checktype>
	li	a1,1
	mv	a0,s0
	jal	ra,0x11fdc # lua_pushboolean>
	li	a1,1
	mv	a0,s0
	jal	ra,0x113c8 # lua_pushvalue>
	li	a2,2
	li	a1,3
	mv	a0,s0
	jal	ra,0x111ea # lua_rotate>
	auipc	a5,0x0
	addi	a5,a5,-816 # 0x27020 # finishpcall>
	li	a4,2
	li	a3,2
	li	a2,-1
	addiw	a1,s1,-2
	mv	a0,s0
	jal	ra,0x1292a # lua_pcallk>
	sext.w	a0,a0
	li	a5,1
	bltu	a5,a0,0x27382 # luaB_xpcall+0x66>
	mv	a0,s0
	jal	ra,0x110fc # lua_gettop>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	addiw	a0,a0,-2
	addi	sp,sp,32
	ret
	mv	a0,s0
	li	a1,0
	jal	ra,0x11fdc # lua_pushboolean>
	mv	a0,s0
	li	a1,-2
	jal	ra,0x113c8 # lua_pushvalue>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	li	a0,2
	addi	sp,sp,32
	ret

luaopen_base:
	lui	a1,0xfff0c
	addi	sp,sp,-16
	li	a2,2
	addi	a1,a1,-1576 # 0xfffffffffff0b9d8 # __BSS_END__+0xffffffffffebd650>
	sd	ra,8(sp)
	sd	s0,0(sp)
	mv	s0,a0
	jal	ra,0x121ea # lua_rawgeti>
	li	a2,0
	mv	a0,s0
	auipc	a1,0x25
	addi	a1,a1,-424 # 0x4c210 # base_funcs>
	jal	ra,0x228d8 # luaL_setfuncs>
	mv	a0,s0
	li	a1,-1
	jal	ra,0x113c8 # lua_pushvalue>
	auipc	a2,0x1c
	addi	a2,a2,-644 # 0x43148 # udatatypename+0x780>
	mv	a0,s0
	li	a1,-2
	jal	ra,0x124d2 # lua_setfield>
	auipc	a1,0x1d
	addi	a1,a1,-1796 # 0x43cd8 # luai_ctype_+0x8c8>
	mv	a0,s0
	jal	ra,0x11e96 # lua_pushstring>
	mv	a0,s0
	auipc	a2,0x1d
	addi	a2,a2,-1804 # 0x43ce0 # luai_ctype_+0x8d0>
	li	a1,-2
	jal	ra,0x124d2 # lua_setfield>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret

luaB_yield:
	addi	sp,sp,-16
	sd	s0,0(sp)
	sd	ra,8(sp)
	mv	s0,a0
	jal	ra,0x110fc # lua_gettop>
	mv	a1,a0
	mv	a0,s0
	ld	s0,0(sp)
	ld	ra,8(sp)
	li	a3,0
	li	a2,0
	addi	sp,sp,16
	j	0x14f32 # lua_yieldk>

auxresume:
	addi	sp,sp,-48
	sd	s0,32(sp)
	mv	s0,a1
	sd	s1,24(sp)
	mv	a1,a2
	mv	s1,a0
	mv	a0,s0
	sd	s2,16(sp)
	sd	ra,40(sp)
	mv	s2,a2
	jal	ra,0x11002 # lua_checkstack>
	beqz	a0,0x2747e # auxresume+0x5c>
	mv	a2,s2
	mv	a1,s0
	mv	a0,s1
	jal	ra,0x11070 # lua_xmove>
	addi	a3,sp,12
	mv	a2,s2
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x14dcc # lua_resume>
	sext.w	a0,a0
	li	a5,1
	bltu	a5,a0,0x2749a # auxresume+0x78>
	lw	a1,12(sp)
	mv	a0,s1
	addiw	a1,a1,1
	jal	ra,0x11002 # lua_checkstack>
	beqz	a0,0x274a8 # auxresume+0x86>
	lw	a2,12(sp)
	mv	a0,s0
	mv	a1,s1
	jal	ra,0x11070 # lua_xmove>
	lw	a0,12(sp)
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	addi	sp,sp,48
	ret
	mv	a0,s1
	auipc	a1,0x1d
	addi	a1,a1,-1544 # 0x43e78 # optsnum.0+0x30>
	jal	ra,0x11e96 # lua_pushstring>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	li	a0,-1
	addi	sp,sp,48
	ret
	mv	a0,s0
	li	a2,1
	mv	a1,s1
	jal	ra,0x11070 # lua_xmove>
	li	a0,-1
	j	0x27472 # auxresume+0x50>
	lw	a1,12(sp)
	mv	a0,s0
	not	a1,a1
	jal	ra,0x1110c # lua_settop>
	auipc	a1,0x1d
	addi	a1,a1,-1564 # 0x43e98 # optsnum.0+0x50>
	mv	a0,s1
	jal	ra,0x11e96 # lua_pushstring>
	li	a0,-1
	j	0x27472 # auxresume+0x50>

luaB_auxwrap:
	lui	a1,0xfff0c
	addi	sp,sp,-32
	addi	a1,a1,-1577 # 0xfffffffffff0b9d7 # __BSS_END__+0xffffffffffebd64f>
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	mv	s0,a0
	jal	ra,0x11cf6 # lua_tothread>
	mv	s1,a0
	mv	a0,s0
	jal	ra,0x110fc # lua_gettop>
	mv	a2,a0
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x27422 # auxresume>
	srliw	a5,a0,0x1f
	bnez	a5,0x274fe # luaB_auxwrap+0x38>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret
	mv	a0,s1
	jal	ra,0x12ab4 # lua_status>
	sext.w	a0,a0
	li	a5,1
	bltu	a5,a0,0x27528 # luaB_auxwrap+0x62>
	li	a1,-1
	mv	a0,s0
	jal	ra,0x1144a # lua_type>
	li	a5,4
	beq	a0,a5,0x27544 # luaB_auxwrap+0x7e>
	mv	a0,s0
	ld	s0,16(sp)
	ld	ra,24(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	j	0x12c90 # lua_error>
	mv	a0,s1
	jal	ra,0x1bb20 # lua_resetthread>
	mv	a5,a0
	li	a2,1
	mv	a0,s1
	mv	a1,s0
	mv	s1,a5
	jal	ra,0x11070 # lua_xmove>
	li	a5,4
	beq	s1,a5,0x2751a # luaB_auxwrap+0x54>
	j	0x2750c # luaB_auxwrap+0x46>
	mv	a0,s0
	li	a1,1
	jal	ra,0x21b80 # luaL_where>
	mv	a0,s0
	li	a1,-2
	li	a2,1
	jal	ra,0x111ea # lua_rotate>
	li	a1,2
	mv	a0,s0
	jal	ra,0x12d8e # lua_concat>
	j	0x2751a # luaB_auxwrap+0x54>

luaB_corunning:
	addi	sp,sp,-16
	sd	ra,8(sp)
	sd	s0,0(sp)
	mv	s0,a0
	jal	ra,0x12008 # lua_pushthread>
	mv	a1,a0
	mv	a0,s0
	jal	ra,0x11fdc # lua_pushboolean>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,2
	addi	sp,sp,16
	ret

luaB_cocreate:
	addi	sp,sp,-32
	li	a2,6
	li	a1,1
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	mv	s0,a0
	jal	ra,0x220c4 # luaL_checktype>
	mv	a0,s0
	jal	ra,0x1b932 # lua_newthread>
	mv	s1,a0
	li	a1,1
	mv	a0,s0
	jal	ra,0x113c8 # lua_pushvalue>
	mv	a0,s0
	mv	a1,s1
	li	a2,1
	jal	ra,0x11070 # lua_xmove>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	li	a0,1
	addi	sp,sp,32
	ret

luaB_yieldable:
	addi	sp,sp,-32
	li	a1,1
	sd	s0,16(sp)
	sd	s1,8(sp)
	mv	s0,a0
	sd	ra,24(sp)
	jal	ra,0x1144a # lua_type>
	li	a5,-1
	mv	s1,s0
	bne	a0,a5,0x275e8 # luaB_yieldable+0x32>
	mv	a0,s1
	jal	ra,0x14f22 # lua_isyieldable>
	mv	a1,a0
	mv	a0,s0
	jal	ra,0x11fdc # lua_pushboolean>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	li	a0,1
	addi	sp,sp,32
	ret
	li	a1,1
	mv	a0,s0
	jal	ra,0x11cf6 # lua_tothread>
	mv	s1,a0
	bnez	a0,0x275ce # luaB_yieldable+0x18>
	auipc	a2,0x1b
	addi	a2,a2,964 # 0x429b8 # dummynode_+0x1d8>
	li	a1,1
	mv	a0,s0
	jal	ra,0x21ce6 # luaL_typeerror>
	j	0x275ce # luaB_yieldable+0x18>

auxstatus:
	beq	a1,a0,0x2764e # auxstatus+0x48>
	addi	sp,sp,-160
	mv	a0,a1
	sd	s0,144(sp)
	sd	ra,152(sp)
	mv	s0,a1
	jal	ra,0x12ab4 # lua_status>
	beqz	a0,0x2762a # auxstatus+0x24>
	addi	a0,a0,-1
	seqz	a0,a0
	addi	a0,a0,1
	ld	ra,152(sp)
	ld	s0,144(sp)
	addi	sp,sp,160
	ret
	addi	a2,sp,8
	li	a1,0
	mv	a0,s0
	jal	ra,0x137d0 # lua_getstack>
	mv	a5,a0
	li	a0,3
	bnez	a5,0x27622 # auxstatus+0x1c>
	mv	a0,s0
	jal	ra,0x110fc # lua_gettop>
	ld	ra,152(sp)
	ld	s0,144(sp)
	snez	a0,a0
	addi	a0,a0,1
	addi	sp,sp,160
	ret
	li	a0,0
	ret

luaB_costatus:
	addi	sp,sp,-32
	li	a1,1
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	ra,24(sp)
	mv	s0,a0
	jal	ra,0x11cf6 # lua_tothread>
	mv	s1,a0
	beqz	a0,0x27690 # luaB_costatus+0x3e>
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x27606 # auxstatus>
	slli	a5,a0,0x3
	auipc	a0,0x25
	addi	a0,a0,-706 # 0x4c3b0 # statname>
	add	a0,a0,a5
	ld	a1,0(a0)
	mv	a0,s0
	jal	ra,0x11e96 # lua_pushstring>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	li	a0,1
	addi	sp,sp,32
	ret
	auipc	a2,0x1b
	addi	a2,a2,808 # 0x429b8 # dummynode_+0x1d8>
	li	a1,1
	mv	a0,s0
	jal	ra,0x21ce6 # luaL_typeerror>
	j	0x27666 # luaB_costatus+0x14>

luaB_coresume:
	addi	sp,sp,-32
	li	a1,1
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	ra,24(sp)
	mv	s1,a0
	jal	ra,0x11cf6 # lua_tothread>
	mv	s0,a0
	beqz	a0,0x276f4 # luaB_coresume+0x52>
	mv	a0,s1
	jal	ra,0x110fc # lua_gettop>
	addiw	a2,a0,-1
	mv	a1,s0
	mv	a0,s1
	jal	ra,0x27422 # auxresume>
	srliw	a5,a0,0x1f
	mv	s0,a0
	bnez	a5,0x27706 # luaB_coresume+0x64>
	mv	a0,s1
	li	a1,1
	jal	ra,0x11fdc # lua_pushboolean>
	not	a1,s0
	mv	a0,s1
	li	a2,1
	sext.w	a1,a1
	jal	ra,0x111ea # lua_rotate>
	ld	ra,24(sp)
	addiw	a0,s0,1
	ld	s0,16(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret
	auipc	a2,0x1b
	addi	a2,a2,708 # 0x429b8 # dummynode_+0x1d8>
	li	a1,1
	mv	a0,s1
	jal	ra,0x21ce6 # luaL_typeerror>
	j	0x276b6 # luaB_coresume+0x14>
	mv	a0,s1
	li	a1,0
	jal	ra,0x11fdc # lua_pushboolean>
	mv	a0,s1
	li	a2,1
	li	a1,-2
	jal	ra,0x111ea # lua_rotate>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	li	a0,2
	addi	sp,sp,32
	ret

luaB_close:
	addi	sp,sp,-32
	li	a1,1
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	ra,24(sp)
	mv	s1,a0
	jal	ra,0x11cf6 # lua_tothread>
	mv	s0,a0
	beqz	a0,0x277aa # luaB_close+0x86>
	mv	a1,s0
	mv	a0,s1
	jal	ra,0x27606 # auxstatus>
	addiw	a4,a0,-1
	li	a5,1
	bleu	a4,a5,0x27770 # luaB_close+0x4c>
	slli	a5,a0,0x3
	auipc	a0,0x25
	addi	a0,a0,-926 # 0x4c3b0 # statname>
	ld	s0,16(sp)
	add	a0,a0,a5
	ld	a2,0(a0)
	ld	ra,24(sp)
	mv	a0,s1
	ld	s1,8(sp)
	auipc	a1,0x1c
	addi	a1,a1,1878 # 0x43eb8 # optsnum.0+0x70>
	addi	sp,sp,32
	j	0x21bdc # luaL_error>
	mv	a0,s0
	jal	ra,0x1bb20 # lua_resetthread>
	bnez	a0,0x2778c # luaB_close+0x68>
	mv	a0,s1
	li	a1,1
	jal	ra,0x11fdc # lua_pushboolean>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	li	a0,1
	addi	sp,sp,32
	ret
	mv	a0,s1
	li	a1,0
	jal	ra,0x11fdc # lua_pushboolean>
	mv	a0,s0
	mv	a1,s1
	li	a2,1
	jal	ra,0x11070 # lua_xmove>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	li	a0,2
	addi	sp,sp,32
	ret
	auipc	a2,0x1b
	addi	a2,a2,526 # 0x429b8 # dummynode_+0x1d8>
	li	a1,1
	mv	a0,s1
	jal	ra,0x21ce6 # luaL_typeerror>
	j	0x27738 # luaB_close+0x14>

luaB_cowrap:
	addi	sp,sp,-32
	li	a2,6
	li	a1,1
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	mv	s0,a0
	jal	ra,0x220c4 # luaL_checktype>
	mv	a0,s0
	jal	ra,0x1b932 # lua_newthread>
	mv	s1,a0
	li	a1,1
	mv	a0,s0
	jal	ra,0x113c8 # lua_pushvalue>
	mv	a1,s1
	mv	a0,s0
	li	a2,1
	jal	ra,0x11070 # lua_xmove>
	mv	a0,s0
	li	a2,1
	auipc	a1,0x0
	addi	a1,a1,-806 # 0x274c6 # luaB_auxwrap>
	jal	ra,0x11f4a # lua_pushcclosure>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	li	a0,1
	addi	sp,sp,32
	ret

luaopen_coroutine:
	addi	sp,sp,-16
	auipc	a5,0x1a
	fld	fa0,-1222(a5) # 0x41340 # __clzdi2+0x478>
	li	a1,136
	sd	ra,8(sp)
	sd	s0,0(sp)
	mv	s0,a0
	jal	ra,0x230e8 # luaL_checkversion_>
	mv	a0,s0
	li	a2,8
	li	a1,0
	jal	ra,0x1228e # lua_createtable>
	mv	a0,s0
	li	a2,0
	auipc	a1,0x25
	addi	a1,a1,-1114 # 0x4c3d0 # co_funcs>
	jal	ra,0x228d8 # luaL_setfuncs>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret

db_setcstacklimit:
	addi	sp,sp,-16
	li	a1,1
	sd	ra,8(sp)
	sd	s0,0(sp)
	mv	s0,a0
	jal	ra,0x22270 # luaL_checkinteger>
	sext.w	a1,a0
	mv	a0,s0
	jal	ra,0x1b804 # lua_setcstacklimit>
	mv	a1,a0
	mv	a0,s0
	jal	ra,0x11e32 # lua_pushinteger>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret

db_getregistry:
	lui	a1,0xfff0c
	addi	sp,sp,-16
	addi	a1,a1,-1576 # 0xfffffffffff0b9d8 # __BSS_END__+0xffffffffffebd650>
	sd	ra,8(sp)
	jal	ra,0x113c8 # lua_pushvalue>
	ld	ra,8(sp)
	li	a0,1
	addi	sp,sp,16
	ret

auxupvalue:
	addi	sp,sp,-32
	sd	s1,8(sp)
	mv	s1,a1
	li	a1,2
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s2,0(sp)
	mv	s0,a0
	jal	ra,0x22270 # luaL_checkinteger>
	mv	s2,a0
	li	a2,6
	li	a1,1
	mv	a0,s0
	jal	ra,0x220c4 # luaL_checktype>
	sext.w	s2,s2
	mv	a2,s2
	li	a1,1
	mv	a0,s0
	beqz	s1,0x278d8 # auxupvalue+0x56>
	jal	ra,0x12ed4 # lua_getupvalue>
	mv	a1,a0
	li	a0,0
	beqz	a1,0x278cc # auxupvalue+0x4a>
	mv	a0,s0
	jal	ra,0x11e96 # lua_pushstring>
	mv	a0,s0
	li	a2,1
	not	a1,s1
	jal	ra,0x111ea # lua_rotate>
	addiw	a0,s1,1
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret
	jal	ra,0x12fc2 # lua_setupvalue>
	mv	a1,a0
	j	0x278b2 # auxupvalue+0x30>

db_setupvalue:
	addi	sp,sp,-16
	li	a1,3
	sd	s0,0(sp)
	sd	ra,8(sp)
	mv	s0,a0
	jal	ra,0x22102 # luaL_checkany>
	mv	a0,s0
	ld	s0,0(sp)
	ld	ra,8(sp)
	li	a1,0
	addi	sp,sp,16
	j	0x27882 # auxupvalue>

db_getupvalue:
	li	a1,1
	j	0x27882 # auxupvalue>

db_setmetatable:
	addi	sp,sp,-16
	li	a1,2
	sd	s0,0(sp)
	sd	ra,8(sp)
	mv	s0,a0
	jal	ra,0x1144a # lua_type>
	beqz	a0,0x27924 # db_setmetatable+0x26>
	li	a5,5
	beq	a0,a5,0x27924 # db_setmetatable+0x26>
	auipc	a2,0x1c
	addi	a2,a2,764 # 0x43c10 # luai_ctype_+0x800>
	li	a1,2
	mv	a0,s0
	jal	ra,0x21ce6 # luaL_typeerror>
	mv	a0,s0
	li	a1,2
	jal	ra,0x1110c # lua_settop>
	mv	a0,s0
	li	a1,1
	jal	ra,0x1272e # lua_setmetatable>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret

db_setuservalue:
	addi	sp,sp,-32
	li	a2,1
	li	a1,3
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	mv	s0,a0
	jal	ra,0x222c8 # luaL_optinteger>
	li	a2,7
	mv	s1,a0
	li	a1,1
	mv	a0,s0
	jal	ra,0x220c4 # luaL_checktype>
	li	a1,2
	mv	a0,s0
	jal	ra,0x22102 # luaL_checkany>
	li	a1,2
	mv	a0,s0
	jal	ra,0x1110c # lua_settop>
	sext.w	a2,s1
	li	a1,1
	mv	a0,s0
	jal	ra,0x12802 # lua_setiuservalue>
	beqz	a0,0x27986 # db_setuservalue+0x48>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	li	a0,1
	addi	sp,sp,32
	ret
	mv	a0,s0
	jal	ra,0x11e16 # lua_pushnil>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	li	a0,1
	addi	sp,sp,32
	ret

checkupval:
	addi	sp,sp,-48
	sd	s1,24(sp)
	mv	s1,a1
	mv	a1,a2
	sd	ra,40(sp)
	sd	s0,32(sp)
	sd	s2,16(sp)
	mv	s0,a0
	mv	s2,a3
	sd	s3,8(sp)
	sd	s4,0(sp)
	mv	s4,a2
	jal	ra,0x22270 # luaL_checkinteger>
	mv	a1,s1
	sext.w	s3,a0
	li	a2,6
	mv	a0,s0
	jal	ra,0x220c4 # luaL_checktype>
	mv	a1,s1
	mv	a2,s3
	mv	a0,s0
	jal	ra,0x1307e # lua_upvalueid>
	mv	s1,a0
	beqz	s2,0x279d8 # checkupval+0x40>
	beqz	a0,0x279ea # checkupval+0x52>
	sw	s3,0(s2)
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	ld	s4,0(sp)
	mv	a0,s1
	ld	s1,24(sp)
	addi	sp,sp,48
	ret
	auipc	a2,0x1c
	addi	a2,a2,1358 # 0x43f38 # optsnum.0+0xf0>
	mv	a1,s4
	mv	a0,s0
	jal	ra,0x21c20 # luaL_argerror>
	j	0x279d4 # checkupval+0x3c>

db_upvaluejoin:
	addi	sp,sp,-32
	addi	a3,sp,8
	li	a2,2
	li	a1,1
	sd	ra,24(sp)
	sd	s0,16(sp)
	mv	s0,a0
	jal	ra,0x27998 # checkupval>
	li	a1,3
	addi	a3,sp,12
	li	a2,4
	mv	a0,s0
	jal	ra,0x27998 # checkupval>
	li	a1,1
	mv	a0,s0
	jal	ra,0x114e2 # lua_iscfunction>
	bnez	a0,0x27a46 # db_upvaluejoin+0x4a>
	li	a1,3
	mv	a0,s0
	jal	ra,0x114e2 # lua_iscfunction>
	bnez	a0,0x27a60 # db_upvaluejoin+0x64>
	lw	a4,12(sp)
	lw	a2,8(sp)
	mv	a0,s0
	li	a3,3
	li	a1,1
	jal	ra,0x13160 # lua_upvaluejoin>
	ld	ra,24(sp)
	ld	s0,16(sp)
	li	a0,0
	addi	sp,sp,32
	ret
	li	a1,1
	auipc	a2,0x1c
	addi	a2,a2,1288 # 0x43f50 # optsnum.0+0x108>
	mv	a0,s0
	jal	ra,0x21c20 # luaL_argerror>
	li	a1,3
	mv	a0,s0
	jal	ra,0x114e2 # lua_iscfunction>
	beqz	a0,0x27a2e # db_upvaluejoin+0x32>
	auipc	a2,0x1c
	addi	a2,a2,1264 # 0x43f50 # optsnum.0+0x108>
	li	a1,3
	mv	a0,s0
	jal	ra,0x21c20 # luaL_argerror>
	j	0x27a2e # db_upvaluejoin+0x32>

db_getmetatable:
	addi	sp,sp,-16
	li	a1,1
	sd	s0,0(sp)
	sd	ra,8(sp)
	mv	s0,a0
	jal	ra,0x22102 # luaL_checkany>
	li	a1,1
	mv	a0,s0
	jal	ra,0x122ea # lua_getmetatable>
	beqz	a0,0x27a94 # db_getmetatable+0x22>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret
	mv	a0,s0
	jal	ra,0x11e16 # lua_pushnil>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret

db_getuservalue:
	addi	sp,sp,-32
	li	a2,1
	li	a1,2
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	mv	s0,a0
	jal	ra,0x222c8 # luaL_optinteger>
	mv	s1,a0
	li	a1,1
	mv	a0,s0
	jal	ra,0x1144a # lua_type>
	li	a5,7
	beq	a0,a5,0x27ad8 # db_getuservalue+0x34>
	mv	a0,s0
	jal	ra,0x11e16 # lua_pushnil>
	li	a0,1
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret
	sext.w	a2,s1
	li	a1,1
	mv	a0,s0
	jal	ra,0x12398 # lua_getiuservalue>
	mv	a4,a0
	li	a5,-1
	li	a0,1
	beq	a4,a5,0x27ace # db_getuservalue+0x2a>
	mv	a0,s0
	li	a1,1
	jal	ra,0x11fdc # lua_pushboolean>
	li	a0,2
	j	0x27ace # db_getuservalue+0x2a>

db_debug:
	addi	sp,sp,-336
	auipc	a5,0x26
	ld	a5,-1868(a5) # 0x4d3b0 # _GLOBAL_OFFSET_TABLE_+0xa8>
	sd	s2,304(sp)
	sd	s3,296(sp)
	ld	s2,0(a5)
	lui	s3,0x746e7
	auipc	a5,0x26
	ld	a5,-1960(a5) # 0x4d368 # _GLOBAL_OFFSET_TABLE_+0x60>
	sd	s0,320(sp)
	sd	s1,312(sp)
	sd	s4,288(sp)
	sd	s5,280(sp)
	sd	s6,272(sp)
	sd	s7,264(sp)
	sd	s8,256(sp)
	ld	s5,0(a5)
	sd	ra,328(sp)
	mv	s1,a0
	mv	s0,sp
	auipc	s4,0x1c
	addi	s4,s4,1080 # 0x43f68 # optsnum.0+0x120>
	addi	s3,s3,-157 # 0x746e6f63 # __BSS_END__+0x74698bdb>
	li	s8,10
	auipc	s6,0x1c
	addi	s6,s6,1090 # 0x43f80 # optsnum.0+0x138>
	auipc	s7,0x19
	addi	s7,s7,1098 # 0x40f90 # __clzdi2+0xc8>
	j	0x27b9c # db_debug+0xa2>
	jal	ra,0x369fa # strlen>
	mv	a2,a0
	mv	a3,s6
	li	a4,0
	mv	a1,s0
	mv	a0,s1
	jal	ra,0x22610 # luaL_loadbufferx>
	mv	a6,a0
	li	a5,0
	li	a4,0
	li	a3,0
	li	a2,0
	li	a1,0
	mv	a0,s1
	bnez	a6,0x27b7a # db_debug+0x80>
	jal	ra,0x1292a # lua_pcallk>
	beqz	a0,0x27b94 # db_debug+0x9a>
	li	a2,0
	li	a1,-1
	mv	a0,s1
	jal	ra,0x2272e # luaL_tolstring>
	mv	a2,a0
	mv	a1,s7
	mv	a0,s2
	jal	ra,0x33970 # fprintf>
	mv	a0,s2
	jal	ra,0x3362a # fflush>
	li	a1,0
	mv	a0,s1
	jal	ra,0x1110c # lua_settop>
	mv	a3,s2
	li	a1,1
	li	a2,11
	mv	a0,s4
	jal	ra,0x34010 # fwrite>
	mv	a0,s2
	jal	ra,0x3362a # fflush>
	mv	a2,s5
	li	a1,250
	mv	a0,s0
	jal	ra,0x3374e # fgets>
	mv	a5,a0
	mv	a0,s0
	beqz	a5,0x27bce # db_debug+0xd4>
	lw	a5,0(s0)
	bne	a5,s3,0x27b50 # db_debug+0x56>
	lhu	a5,4(s0)
	bne	a5,s8,0x27b50 # db_debug+0x56>
	ld	ra,328(sp)
	ld	s0,320(sp)
	ld	s1,312(sp)
	ld	s2,304(sp)
	ld	s3,296(sp)
	ld	s4,288(sp)
	ld	s5,280(sp)
	ld	s6,272(sp)
	ld	s7,264(sp)
	ld	s8,256(sp)
	li	a0,0
	addi	sp,sp,336
	ret

hookf:
	addi	sp,sp,-32
	sd	s1,8(sp)
	mv	s1,a1
	lui	a1,0xfff0c
	auipc	a2,0x1c
	addi	a2,a2,934 # 0x43f98 # optsnum.0+0x150>
	addi	a1,a1,-1576 # 0xfffffffffff0b9d8 # __BSS_END__+0xffffffffffebd650>
	sd	ra,24(sp)
	sd	s0,16(sp)
	mv	s0,a0
	jal	ra,0x120a4 # lua_getfield>
	mv	a0,s0
	jal	ra,0x12008 # lua_pushthread>
	li	a1,-2
	mv	a0,s0
	jal	ra,0x1219e # lua_rawget>
	li	a5,6
	beq	a0,a5,0x27c26 # hookf+0x3e>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret
	lw	a5,0(s1)
	mv	a0,s0
	slli	a4,a5,0x3
	auipc	a5,0x25
	addi	a5,a5,-1998 # 0x4c460 # hooknames.0>
	add	a5,a5,a4
	ld	a1,0(a5)
	jal	ra,0x11e96 # lua_pushstring>
	lw	a1,48(s1)
	mv	a0,s0
	bltz	a1,0x27c60 # hookf+0x78>
	jal	ra,0x11e32 # lua_pushinteger>
	mv	a0,s0
	ld	s0,16(sp)
	ld	ra,24(sp)
	ld	s1,8(sp)
	li	a4,0
	li	a3,0
	li	a2,0
	li	a1,2
	addi	sp,sp,32
	j	0x128c8 # lua_callk>
	jal	ra,0x11e16 # lua_pushnil>
	j	0x27c4a # hookf+0x62>

db_upvalueid:
	addi	sp,sp,-32
	li	a1,2
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	mv	s0,a0
	jal	ra,0x22270 # luaL_checkinteger>
	mv	s1,a0
	li	a2,6
	li	a1,1
	mv	a0,s0
	jal	ra,0x220c4 # luaL_checktype>
	sext.w	a2,s1
	li	a1,1
	mv	a0,s0
	jal	ra,0x1307e # lua_upvalueid>
	beqz	a0,0x27ca4 # db_upvalueid+0x3e>
	mv	a1,a0
	mv	a0,s0
	jal	ra,0x11ff8 # lua_pushlightuserdata>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	li	a0,1
	addi	sp,sp,32
	ret
	mv	a0,s0
	jal	ra,0x11e16 # lua_pushnil>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	li	a0,1
	addi	sp,sp,32
	ret

db_traceback:
	addi	sp,sp,-48
	li	a1,1
	sd	s0,32(sp)
	sd	ra,40(sp)
	sd	s1,24(sp)
	sd	s2,16(sp)
	sd	s3,8(sp)
	sd	s4,0(sp)
	mv	s0,a0
	jal	ra,0x1144a # lua_type>
	li	a5,8
	beq	a0,a5,0x27d2e # db_traceback+0x78>
	mv	s2,s0
	li	s3,1
	li	s4,0
	li	a2,0
	mv	a1,s3
	mv	a0,s0
	jal	ra,0x11a62 # lua_tolstring>
	mv	s1,a0
	beqz	a0,0x27d18 # db_traceback+0x62>
	sub	a2,s0,s2
	seqz	a2,a2
	addi	a1,s4,2
	mv	a0,s0
	jal	ra,0x222c8 # luaL_optinteger>
	sext.w	a3,a0
	mv	a2,s1
	mv	a1,s2
	mv	a0,s0
	jal	ra,0x22bc0 # luaL_traceback>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	ld	s4,0(sp)
	li	a0,1
	addi	sp,sp,48
	ret
	mv	a1,s3
	mv	a0,s0
	jal	ra,0x1144a # lua_type>
	blez	a0,0x27ce6 # db_traceback+0x30>
	mv	a1,s3
	mv	a0,s0
	jal	ra,0x113c8 # lua_pushvalue>
	j	0x27d06 # db_traceback+0x50>
	li	a1,1
	mv	a0,s0
	jal	ra,0x11cf6 # lua_tothread>
	mv	s2,a0
	li	s3,2
	li	s4,1
	j	0x27cd8 # db_traceback+0x22>

db_gethook:
	addi	sp,sp,-48
	li	a1,1
	sd	s0,32(sp)
	sd	s2,16(sp)
	mv	s0,a0
	sd	ra,40(sp)
	sd	s1,24(sp)
	jal	ra,0x1144a # lua_type>
	li	a5,8
	mv	s2,s0
	beq	a0,a5,0x27e48 # db_gethook+0x10a>
	mv	a0,s2
	jal	ra,0x137c2 # lua_gethookmask>
	mv	s1,a0
	mv	a0,s2
	jal	ra,0x137be # lua_gethook>
	beqz	a0,0x27e64 # db_gethook+0x126>
	auipc	a5,0x0
	addi	a5,a5,-386 # 0x27be8 # hookf>
	beq	a0,a5,0x27dea # db_gethook+0xac>
	auipc	a1,0x1c
	addi	a1,a1,562 # 0x43fa8 # optsnum.0+0x160>
	mv	a0,s0
	jal	ra,0x11e96 # lua_pushstring>
	andi	a5,s1,1
	bnez	a5,0x27dda # db_gethook+0x9c>
	addi	a1,sp,8
	mv	a4,a1
	andi	a3,s1,2
	beqz	a3,0x27da2 # db_gethook+0x64>
	addiw	a5,a5,1
	li	a3,114
	sb	a3,0(a4)
	add	a4,a1,a5
	andi	s1,s1,4
	beqz	s1,0x27db4 # db_gethook+0x76>
	addiw	a5,a5,1
	li	a3,108
	sb	a3,0(a4)
	add	a4,a1,a5
	sb	zero,0(a4)
	mv	a0,s0
	jal	ra,0x11e96 # lua_pushstring>
	mv	a0,s2
	jal	ra,0x137ca # lua_gethookcount>
	mv	a1,a0
	mv	a0,s0
	jal	ra,0x11e32 # lua_pushinteger>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	li	a0,3
	addi	sp,sp,48
	ret
	li	a4,99
	sb	a4,8(sp)
	addi	a1,sp,8
	addi	a4,sp,9
	j	0x27d8e # db_gethook+0x50>
	lui	a1,0xfff0c
	auipc	a2,0x1c
	addi	a2,a2,426 # 0x43f98 # optsnum.0+0x150>
	addi	a1,a1,-1576 # 0xfffffffffff0b9d8 # __BSS_END__+0xffffffffffebd650>
	mv	a0,s0
	jal	ra,0x120a4 # lua_getfield>
	beq	s0,s2,0x27e1c # db_gethook+0xde>
	li	a1,1
	mv	a0,s2
	jal	ra,0x11002 # lua_checkstack>
	bnez	a0,0x27e1c # db_gethook+0xde>
	auipc	a1,0x1a
	addi	a1,a1,-1438 # 0x41870 # lua_ident+0x4d8>
	mv	a0,s0
	jal	ra,0x21bdc # luaL_error>
	mv	a0,s2
	jal	ra,0x12008 # lua_pushthread>
	li	a2,1
	mv	a1,s0
	mv	a0,s2
	jal	ra,0x11070 # lua_xmove>
	li	a1,-2
	mv	a0,s0
	jal	ra,0x1219e # lua_rawget>
	mv	a0,s0
	li	a1,-2
	li	a2,-1
	jal	ra,0x111ea # lua_rotate>
	li	a1,-2
	mv	a0,s0
	jal	ra,0x1110c # lua_settop>
	j	0x27d84 # db_gethook+0x46>
	li	a1,1
	mv	a0,s0
	jal	ra,0x11cf6 # lua_tothread>
	mv	s2,a0
	mv	a0,s2
	jal	ra,0x137c2 # lua_gethookmask>
	mv	s1,a0
	mv	a0,s2
	jal	ra,0x137be # lua_gethook>
	bnez	a0,0x27d6a # db_gethook+0x2c>
	mv	a0,s0
	jal	ra,0x11e16 # lua_pushnil>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	li	a0,1
	addi	sp,sp,48
	ret

db_setlocal:
	addi	sp,sp,-192
	li	a1,1
	sd	s0,176(sp)
	sd	ra,184(sp)
	sd	s1,168(sp)
	sd	s2,160(sp)
	sd	s3,152(sp)
	sd	s4,144(sp)
	mv	s0,a0
	jal	ra,0x1144a # lua_type>
	li	a5,8
	li	a1,1
	beq	a0,a5,0x27f22 # db_setlocal+0xaa>
	mv	a0,s0
	jal	ra,0x22270 # luaL_checkinteger>
	mv	s1,a0
	li	a1,2
	mv	a0,s0
	jal	ra,0x22270 # luaL_checkinteger>
	addi	s3,sp,8
	mv	a5,a0
	sext.w	a1,s1
	mv	a2,s3
	mv	a0,s0
	mv	s1,a5
	jal	ra,0x137d0 # lua_getstack>
	beqz	a0,0x27f02 # db_setlocal+0x8a>
	li	a1,3
	mv	a0,s0
	jal	ra,0x22102 # luaL_checkany>
	li	a1,3
	mv	a0,s0
	sext.w	s1,s1
	jal	ra,0x1110c # lua_settop>
	mv	s2,s0
	li	a2,1
	mv	a1,s2
	mv	a0,s0
	jal	ra,0x11070 # lua_xmove>
	mv	a2,s1
	mv	a1,s3
	mv	a0,s2
	jal	ra,0x1391e # lua_setlocal>
	mv	s1,a0
	beqz	a0,0x27f82 # db_setlocal+0x10a>
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x11e96 # lua_pushstring>
	ld	ra,184(sp)
	ld	s0,176(sp)
	ld	s1,168(sp)
	ld	s2,160(sp)
	ld	s3,152(sp)
	ld	s4,144(sp)
	li	a0,1
	addi	sp,sp,192
	ret
	li	a1,1
	mv	a0,s0
	auipc	a2,0x1c
	addi	a2,a2,178 # 0x43fb8 # optsnum.0+0x170>
	jal	ra,0x21c20 # luaL_argerror>
	ld	ra,184(sp)
	ld	s0,176(sp)
	ld	s1,168(sp)
	ld	s2,160(sp)
	ld	s3,152(sp)
	ld	s4,144(sp)
	addi	sp,sp,192
	ret
	mv	a0,s0
	jal	ra,0x11cf6 # lua_tothread>
	mv	s2,a0
	li	a1,2
	mv	a0,s0
	jal	ra,0x22270 # luaL_checkinteger>
	mv	s4,a0
	li	a1,3
	mv	a0,s0
	jal	ra,0x22270 # luaL_checkinteger>
	addi	s3,sp,8
	mv	s1,a0
	sext.w	a1,s4
	mv	a2,s3
	mv	a0,s2
	jal	ra,0x137d0 # lua_getstack>
	sext.w	s1,s1
	li	a1,2
	beqz	a0,0x27f04 # db_setlocal+0x8c>
	li	a1,4
	mv	a0,s0
	jal	ra,0x22102 # luaL_checkany>
	li	a1,4
	mv	a0,s0
	jal	ra,0x1110c # lua_settop>
	beq	s0,s2,0x27ed0 # db_setlocal+0x58>
	li	a1,1
	mv	a0,s2
	jal	ra,0x11002 # lua_checkstack>
	bnez	a0,0x27ed0 # db_setlocal+0x58>
	auipc	a1,0x1a
	addi	a1,a1,-1794 # 0x41870 # lua_ident+0x4d8>
	mv	a0,s0
	jal	ra,0x21bdc # luaL_error>
	j	0x27ed0 # db_setlocal+0x58>
	li	a1,-2
	mv	a0,s2
	jal	ra,0x1110c # lua_settop>
	j	0x27ee8 # db_setlocal+0x70>

db_sethook:
	addi	sp,sp,-64
	li	a1,1
	sd	s0,48(sp)
	sd	ra,56(sp)
	sd	s1,40(sp)
	sd	s2,32(sp)
	sd	s3,24(sp)
	sd	s4,16(sp)
	sd	s5,8(sp)
	mv	s0,a0
	jal	ra,0x1144a # lua_type>
	li	a5,8
	beq	a0,a5,0x280f0 # db_sethook+0x164>
	mv	s1,s0
	li	s3,1
	li	s2,0
	mv	a1,s3
	mv	a0,s0
	jal	ra,0x1144a # lua_type>
	blez	a0,0x280c8 # db_sethook+0x13c>
	addi	a1,s2,2
	li	a2,0
	mv	a0,s0
	jal	ra,0x22138 # luaL_checklstring>
	mv	s5,a0
	li	a2,6
	mv	a1,s3
	mv	a0,s0
	jal	ra,0x220c4 # luaL_checktype>
	addi	a1,s2,3
	li	a2,0
	mv	a0,s0
	jal	ra,0x222c8 # luaL_optinteger>
	mv	s4,a0
	li	a1,99
	mv	a0,s5
	jal	ra,0x3690a # strchr>
	mv	s2,a0
	li	a1,114
	mv	a0,s5
	sext.w	s4,s4
	snez	s2,s2
	jal	ra,0x3690a # strchr>
	beqz	a0,0x28004 # db_sethook+0x78>
	ori	s2,s2,2
	li	a1,108
	mv	a0,s5
	jal	ra,0x3690a # strchr>
	beqz	a0,0x28014 # db_sethook+0x88>
	ori	s2,s2,4
	auipc	s5,0x0
	addi	s5,s5,-1068 # 0x27be8 # hookf>
	blez	s4,0x28024 # db_sethook+0x98>
	ori	s2,s2,8
	lui	a1,0xfff0c
	auipc	a2,0x1c
	addi	a2,a2,-144 # 0x43f98 # optsnum.0+0x150>
	addi	a1,a1,-1576 # 0xfffffffffff0b9d8 # __BSS_END__+0xffffffffffebd650>
	mv	a0,s0
	jal	ra,0x22e46 # luaL_getsubtable>
	beqz	a0,0x28098 # db_sethook+0x10c>
	beq	s0,s1,0x28058 # db_sethook+0xcc>
	li	a1,1
	mv	a0,s1
	jal	ra,0x11002 # lua_checkstack>
	bnez	a0,0x28058 # db_sethook+0xcc>
	auipc	a1,0x1a
	addi	a1,a1,-2010 # 0x41870 # lua_ident+0x4d8>
	mv	a0,s0
	jal	ra,0x21bdc # luaL_error>
	mv	a0,s1
	jal	ra,0x12008 # lua_pushthread>
	li	a2,1
	mv	a1,s0
	mv	a0,s1
	jal	ra,0x11070 # lua_xmove>
	mv	a1,s3
	mv	a0,s0
	jal	ra,0x113c8 # lua_pushvalue>
	mv	a0,s0
	li	a1,-3
	jal	ra,0x125f6 # lua_rawset>
	mv	a0,s1
	mv	a3,s4
	mv	a2,s2
	mv	a1,s5
	jal	ra,0x13780 # lua_sethook>
	ld	ra,56(sp)
	ld	s0,48(sp)
	ld	s1,40(sp)
	ld	s2,32(sp)
	ld	s3,24(sp)
	ld	s4,16(sp)
	ld	s5,8(sp)
	li	a0,0
	addi	sp,sp,64
	ret
	auipc	a1,0x1c
	addi	a1,a1,256 # 0x44198 # optsnum.0+0x350>
	mv	a0,s0
	jal	ra,0x11e96 # lua_pushstring>
	auipc	a2,0x1b
	addi	a2,a2,-2014 # 0x428c8 # dummynode_+0xe8>
	mv	a0,s0
	li	a1,-2
	jal	ra,0x124d2 # lua_setfield>
	mv	a0,s0
	li	a1,-1
	jal	ra,0x113c8 # lua_pushvalue>
	li	a1,-2
	mv	a0,s0
	jal	ra,0x1272e # lua_setmetatable>
	j	0x2803c # db_sethook+0xb0>
	mv	a1,s3
	mv	a0,s0
	jal	ra,0x1110c # lua_settop>
	lui	a1,0xfff0c
	auipc	a2,0x1c
	addi	a2,a2,-316 # 0x43f98 # optsnum.0+0x150>
	addi	a1,a1,-1576 # 0xfffffffffff0b9d8 # __BSS_END__+0xffffffffffebd650>
	mv	a0,s0
	li	s5,0
	li	s4,0
	li	s2,0
	jal	ra,0x22e46 # luaL_getsubtable>
	bnez	a0,0x2803c # db_sethook+0xb0>
	j	0x28098 # db_sethook+0x10c>
	li	a1,1
	mv	a0,s0
	jal	ra,0x11cf6 # lua_tothread>
	mv	s1,a0
	li	s3,2
	li	s2,1
	j	0x27fb0 # db_sethook+0x24>

db_getlocal:
	addi	sp,sp,-192
	li	a1,1
	sd	s0,176(sp)
	sd	ra,184(sp)
	sd	s1,168(sp)
	sd	s2,160(sp)
	sd	s3,152(sp)
	sd	s4,144(sp)
	mv	s0,a0
	jal	ra,0x1144a # lua_type>
	li	a5,8
	beq	a0,a5,0x281ee # db_getlocal+0xee>
	mv	s1,s0
	li	s3,1
	li	a1,2
	mv	a0,s0
	jal	ra,0x22270 # luaL_checkinteger>
	mv	s2,a0
	mv	a1,s3
	mv	a0,s0
	jal	ra,0x1144a # lua_type>
	li	a5,6
	sext.w	s2,s2
	mv	a1,s3
	beq	a0,a5,0x281c4 # db_getlocal+0xc4>
	mv	a0,s0
	jal	ra,0x22270 # luaL_checkinteger>
	addi	s4,sp,8
	sext.w	a1,a0
	mv	a2,s4
	mv	a0,s1
	jal	ra,0x137d0 # lua_getstack>
	beqz	a0,0x281fe # db_getlocal+0xfe>
	beq	s0,s1,0x28170 # db_getlocal+0x70>
	li	a1,1
	mv	a0,s1
	jal	ra,0x11002 # lua_checkstack>
	bnez	a0,0x28170 # db_getlocal+0x70>
	auipc	a1,0x19
	addi	a1,a1,1806 # 0x41870 # lua_ident+0x4d8>
	mv	a0,s0
	jal	ra,0x21bdc # luaL_error>
	mv	a2,s2
	mv	a1,s4
	mv	a0,s1
	jal	ra,0x138c4 # lua_getlocal>
	mv	s2,a0
	beqz	a0,0x281ac # db_getlocal+0xac>
	li	a2,1
	mv	a1,s0
	mv	a0,s1
	jal	ra,0x11070 # lua_xmove>
	mv	a1,s2
	mv	a0,s0
	jal	ra,0x11e96 # lua_pushstring>
	mv	a0,s0
	li	a2,1
	li	a1,-2
	jal	ra,0x111ea # lua_rotate>
	li	a0,2
	ld	ra,184(sp)
	ld	s0,176(sp)
	ld	s1,168(sp)
	ld	s2,160(sp)
	ld	s3,152(sp)
	ld	s4,144(sp)
	addi	sp,sp,192
	ret
	mv	a0,s0
	jal	ra,0x11e16 # lua_pushnil>
	ld	ra,184(sp)
	ld	s0,176(sp)
	ld	s1,168(sp)
	ld	s2,160(sp)
	ld	s3,152(sp)
	ld	s4,144(sp)
	li	a0,1
	addi	sp,sp,192
	ret
	mv	a0,s0
	jal	ra,0x113c8 # lua_pushvalue>
	mv	a2,s2
	li	a1,0
	mv	a0,s0
	jal	ra,0x138c4 # lua_getlocal>
	mv	a1,a0
	mv	a0,s0
	jal	ra,0x11e96 # lua_pushstring>
	ld	ra,184(sp)
	ld	s0,176(sp)
	ld	s1,168(sp)
	ld	s2,160(sp)
	ld	s3,152(sp)
	ld	s4,144(sp)
	li	a0,1
	addi	sp,sp,192
	ret
	li	a1,1
	mv	a0,s0
	jal	ra,0x11cf6 # lua_tothread>
	mv	s1,a0
	li	s3,2
	li	a1,3
	j	0x28122 # db_getlocal+0x22>
	auipc	a2,0x1c
	addi	a2,a2,-582 # 0x43fb8 # optsnum.0+0x170>
	mv	a1,s3
	mv	a0,s0
	jal	ra,0x21c20 # luaL_argerror>
	j	0x2819c # db_getlocal+0x9c>

db_getinfo:
	addi	sp,sp,-192
	li	a1,1
	sd	s0,176(sp)
	sd	ra,184(sp)
	sd	s1,168(sp)
	sd	s2,160(sp)
	sd	s3,152(sp)
	sd	s4,144(sp)
	mv	s0,a0
	jal	ra,0x1144a # lua_type>
	li	a5,8
	beq	a0,a5,0x284a4 # db_getinfo+0x294>
	li	a3,0
	auipc	a2,0x1c
	addi	a2,a2,-606 # 0x43fd0 # optsnum.0+0x188>
	li	a1,2
	mv	a0,s0
	jal	ra,0x2217c # luaL_optlstring>
	mv	s1,a0
	mv	s2,s0
	li	s3,1
	li	s4,2
	lbu	a4,0(s1)
	li	a5,62
	beq	a4,a5,0x284ee # db_getinfo+0x2de>
	mv	a1,s3
	mv	a0,s0
	jal	ra,0x1144a # lua_type>
	li	a5,6
	beq	a0,a5,0x2850c # db_getinfo+0x2fc>
	mv	a1,s3
	mv	a0,s0
	jal	ra,0x22270 # luaL_checkinteger>
	addi	s3,sp,8
	sext.w	a1,a0
	mv	a2,s3
	mv	a0,s2
	jal	ra,0x137d0 # lua_getstack>
	beqz	a0,0x28568 # db_getinfo+0x358>
	mv	a2,s3
	mv	a1,s1
	mv	a0,s2
	jal	ra,0x13952 # lua_getinfo>
	beqz	a0,0x28542 # db_getinfo+0x332>
	li	a1,0
	mv	a0,s0
	li	a2,0
	jal	ra,0x1228e # lua_createtable>
	li	a1,83
	mv	a0,s1
	jal	ra,0x3690a # strchr>
	beqz	a0,0x2831a # db_getinfo+0x10a>
	ld	a2,48(sp)
	ld	a1,40(sp)
	mv	a0,s0
	jal	ra,0x11e42 # lua_pushlstring>
	auipc	a2,0x1c
	addi	a2,a2,-674 # 0x44008 # optsnum.0+0x1c0>
	li	a1,-2
	mv	a0,s0
	jal	ra,0x124d2 # lua_setfield>
	addi	a1,sp,76
	mv	a0,s0
	jal	ra,0x11e96 # lua_pushstring>
	auipc	a2,0x1c
	addi	a2,a2,-690 # 0x44010 # optsnum.0+0x1c8>
	li	a1,-2
	mv	a0,s0
	jal	ra,0x124d2 # lua_setfield>
	lw	a1,60(sp)
	mv	a0,s0
	jal	ra,0x11e32 # lua_pushinteger>
	auipc	a2,0x1c
	addi	a2,a2,-698 # 0x44020 # optsnum.0+0x1d8>
	li	a1,-2
	mv	a0,s0
	jal	ra,0x124d2 # lua_setfield>
	lw	a1,64(sp)
	mv	a0,s0
	jal	ra,0x11e32 # lua_pushinteger>
	auipc	a2,0x1c
	addi	a2,a2,-706 # 0x44030 # optsnum.0+0x1e8>
	li	a1,-2
	mv	a0,s0
	jal	ra,0x124d2 # lua_setfield>
	ld	a1,32(sp)
	mv	a0,s0
	jal	ra,0x11e96 # lua_pushstring>
	auipc	a2,0x1c
	addi	a2,a2,-714 # 0x44040 # optsnum.0+0x1f8>
	li	a1,-2
	mv	a0,s0
	jal	ra,0x124d2 # lua_setfield>
	li	a1,108
	mv	a0,s1
	jal	ra,0x3690a # strchr>
	beqz	a0,0x2833e # db_getinfo+0x12e>
	lw	a1,56(sp)
	mv	a0,s0
	jal	ra,0x11e32 # lua_pushinteger>
	auipc	a2,0x1c
	addi	a2,a2,-742 # 0x44048 # optsnum.0+0x200>
	li	a1,-2
	mv	a0,s0
	jal	ra,0x124d2 # lua_setfield>
	li	a1,117
	mv	a0,s1
	jal	ra,0x3690a # strchr>
	beqz	a0,0x28398 # db_getinfo+0x188>
	lbu	a1,68(sp)
	mv	a0,s0
	jal	ra,0x11e32 # lua_pushinteger>
	auipc	a2,0x1c
	addi	a2,a2,-764 # 0x44058 # optsnum.0+0x210>
	li	a1,-2
	mv	a0,s0
	jal	ra,0x124d2 # lua_setfield>
	lbu	a1,69(sp)
	mv	a0,s0
	jal	ra,0x11e32 # lua_pushinteger>
	auipc	a2,0x1c
	addi	a2,a2,-782 # 0x44060 # optsnum.0+0x218>
	li	a1,-2
	mv	a0,s0
	jal	ra,0x124d2 # lua_setfield>
	lbu	a1,70(sp)
	mv	a0,s0
	jal	ra,0x11fdc # lua_pushboolean>
	auipc	a2,0x1c
	addi	a2,a2,-800 # 0x44068 # optsnum.0+0x220>
	li	a1,-2
	mv	a0,s0
	jal	ra,0x124d2 # lua_setfield>
	li	a1,110
	mv	a0,s1
	jal	ra,0x3690a # strchr>
	beqz	a0,0x283d4 # db_getinfo+0x1c4>
	ld	a1,16(sp)
	mv	a0,s0
	jal	ra,0x11e96 # lua_pushstring>
	auipc	a2,0x1c
	addi	a2,a2,1348 # 0x448f0 # mode.0+0x570>
	li	a1,-2
	mv	a0,s0
	jal	ra,0x124d2 # lua_setfield>
	ld	a1,24(sp)
	mv	a0,s0
	jal	ra,0x11e96 # lua_pushstring>
	auipc	a2,0x1c
	addi	a2,a2,-844 # 0x44078 # optsnum.0+0x230>
	li	a1,-2
	mv	a0,s0
	jal	ra,0x124d2 # lua_setfield>
	li	a1,114
	mv	a0,s1
	jal	ra,0x3690a # strchr>
	beqz	a0,0x28414 # db_getinfo+0x204>
	lhu	a1,72(sp)
	mv	a0,s0
	jal	ra,0x11e32 # lua_pushinteger>
	auipc	a2,0x1c
	addi	a2,a2,-866 # 0x44088 # optsnum.0+0x240>
	li	a1,-2
	mv	a0,s0
	jal	ra,0x124d2 # lua_setfield>
	lhu	a1,74(sp)
	mv	a0,s0
	jal	ra,0x11e32 # lua_pushinteger>
	auipc	a2,0x1c
	addi	a2,a2,-876 # 0x44098 # optsnum.0+0x250>
	li	a1,-2
	mv	a0,s0
	jal	ra,0x124d2 # lua_setfield>
	li	a1,116
	mv	a0,s1
	jal	ra,0x3690a # strchr>
	beqz	a0,0x2843a # db_getinfo+0x22a>
	lbu	a1,71(sp)
	mv	a0,s0
	jal	ra,0x11fdc # lua_pushboolean>
	auipc	a2,0x1c
	addi	a2,a2,-898 # 0x440a8 # optsnum.0+0x260>
	li	a1,-2
	mv	a0,s0
	jal	ra,0x124d2 # lua_setfield>
	li	a1,76
	mv	a0,s1
	jal	ra,0x3690a # strchr>
	beqz	a0,0x28464 # db_getinfo+0x254>
	li	a2,1
	beq	s0,s2,0x28580 # db_getinfo+0x370>
	mv	a1,s0
	mv	a0,s2
	jal	ra,0x11070 # lua_xmove>
	auipc	a2,0x1c
	addi	a2,a2,-924 # 0x440b8 # optsnum.0+0x270>
	li	a1,-2
	mv	a0,s0
	jal	ra,0x124d2 # lua_setfield>
	li	a1,102
	mv	a0,s1
	jal	ra,0x3690a # strchr>
	mv	a5,a0
	li	a0,1
	beqz	a5,0x28494 # db_getinfo+0x284>
	li	a2,1
	beq	s0,s2,0x2858a # db_getinfo+0x37a>
	mv	a1,s0
	mv	a0,s2
	jal	ra,0x11070 # lua_xmove>
	mv	a0,s0
	auipc	a2,0x1c
	addi	a2,a2,-956 # 0x440c8 # optsnum.0+0x280>
	li	a1,-2
	jal	ra,0x124d2 # lua_setfield>
	li	a0,1
	ld	ra,184(sp)
	ld	s0,176(sp)
	ld	s1,168(sp)
	ld	s2,160(sp)
	ld	s3,152(sp)
	ld	s4,144(sp)
	addi	sp,sp,192
	ret
	li	a1,1
	mv	a0,s0
	jal	ra,0x11cf6 # lua_tothread>
	mv	s2,a0
	li	a3,0
	auipc	a2,0x1c
	addi	a2,a2,-1248 # 0x43fd0 # optsnum.0+0x188>
	li	a1,3
	mv	a0,s0
	jal	ra,0x2217c # luaL_optlstring>
	mv	s1,a0
	beq	s0,s2,0x28562 # db_getinfo+0x352>
	li	a1,3
	mv	a0,s2
	jal	ra,0x11002 # lua_checkstack>
	bnez	a0,0x28562 # db_getinfo+0x352>
	auipc	a1,0x19
	addi	a1,a1,928 # 0x41870 # lua_ident+0x4d8>
	mv	a0,s0
	jal	ra,0x21bdc # luaL_error>
	lbu	a4,0(s1)
	li	a5,62
	li	s3,2
	li	s4,3
	bne	a4,a5,0x28252 # db_getinfo+0x42>
	auipc	a2,0x1c
	addi	a2,a2,-1302 # 0x43fd8 # optsnum.0+0x190>
	mv	a1,s4
	mv	a0,s0
	jal	ra,0x21c20 # luaL_argerror>
	mv	a1,s3
	mv	a0,s0
	jal	ra,0x1144a # lua_type>
	li	a5,6
	bne	a0,a5,0x28260 # db_getinfo+0x50>
	mv	a2,s1
	auipc	a1,0x1c
	addi	a1,a1,-1310 # 0x43ff0 # optsnum.0+0x1a8>
	mv	a0,s0
	jal	ra,0x11f0c # lua_pushfstring>
	mv	a1,s3
	mv	s1,a0
	mv	a0,s0
	jal	ra,0x113c8 # lua_pushvalue>
	li	a2,1
	mv	a1,s2
	mv	a0,s0
	jal	ra,0x11070 # lua_xmove>
	addi	s3,sp,8
	mv	a2,s3
	mv	a1,s1
	mv	a0,s2
	jal	ra,0x13952 # lua_getinfo>
	bnez	a0,0x2828a # db_getinfo+0x7a>
	mv	a1,s4
	mv	a0,s0
	auipc	a2,0x1c
	addi	a2,a2,-1358 # 0x43ff8 # optsnum.0+0x1b0>
	jal	ra,0x21c20 # luaL_argerror>
	ld	ra,184(sp)
	ld	s0,176(sp)
	ld	s1,168(sp)
	ld	s2,160(sp)
	ld	s3,152(sp)
	ld	s4,144(sp)
	addi	sp,sp,192
	ret
	li	s3,2
	li	s4,3
	j	0x28246 # db_getinfo+0x36>
	mv	a0,s0
	jal	ra,0x11e16 # lua_pushnil>
	ld	ra,184(sp)
	ld	s0,176(sp)
	ld	s1,168(sp)
	ld	s2,160(sp)
	ld	s3,152(sp)
	ld	s4,144(sp)
	li	a0,1
	addi	sp,sp,192
	ret
	li	a1,-2
	mv	a0,s0
	jal	ra,0x111ea # lua_rotate>
	j	0x28454 # db_getinfo+0x244>
	li	a1,-2
	mv	a0,s0
	jal	ra,0x111ea # lua_rotate>
	j	0x28482 # db_getinfo+0x272>

luaopen_debug:
	addi	sp,sp,-16
	auipc	a5,0x19
	fld	fa0,-598(a5) # 0x41340 # __clzdi2+0x478>
	li	a1,136
	sd	ra,8(sp)
	sd	s0,0(sp)
	mv	s0,a0
	jal	ra,0x230e8 # luaL_checkversion_>
	mv	a0,s0
	li	a2,17
	li	a1,0
	jal	ra,0x1228e # lua_createtable>
	mv	a0,s0
	li	a2,0
	auipc	a1,0x24
	addi	a1,a1,-306 # 0x4c488 # dblib>
	jal	ra,0x228d8 # luaL_setfuncs>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret

g_write:
	addi	sp,sp,-96
	sd	s0,80(sp)
	sd	s1,72(sp)
	sd	s3,56(sp)
	sd	s6,32(sp)
	mv	s0,a2
	sd	ra,88(sp)
	sd	s2,64(sp)
	sd	s4,48(sp)
	sd	s5,40(sp)
	sd	s7,24(sp)
	sd	s8,16(sp)
	mv	s1,a0
	mv	s6,a1
	jal	ra,0x110fc # lua_gettop>
	subw	s3,a0,s0
	beqz	s3,0x28666 # g_write+0x96>
	li	s2,1
	li	s5,3
	addi	s4,sp,8
	auipc	s8,0x1a
	addi	s8,s8,-1456 # 0x42050 # log_2.0+0x100>
	auipc	s7,0x1a
	addi	s7,s7,-1440 # 0x42068 # log_2.0+0x118>
	addw	s3,s3,s0
	j	0x28624 # g_write+0x54>
	jal	ra,0x22138 # luaL_checklstring>
	bnez	s2,0x28680 # g_write+0xb0>
	addiw	s0,s0,1
	beq	s3,s0,0x28662 # g_write+0x92>
	mv	a1,s0
	mv	a0,s1
	jal	ra,0x1144a # lua_type>
	mv	a5,a0
	mv	a1,s0
	mv	a2,s4
	mv	a0,s1
	bne	a5,s5,0x28616 # g_write+0x46>
	jal	ra,0x11558 # lua_isinteger>
	mv	a5,a0
	mv	a1,s0
	mv	a0,s1
	li	a2,0
	beqz	a5,0x28696 # g_write+0xc6>
	jal	ra,0x11952 # lua_tointegerx>
	mv	a2,a0
	mv	a1,s7
	mv	a0,s6
	jal	ra,0x33970 # fprintf>
	beqz	s2,0x2861e # g_write+0x4e>
	addiw	s0,s0,1
	sgtz	s2,a0
	bne	s3,s0,0x28624 # g_write+0x54>
	beqz	s2,0x286a8 # g_write+0xd8>
	ld	ra,88(sp)
	ld	s0,80(sp)
	ld	s1,72(sp)
	ld	s2,64(sp)
	ld	s3,56(sp)
	ld	s4,48(sp)
	ld	s5,40(sp)
	ld	s6,32(sp)
	ld	s7,24(sp)
	ld	s8,16(sp)
	li	a0,1
	addi	sp,sp,96
	ret
	ld	a2,8(sp)
	mv	a3,s6
	li	a1,1
	jal	ra,0x34010 # fwrite>
	ld	s2,8(sp)
	sub	s2,s2,a0
	seqz	s2,s2
	j	0x2861e # g_write+0x4e>
	jal	ra,0x118b0 # lua_tonumberx>
	fmv.x.d	a2,fa0
	mv	a1,s8
	mv	a0,s6
	jal	ra,0x33970 # fprintf>
	j	0x28654 # g_write+0x84>
	ld	s0,80(sp)
	ld	ra,88(sp)
	ld	s2,64(sp)
	ld	s3,56(sp)
	ld	s4,48(sp)
	ld	s5,40(sp)
	ld	s6,32(sp)
	ld	s7,24(sp)
	ld	s8,16(sp)
	mv	a0,s1
	ld	s1,72(sp)
	li	a2,0
	li	a1,0
	addi	sp,sp,96
	j	0x21d6a # luaL_fileresult>

io_type:
	addi	sp,sp,-16
	li	a1,1
	sd	s0,0(sp)
	sd	ra,8(sp)
	mv	s0,a0
	jal	ra,0x22102 # luaL_checkany>
	auipc	a2,0x1c
	addi	a2,a2,-1318 # 0x441b0 # optsnum.0+0x368>
	li	a1,1
	mv	a0,s0
	jal	ra,0x21f20 # luaL_testudata>
	beqz	a0,0x2871c # io_type+0x54>
	ld	a5,8(a0)
	beqz	a5,0x28704 # io_type+0x3c>
	mv	a0,s0
	auipc	a1,0x1c
	addi	a1,a1,-1126 # 0x44288 # optsnum.0+0x440>
	jal	ra,0x11e96 # lua_pushstring>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret
	mv	a0,s0
	auipc	a1,0x1c
	addi	a1,a1,-1358 # 0x441b8 # optsnum.0+0x370>
	jal	ra,0x11e96 # lua_pushstring>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret
	mv	a0,s0
	jal	ra,0x11e16 # lua_pushnil>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret

io_noclose:
	addi	sp,sp,-16
	auipc	a2,0x1c
	addi	a2,a2,-1406 # 0x441b0 # optsnum.0+0x368>
	li	a1,1
	sd	ra,8(sp)
	sd	s0,0(sp)
	mv	s0,a0
	jal	ra,0x21f92 # luaL_checkudata>
	mv	a5,a0
	auipc	a4,0x0
	addi	a4,a4,-24 # 0x2872c # io_noclose>
	mv	a0,s0
	sd	a4,8(a5)
	jal	ra,0x11e16 # lua_pushnil>
	mv	a0,s0
	auipc	a1,0x1c
	addi	a1,a1,-1422 # 0x441c8 # optsnum.0+0x380>
	jal	ra,0x11e96 # lua_pushstring>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,2
	addi	sp,sp,16
	ret

io_fclose:
	addi	sp,sp,-16
	auipc	a2,0x1c
	addi	a2,a2,-1470 # 0x441b0 # optsnum.0+0x368>
	li	a1,1
	sd	ra,8(sp)
	sd	s0,0(sp)
	mv	s0,a0
	jal	ra,0x21f92 # luaL_checkudata>
	ld	a0,0(a0)
	jal	ra,0x334fc # fclose>
	seqz	a1,a0
	mv	a0,s0
	ld	s0,0(sp)
	ld	ra,8(sp)
	li	a2,0
	addi	sp,sp,16
	j	0x21d6a # luaL_fileresult>

read_chars:
	addi	sp,sp,-1088
	sd	s0,1072(sp)
	mv	s0,sp
	sd	s2,1056(sp)
	mv	s2,a1
	mv	a1,s0
	sd	ra,1080(sp)
	sd	s1,1064(sp)
	mv	s1,a2
	jal	ra,0x22348 # luaL_buffinit>
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x22a66 # luaL_prepbuffsize>
	mv	a3,s2
	mv	a2,s1
	li	a1,1
	jal	ra,0x33af2 # fread>
	ld	a5,16(sp)
	mv	s1,a0
	mv	a0,s0
	add	a5,a5,s1
	sd	a5,16(sp)
	jal	ra,0x222fe # luaL_pushresult>
	ld	ra,1080(sp)
	ld	s0,1072(sp)
	ld	s2,1056(sp)
	snez	a0,s1
	ld	s1,1064(sp)
	addi	sp,sp,1088
	ret

read_all:
	addi	sp,sp,-1088
	sd	s0,1072(sp)
	mv	s0,sp
	sd	s1,1064(sp)
	mv	s1,a1
	mv	a1,s0
	sd	ra,1080(sp)
	jal	ra,0x22348 # luaL_buffinit>
	li	a1,1024
	mv	a0,s0
	jal	ra,0x22a66 # luaL_prepbuffsize>
	mv	a3,s1
	li	a2,1024
	li	a1,1
	jal	ra,0x33af2 # fread>
	ld	a5,16(sp)
	li	a4,1024
	add	a5,a5,a0
	sd	a5,16(sp)
	beq	a0,a4,0x2880e # read_all+0x1a>
	mv	a0,s0
	jal	ra,0x222fe # luaL_pushresult>
	ld	ra,1080(sp)
	ld	s0,1072(sp)
	ld	s1,1064(sp)
	addi	sp,sp,1088
	ret

read_line:
	addi	sp,sp,-1136
	sd	s7,1064(sp)
	mv	s7,sp
	sd	s2,1104(sp)
	mv	s2,a1
	mv	a1,s7
	sd	s3,1096(sp)
	sd	s4,1088(sp)
	sd	s5,1080(sp)
	sd	s6,1072(sp)
	sd	s8,1056(sp)
	sd	ra,1128(sp)
	sd	s0,1120(sp)
	sd	s1,1112(sp)
	mv	s8,a0
	mv	s6,a2
	li	s5,1024
	jal	ra,0x22348 # luaL_buffinit>
	li	s3,-1
	li	s4,10
	li	a1,1024
	mv	a0,s7
	jal	ra,0x22a66 # luaL_prepbuffsize>
	mv	s1,a0
	mv	a0,s2
	li	s0,0
	jal	ra,0x33880 # flockfile>
	j	0x288b0 # read_line+0x66>
	beq	a0,s4,0x2890a # read_line+0xc0>
	sb	a0,0(a5)
	addi	s0,s0,1
	beq	s0,s5,0x28924 # read_line+0xda>
	mv	a0,s2
	jal	ra,0x3416c # getc_unlocked>
	add	a5,s1,s0
	bne	a0,s3,0x288a2 # read_line+0x58>
	mv	a0,s2
	jal	ra,0x33f34 # funlockfile>
	ld	a5,16(sp)
	mv	a0,s7
	add	s0,s0,a5
	sd	s0,16(sp)
	jal	ra,0x222fe # luaL_pushresult>
	li	a1,-1
	mv	a0,s8
	jal	ra,0x11b46 # lua_rawlen>
	snez	a0,a0
	ld	ra,1128(sp)
	ld	s0,1120(sp)
	ld	s1,1112(sp)
	ld	s2,1104(sp)
	ld	s3,1096(sp)
	ld	s4,1088(sp)
	ld	s5,1080(sp)
	ld	s6,1072(sp)
	ld	s7,1064(sp)
	ld	s8,1056(sp)
	addi	sp,sp,1136
	ret
	mv	a0,s2
	jal	ra,0x33f34 # funlockfile>
	ld	a5,16(sp)
	add	s0,s0,a5
	sd	s0,16(sp)
	beqz	s6,0x28934 # read_line+0xea>
	mv	a0,s7
	jal	ra,0x222fe # luaL_pushresult>
	mv	a0,s6
	j	0x288dc # read_line+0x92>
	mv	a0,s2
	jal	ra,0x33f34 # funlockfile>
	ld	a5,16(sp)
	addi	a5,a5,1024
	sd	a5,16(sp)
	j	0x2888c # read_line+0x42>
	ld	a5,8(sp)
	bleu	a5,s0,0x28954 # read_line+0x10a>
	addi	a5,s0,1
	sd	a5,16(sp)
	ld	a5,0(sp)
	mv	a0,s7
	add	s0,s0,a5
	li	a5,10
	sb	a5,0(s0)
	jal	ra,0x222fe # luaL_pushresult>
	li	a0,1
	j	0x288dc # read_line+0x92>
	li	a1,1
	mv	a0,s7
	jal	ra,0x22a66 # luaL_prepbuffsize>
	ld	s0,16(sp)
	j	0x2893a # read_line+0xf0>

io_flush:
	lui	a1,0xfff0c
	addi	sp,sp,-32
	auipc	a2,0x1c
	addi	a2,a2,-1918 # 0x441e8 # optsnum.0+0x3a0>
	addi	a1,a1,-1576 # 0xfffffffffff0b9d8 # __BSS_END__+0xffffffffffebd650>
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	mv	s0,a0
	jal	ra,0x120a4 # lua_getfield>
	li	a1,-1
	mv	a0,s0
	jal	ra,0x11c6a # lua_touserdata>
	ld	a5,8(a0)
	mv	s1,a0
	beqz	a5,0x289a6 # io_flush+0x46>
	ld	a0,0(s1)
	jal	ra,0x3362a # fflush>
	seqz	a1,a0
	mv	a0,s0
	ld	s0,16(sp)
	ld	ra,24(sp)
	ld	s1,8(sp)
	li	a2,0
	addi	sp,sp,32
	j	0x21d6a # luaL_fileresult>
	auipc	a2,0x1c
	addi	a2,a2,-1978 # 0x441ec # optsnum.0+0x3a4>
	auipc	a1,0x1c
	addi	a1,a1,-1974 # 0x441f8 # optsnum.0+0x3b0>
	mv	a0,s0
	jal	ra,0x21bdc # luaL_error>
	j	0x2898c # io_flush+0x2c>

io_pclose:
	addi	sp,sp,-32
	li	a1,1
	auipc	a2,0x1b
	addi	a2,a2,2030 # 0x441b0 # optsnum.0+0x368>
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	mv	s0,a0
	jal	ra,0x21f92 # luaL_checkudata>
	mv	s1,a0
	jal	ra,0x2f900 # __errno_location>
	mv	a5,a0
	ld	a0,0(s1)
	sw	zero,0(a5)
	jal	ra,0x341a2 # pclose>
	mv	a1,a0
	mv	a0,s0
	ld	s0,16(sp)
	ld	ra,24(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	j	0x21ddc # luaL_execresult>

aux_lines:
	addi	sp,sp,-48
	sd	s0,32(sp)
	sd	s1,24(sp)
	sd	s2,16(sp)
	sd	s3,8(sp)
	sd	ra,40(sp)
	mv	s0,a0
	mv	s2,a1
	jal	ra,0x110fc # lua_gettop>
	addiw	s3,a0,-1
	li	a5,250
	mv	s1,a0
	blt	a5,s3,0x28a5a # aux_lines+0x62>
	mv	a0,s0
	li	a1,1
	jal	ra,0x113c8 # lua_pushvalue>
	mv	a1,s3
	mv	a0,s0
	jal	ra,0x11e32 # lua_pushinteger>
	mv	a1,s2
	mv	a0,s0
	jal	ra,0x11fdc # lua_pushboolean>
	mv	a0,s0
	li	a2,3
	li	a1,2
	jal	ra,0x111ea # lua_rotate>
	mv	a0,s0
	ld	s0,32(sp)
	ld	ra,40(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	addiw	a2,s1,2
	ld	s1,24(sp)
	auipc	a1,0x1
	addi	a1,a1,-1462 # 0x29496 # io_readline>
	addi	sp,sp,48
	j	0x11f4a # lua_pushcclosure>
	auipc	a2,0x1b
	addi	a2,a2,1982 # 0x44218 # optsnum.0+0x3d0>
	li	a1,252
	mv	a0,s0
	jal	ra,0x21c20 # luaL_argerror>
	j	0x28a1a # aux_lines+0x22>

f_tostring:
	addi	sp,sp,-16
	auipc	a2,0x1b
	addi	a2,a2,1856 # 0x441b0 # optsnum.0+0x368>
	li	a1,1
	sd	s0,0(sp)
	sd	ra,8(sp)
	mv	s0,a0
	jal	ra,0x21f92 # luaL_checkudata>
	ld	a5,8(a0)
	beqz	a5,0x28aa2 # f_tostring+0x34>
	ld	a2,0(a0)
	auipc	a1,0x1b
	addi	a1,a1,1974 # 0x44240 # optsnum.0+0x3f8>
	mv	a0,s0
	jal	ra,0x11f0c # lua_pushfstring>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret
	mv	a0,s0
	auipc	a1,0x1b
	addi	a1,a1,1932 # 0x44230 # optsnum.0+0x3e8>
	jal	ra,0x11e96 # lua_pushstring>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret

readdigits:
	addi	sp,sp,-64
	sd	s0,48(sp)
	sd	s1,40(sp)
	sd	s2,32(sp)
	sd	s3,24(sp)
	sd	s4,16(sp)
	sd	s5,8(sp)
	lw	s0,8(a0)
	sd	ra,56(sp)
	mv	s1,a0
	mv	s3,a1
	li	s2,0
	li	s5,9
	li	s4,199
	j	0x28b00 # readdigits+0x46>
	jal	ra,0x2f628 # isxdigit>
	beqz	a0,0x28b0e # readdigits+0x54>
	lw	a5,12(s1)
	addiw	a3,a5,1
	add	a4,s1,a5
	blt	s4,a5,0x28b22 # readdigits+0x68>
	sw	a3,12(s1)
	sb	s0,16(a4)
	ld	a0,0(s1)
	addiw	s2,s2,1
	jal	ra,0x3416c # getc_unlocked>
	mv	s0,a0
	sw	a0,8(s1)
	mv	a0,s0
	addiw	a5,s0,-48
	bnez	s3,0x28ada # readdigits+0x20>
	bleu	a5,s5,0x28ae0 # readdigits+0x26>
	ld	ra,56(sp)
	ld	s0,48(sp)
	ld	s1,40(sp)
	ld	s3,24(sp)
	ld	s4,16(sp)
	ld	s5,8(sp)
	mv	a0,s2
	ld	s2,32(sp)
	addi	sp,sp,64
	ret
	sb	zero,16(s1)
	j	0x28b0e # readdigits+0x54>

io_tmpfile:
	addi	sp,sp,-32
	li	a2,0
	li	a1,16
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	mv	s1,a0
	jal	ra,0x12e88 # lua_newuserdatauv>
	mv	s0,a0
	auipc	a1,0x1b
	addi	a1,a1,1652 # 0x441b0 # optsnum.0+0x368>
	mv	a0,s1
	sd	zero,8(s0)
	jal	ra,0x21efc # luaL_setmetatable>
	auipc	a5,0x0
	addi	a5,a5,-994 # 0x2876c # io_fclose>
	sd	zero,0(s0)
	sd	a5,8(s0)
	jal	ra,0x344c8 # tmpfile>
	sd	a0,0(s0)
	beqz	a0,0x28b70 # io_tmpfile+0x48>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	li	a0,1
	addi	sp,sp,32
	ret
	ld	s0,16(sp)
	ld	ra,24(sp)
	mv	a0,s1
	ld	s1,8(sp)
	li	a2,0
	li	a1,0
	addi	sp,sp,32
	j	0x21d6a # luaL_fileresult>

opencheck:
	addi	sp,sp,-48
	sd	s2,16(sp)
	sd	s3,8(sp)
	mv	s2,a1
	mv	s3,a2
	li	a1,16
	li	a2,0
	sd	ra,40(sp)
	sd	s0,32(sp)
	sd	s1,24(sp)
	mv	s1,a0
	jal	ra,0x12e88 # lua_newuserdatauv>
	mv	s0,a0
	auipc	a1,0x1b
	addi	a1,a1,1554 # 0x441b0 # optsnum.0+0x368>
	mv	a0,s1
	sd	zero,8(s0)
	jal	ra,0x21efc # luaL_setmetatable>
	auipc	a5,0x0
	addi	a5,a5,-1092 # 0x2876c # io_fclose>
	sd	zero,0(s0)
	sd	a5,8(s0)
	mv	a1,s3
	mv	a0,s2
	jal	ra,0x338ac # fopen>
	sd	a0,0(s0)
	beqz	a0,0x28bd8 # opencheck+0x56>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	addi	sp,sp,48
	ret
	jal	ra,0x2f900 # __errno_location>
	lw	a0,0(a0)
	jal	ra,0x2f93a # strerror>
	ld	s0,32(sp)
	ld	ra,40(sp)
	ld	s3,8(sp)
	mv	a3,a0
	mv	a2,s2
	mv	a0,s1
	ld	s2,16(sp)
	ld	s1,24(sp)
	auipc	a1,0x1b
	addi	a1,a1,1630 # 0x44250 # optsnum.0+0x408>
	addi	sp,sp,48
	j	0x21bdc # luaL_error>

g_iofile:
	addi	sp,sp,-32
	sd	s1,8(sp)
	mv	s1,a1
	li	a1,1
	sd	s0,16(sp)
	sd	s2,0(sp)
	sd	ra,24(sp)
	mv	s0,a0
	mv	s2,a2
	jal	ra,0x1144a # lua_type>
	bgtz	a0,0x28c38 # g_iofile+0x38>
	lui	a1,0xfff0c
	mv	a2,s1
	mv	a0,s0
	addi	a1,a1,-1576 # 0xfffffffffff0b9d8 # __BSS_END__+0xffffffffffebd650>
	jal	ra,0x120a4 # lua_getfield>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	li	a0,1
	addi	sp,sp,32
	ret
	li	a1,1
	li	a2,0
	mv	a0,s0
	jal	ra,0x11a62 # lua_tolstring>
	mv	a1,a0
	beqz	a0,0x28c60 # g_iofile+0x60>
	mv	a2,s2
	mv	a0,s0
	jal	ra,0x28b82 # opencheck>
	lui	a1,0xfff0c
	mv	a2,s1
	addi	a1,a1,-1576 # 0xfffffffffff0b9d8 # __BSS_END__+0xffffffffffebd650>
	mv	a0,s0
	jal	ra,0x124d2 # lua_setfield>
	j	0x28c1a # g_iofile+0x1a>
	auipc	a2,0x1b
	addi	a2,a2,1360 # 0x441b0 # optsnum.0+0x368>
	li	a1,1
	mv	a0,s0
	jal	ra,0x21f92 # luaL_checkudata>
	ld	a5,8(a0)
	beqz	a5,0x28c7e # g_iofile+0x7e>
	li	a1,1
	mv	a0,s0
	jal	ra,0x113c8 # lua_pushvalue>
	j	0x28c4e # g_iofile+0x4e>
	auipc	a1,0x1b
	addi	a1,a1,1522 # 0x44270 # optsnum.0+0x428>
	mv	a0,s0
	jal	ra,0x21bdc # luaL_error>
	j	0x28c74 # g_iofile+0x74>

io_output:
	auipc	a2,0x1c
	addi	a2,a2,818 # 0x44fc0 # cat.0+0x508>
	auipc	a1,0x1b
	addi	a1,a1,1362 # 0x441e8 # optsnum.0+0x3a0>
	j	0x28c00 # g_iofile>

io_input:
	auipc	a2,0x1b
	addi	a2,a2,1008 # 0x44090 # optsnum.0+0x248>
	auipc	a1,0x1b
	addi	a1,a1,1512 # 0x44290 # optsnum.0+0x448>
	j	0x28c00 # g_iofile>

io_write:
	lui	a1,0xfff0c
	addi	sp,sp,-32
	auipc	a2,0x1b
	addi	a2,a2,1328 # 0x441e8 # optsnum.0+0x3a0>
	addi	a1,a1,-1576 # 0xfffffffffff0b9d8 # __BSS_END__+0xffffffffffebd650>
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	mv	s0,a0
	jal	ra,0x120a4 # lua_getfield>
	li	a1,-1
	mv	a0,s0
	jal	ra,0x11c6a # lua_touserdata>
	ld	a5,8(a0)
	mv	s1,a0
	beqz	a5,0x28cee # io_write+0x3c>
	mv	a0,s0
	ld	s0,16(sp)
	ld	a1,0(s1)
	ld	ra,24(sp)
	ld	s1,8(sp)
	li	a2,1
	addi	sp,sp,32
	j	0x285d0 # g_write>
	auipc	a2,0x1b
	addi	a2,a2,1278 # 0x441ec # optsnum.0+0x3a4>
	auipc	a1,0x1b
	addi	a1,a1,1282 # 0x441f8 # optsnum.0+0x3b0>
	mv	a0,s0
	jal	ra,0x21bdc # luaL_error>
	j	0x28cde # io_write+0x2c>

io_popen:
	addi	sp,sp,-48
	li	a2,0
	li	a1,1
	sd	ra,40(sp)
	sd	s0,32(sp)
	sd	s1,24(sp)
	mv	s0,a0
	sd	s2,16(sp)
	sd	s3,8(sp)
	jal	ra,0x22138 # luaL_checklstring>
	li	a3,0
	auipc	a2,0x1b
	addi	a2,a2,882 # 0x44090 # optsnum.0+0x248>
	li	a1,2
	mv	s3,a0
	mv	a0,s0
	jal	ra,0x2217c # luaL_optlstring>
	mv	s2,a0
	li	a2,0
	li	a1,16
	mv	a0,s0
	jal	ra,0x12e88 # lua_newuserdatauv>
	sd	zero,8(a0)
	mv	s1,a0
	auipc	a1,0x1b
	addi	a1,a1,1134 # 0x441b0 # optsnum.0+0x368>
	mv	a0,s0
	jal	ra,0x21efc # luaL_setmetatable>
	lbu	a5,0(s2)
	li	a4,114
	beq	a5,a4,0x28da0 # io_popen+0x9a>
	li	a4,119
	beq	a5,a4,0x28da0 # io_popen+0x9a>
	auipc	a2,0x1b
	addi	a2,a2,1340 # 0x442a0 # optsnum.0+0x458>
	li	a1,2
	mv	a0,s0
	jal	ra,0x21c20 # luaL_argerror>
	li	a0,0
	jal	ra,0x3362a # fflush>
	mv	a1,s2
	mv	a0,s3
	jal	ra,0x341f8 # popen>
	auipc	a5,0x0
	addi	a5,a5,-964 # 0x289be # io_pclose>
	sd	a0,0(s1)
	sd	a5,8(s1)
	beqz	a0,0x28da8 # io_popen+0xa2>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	li	a0,1
	addi	sp,sp,48
	ret
	lbu	a5,1(s2)
	bnez	a5,0x28d64 # io_popen+0x5e>
	j	0x28d74 # io_popen+0x6e>
	mv	a0,s0
	ld	s0,32(sp)
	ld	ra,40(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	mv	a2,s3
	ld	s3,8(sp)
	li	a1,0
	addi	sp,sp,48
	j	0x21d6a # luaL_fileresult>

io_open:
	addi	sp,sp,-64
	li	a2,0
	li	a1,1
	sd	ra,56(sp)
	sd	s0,48(sp)
	sd	s1,40(sp)
	mv	s0,a0
	sd	s2,32(sp)
	sd	s3,24(sp)
	sd	s4,16(sp)
	sd	s5,8(sp)
	jal	ra,0x22138 # luaL_checklstring>
	li	a3,0
	auipc	a2,0x1b
	addi	a2,a2,694 # 0x44090 # optsnum.0+0x248>
	li	a1,2
	mv	s3,a0
	mv	a0,s0
	jal	ra,0x2217c # luaL_optlstring>
	mv	s2,a0
	li	a2,0
	li	a1,16
	mv	a0,s0
	jal	ra,0x12e88 # lua_newuserdatauv>
	mv	s1,a0
	sd	zero,8(a0)
	auipc	a1,0x1b
	addi	a1,a1,946 # 0x441b0 # optsnum.0+0x368>
	mv	a0,s0
	jal	ra,0x21efc # luaL_setmetatable>
	auipc	a5,0x0
	addi	a5,a5,-1696 # 0x2876c # io_fclose>
	sd	zero,0(s1)
	sd	a5,8(s1)
	lbu	a1,0(s2)
	beqz	a1,0x28e5c # io_open+0x9e>
	auipc	a0,0x1b
	addi	a0,a0,1168 # 0x442b0 # optsnum.0+0x468>
	jal	ra,0x3690a # strchr>
	beqz	a0,0x28e5c # io_open+0x9e>
	lbu	a4,1(s2)
	li	a5,43
	addi	s5,s2,2
	beq	a4,a5,0x28e42 # io_open+0x84>
	addi	s5,s2,1
	auipc	a1,0x1b
	addi	a1,a1,1142 # 0x442b8 # optsnum.0+0x470>
	mv	a0,s5
	jal	ra,0x36ae8 # strspn>
	mv	s4,a0
	mv	a0,s5
	jal	ra,0x369fa # strlen>
	beq	s4,a0,0x28e6c # io_open+0xae>
	auipc	a2,0x1b
	addi	a2,a2,1092 # 0x442a0 # optsnum.0+0x458>
	li	a1,2
	mv	a0,s0
	jal	ra,0x21c20 # luaL_argerror>
	mv	a1,s2
	mv	a0,s3
	jal	ra,0x338ac # fopen>
	sd	a0,0(s1)
	beqz	a0,0x28e8c # io_open+0xce>
	ld	ra,56(sp)
	ld	s0,48(sp)
	ld	s1,40(sp)
	ld	s2,32(sp)
	ld	s3,24(sp)
	ld	s4,16(sp)
	ld	s5,8(sp)
	li	a0,1
	addi	sp,sp,64
	ret
	mv	a0,s0
	ld	s0,48(sp)
	ld	ra,56(sp)
	ld	s1,40(sp)
	ld	s2,32(sp)
	ld	s4,16(sp)
	ld	s5,8(sp)
	mv	a2,s3
	ld	s3,24(sp)
	li	a1,0
	addi	sp,sp,64
	j	0x21d6a # luaL_fileresult>

f_gc:
	addi	sp,sp,-32
	auipc	a2,0x1b
	addi	a2,a2,776 # 0x441b0 # optsnum.0+0x368>
	li	a1,1
	sd	s0,16(sp)
	sd	ra,24(sp)
	mv	s0,a0
	jal	ra,0x21f92 # luaL_checkudata>
	ld	a5,8(a0)
	beqz	a5,0x28ee4 # f_gc+0x3e>
	ld	a5,0(a0)
	beqz	a5,0x28ee4 # f_gc+0x3e>
	auipc	a2,0x1b
	addi	a2,a2,748 # 0x441b0 # optsnum.0+0x368>
	li	a1,1
	mv	a0,s0
	jal	ra,0x21f92 # luaL_checkudata>
	ld	a4,8(a0)
	mv	a5,a0
	sd	zero,8(a5)
	sd	a4,8(sp)
	ld	a5,8(sp)
	mv	a0,s0
	jalr	a5
	ld	ra,24(sp)
	ld	s0,16(sp)
	li	a0,0
	addi	sp,sp,32
	ret

f_lines:
	addi	sp,sp,-16
	auipc	a2,0x1b
	addi	a2,a2,704 # 0x441b0 # optsnum.0+0x368>
	li	a1,1
	sd	s0,0(sp)
	sd	ra,8(sp)
	mv	s0,a0
	jal	ra,0x21f92 # luaL_checkudata>
	ld	a5,8(a0)
	beqz	a5,0x28f1a # f_lines+0x2c>
	mv	a0,s0
	li	a1,0
	jal	ra,0x289f8 # aux_lines>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret
	auipc	a1,0x1b
	addi	a1,a1,854 # 0x44270 # optsnum.0+0x428>
	mv	a0,s0
	jal	ra,0x21bdc # luaL_error>
	j	0x28f08 # f_lines+0x1a>

f_write:
	addi	sp,sp,-32
	auipc	a2,0x1b
	addi	a2,a2,644 # 0x441b0 # optsnum.0+0x368>
	li	a1,1
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	ra,24(sp)
	mv	s0,a0
	jal	ra,0x21f92 # luaL_checkudata>
	ld	a5,8(a0)
	mv	s1,a0
	beqz	a5,0x28f64 # f_write+0x3a>
	ld	s1,0(s1)
	mv	a0,s0
	li	a1,1
	jal	ra,0x113c8 # lua_pushvalue>
	mv	a0,s0
	ld	s0,16(sp)
	ld	ra,24(sp)
	mv	a1,s1
	ld	s1,8(sp)
	li	a2,2
	addi	sp,sp,32
	j	0x285d0 # g_write>
	auipc	a1,0x1b
	addi	a1,a1,780 # 0x44270 # optsnum.0+0x428>
	mv	a0,s0
	jal	ra,0x21bdc # luaL_error>
	j	0x28f48 # f_write+0x1e>

f_flush:
	addi	sp,sp,-32
	auipc	a2,0x1b
	addi	a2,a2,570 # 0x441b0 # optsnum.0+0x368>
	li	a1,1
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	ra,24(sp)
	mv	s1,a0
	jal	ra,0x21f92 # luaL_checkudata>
	ld	a5,8(a0)
	mv	s0,a0
	beqz	a5,0x28fac # f_flush+0x38>
	ld	a0,0(s0)
	jal	ra,0x3362a # fflush>
	ld	s0,16(sp)
	ld	ra,24(sp)
	seqz	a1,a0
	mv	a0,s1
	ld	s1,8(sp)
	li	a2,0
	addi	sp,sp,32
	j	0x21d6a # luaL_fileresult>
	auipc	a1,0x1b
	addi	a1,a1,708 # 0x44270 # optsnum.0+0x428>
	mv	a0,s1
	jal	ra,0x21bdc # luaL_error>
	j	0x28f92 # f_flush+0x1e>

g_read:
	addi	sp,sp,-352
	sd	ra,344(sp)
	sd	s0,336(sp)
	sd	s1,328(sp)
	sd	s2,320(sp)
	sd	s5,296(sp)
	mv	s2,a1
	mv	s5,a2
	sd	s3,312(sp)
	sd	s4,304(sp)
	sd	s6,288(sp)
	sd	s7,280(sp)
	sd	s8,272(sp)
	sd	s9,264(sp)
	sd	s10,256(sp)
	sd	s11,248(sp)
	mv	s1,a0
	jal	ra,0x110fc # lua_gettop>
	mv	s0,a0
	mv	a0,s2
	jal	ra,0x334be # clearerr>
	li	a5,1
	bne	s0,a5,0x29030 # g_read+0x74>
	li	a2,1
	mv	a1,s2
	mv	a0,s1
	jal	ra,0x2884a # read_line>
	mv	s6,a0
	addiw	s9,s5,1
	mv	a0,s2
	jal	ra,0x335e2 # ferror>
	bnez	a0,0x292c2 # g_read+0x306>
	beqz	s6,0x2910e # g_read+0x152>
	ld	ra,344(sp)
	ld	s0,336(sp)
	subw	a0,s9,s5
	ld	s1,328(sp)
	ld	s2,320(sp)
	ld	s3,312(sp)
	ld	s4,304(sp)
	ld	s5,296(sp)
	ld	s6,288(sp)
	ld	s7,280(sp)
	ld	s8,272(sp)
	ld	s9,264(sp)
	ld	s10,256(sp)
	ld	s11,248(sp)
	addi	sp,sp,352
	ret
	addiw	a1,s0,19
	auipc	a2,0x1b
	addi	a2,a2,484 # 0x44218 # optsnum.0+0x3d0>
	mv	a0,s1
	jal	ra,0x2207c # luaL_checkstack>
	mv	s9,s5
	addiw	s0,s0,-2
	addi	s10,sp,16
	addi	s11,sp,32
	li	s8,9
	addiw	s3,s9,1
	addiw	s9,s3,-1
	mv	a1,s9
	mv	a0,s1
	jal	ra,0x1144a # lua_type>
	sext.w	s0,s0
	li	a5,3
	auipc	s7,0x1b
	addi	s7,s7,604 # 0x442c0 # optsnum.0+0x478>
	auipc	s6,0x1b
	addi	s6,s6,604 # 0x442c8 # optsnum.0+0x480>
	sext.w	s4,s0
	beq	a0,a5,0x290dc # g_read+0x120>
	li	a2,0
	mv	a1,s9
	mv	a0,s1
	jal	ra,0x22138 # luaL_checklstring>
	lbu	a5,0(a0)
	li	a4,42
	bne	a5,a4,0x29096 # g_read+0xda>
	lbu	a5,1(a0)
	li	a4,108
	beq	a5,a4,0x292aa # g_read+0x2ee>
	bltu	a4,a5,0x2911e # g_read+0x162>
	li	a4,76
	beq	a5,a4,0x29270 # g_read+0x2b4>
	li	a4,97
	bne	a5,a4,0x2927e # g_read+0x2c2>
	mv	a1,s2
	mv	a0,s1
	jal	ra,0x287f4 # read_all>
	sext.w	s9,s3
	beqz	s4,0x292b8 # g_read+0x2fc>
	addiw	s3,s3,1
	addiw	s9,s3,-1
	mv	a1,s9
	mv	a0,s1
	jal	ra,0x1144a # lua_type>
	addiw	s0,s0,-1
	li	a5,3
	sext.w	s4,s0
	bne	a0,a5,0x2907c # g_read+0xc0>
	mv	a1,s9
	mv	a0,s1
	jal	ra,0x22270 # luaL_checkinteger>
	beqz	a0,0x2924c # g_read+0x290>
	mv	a2,a0
	mv	a1,s2
	mv	a0,s1
	jal	ra,0x2879a # read_chars>
	mv	s6,a0
	sext.w	s9,s3
	addiw	s0,s4,-1
	beqz	s4,0x29000 # g_read+0x44>
	bnez	s6,0x29050 # g_read+0x94>
	mv	a0,s2
	jal	ra,0x335e2 # ferror>
	bnez	a0,0x292c2 # g_read+0x306>
	mv	a0,s1
	li	a1,-2
	jal	ra,0x1110c # lua_settop>
	mv	a0,s1
	jal	ra,0x11e16 # lua_pushnil>
	j	0x2900e # g_read+0x52>
	li	a4,110
	bne	a5,a4,0x2927e # g_read+0x2c2>
	sd	s2,16(sp)
	sw	zero,28(sp)
	jal	ra,0x2f9f6 # localeconv>
	ld	a5,0(a0)
	ld	a0,16(sp)
	li	s9,32
	lbu	a5,0(a5)
	sd	a5,0(sp)
	jal	ra,0x33880 # flockfile>
	ld	a0,16(sp)
	jal	ra,0x3416c # getc_unlocked>
	sw	a0,24(sp)
	mv	a5,a0
	addiw	a3,a0,-9
	beq	a0,s9,0x29140 # g_read+0x184>
	li	a2,4
	sext.w	a4,a0
	bleu	a3,a2,0x29140 # g_read+0x184>
	addiw	a4,a4,-43
	andi	a4,a4,-3
	sext.w	a4,a4
	beqz	a4,0x29326 # g_read+0x36a>
	li	a4,48
	beq	a5,a4,0x2934a # g_read+0x38e>
	li	a1,0
	li	s9,0
	mv	a0,s10
	sd	a1,8(sp)
	jal	ra,0x28aba # readdigits>
	lw	a4,24(sp)
	ld	a3,0(sp)
	addw	a5,a0,s9
	ld	a1,8(sp)
	mv	s9,a5
	beq	a4,a3,0x292e8 # g_read+0x32c>
	li	a3,46
	ld	a0,16(sp)
	beq	a4,a3,0x292ea # g_read+0x32e>
	blez	a5,0x2921c # g_read+0x260>
	bnez	a1,0x293a4 # g_read+0x3e8>
	li	a5,101
	mv	a3,s6
	beq	a5,a4,0x291b0 # g_read+0x1f4>
	lbu	a5,1(a3)
	bne	a5,a4,0x2921c # g_read+0x260>
	lw	a5,28(sp)
	li	s9,199
	blt	s9,a5,0x29218 # g_read+0x25c>
	addi	a2,sp,240
	addiw	a3,a5,1
	add	a5,a5,a2
	sb	a4,-208(a5)
	sw	a3,28(sp)
	jal	ra,0x3416c # getc_unlocked>
	addiw	a5,a0,-43
	andi	a5,a5,-3
	sw	a0,24(sp)
	sext.w	a5,a5
	mv	a4,a0
	sext.w	a3,a0
	beqz	a5,0x293ac # g_read+0x3f0>
	addiw	a3,a3,-48
	ld	a0,16(sp)
	bltu	s8,a3,0x2921c # g_read+0x260>
	li	s9,199
	j	0x29208 # g_read+0x24c>
	sb	a4,-208(a2)
	sw	a3,28(sp)
	jal	ra,0x3416c # getc_unlocked>
	sw	a0,24(sp)
	addiw	a5,a0,-48
	mv	a4,a0
	ld	a0,16(sp)
	bltu	s8,a5,0x2921c # g_read+0x260>
	lw	a5,28(sp)
	addi	a2,sp,240
	addiw	a3,a5,1
	add	a2,a2,a5
	ble	a5,s9,0x291f0 # g_read+0x234>
	lw	a4,24(sp)
	sb	zero,32(sp)
	mv	a1,a0
	mv	a0,a4
	jal	ra,0x3458a # ungetc>
	ld	a0,16(sp)
	sext.w	s9,s3
	jal	ra,0x33f34 # funlockfile>
	lw	a5,28(sp)
	addi	a4,sp,240
	mv	a1,s11
	add	a5,a5,a4
	mv	a0,s1
	sb	zero,-208(a5)
	jal	ra,0x11890 # lua_stringtonumber>
	bnez	a0,0x290be # g_read+0x102>
	mv	a0,s1
	jal	ra,0x11e16 # lua_pushnil>
	j	0x29104 # g_read+0x148>
	mv	a0,s2
	jal	ra,0x34132 # getc>
	mv	a1,s2
	mv	s6,a0
	jal	ra,0x3458a # ungetc>
	auipc	a1,0x18
	addi	a1,a1,-122 # 0x411e0 # __clzdi2+0x318>
	mv	a0,s1
	addi	s6,s6,1
	jal	ra,0x11e96 # lua_pushstring>
	snez	s6,s6
	j	0x290f4 # g_read+0x138>
	li	a2,0
	mv	a1,s2
	mv	a0,s1
	jal	ra,0x2884a # read_line>
	mv	s6,a0
	j	0x290f4 # g_read+0x138>
	ld	s0,336(sp)
	ld	ra,344(sp)
	ld	s2,320(sp)
	ld	s3,312(sp)
	ld	s4,304(sp)
	ld	s5,296(sp)
	ld	s6,288(sp)
	ld	s7,280(sp)
	ld	s8,272(sp)
	ld	s10,256(sp)
	ld	s11,248(sp)
	mv	a1,s9
	mv	a0,s1
	ld	s9,264(sp)
	ld	s1,328(sp)
	auipc	a2,0x1b
	addi	a2,a2,52 # 0x442d0 # optsnum.0+0x488>
	addi	sp,sp,352
	j	0x21c20 # luaL_argerror>
	li	a2,1
	mv	a1,s2
	mv	a0,s1
	jal	ra,0x2884a # read_line>
	mv	s6,a0
	j	0x290f4 # g_read+0x138>
	mv	a0,s2
	jal	ra,0x335e2 # ferror>
	beqz	a0,0x2900e # g_read+0x52>
	ld	s0,336(sp)
	ld	ra,344(sp)
	ld	s2,320(sp)
	ld	s3,312(sp)
	ld	s4,304(sp)
	ld	s5,296(sp)
	ld	s6,288(sp)
	ld	s7,280(sp)
	ld	s8,272(sp)
	ld	s9,264(sp)
	ld	s10,256(sp)
	ld	s11,248(sp)
	mv	a0,s1
	ld	s1,328(sp)
	li	a2,0
	li	a1,0
	addi	sp,sp,352
	j	0x21d6a # luaL_fileresult>
	ld	a0,16(sp)
	lw	a3,28(sp)
	li	a2,199
	blt	a2,a3,0x293e2 # g_read+0x426>
	addi	a2,sp,240
	addiw	a5,a3,1
	add	a3,a3,a2
	sb	a4,-208(a3)
	sd	a1,0(sp)
	sw	a5,28(sp)
	jal	ra,0x3416c # getc_unlocked>
	ld	a1,0(sp)
	mv	a5,a0
	mv	a0,s10
	sw	a5,24(sp)
	jal	ra,0x28aba # readdigits>
	mv	a5,a0
	addw	a5,s9,a5
	lw	a4,24(sp)
	ld	a0,16(sp)
	ld	a1,0(sp)
	bgtz	a5,0x2919a # g_read+0x1de>
	j	0x2921c # g_read+0x260>
	lw	a4,28(sp)
	li	a3,199
	blt	a3,a4,0x293d0 # g_read+0x414>
	addi	a2,sp,240
	ld	a0,16(sp)
	addiw	a3,a4,1
	add	a4,a4,a2
	sb	a5,-208(a4)
	sw	a3,28(sp)
	jal	ra,0x3416c # getc_unlocked>
	mv	a5,a0
	sw	a0,24(sp)
	j	0x29168 # g_read+0x1ac>
	lw	a4,28(sp)
	li	a3,199
	blt	a3,a4,0x293dc # g_read+0x420>
	addi	a3,sp,240
	ld	a0,16(sp)
	addiw	a2,a4,1
	add	a4,a4,a3
	sb	a5,-208(a4)
	sw	a2,28(sp)
	jal	ra,0x3416c # getc_unlocked>
	andi	a4,a0,-33
	sw	a0,24(sp)
	sext.w	a4,a4
	li	a2,88
	mv	a5,a0
	li	a1,0
	li	s9,1
	li	a3,199
	bne	a4,a2,0x29174 # g_read+0x1b8>
	lw	a4,28(sp)
	blt	a3,a4,0x293ec # g_read+0x430>
	addi	a2,sp,240
	ld	a0,16(sp)
	addiw	a3,a4,1
	add	a4,a4,a2
	sb	a5,-208(a4)
	sw	a3,28(sp)
	jal	ra,0x3416c # getc_unlocked>
	sw	a0,24(sp)
	li	a1,1
	li	s9,0
	j	0x29174 # g_read+0x1b8>
	li	a5,112
	mv	a3,s7
	j	0x291a4 # g_read+0x1e8>
	lw	a5,28(sp)
	ld	a0,16(sp)
	blt	s9,a5,0x293f2 # g_read+0x436>
	addi	a2,sp,240
	addiw	a3,a5,1
	add	a5,a5,a2
	sb	a4,-208(a5)
	sw	a3,28(sp)
	jal	ra,0x3416c # getc_unlocked>
	mv	a4,a0
	sw	a0,24(sp)
	sext.w	a3,a0
	j	0x291e0 # g_read+0x224>
	sb	zero,32(sp)
	li	a4,48
	bne	a0,a4,0x29170 # g_read+0x1b4>
	sb	zero,32(sp)
	j	0x29170 # g_read+0x1b4>
	sb	zero,32(sp)
	bgtz	a5,0x2919a # g_read+0x1de>
	j	0x2921c # g_read+0x260>
	sb	zero,32(sp)
	j	0x29174 # g_read+0x1b8>
	sb	zero,32(sp)
	addiw	a3,a3,-48
	bltu	s8,a3,0x2921c # g_read+0x260>
	sb	zero,32(sp)
	j	0x2921c # g_read+0x260>

io_read:
	lui	a1,0xfff0c
	addi	sp,sp,-32
	auipc	a2,0x1b
	addi	a2,a2,-378 # 0x44290 # optsnum.0+0x448>
	addi	a1,a1,-1576 # 0xfffffffffff0b9d8 # __BSS_END__+0xffffffffffebd650>
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	mv	s0,a0
	jal	ra,0x120a4 # lua_getfield>
	li	a1,-1
	mv	a0,s0
	jal	ra,0x11c6a # lua_touserdata>
	ld	a5,8(a0)
	mv	s1,a0
	beqz	a5,0x29440 # io_read+0x3c>
	mv	a0,s0
	ld	s0,16(sp)
	ld	a1,0(s1)
	ld	ra,24(sp)
	ld	s1,8(sp)
	li	a2,1
	addi	sp,sp,32
	j	0x28fbc # g_read>
	auipc	a2,0x1b
	addi	a2,a2,-428 # 0x44294 # optsnum.0+0x44c>
	auipc	a1,0x1b
	addi	a1,a1,-592 # 0x441f8 # optsnum.0+0x3b0>
	mv	a0,s0
	jal	ra,0x21bdc # luaL_error>
	j	0x29430 # io_read+0x2c>

f_read:
	addi	sp,sp,-32
	auipc	a2,0x1b
	addi	a2,a2,-682 # 0x441b0 # optsnum.0+0x368>
	li	a1,1
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	ra,24(sp)
	mv	s1,a0
	jal	ra,0x21f92 # luaL_checkudata>
	ld	a5,8(a0)
	mv	s0,a0
	beqz	a5,0x29486 # f_read+0x2e>
	ld	a1,0(s0)
	ld	s0,16(sp)
	ld	ra,24(sp)
	mv	a0,s1
	ld	s1,8(sp)
	li	a2,2
	addi	sp,sp,32
	j	0x28fbc # g_read>
	auipc	a1,0x1b
	addi	a1,a1,-534 # 0x44270 # optsnum.0+0x428>
	mv	a0,s1
	jal	ra,0x21bdc # luaL_error>
	j	0x29476 # f_read+0x1e>

io_readline:
	addi	sp,sp,-64
	sd	s0,48(sp)
	lui	s0,0xfff0c
	addi	a1,s0,-1577 # 0xfffffffffff0b9d7 # __BSS_END__+0xffffffffffebd64f>
	sd	ra,56(sp)
	sd	s1,40(sp)
	sd	s4,16(sp)
	mv	s1,a0
	sd	s2,32(sp)
	sd	s3,24(sp)
	jal	ra,0x11c6a # lua_touserdata>
	mv	s4,a0
	li	a2,0
	addi	a1,s0,-1578
	mv	a0,s1
	jal	ra,0x11952 # lua_tointegerx>
	ld	a5,8(s4)
	beqz	a5,0x295a6 # io_readline+0x110>
	sext.w	s2,a0
	li	a1,1
	mv	a0,s1
	jal	ra,0x1110c # lua_settop>
	auipc	a2,0x1b
	addi	a2,a2,-700 # 0x44218 # optsnum.0+0x3d0>
	mv	a1,s2
	mv	a0,s1
	jal	ra,0x2207c # luaL_checkstack>
	blez	s2,0x29502 # io_readline+0x6c>
	lui	s3,0xfff0c
	li	s0,1
	addiw	s3,s3,-1579
	subw	a1,s3,s0
	mv	a0,s1
	addiw	s0,s0,1
	jal	ra,0x113c8 # lua_pushvalue>
	ble	s0,s2,0x294f2 # io_readline+0x5c>
	ld	a1,0(s4)
	li	a2,2
	mv	a0,s1
	jal	ra,0x28fbc # g_read>
	mv	s0,a0
	negw	a1,a0
	mv	a0,s1
	jal	ra,0x119ee # lua_toboolean>
	bnez	a0,0x2955e # io_readline+0xc8>
	li	a5,1
	ble	s0,a5,0x2954c # io_readline+0xb6>
	li	a1,1
	subw	a1,a1,s0
	li	a2,0
	mv	a0,s1
	jal	ra,0x11a62 # lua_tolstring>
	ld	s0,48(sp)
	ld	ra,56(sp)
	ld	s2,32(sp)
	ld	s3,24(sp)
	ld	s4,16(sp)
	mv	a2,a0
	mv	a0,s1
	ld	s1,40(sp)
	auipc	a1,0x1a
	addi	a1,a1,2 # 0x43540 # luai_ctype_+0x130>
	addi	sp,sp,64
	j	0x21bdc # luaL_error>
	lui	s2,0xfff0c
	addi	a1,s2,-1579 # 0xfffffffffff0b9d5 # __BSS_END__+0xffffffffffebd64d>
	mv	a0,s1
	jal	ra,0x119ee # lua_toboolean>
	mv	s0,a0
	bnez	a0,0x29570 # io_readline+0xda>
	ld	ra,56(sp)
	mv	a0,s0
	ld	s0,48(sp)
	ld	s1,40(sp)
	ld	s2,32(sp)
	ld	s3,24(sp)
	ld	s4,16(sp)
	addi	sp,sp,64
	ret
	mv	a0,s1
	li	a1,0
	jal	ra,0x1110c # lua_settop>
	addi	a1,s2,-1577
	mv	a0,s1
	jal	ra,0x113c8 # lua_pushvalue>
	auipc	a2,0x1b
	addi	a2,a2,-978 # 0x441b0 # optsnum.0+0x368>
	li	a1,1
	mv	a0,s1
	jal	ra,0x21f92 # luaL_checkudata>
	ld	a4,8(a0)
	mv	a5,a0
	sd	zero,8(a5)
	sd	a4,8(sp)
	ld	a5,8(sp)
	mv	a0,s1
	li	s0,0
	jalr	a5
	j	0x2955e # io_readline+0xc8>
	ld	s0,48(sp)
	ld	ra,56(sp)
	ld	s2,32(sp)
	ld	s3,24(sp)
	ld	s4,16(sp)
	mv	a0,s1
	ld	s1,40(sp)
	auipc	a1,0x1b
	addi	a1,a1,-724 # 0x442e0 # optsnum.0+0x498>
	addi	sp,sp,64
	j	0x21bdc # luaL_error>

f_close:
	addi	sp,sp,-32
	auipc	a2,0x1b
	addi	a2,a2,-1044 # 0x441b0 # optsnum.0+0x368>
	li	a1,1
	sd	s0,16(sp)
	sd	ra,24(sp)
	mv	s0,a0
	jal	ra,0x21f92 # luaL_checkudata>
	ld	a5,8(a0)
	beqz	a5,0x29602 # f_close+0x40>
	mv	a0,s0
	auipc	a2,0x1b
	addi	a2,a2,-1070 # 0x441b0 # optsnum.0+0x368>
	li	a1,1
	jal	ra,0x21f92 # luaL_checkudata>
	ld	a4,8(a0)
	mv	a5,a0
	mv	a0,s0
	sd	a4,8(sp)
	ld	s0,16(sp)
	ld	ra,24(sp)
	sd	zero,8(a5)
	ld	a5,8(sp)
	addi	sp,sp,32
	jr	a5
	auipc	a1,0x1b
	addi	a1,a1,-914 # 0x44270 # optsnum.0+0x428>
	mv	a0,s0
	jal	ra,0x21bdc # luaL_error>
	j	0x295dc # f_close+0x1a>

f_setvbuf:
	addi	sp,sp,-32
	auipc	a2,0x1b
	addi	a2,a2,-1124 # 0x441b0 # optsnum.0+0x368>
	li	a1,1
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	ra,24(sp)
	sd	s2,0(sp)
	mv	s0,a0
	jal	ra,0x21f92 # luaL_checkudata>
	ld	a5,8(a0)
	mv	s1,a0
	beqz	a5,0x29684 # f_setvbuf+0x72>
	auipc	a3,0x23
	addi	a3,a3,-138 # 0x4c5a8 # modenames.3>
	li	a2,0
	li	a1,2
	mv	a0,s0
	ld	s2,0(s1)
	jal	ra,0x21fd6 # luaL_checkoption>
	mv	s1,a0
	li	a2,1024
	li	a1,3
	mv	a0,s0
	jal	ra,0x222c8 # luaL_optinteger>
	auipc	a5,0x1b
	addi	a5,a5,-742 # 0x44370 # mode.2>
	slli	s1,s1,0x2
	add	s1,s1,a5
	lw	a2,0(s1)
	mv	a3,a0
	li	a1,0
	mv	a0,s2
	jal	ra,0x3442a # setvbuf>
	seqz	a1,a0
	mv	a0,s0
	ld	s0,16(sp)
	ld	ra,24(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	li	a2,0
	addi	sp,sp,32
	j	0x21d6a # luaL_fileresult>
	auipc	a1,0x1b
	addi	a1,a1,-1044 # 0x44270 # optsnum.0+0x428>
	mv	a0,s0
	jal	ra,0x21bdc # luaL_error>
	j	0x29632 # f_setvbuf+0x20>

f_seek:
	addi	sp,sp,-32
	auipc	a2,0x1b
	addi	a2,a2,-1254 # 0x441b0 # optsnum.0+0x368>
	li	a1,1
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	ra,24(sp)
	sd	s2,0(sp)
	mv	s0,a0
	jal	ra,0x21f92 # luaL_checkudata>
	ld	a5,8(a0)
	mv	s1,a0
	beqz	a5,0x29710 # f_seek+0x7c>
	auipc	a3,0x23
	addi	a3,a3,-236 # 0x4c5c8 # modenames.1>
	auipc	a2,0x1b
	addi	a2,a2,-964 # 0x442f8 # optsnum.0+0x4b0>
	li	a1,2
	mv	a0,s0
	ld	s2,0(s1)
	jal	ra,0x21fd6 # luaL_checkoption>
	mv	s1,a0
	li	a2,0
	li	a1,3
	mv	a0,s0
	jal	ra,0x222c8 # luaL_optinteger>
	slli	s1,s1,0x2
	auipc	a5,0x1b
	addi	a5,a5,-878 # 0x44370 # mode.2>
	add	s1,s1,a5
	lw	a2,16(s1)
	mv	a1,a0
	mv	a0,s2
	jal	ra,0x33d18 # __fseeko>
	bnez	a0,0x29720 # f_seek+0x8c>
	mv	a0,s2
	jal	ra,0x33dfa # __ftello>
	mv	a1,a0
	mv	a0,s0
	jal	ra,0x11e32 # lua_pushinteger>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	li	a0,1
	addi	sp,sp,32
	ret
	auipc	a1,0x1b
	addi	a1,a1,-1184 # 0x44270 # optsnum.0+0x428>
	mv	a0,s0
	jal	ra,0x21bdc # luaL_error>
	j	0x296b4 # f_seek+0x20>
	mv	a0,s0
	ld	s0,16(sp)
	ld	ra,24(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	li	a2,0
	li	a1,0
	addi	sp,sp,32
	j	0x21d6a # luaL_fileresult>

io_close:
	addi	sp,sp,-32
	li	a1,1
	sd	s0,16(sp)
	sd	ra,24(sp)
	mv	s0,a0
	jal	ra,0x1144a # lua_type>
	li	a5,-1
	beq	a0,a5,0x29782 # io_close+0x4e>
	auipc	a2,0x1b
	addi	a2,a2,-1432 # 0x441b0 # optsnum.0+0x368>
	li	a1,1
	mv	a0,s0
	jal	ra,0x21f92 # luaL_checkudata>
	ld	a5,8(a0)
	beqz	a5,0x297ac # io_close+0x78>
	mv	a0,s0
	auipc	a2,0x1b
	addi	a2,a2,-1454 # 0x441b0 # optsnum.0+0x368>
	li	a1,1
	jal	ra,0x21f92 # luaL_checkudata>
	ld	a4,8(a0)
	mv	a5,a0
	mv	a0,s0
	sd	a4,8(sp)
	ld	s0,16(sp)
	ld	ra,24(sp)
	sd	zero,8(a5)
	ld	a5,8(sp)
	addi	sp,sp,32
	jr	a5
	lui	a1,0xfff0c
	auipc	a2,0x1b
	addi	a2,a2,-1438 # 0x441e8 # optsnum.0+0x3a0>
	addi	a1,a1,-1576 # 0xfffffffffff0b9d8 # __BSS_END__+0xffffffffffebd650>
	mv	a0,s0
	jal	ra,0x120a4 # lua_getfield>
	auipc	a2,0x1b
	addi	a2,a2,-1512 # 0x441b0 # optsnum.0+0x368>
	li	a1,1
	mv	a0,s0
	jal	ra,0x21f92 # luaL_checkudata>
	ld	a5,8(a0)
	bnez	a5,0x2975c # io_close+0x28>
	auipc	a1,0x1b
	addi	a1,a1,-1340 # 0x44270 # optsnum.0+0x428>
	mv	a0,s0
	jal	ra,0x21bdc # luaL_error>
	j	0x2975c # io_close+0x28>

io_lines:
	addi	sp,sp,-16
	li	a1,1
	sd	s0,0(sp)
	sd	ra,8(sp)
	mv	s0,a0
	jal	ra,0x1144a # lua_type>
	li	a5,-1
	beq	a0,a5,0x2987a # io_lines+0xbe>
	li	a1,1
	mv	a0,s0
	jal	ra,0x1144a # lua_type>
	bnez	a0,0x29828 # io_lines+0x6c>
	lui	a1,0xfff0c
	auipc	a2,0x1b
	addi	a2,a2,-1358 # 0x44290 # optsnum.0+0x448>
	addi	a1,a1,-1576 # 0xfffffffffff0b9d8 # __BSS_END__+0xffffffffffebd650>
	mv	a0,s0
	jal	ra,0x120a4 # lua_getfield>
	li	a2,1
	li	a1,-1
	mv	a0,s0
	jal	ra,0x1129c # lua_copy>
	li	a1,-2
	mv	a0,s0
	jal	ra,0x1110c # lua_settop>
	auipc	a2,0x1b
	addi	a2,a2,-1618 # 0x441b0 # optsnum.0+0x368>
	li	a1,1
	mv	a0,s0
	jal	ra,0x21f92 # luaL_checkudata>
	ld	a5,8(a0)
	beqz	a5,0x29882 # io_lines+0xc6>
	mv	a0,s0
	li	a1,0
	jal	ra,0x289f8 # aux_lines>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret
	li	a2,0
	li	a1,1
	mv	a0,s0
	jal	ra,0x22138 # luaL_checklstring>
	mv	a1,a0
	auipc	a2,0x1b
	addi	a2,a2,-1956 # 0x44090 # optsnum.0+0x248>
	mv	a0,s0
	jal	ra,0x28b82 # opencheck>
	li	a2,1
	mv	a0,s0
	li	a1,-1
	jal	ra,0x1129c # lua_copy>
	mv	a0,s0
	li	a1,-2
	jal	ra,0x1110c # lua_settop>
	li	a1,1
	mv	a0,s0
	jal	ra,0x289f8 # aux_lines>
	mv	a0,s0
	jal	ra,0x11e16 # lua_pushnil>
	mv	a0,s0
	jal	ra,0x11e16 # lua_pushnil>
	mv	a0,s0
	li	a1,1
	jal	ra,0x113c8 # lua_pushvalue>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,4
	addi	sp,sp,16
	ret
	mv	a0,s0
	jal	ra,0x11e16 # lua_pushnil>
	j	0x297d0 # io_lines+0x14>
	auipc	a1,0x1b
	addi	a1,a1,-1554 # 0x44270 # optsnum.0+0x428>
	mv	a0,s0
	jal	ra,0x21bdc # luaL_error>
	j	0x29816 # io_lines+0x5a>

luaopen_io:
	addi	sp,sp,-48
	auipc	a5,0x18
	fld	fa0,-1364(a5) # 0x41340 # __clzdi2+0x478>
	li	a1,136
	sd	ra,40(sp)
	sd	s0,32(sp)
	sd	s1,24(sp)
	mv	s0,a0
	sd	s2,16(sp)
	sd	s3,8(sp)
	sd	s4,0(sp)
	jal	ra,0x230e8 # luaL_checkversion_>
	mv	a0,s0
	li	a2,11
	li	a1,0
	jal	ra,0x1228e # lua_createtable>
	li	a2,0
	mv	a0,s0
	auipc	a1,0x23
	addi	a1,a1,-728 # 0x4c5e8 # iolib>
	jal	ra,0x228d8 # luaL_setfuncs>
	auipc	a1,0x1b
	addi	a1,a1,-1820 # 0x441b0 # optsnum.0+0x368>
	mv	a0,s0
	jal	ra,0x21e84 # luaL_newmetatable>
	mv	a0,s0
	li	a2,0
	auipc	a1,0x23
	addi	a1,a1,-566 # 0x4c6a8 # metameth>
	jal	ra,0x228d8 # luaL_setfuncs>
	mv	a0,s0
	li	a2,7
	li	a1,0
	jal	ra,0x1228e # lua_createtable>
	mv	a0,s0
	li	a2,0
	auipc	a1,0x23
	addi	a1,a1,-512 # 0x4c6f8 # meth>
	jal	ra,0x228d8 # luaL_setfuncs>
	auipc	a2,0x19
	addi	a2,a2,-148 # 0x42870 # dummynode_+0x90>
	mv	a0,s0
	li	a1,-2
	jal	ra,0x124d2 # lua_setfield>
	mv	a0,s0
	li	a1,-2
	jal	ra,0x1110c # lua_settop>
	auipc	a5,0x24
	ld	a5,-1460(a5) # 0x4d368 # _GLOBAL_OFFSET_TABLE_+0x60>
	li	a2,0
	li	a1,16
	mv	a0,s0
	ld	s3,0(a5)
	jal	ra,0x12e88 # lua_newuserdatauv>
	mv	s1,a0
	auipc	a1,0x1b
	addi	a1,a1,-1924 # 0x441b0 # optsnum.0+0x368>
	mv	a0,s0
	sd	zero,8(s1)
	jal	ra,0x21efc # luaL_setmetatable>
	auipc	s2,0xfffff
	addi	s2,s2,-538 # 0x2872c # io_noclose>
	mv	a0,s0
	sd	s3,0(s1)
	sd	s2,8(s1)
	li	a1,-1
	jal	ra,0x113c8 # lua_pushvalue>
	lui	s3,0xfff0c
	addi	a1,s3,-1576 # 0xfffffffffff0b9d8 # __BSS_END__+0xffffffffffebd650>
	mv	a0,s0
	auipc	a2,0x1b
	addi	a2,a2,-1752 # 0x44290 # optsnum.0+0x448>
	jal	ra,0x124d2 # lua_setfield>
	mv	a0,s0
	auipc	a2,0x1b
	addi	a2,a2,-1654 # 0x44300 # optsnum.0+0x4b8>
	li	a1,-2
	jal	ra,0x124d2 # lua_setfield>
	auipc	a5,0x24
	ld	a5,-1644(a5) # 0x4d318 # _GLOBAL_OFFSET_TABLE_+0x10>
	li	a2,0
	li	a1,16
	mv	a0,s0
	ld	s4,0(a5)
	jal	ra,0x12e88 # lua_newuserdatauv>
	mv	s1,a0
	auipc	a1,0x1b
	addi	a1,a1,-2028 # 0x441b0 # optsnum.0+0x368>
	mv	a0,s0
	sd	zero,8(s1)
	jal	ra,0x21efc # luaL_setmetatable>
	mv	a0,s0
	sd	s4,0(s1)
	sd	s2,8(s1)
	li	a1,-1
	jal	ra,0x113c8 # lua_pushvalue>
	addi	a1,s3,-1576
	mv	a0,s0
	auipc	a2,0x1b
	addi	a2,a2,-2012 # 0x441e8 # optsnum.0+0x3a0>
	jal	ra,0x124d2 # lua_setfield>
	mv	a0,s0
	auipc	a2,0x1b
	addi	a2,a2,-1738 # 0x44308 # optsnum.0+0x4c0>
	li	a1,-2
	jal	ra,0x124d2 # lua_setfield>
	auipc	a5,0x24
	ld	a5,-1584(a5) # 0x4d3b0 # _GLOBAL_OFFSET_TABLE_+0xa8>
	li	a2,0
	li	a1,16
	mv	a0,s0
	ld	s3,0(a5)
	jal	ra,0x12e88 # lua_newuserdatauv>
	mv	s1,a0
	auipc	a1,0x1a
	addi	a1,a1,1976 # 0x441b0 # optsnum.0+0x368>
	mv	a0,s0
	sd	zero,8(s1)
	jal	ra,0x21efc # luaL_setmetatable>
	mv	a0,s0
	sd	s3,0(s1)
	sd	s2,8(s1)
	auipc	a2,0x1b
	addi	a2,a2,-1796 # 0x44310 # optsnum.0+0x4c8>
	li	a1,-2
	jal	ra,0x124d2 # lua_setfield>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	ld	s4,0(sp)
	li	a0,1
	addi	sp,sp,48
	ret

math_rad:
	addi	sp,sp,-16
	li	a1,1
	sd	ra,8(sp)
	sd	s0,0(sp)
	mv	s0,a0
	jal	ra,0x221e0 # luaL_checknumber>
	auipc	a5,0x1b
	fld	fa5,-1338(a5) # 0x44508 # mode.0+0x188>
	fmul.d	fa0,fa0,fa5
	mv	a0,s0
	jal	ra,0x11e22 # lua_pushnumber>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret

math_deg:
	addi	sp,sp,-16
	li	a1,1
	sd	ra,8(sp)
	sd	s0,0(sp)
	mv	s0,a0
	jal	ra,0x221e0 # luaL_checknumber>
	auipc	a5,0x1b
	fld	fa5,-1372(a5) # 0x44510 # mode.0+0x190>
	fmul.d	fa0,fa0,fa5
	mv	a0,s0
	jal	ra,0x11e22 # lua_pushnumber>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret

math_log10:
	addi	sp,sp,-16
	li	a1,1
	sd	ra,8(sp)
	sd	s0,0(sp)
	mv	s0,a0
	jal	ra,0x221e0 # luaL_checknumber>
	jal	ra,0x32132 # log10>
	mv	a0,s0
	jal	ra,0x11e22 # lua_pushnumber>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret

math_ldexp:
	addi	sp,sp,-32
	li	a1,1
	sd	ra,24(sp)
	sd	s0,16(sp)
	fsd	fs0,8(sp)
	mv	s0,a0
	jal	ra,0x221e0 # luaL_checknumber>
	fmv.d	fs0,fa0
	li	a1,2
	mv	a0,s0
	jal	ra,0x22270 # luaL_checkinteger>
	fmv.d	fa0,fs0
	sext.w	a0,a0
	jal	ra,0x31f36 # ldexp>
	mv	a0,s0
	jal	ra,0x11e22 # lua_pushnumber>
	ld	ra,24(sp)
	ld	s0,16(sp)
	fld	fs0,8(sp)
	li	a0,1
	addi	sp,sp,32
	ret

math_frexp:
	addi	sp,sp,-32
	li	a1,1
	sd	ra,24(sp)
	sd	s0,16(sp)
	mv	s0,a0
	jal	ra,0x221e0 # luaL_checknumber>
	addi	a0,sp,12
	jal	ra,0x31eae # frexp>
	mv	a0,s0
	jal	ra,0x11e22 # lua_pushnumber>
	lw	a1,12(sp)
	mv	a0,s0
	jal	ra,0x11e32 # lua_pushinteger>
	ld	ra,24(sp)
	ld	s0,16(sp)
	li	a0,2
	addi	sp,sp,32
	ret

math_pow:
	addi	sp,sp,-32
	li	a1,1
	sd	ra,24(sp)
	sd	s0,16(sp)
	fsd	fs0,8(sp)
	mv	s0,a0
	jal	ra,0x221e0 # luaL_checknumber>
	fmv.d	fs0,fa0
	mv	a0,s0
	li	a1,2
	jal	ra,0x221e0 # luaL_checknumber>
	fmv.d	fa1,fa0
	fmv.d	fa0,fs0
	jal	ra,0x32528 # pow>
	mv	a0,s0
	jal	ra,0x11e22 # lua_pushnumber>
	ld	ra,24(sp)
	ld	s0,16(sp)
	fld	fs0,8(sp)
	li	a0,1
	addi	sp,sp,32
	ret

math_tanh:
	addi	sp,sp,-16
	li	a1,1
	sd	ra,8(sp)
	sd	s0,0(sp)
	mv	s0,a0
	jal	ra,0x221e0 # luaL_checknumber>
	jal	ra,0x32d12 # tanh>
	mv	a0,s0
	jal	ra,0x11e22 # lua_pushnumber>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret

math_sinh:
	addi	sp,sp,-16
	li	a1,1
	sd	ra,8(sp)
	sd	s0,0(sp)
	mv	s0,a0
	jal	ra,0x221e0 # luaL_checknumber>
	jal	ra,0x32b90 # sinh>
	mv	a0,s0
	jal	ra,0x11e22 # lua_pushnumber>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret

math_cosh:
	addi	sp,sp,-16
	li	a1,1
	sd	ra,8(sp)
	sd	s0,0(sp)
	mv	s0,a0
	jal	ra,0x221e0 # luaL_checknumber>
	jal	ra,0x31778 # cosh>
	mv	a0,s0
	jal	ra,0x11e22 # lua_pushnumber>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret

math_tan:
	addi	sp,sp,-16
	li	a1,1
	sd	ra,8(sp)
	sd	s0,0(sp)
	mv	s0,a0
	jal	ra,0x221e0 # luaL_checknumber>
	jal	ra,0x32c6a # tan>
	mv	a0,s0
	jal	ra,0x11e22 # lua_pushnumber>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret

math_sqrt:
	addi	sp,sp,-16
	li	a1,1
	sd	s0,0(sp)
	sd	ra,8(sp)
	mv	s0,a0
	jal	ra,0x221e0 # luaL_checknumber>
	fmv.d.x	fa4,zero
	frflags	a4
	flt.d	a5,fa0,fa4
	fsflags	a4
	bnez	a5,0x29c04 # math_sqrt+0x34>
	fsqrt.d	fa0,fa0
	mv	a0,s0
	jal	ra,0x11e22 # lua_pushnumber>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret
	jal	ra,0x32a2a # sqrt>
	j	0x29bf4 # math_sqrt+0x24>

math_sin:
	addi	sp,sp,-16
	li	a1,1
	sd	ra,8(sp)
	sd	s0,0(sp)
	mv	s0,a0
	jal	ra,0x221e0 # luaL_checknumber>
	jal	ra,0x32ab8 # sin>
	mv	a0,s0
	jal	ra,0x11e22 # lua_pushnumber>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret

math_min:
	addi	sp,sp,-48
	sd	s3,8(sp)
	sd	ra,40(sp)
	sd	s0,32(sp)
	sd	s1,24(sp)
	sd	s2,16(sp)
	mv	s3,a0
	jal	ra,0x110fc # lua_gettop>
	blez	a0,0x29c7c # math_min+0x50>
	li	a5,1
	mv	s2,a0
	beq	a0,a5,0x29c90 # math_min+0x64>
	li	s0,2
	li	s1,1
	mv	a2,s1
	mv	a1,s0
	li	a3,1
	mv	a0,s3
	jal	ra,0x117ea # lua_compare>
	beqz	a0,0x29c5e # math_min+0x32>
	mv	s1,s0
	addiw	s0,s0,1
	ble	s0,s2,0x29c4e # math_min+0x22>
	mv	a0,s3
	mv	a1,s1
	jal	ra,0x113c8 # lua_pushvalue>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	li	a0,1
	addi	sp,sp,48
	ret
	auipc	a2,0x19
	addi	a2,a2,668 # 0x42f18 # udatatypename+0x550>
	li	a1,1
	mv	a0,s3
	jal	ra,0x21c20 # luaL_argerror>
	li	s1,1
	j	0x29c64 # math_min+0x38>
	li	s1,1
	j	0x29c64 # math_min+0x38>

math_max:
	addi	sp,sp,-48
	sd	s3,8(sp)
	sd	ra,40(sp)
	sd	s0,32(sp)
	sd	s1,24(sp)
	sd	s2,16(sp)
	mv	s3,a0
	jal	ra,0x110fc # lua_gettop>
	blez	a0,0x29ce4 # math_max+0x50>
	li	a5,1
	mv	s2,a0
	beq	a0,a5,0x29cf8 # math_max+0x64>
	li	s0,2
	li	s1,1
	mv	a2,s0
	mv	a1,s1
	li	a3,1
	mv	a0,s3
	jal	ra,0x117ea # lua_compare>
	beqz	a0,0x29cc6 # math_max+0x32>
	mv	s1,s0
	addiw	s0,s0,1
	ble	s0,s2,0x29cb6 # math_max+0x22>
	mv	a0,s3
	mv	a1,s1
	jal	ra,0x113c8 # lua_pushvalue>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	li	a0,1
	addi	sp,sp,48
	ret
	auipc	a2,0x19
	addi	a2,a2,564 # 0x42f18 # udatatypename+0x550>
	li	a1,1
	mv	a0,s3
	jal	ra,0x21c20 # luaL_argerror>
	li	s1,1
	j	0x29ccc # math_max+0x38>
	li	s1,1
	j	0x29ccc # math_max+0x38>

math_log:
	addi	sp,sp,-32
	li	a1,1
	sd	s0,16(sp)
	fsd	fs0,8(sp)
	sd	ra,24(sp)
	fsd	fs1,0(sp)
	mv	s0,a0
	jal	ra,0x221e0 # luaL_checknumber>
	li	a1,2
	mv	a0,s0
	fmv.d	fs0,fa0
	jal	ra,0x1144a # lua_type>
	blez	a0,0x29d50 # math_log+0x54>
	li	a1,2
	mv	a0,s0
	jal	ra,0x221e0 # luaL_checknumber>
	auipc	a5,0x18
	fld	fa5,930(a5) # 0x420c8 # log_2.0+0x178>
	feq.d	a5,fa0,fa5
	fmv.d	fs1,fa0
	bnez	a5,0x29d82 # math_log+0x86>
	auipc	a5,0x1a
	fld	fa5,2016(a5) # 0x44518 # mode.0+0x198>
	feq.d	a5,fs1,fa5
	fmv.d	fa0,fs0
	beqz	a5,0x29d6c # math_log+0x70>
	jal	ra,0x32132 # log10>
	j	0x29d58 # math_log+0x5c>
	fmv.d	fa0,fs0
	jal	ra,0x31f3a # log>
	mv	a0,s0
	jal	ra,0x11e22 # lua_pushnumber>
	ld	ra,24(sp)
	ld	s0,16(sp)
	fld	fs0,8(sp)
	fld	fs1,0(sp)
	li	a0,1
	addi	sp,sp,32
	ret
	jal	ra,0x31f3a # log>
	fmv.d	fs0,fa0
	fmv.d	fa0,fs1
	jal	ra,0x31f3a # log>
	fdiv.d	fa0,fs0,fa0
	j	0x29d58 # math_log+0x5c>
	fmv.d	fa0,fs0
	jal	ra,0x32338 # log2>
	j	0x29d58 # math_log+0x5c>

math_ult:
	addi	sp,sp,-32
	li	a1,1
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	mv	s0,a0
	jal	ra,0x22270 # luaL_checkinteger>
	mv	s1,a0
	li	a1,2
	mv	a0,s0
	jal	ra,0x22270 # luaL_checkinteger>
	sltu	a1,s1,a0
	mv	a0,s0
	jal	ra,0x11fdc # lua_pushboolean>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	li	a0,1
	addi	sp,sp,32
	ret

math_fmod:
	addi	sp,sp,-48
	li	a1,1
	sd	s0,32(sp)
	sd	ra,40(sp)
	sd	s1,24(sp)
	fsd	fs0,8(sp)
	mv	s0,a0
	jal	ra,0x11558 # lua_isinteger>
	beqz	a0,0x29dda # math_fmod+0x1e>
	li	a1,2
	mv	a0,s0
	jal	ra,0x11558 # lua_isinteger>
	bnez	a0,0x29e0e # math_fmod+0x52>
	li	a1,1
	mv	a0,s0
	jal	ra,0x221e0 # luaL_checknumber>
	fmv.d	fs0,fa0
	mv	a0,s0
	li	a1,2
	jal	ra,0x221e0 # luaL_checknumber>
	fmv.d	fa1,fa0
	fmv.d	fa0,fs0
	jal	ra,0x31d78 # fmod>
	mv	a0,s0
	jal	ra,0x11e22 # lua_pushnumber>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	fld	fs0,8(sp)
	li	a0,1
	addi	sp,sp,48
	ret
	li	a2,0
	li	a1,2
	mv	a0,s0
	jal	ra,0x11952 # lua_tointegerx>
	addi	a4,a0,1
	li	a5,1
	mv	s1,a0
	bltu	a5,a4,0x29e30 # math_fmod+0x74>
	beqz	a0,0x29e46 # math_fmod+0x8a>
	li	a1,0
	mv	a0,s0
	jal	ra,0x11e32 # lua_pushinteger>
	j	0x29e00 # math_fmod+0x44>
	li	a2,0
	li	a1,1
	mv	a0,s0
	jal	ra,0x11952 # lua_tointegerx>
	rem	a1,a0,s1
	mv	a0,s0
	jal	ra,0x11e32 # lua_pushinteger>
	j	0x29e00 # math_fmod+0x44>
	auipc	a2,0x1a
	addi	a2,a2,1354 # 0x44390 # mode.0+0x10>
	li	a1,2
	mv	a0,s0
	jal	ra,0x21c20 # luaL_argerror>
	j	0x29e26 # math_fmod+0x6a>

math_exp:
	addi	sp,sp,-16
	li	a1,1
	sd	ra,8(sp)
	sd	s0,0(sp)
	mv	s0,a0
	jal	ra,0x221e0 # luaL_checknumber>
	jal	ra,0x3182c # exp>
	mv	a0,s0
	jal	ra,0x11e22 # lua_pushnumber>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret

math_cos:
	addi	sp,sp,-16
	li	a1,1
	sd	ra,8(sp)
	sd	s0,0(sp)
	mv	s0,a0
	jal	ra,0x221e0 # luaL_checknumber>
	jal	ra,0x316b4 # cos>
	mv	a0,s0
	jal	ra,0x11e22 # lua_pushnumber>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret

math_atan:
	addi	sp,sp,-32
	li	a1,1
	sd	ra,24(sp)
	sd	s0,16(sp)
	fsd	fs0,8(sp)
	mv	s0,a0
	jal	ra,0x221e0 # luaL_checknumber>
	fmv.d	fs0,fa0
	mv	a0,s0
	li	a1,2
	auipc	a5,0x19
	fld	fa0,-268(a5) # 0x42da8 # udatatypename+0x3e0>
	jal	ra,0x22220 # luaL_optnumber>
	fmv.d	fa1,fa0
	fmv.d	fa0,fs0
	jal	ra,0x3147c # atan2>
	mv	a0,s0
	jal	ra,0x11e22 # lua_pushnumber>
	ld	ra,24(sp)
	ld	s0,16(sp)
	fld	fs0,8(sp)
	li	a0,1
	addi	sp,sp,32
	ret

math_asin:
	addi	sp,sp,-16
	li	a1,1
	sd	ra,8(sp)
	sd	s0,0(sp)
	mv	s0,a0
	jal	ra,0x221e0 # luaL_checknumber>
	jal	ra,0x31312 # asin>
	mv	a0,s0
	jal	ra,0x11e22 # lua_pushnumber>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret

math_acos:
	addi	sp,sp,-16
	li	a1,1
	sd	ra,8(sp)
	sd	s0,0(sp)
	mv	s0,a0
	jal	ra,0x221e0 # luaL_checknumber>
	jal	ra,0x310bc # acos>
	mv	a0,s0
	jal	ra,0x11e22 # lua_pushnumber>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret

math_type:
	addi	sp,sp,-16
	li	a1,1
	sd	s0,0(sp)
	sd	ra,8(sp)
	mv	s0,a0
	jal	ra,0x1144a # lua_type>
	li	a5,3
	li	a1,1
	beq	a0,a5,0x29f4e # math_type+0x2c>
	mv	a0,s0
	jal	ra,0x22102 # luaL_checkany>
	mv	a0,s0
	jal	ra,0x11e16 # lua_pushnil>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret
	mv	a0,s0
	jal	ra,0x11558 # lua_isinteger>
	auipc	a1,0x19
	addi	a1,a1,60 # 0x42f90 # udatatypename+0x5c8>
	beqz	a0,0x29f6e # math_type+0x4c>
	mv	a0,s0
	jal	ra,0x11e96 # lua_pushstring>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret
	auipc	a1,0x1a
	addi	a1,a1,1066 # 0x44398 # mode.0+0x18>
	mv	a0,s0
	jal	ra,0x11e96 # lua_pushstring>
	j	0x29f64 # math_type+0x42>

math_modf:
	addi	sp,sp,-32
	li	a1,1
	sd	s0,16(sp)
	sd	ra,24(sp)
	fsd	fs0,8(sp)
	fsd	fs1,0(sp)
	mv	s0,a0
	jal	ra,0x11558 # lua_isinteger>
	beqz	a0,0x29fb2 # math_modf+0x34>
	mv	a0,s0
	li	a1,1
	jal	ra,0x1110c # lua_settop>
	fmv.d.x	fa0,zero
	mv	a0,s0
	jal	ra,0x11e22 # lua_pushnumber>
	ld	ra,24(sp)
	ld	s0,16(sp)
	fld	fs0,8(sp)
	fld	fs1,0(sp)
	li	a0,2
	addi	sp,sp,32
	ret
	li	a1,1
	mv	a0,s0
	jal	ra,0x221e0 # luaL_checknumber>
	fmv.d.x	fa5,zero
	fmv.d	fs1,fa0
	flt.d	a5,fa0,fa5
	bnez	a5,0x2a018 # math_modf+0x9a>
	jal	ra,0x31cd0 # floor>
	fmv.d	fs0,fa0
	auipc	a5,0x19
	fld	fa5,-1912(a5) # 0x42858 # dummynode_+0x78>
	fle.d	a5,fa5,fs0
	beqz	a5,0x29fec # math_modf+0x6e>
	auipc	a5,0x19
	fld	fa5,-1918(a5) # 0x42860 # dummynode_+0x80>
	flt.d	a5,fs0,fa5
	bnez	a5,0x2a022 # math_modf+0xa4>
	fmv.d	fa0,fs0
	mv	a0,s0
	jal	ra,0x11e22 # lua_pushnumber>
	feq.d	a5,fs1,fs0
	fmv.d.x	fa0,zero
	bnez	a5,0x2a004 # math_modf+0x86>
	fsub.d	fa0,fs1,fs0
	mv	a0,s0
	jal	ra,0x11e22 # lua_pushnumber>
	ld	ra,24(sp)
	ld	s0,16(sp)
	fld	fs0,8(sp)
	fld	fs1,0(sp)
	li	a0,2
	addi	sp,sp,32
	ret
	jal	ra,0x3160e # ceil>
	fmv.d	fs0,fa0
	j	0x29fd0 # math_modf+0x52>
	fcvt.l.d	a1,fs0,rtz
	mv	a0,s0
	jal	ra,0x11e32 # lua_pushinteger>
	j	0x29ff6 # math_modf+0x78>

math_toint:
	addi	sp,sp,-32
	addi	a2,sp,12
	li	a1,1
	sd	s0,16(sp)
	sd	ra,24(sp)
	mv	s0,a0
	jal	ra,0x11952 # lua_tointegerx>
	lw	a5,12(sp)
	beqz	a5,0x2a054 # math_toint+0x26>
	mv	a1,a0
	mv	a0,s0
	jal	ra,0x11e32 # lua_pushinteger>
	ld	ra,24(sp)
	ld	s0,16(sp)
	li	a0,1
	addi	sp,sp,32
	ret
	mv	a0,s0
	li	a1,1
	jal	ra,0x22102 # luaL_checkany>
	mv	a0,s0
	jal	ra,0x11e16 # lua_pushnil>
	ld	ra,24(sp)
	ld	s0,16(sp)
	li	a0,1
	addi	sp,sp,32
	ret

math_abs:
	addi	sp,sp,-16
	li	a1,1
	sd	s0,0(sp)
	sd	ra,8(sp)
	mv	s0,a0
	jal	ra,0x11558 # lua_isinteger>
	beqz	a0,0x2a0a0 # math_abs+0x34>
	li	a2,0
	li	a1,1
	mv	a0,s0
	jal	ra,0x11952 # lua_tointegerx>
	srai	a1,a0,0x3f
	xor	a0,a0,a1
	sub	a1,a0,a1
	mv	a0,s0
	jal	ra,0x11e32 # lua_pushinteger>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret
	mv	a0,s0
	li	a1,1
	jal	ra,0x221e0 # luaL_checknumber>
	fabs.d	fa0,fa0
	mv	a0,s0
	jal	ra,0x11e22 # lua_pushnumber>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret

math_randomseed:
	lui	a1,0xfff0c
	addi	sp,sp,-48
	addi	a1,a1,-1577 # 0xfffffffffff0b9d7 # __BSS_END__+0xffffffffffebd64f>
	sd	ra,40(sp)
	sd	s0,32(sp)
	sd	s1,24(sp)
	mv	s0,a0
	sd	s2,16(sp)
	sd	s3,8(sp)
	jal	ra,0x11c6a # lua_touserdata>
	mv	s1,a0
	li	a1,1
	mv	a0,s0
	jal	ra,0x1144a # lua_type>
	li	a5,-1
	beq	a0,a5,0x2a158 # math_randomseed+0x9c>
	li	a1,1
	mv	a0,s0
	jal	ra,0x22270 # luaL_checkinteger>
	mv	s3,a0
	li	a2,0
	li	a1,2
	mv	a0,s0
	jal	ra,0x222c8 # luaL_optinteger>
	mv	s2,a0
	mv	a7,s3
	mv	a5,a0
	li	t1,16
	li	a4,0
	li	a3,255
	xor	a6,a3,a4
	xor	a5,a5,a7
	slli	a2,a3,0x11
	srli	t3,a6,0x13
	slli	a4,a6,0x2d
	addiw	t1,t1,-1
	xor	a3,a3,a5
	xor	a7,a7,a6
	xor	a5,a5,a2
	or	a4,a4,t3
	bnez	t1,0x2a108 # math_randomseed+0x4c>
	sd	a7,0(s1)
	sd	a3,8(s1)
	sd	a5,16(s1)
	sd	a4,24(s1)
	mv	a1,s3
	mv	a0,s0
	jal	ra,0x11e32 # lua_pushinteger>
	mv	a0,s0
	mv	a1,s2
	jal	ra,0x11e32 # lua_pushinteger>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	li	a0,2
	addi	sp,sp,48
	ret
	li	a0,0
	jal	ra,0x37b34 # time>
	mv	a1,a0
	mv	a7,a0
	mv	a5,s0
	li	t1,16
	li	a4,0
	li	a3,255
	xor	a6,a3,a4
	xor	a5,a7,a5
	slli	a2,a3,0x11
	srli	t3,a6,0x13
	slli	a4,a6,0x2d
	addiw	t1,t1,-1
	xor	a3,a3,a5
	xor	a7,a7,a6
	xor	a5,a5,a2
	or	a4,a4,t3
	bnez	t1,0x2a16c # math_randomseed+0xb0>
	sd	a7,0(s1)
	sd	a3,8(s1)
	sd	a5,16(s1)
	sd	a4,24(s1)
	mv	a0,s0
	jal	ra,0x11e32 # lua_pushinteger>
	mv	a0,s0
	mv	a1,s0
	jal	ra,0x11e32 # lua_pushinteger>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	li	a0,2
	addi	sp,sp,48
	ret

math_ceil:
	addi	sp,sp,-16
	li	a1,1
	sd	s0,0(sp)
	sd	ra,8(sp)
	mv	s0,a0
	jal	ra,0x11558 # lua_isinteger>
	li	a1,1
	beqz	a0,0x2a1dc # math_ceil+0x22>
	mv	a0,s0
	jal	ra,0x1110c # lua_settop>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret
	mv	a0,s0
	jal	ra,0x221e0 # luaL_checknumber>
	jal	ra,0x3160e # ceil>
	auipc	a5,0x18
	fld	fa5,1650(a5) # 0x42858 # dummynode_+0x78>
	fle.d	a5,fa5,fa0
	beqz	a5,0x2a202 # math_ceil+0x48>
	auipc	a5,0x18
	fld	fa5,1644(a5) # 0x42860 # dummynode_+0x80>
	flt.d	a5,fa0,fa5
	bnez	a5,0x2a212 # math_ceil+0x58>
	mv	a0,s0
	jal	ra,0x11e22 # lua_pushnumber>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret
	fcvt.l.d	a1,fa0,rtz
	mv	a0,s0
	jal	ra,0x11e32 # lua_pushinteger>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret

math_floor:
	addi	sp,sp,-16
	li	a1,1
	sd	s0,0(sp)
	sd	ra,8(sp)
	mv	s0,a0
	jal	ra,0x11558 # lua_isinteger>
	li	a1,1
	beqz	a0,0x2a248 # math_floor+0x22>
	mv	a0,s0
	jal	ra,0x1110c # lua_settop>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret
	mv	a0,s0
	jal	ra,0x221e0 # luaL_checknumber>
	jal	ra,0x31cd0 # floor>
	auipc	a5,0x18
	fld	fa5,1542(a5) # 0x42858 # dummynode_+0x78>
	fle.d	a5,fa5,fa0
	beqz	a5,0x2a26e # math_floor+0x48>
	auipc	a5,0x18
	fld	fa5,1536(a5) # 0x42860 # dummynode_+0x80>
	flt.d	a5,fa0,fa5
	bnez	a5,0x2a27e # math_floor+0x58>
	mv	a0,s0
	jal	ra,0x11e22 # lua_pushnumber>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret
	fcvt.l.d	a1,fa0,rtz
	mv	a0,s0
	jal	ra,0x11e32 # lua_pushinteger>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret

math_random:
	lui	a1,0xfff0c
	addi	sp,sp,-64
	addi	a1,a1,-1577 # 0xfffffffffff0b9d7 # __BSS_END__+0xffffffffffebd64f>
	sd	ra,56(sp)
	sd	s0,48(sp)
	sd	s1,40(sp)
	sd	s2,32(sp)
	sd	s3,24(sp)
	mv	s2,a0
	sd	s4,16(sp)
	sd	s5,8(sp)
	sd	s6,0(sp)
	jal	ra,0x11c6a # lua_touserdata>
	ld	a5,8(a0)
	ld	a3,24(a0)
	ld	a2,0(a0)
	ld	a1,16(a0)
	slli	a4,a5,0x2
	xor	a3,a3,a5
	add	a4,a4,a5
	mv	s1,a0
	xor	a1,a1,a2
	slli	s0,a4,0x7
	srli	a0,a3,0x13
	slli	a7,a3,0x2d
	slli	a6,a5,0x11
	srli	a4,a4,0x39
	xor	a5,a5,a1
	or	a4,a4,s0
	xor	a3,a3,a2
	xor	a6,a6,a1
	or	a2,a0,a7
	slli	a1,a4,0x3
	sd	a5,8(s1)
	sd	a3,0(s1)
	sd	a6,16(s1)
	sd	a2,24(s1)
	mv	a0,s2
	add	s0,a1,a4
	jal	ra,0x110fc # lua_gettop>
	li	a5,1
	mv	s3,a0
	beq	a0,a5,0x2a330 # math_random+0x9e>
	li	a5,2
	beq	a0,a5,0x2a41e # math_random+0x18c>
	beqz	a0,0x2a400 # math_random+0x16e>
	ld	s0,48(sp)
	ld	ra,56(sp)
	ld	s1,40(sp)
	ld	s3,24(sp)
	ld	s4,16(sp)
	ld	s5,8(sp)
	ld	s6,0(sp)
	mv	a0,s2
	ld	s2,32(sp)
	auipc	a1,0x1a
	addi	a1,a1,126 # 0x443a0 # mode.0+0x20>
	addi	sp,sp,64
	j	0x21bdc # luaL_error>
	li	a1,1
	mv	a0,s2
	jal	ra,0x22270 # luaL_checkinteger>
	mv	s5,a0
	li	s4,1
	li	s6,1
	beqz	a0,0x2a436 # math_random+0x1a4>
	blt	s5,s6,0x2a440 # math_random+0x1ae>
	sub	a6,s5,s4
	addi	a5,a6,1
	and	a5,a5,a6
	and	a1,a6,s0
	beqz	a5,0x2a3e0 # math_random+0x14e>
	srli	a7,a6,0x1
	or	a7,a7,a6
	srli	a5,a7,0x2
	or	a7,a7,a5
	srli	a5,a7,0x4
	or	a7,a7,a5
	srli	a5,a7,0x8
	or	a7,a7,a5
	srli	a5,a7,0x10
	or	a7,a7,a5
	srli	a5,a7,0x20
	or	a7,a7,a5
	and	a1,s0,a7
	bleu	a1,a6,0x2a3e0 # math_random+0x14e>
	ld	t1,0(s1)
	ld	a4,8(s1)
	ld	a3,16(s1)
	ld	a2,24(s1)
	slli	a5,a4,0x2
	add	a5,a5,a4
	slli	a1,a5,0x7
	srli	a5,a5,0x39
	or	a5,a5,a1
	slli	a1,a5,0x3
	xor	a0,a2,a4
	add	a1,a1,a5
	srli	t3,a0,0x13
	xor	a5,a3,t1
	slli	a2,a0,0x2d
	slli	a3,a4,0x11
	and	a1,a7,a1
	xor	t1,t1,a0
	xor	a4,a4,a5
	xor	a3,a3,a5
	or	a2,a2,t3
	bltu	a6,a1,0x2a39a # math_random+0x108>
	sd	t1,0(s1)
	sd	a4,8(s1)
	sd	a3,16(s1)
	sd	a2,24(s1)
	add	a1,a1,s4
	mv	a0,s2
	jal	ra,0x11e32 # lua_pushinteger>
	li	s3,1
	ld	ra,56(sp)
	ld	s0,48(sp)
	ld	s1,40(sp)
	ld	s2,32(sp)
	ld	s4,16(sp)
	ld	s5,8(sp)
	ld	s6,0(sp)
	mv	a0,s3
	ld	s3,24(sp)
	addi	sp,sp,64
	ret
	srli	a1,s0,0xb
	fcvt.d.l	fa0,a1
	auipc	a5,0x1a
	fld	fa5,280(a5) # 0x44520 # mode.0+0x1a0>
	mv	a0,s2
	fmul.d	fa0,fa0,fa5
	li	s3,1
	jal	ra,0x11e22 # lua_pushnumber>
	j	0x2a3ea # math_random+0x158>
	li	a1,1
	mv	a0,s2
	jal	ra,0x22270 # luaL_checkinteger>
	mv	s6,a0
	li	a1,2
	mv	a0,s2
	jal	ra,0x22270 # luaL_checkinteger>
	mv	s5,a0
	mv	s4,s6
	j	0x2a342 # math_random+0xb0>
	mv	a1,s0
	mv	a0,s2
	jal	ra,0x11e32 # lua_pushinteger>
	j	0x2a3ea # math_random+0x158>
	auipc	a2,0x1a
	addi	a2,a2,-128 # 0x443c0 # mode.0+0x40>
	li	a1,1
	mv	a0,s2
	jal	ra,0x21c20 # luaL_argerror>
	j	0x2a346 # math_random+0xb4>

luaopen_math:
	addi	sp,sp,-32
	auipc	a5,0x17
	fld	fa0,-276(a5) # 0x41340 # __clzdi2+0x478>
	li	a1,136
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	mv	s0,a0
	jal	ra,0x230e8 # luaL_checkversion_>
	li	a2,35
	li	a1,0
	mv	a0,s0
	jal	ra,0x1228e # lua_createtable>
	li	a2,0
	auipc	a1,0x22
	addi	a1,a1,766 # 0x4c778 # mathlib>
	mv	a0,s0
	jal	ra,0x228d8 # luaL_setfuncs>
	auipc	a5,0x1a
	fld	fa0,160(a5) # 0x44528 # mode.0+0x1a8>
	mv	a0,s0
	jal	ra,0x11e22 # lua_pushnumber>
	auipc	a2,0x1a
	addi	a2,a2,-190 # 0x443d8 # mode.0+0x58>
	li	a1,-2
	mv	a0,s0
	jal	ra,0x124d2 # lua_setfield>
	auipc	a5,0x1a
	fld	fa0,138(a5) # 0x44530 # mode.0+0x1b0>
	mv	a0,s0
	jal	ra,0x11e22 # lua_pushnumber>
	auipc	a2,0x1a
	addi	a2,a2,-212 # 0x443e0 # mode.0+0x60>
	li	a1,-2
	mv	a0,s0
	jal	ra,0x124d2 # lua_setfield>
	li	s1,-1
	srli	a1,s1,0x1
	mv	a0,s0
	jal	ra,0x11e32 # lua_pushinteger>
	auipc	a2,0x1a
	addi	a2,a2,-232 # 0x443e8 # mode.0+0x68>
	li	a1,-2
	mv	a0,s0
	jal	ra,0x124d2 # lua_setfield>
	slli	a1,s1,0x3f
	mv	a0,s0
	jal	ra,0x11e32 # lua_pushinteger>
	auipc	a2,0x1a
	addi	a2,a2,-242 # 0x443f8 # mode.0+0x78>
	li	a1,-2
	mv	a0,s0
	jal	ra,0x124d2 # lua_setfield>
	li	a1,32
	li	a2,0
	mv	a0,s0
	jal	ra,0x12e88 # lua_newuserdatauv>
	mv	s1,a0
	li	a0,0
	jal	ra,0x37b34 # time>
	mv	a1,a0
	mv	a7,a0
	mv	a5,s0
	li	t1,16
	li	a4,0
	li	a3,255
	xor	a6,a3,a4
	xor	a5,a7,a5
	slli	a2,a3,0x11
	srli	t3,a6,0x13
	slli	a4,a6,0x2d
	addiw	t1,t1,-1
	xor	a3,a3,a5
	xor	a7,a7,a6
	xor	a5,a5,a2
	or	a4,a4,t3
	bnez	t1,0x2a51c # luaopen_math+0xca>
	sd	a7,0(s1)
	sd	a3,8(s1)
	sd	a5,16(s1)
	sd	a4,24(s1)
	mv	a0,s0
	jal	ra,0x11e32 # lua_pushinteger>
	mv	a1,s0
	mv	a0,s0
	jal	ra,0x11e32 # lua_pushinteger>
	mv	a0,s0
	li	a1,-3
	jal	ra,0x1110c # lua_settop>
	mv	a0,s0
	li	a2,1
	auipc	a1,0x22
	addi	a1,a1,1106 # 0x4c9b8 # randfuncs>
	jal	ra,0x228d8 # luaL_setfuncs>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	li	a0,1
	addi	sp,sp,32
	ret

findloader:
	addi	sp,sp,-1120
	sd	s3,1080(sp)
	mv	s3,a1
	lui	a1,0xfff0c
	auipc	a2,0x1a
	addi	a2,a2,-84 # 0x44538 # mode.0+0x1b8>
	addi	a1,a1,-1577 # 0xfffffffffff0b9d7 # __BSS_END__+0xffffffffffebd64f>
	sd	s0,1104(sp)
	sd	ra,1112(sp)
	sd	s1,1096(sp)
	sd	s2,1088(sp)
	sd	s4,1072(sp)
	sd	s5,1064(sp)
	sd	s6,1056(sp)
	mv	s0,a0
	jal	ra,0x120a4 # lua_getfield>
	li	a5,5
	bne	a0,a5,0x2a696 # findloader+0x118>
	mv	s2,sp
	mv	a1,s2
	mv	a0,s0
	jal	ra,0x22348 # luaL_buffinit>
	li	s1,1
	auipc	s5,0x1a
	addi	s5,s5,-92 # 0x44570 # mode.0+0x1f0>
	auipc	s6,0x1a
	addi	s6,s6,-92 # 0x44578 # mode.0+0x1f8>
	li	s4,6
	mv	a1,s5
	mv	a0,s2
	jal	ra,0x22b68 # luaL_addstring>
	mv	a2,s1
	li	a1,3
	mv	a0,s0
	jal	ra,0x121ea # lua_rawgeti>
	beqz	a0,0x2a66a # findloader+0xec>
	mv	a1,s3
	mv	a0,s0
	jal	ra,0x11e96 # lua_pushstring>
	li	a4,0
	li	a3,0
	li	a2,2
	mv	a0,s0
	li	a1,1
	jal	ra,0x128c8 # lua_callk>
	li	a1,-2
	mv	a0,s0
	jal	ra,0x1144a # lua_type>
	mv	a5,a0
	li	a1,-2
	mv	a0,s0
	beq	a5,s4,0x2a644 # findloader+0xc6>
	jal	ra,0x11656 # lua_isstring>
	mv	a5,a0
	li	a1,-3
	mv	a0,s0
	beqz	a5,0x2a636 # findloader+0xb8>
	li	a1,-2
	jal	ra,0x1110c # lua_settop>
	mv	a0,s2
	jal	ra,0x22ac4 # luaL_addvalue>
	addi	s1,s1,1
	j	0x2a5de # findloader+0x60>
	jal	ra,0x1110c # lua_settop>
	ld	a5,16(sp)
	addi	s1,s1,1
	addi	a5,a5,-2
	sd	a5,16(sp)
	j	0x2a5de # findloader+0x60>
	ld	ra,1112(sp)
	ld	s0,1104(sp)
	ld	s1,1096(sp)
	ld	s2,1088(sp)
	ld	s3,1080(sp)
	ld	s4,1072(sp)
	ld	s5,1064(sp)
	ld	s6,1056(sp)
	addi	sp,sp,1120
	ret
	mv	a0,s0
	li	a1,-2
	jal	ra,0x1110c # lua_settop>
	ld	a5,16(sp)
	mv	a0,s2
	addi	a5,a5,-2
	sd	a5,16(sp)
	jal	ra,0x222fe # luaL_pushresult>
	mv	a0,s0
	li	a2,0
	li	a1,-1
	jal	ra,0x11a62 # lua_tolstring>
	mv	a3,a0
	mv	a2,s3
	mv	a1,s6
	mv	a0,s0
	jal	ra,0x21bdc # luaL_error>
	j	0x2a5f2 # findloader+0x74>
	auipc	a1,0x1a
	addi	a1,a1,-334 # 0x44548 # mode.0+0x1c8>
	mv	a0,s0
	jal	ra,0x21bdc # luaL_error>
	j	0x2a5c0 # findloader+0x42>

ll_require:
	addi	sp,sp,-32
	li	a2,0
	li	a1,1
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	mv	s0,a0
	jal	ra,0x22138 # luaL_checklstring>
	mv	s1,a0
	li	a1,1
	mv	a0,s0
	jal	ra,0x1110c # lua_settop>
	lui	a1,0xfff0c
	addi	a1,a1,-1576 # 0xfffffffffff0b9d8 # __BSS_END__+0xffffffffffebd650>
	auipc	a2,0x18
	addi	a2,a2,1782 # 0x42dc0 # udatatypename+0x3f8>
	mv	a0,s0
	jal	ra,0x120a4 # lua_getfield>
	li	a1,2
	mv	a2,s1
	mv	a0,s0
	jal	ra,0x120a4 # lua_getfield>
	li	a1,-1
	mv	a0,s0
	jal	ra,0x119ee # lua_toboolean>
	beqz	a0,0x2a6f8 # ll_require+0x52>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	li	a0,1
	addi	sp,sp,32
	ret
	li	a1,-2
	mv	a0,s0
	jal	ra,0x1110c # lua_settop>
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x2a57e # findloader>
	li	a2,1
	li	a1,-2
	mv	a0,s0
	jal	ra,0x111ea # lua_rotate>
	li	a1,1
	mv	a0,s0
	jal	ra,0x113c8 # lua_pushvalue>
	li	a1,-3
	mv	a0,s0
	jal	ra,0x113c8 # lua_pushvalue>
	li	a1,2
	mv	a0,s0
	li	a4,0
	li	a3,0
	li	a2,1
	jal	ra,0x128c8 # lua_callk>
	li	a1,-1
	mv	a0,s0
	jal	ra,0x1144a # lua_type>
	bnez	a0,0x2a764 # ll_require+0xbe>
	li	a1,-2
	mv	a0,s0
	jal	ra,0x1110c # lua_settop>
	mv	a2,s1
	li	a1,2
	mv	a0,s0
	jal	ra,0x120a4 # lua_getfield>
	beqz	a0,0x2a77a # ll_require+0xd4>
	mv	a0,s0
	li	a2,1
	li	a1,-2
	jal	ra,0x111ea # lua_rotate>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	li	a0,2
	addi	sp,sp,32
	ret
	mv	a2,s1
	li	a1,2
	mv	a0,s0
	jal	ra,0x124d2 # lua_setfield>
	mv	a2,s1
	li	a1,2
	mv	a0,s0
	jal	ra,0x120a4 # lua_getfield>
	bnez	a0,0x2a74e # ll_require+0xa8>
	mv	a0,s0
	li	a1,1
	jal	ra,0x11fdc # lua_pushboolean>
	mv	a0,s0
	li	a1,-1
	li	a2,-2
	jal	ra,0x1129c # lua_copy>
	mv	a2,s1
	li	a1,2
	mv	a0,s0
	jal	ra,0x124d2 # lua_setfield>
	j	0x2a74e # ll_require+0xa8>

searchpath:
	addi	sp,sp,-144
	sd	s1,120(sp)
	sd	s3,104(sp)
	sd	s4,96(sp)
	sd	ra,136(sp)
	sd	s0,128(sp)
	sd	s2,112(sp)
	sd	s5,88(sp)
	lbu	a5,0(a3)
	addi	sp,sp,-2032
	mv	s3,a0
	mv	s1,a1
	mv	s4,a2
	beqz	a5,0x2a7d4 # searchpath+0x3c>
	mv	a1,a5
	mv	a0,s1
	mv	s0,a3
	mv	s2,a4
	jal	ra,0x3690a # strchr>
	beqz	a0,0x2a7d4 # searchpath+0x3c>
	mv	a1,s1
	mv	a3,s2
	mv	a2,s0
	mv	a0,s3
	jal	ra,0x23036 # luaL_gsub>
	mv	s1,a0
	lui	s5,0x1
	lui	s0,0xfffff
	addi	a5,s5,-1984 # 0x840 # exit-0xf8e0>
	add	a5,a5,sp
	addi	s2,s0,1984 # 0xfffffffffffff7c0 # __BSS_END__+0xfffffffffffb1438>
	add	s2,s2,a5
	mv	a1,s2
	mv	a0,s3
	jal	ra,0x22348 # luaL_buffinit>
	addi	a5,s5,-1984
	add	a5,a5,sp
	mv	a3,s1
	auipc	a2,0x17
	addi	a2,a2,-1196 # 0x41348 # __clzdi2+0x480>
	mv	a1,s4
	mv	a0,s2
	add	s0,s0,a5
	jal	ra,0x22f62 # luaL_addgsub>
	ld	a4,2000(s0)
	ld	a5,1992(s0)
	bleu	a5,a4,0x2a90e # searchpath+0x176>
	lui	a3,0x1
	addi	a3,a3,-1984 # 0x840 # exit-0xf8e0>
	add	a3,a3,sp
	lui	a5,0xfffff
	add	a5,a5,a3
	ld	a3,1984(a5) # 0xfffffffffffff7c0 # __BSS_END__+0xfffffffffffb1438>
	addi	a2,a4,1
	sd	a2,2000(a5)
	add	a4,a4,a3
	sb	zero,0(a4)
	ld	s2,2000(a5)
	ld	s0,1984(a5)
	li	s5,59
	addi	s2,s2,-1
	add	s2,s2,s0
	auipc	s4,0x1a
	addi	s4,s4,-1968 # 0x44090 # optsnum.0+0x248>
	li	a1,59
	beq	s2,s0,0x2a8a0 # searchpath+0x108>
	lbu	a5,0(s0)
	bnez	a5,0x2a85c # searchpath+0xc4>
	sb	s5,0(s0)
	addi	s0,s0,1
	mv	a0,s0
	jal	ra,0x3690a # strchr>
	mv	s1,a0
	mv	a1,s4
	mv	a0,s0
	beqz	s1,0x2a90a # searchpath+0x172>
	sb	zero,0(s1)
	jal	ra,0x338ac # fopen>
	beqz	a0,0x2a896 # searchpath+0xfe>
	jal	ra,0x334fc # fclose>
	mv	a1,s0
	mv	a0,s3
	jal	ra,0x11e96 # lua_pushstring>
	addi	sp,sp,2032
	ld	ra,136(sp)
	ld	s0,128(sp)
	ld	s1,120(sp)
	ld	s2,112(sp)
	ld	s3,104(sp)
	ld	s4,96(sp)
	ld	s5,88(sp)
	addi	sp,sp,144
	ret
	mv	s0,s1
	li	a1,59
	bne	s2,s0,0x2a850 # searchpath+0xb8>
	lui	a5,0x1
	lui	a0,0xfffff
	addi	a5,a5,-1984 # 0x840 # exit-0xf8e0>
	add	a5,a5,sp
	addi	a0,a0,1984 # 0xfffffffffffff7c0 # __BSS_END__+0xfffffffffffb1438>
	add	a0,a0,a5
	jal	ra,0x222fe # luaL_pushresult>
	li	a2,0
	li	a1,-1
	mv	a0,s3
	jal	ra,0x11a62 # lua_tolstring>
	addi	s0,sp,1056
	mv	s1,a0
	mv	a1,s0
	mv	a0,s3
	jal	ra,0x22348 # luaL_buffinit>
	auipc	a1,0x1a
	addi	a1,a1,-820 # 0x44598 # mode.0+0x218>
	mv	a0,s0
	jal	ra,0x22b68 # luaL_addstring>
	auipc	a3,0x1a
	addi	a3,a3,-818 # 0x445a8 # mode.0+0x228>
	auipc	a2,0x1a
	addi	a2,a2,-810 # 0x445b8 # mode.0+0x238>
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x22f62 # luaL_addgsub>
	auipc	a1,0x1a
	addi	a1,a1,-850 # 0x445a0 # mode.0+0x220>
	mv	a0,s0
	jal	ra,0x22b68 # luaL_addstring>
	mv	a0,s0
	jal	ra,0x222fe # luaL_pushresult>
	li	a0,0
	j	0x2a880 # searchpath+0xe8>
	mv	s1,s2
	j	0x2a86a # searchpath+0xd2>
	li	a1,1
	mv	a0,s2
	jal	ra,0x22a66 # luaL_prepbuffsize>
	ld	a4,2000(s0)
	j	0x2a812 # searchpath+0x7a>

ll_searchpath:
	addi	sp,sp,-48
	li	a2,0
	li	a1,1
	sd	ra,40(sp)
	sd	s0,32(sp)
	sd	s1,24(sp)
	mv	s0,a0
	sd	s2,16(sp)
	sd	s3,8(sp)
	jal	ra,0x22138 # luaL_checklstring>
	mv	s1,a0
	li	a2,0
	li	a1,2
	mv	a0,s0
	jal	ra,0x22138 # luaL_checklstring>
	mv	s2,a0
	li	a3,0
	auipc	a2,0x18
	addi	a2,a2,1134 # 0x42db0 # udatatypename+0x3e8>
	li	a1,3
	mv	a0,s0
	jal	ra,0x2217c # luaL_optlstring>
	mv	s3,a0
	li	a3,0
	auipc	a2,0x1a
	addi	a2,a2,-918 # 0x445c0 # mode.0+0x240>
	li	a1,4
	mv	a0,s0
	jal	ra,0x2217c # luaL_optlstring>
	mv	a4,a0
	mv	a3,s3
	mv	a2,s2
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x2a798 # searchpath>
	beqz	a0,0x2a986 # ll_searchpath+0x6a>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	li	a0,1
	addi	sp,sp,48
	ret
	mv	a0,s0
	jal	ra,0x11e16 # lua_pushnil>
	mv	a0,s0
	li	a2,1
	li	a1,-2
	jal	ra,0x111ea # lua_rotate>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	li	a0,2
	addi	sp,sp,48
	ret

lookforfunc:
	addi	sp,sp,-32
	sd	s1,8(sp)
	mv	s1,a1
	lui	a1,0xfff0c
	sd	s2,0(sp)
	addi	a1,a1,-1576 # 0xfffffffffff0b9d8 # __BSS_END__+0xffffffffffebd650>
	mv	s2,a2
	auipc	a2,0x1a
	addi	a2,a2,-1008 # 0x445c8 # mode.0+0x248>
	sd	ra,24(sp)
	sd	s0,16(sp)
	mv	s0,a0
	jal	ra,0x120a4 # lua_getfield>
	mv	a2,s1
	li	a1,-1
	mv	a0,s0
	jal	ra,0x120a4 # lua_getfield>
	li	a1,-1
	mv	a0,s0
	jal	ra,0x11c6a # lua_touserdata>
	mv	s1,a0
	li	a1,-3
	mv	a0,s0
	jal	ra,0x1110c # lua_settop>
	beqz	s1,0x2aa26 # lookforfunc+0x80>
	lbu	a4,0(s2)
	li	a5,42
	beq	a4,a5,0x2aa10 # lookforfunc+0x6a>
	auipc	a1,0x1a
	addi	a1,a1,-1060 # 0x445d0 # mode.0+0x250>
	mv	a0,s0
	jal	ra,0x11e96 # lua_pushstring>
	li	a0,2
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret
	mv	a0,s0
	li	a1,1
	jal	ra,0x11fdc # lua_pushboolean>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	li	a0,0
	addi	sp,sp,32
	ret
	auipc	a1,0x1a
	addi	a1,a1,-1110 # 0x445d0 # mode.0+0x250>
	mv	a0,s0
	jal	ra,0x11e96 # lua_pushstring>
	li	a0,1
	j	0x2aa04 # lookforfunc+0x5e>

ll_loadlib:
	addi	sp,sp,-32
	li	a2,0
	li	a1,1
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	mv	s0,a0
	jal	ra,0x22138 # luaL_checklstring>
	mv	s1,a0
	li	a2,0
	li	a1,2
	mv	a0,s0
	jal	ra,0x22138 # luaL_checklstring>
	mv	a2,a0
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x2a9a6 # lookforfunc>
	bnez	a0,0x2aa6e # ll_loadlib+0x36>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	li	a0,1
	addi	sp,sp,32
	ret
	mv	s1,a0
	mv	a0,s0
	jal	ra,0x11e16 # lua_pushnil>
	li	a1,-2
	li	a2,1
	mv	a0,s0
	jal	ra,0x111ea # lua_rotate>
	li	a5,1
	auipc	a1,0x1a
	addi	a1,a1,-1138 # 0x44610 # mode.0+0x290>
	beq	s1,a5,0x2aa96 # ll_loadlib+0x5e>
	auipc	a1,0x1a
	addi	a1,a1,-1142 # 0x44618 # mode.0+0x298>
	mv	a0,s0
	jal	ra,0x11e96 # lua_pushstring>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	li	a0,3
	addi	sp,sp,32
	ret

gctm:
	addi	sp,sp,-32
	li	a1,1
	sd	s1,8(sp)
	sd	ra,24(sp)
	sd	s0,16(sp)
	mv	s1,a0
	jal	ra,0x226ec # luaL_len>
	blez	a0,0x2aadc # gctm+0x34>
	mv	s0,a0
	mv	a2,s0
	li	a1,1
	mv	a0,s1
	jal	ra,0x121ea # lua_rawgeti>
	li	a1,-1
	mv	a0,s1
	jal	ra,0x11c6a # lua_touserdata>
	addi	s0,s0,-1
	li	a1,-2
	mv	a0,s1
	jal	ra,0x1110c # lua_settop>
	bnez	s0,0x2aabe # gctm+0x16>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	li	a0,0
	addi	sp,sp,32
	ret

loadfunc:
	addi	sp,sp,-48
	mv	a5,a2
	sd	s3,8(sp)
	auipc	a3,0x1a
	addi	a3,a3,-1230 # 0x44620 # mode.0+0x2a0>
	mv	s3,a1
	auipc	a2,0x18
	addi	a2,a2,696 # 0x42db0 # udatatypename+0x3e8>
	mv	a1,a5
	sd	s0,32(sp)
	sd	s1,24(sp)
	sd	ra,40(sp)
	sd	s2,16(sp)
	mv	s0,a0
	jal	ra,0x23036 # luaL_gsub>
	li	a1,45
	mv	s1,a0
	jal	ra,0x3690a # strchr>
	beqz	a0,0x2ab5c # loadfunc+0x74>
	sub	a2,a0,s1
	mv	a1,s1
	mv	s2,a0
	mv	a0,s0
	jal	ra,0x11e42 # lua_pushlstring>
	mv	a2,a0
	auipc	a1,0x1a
	addi	a1,a1,-1284 # 0x44628 # mode.0+0x2a8>
	mv	a0,s0
	jal	ra,0x11f0c # lua_pushfstring>
	mv	a2,a0
	mv	a1,s3
	mv	a0,s0
	jal	ra,0x2a9a6 # lookforfunc>
	li	a5,2
	beq	a0,a5,0x2ab58 # loadfunc+0x70>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	addi	sp,sp,48
	ret
	addi	s1,s2,1
	mv	a2,s1
	auipc	a1,0x1a
	addi	a1,a1,-1334 # 0x44628 # mode.0+0x2a8>
	mv	a0,s0
	jal	ra,0x11f0c # lua_pushfstring>
	mv	a2,a0
	mv	a0,s0
	ld	s0,32(sp)
	ld	ra,40(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	mv	a1,s3
	ld	s3,8(sp)
	addi	sp,sp,48
	j	0x2a9a6 # lookforfunc>

searcher_preload:
	addi	sp,sp,-32
	li	a2,0
	li	a1,1
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	mv	s0,a0
	jal	ra,0x22138 # luaL_checklstring>
	lui	a1,0xfff0c
	addi	a1,a1,-1576 # 0xfffffffffff0b9d8 # __BSS_END__+0xffffffffffebd650>
	mv	s1,a0
	auipc	a2,0x1a
	addi	a2,a2,-1380 # 0x44638 # mode.0+0x2b8>
	mv	a0,s0
	jal	ra,0x120a4 # lua_getfield>
	mv	a2,s1
	li	a1,-1
	mv	a0,s0
	jal	ra,0x120a4 # lua_getfield>
	bnez	a0,0x2abd2 # searcher_preload+0x52>
	mv	a2,s1
	mv	a0,s0
	auipc	a1,0x1a
	addi	a1,a1,-1394 # 0x44648 # mode.0+0x2c8>
	jal	ra,0x11f0c # lua_pushfstring>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	li	a0,1
	addi	sp,sp,32
	ret
	mv	a0,s0
	auipc	a1,0x1a
	addi	a1,a1,-1388 # 0x44668 # mode.0+0x2e8>
	jal	ra,0x11e96 # lua_pushstring>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	li	a0,2
	addi	sp,sp,32
	ret

setpath:
	addi	sp,sp,-1120
	sd	s2,1088(sp)
	sd	s4,1072(sp)
	mv	s2,a1
	mv	s4,a3
	auipc	a1,0x1a
	addi	a1,a1,-1404 # 0x44680 # mode.0+0x300>
	auipc	a3,0x1a
	addi	a3,a3,-1420 # 0x44678 # mode.0+0x2f8>
	sd	ra,1112(sp)
	sd	s0,1104(sp)
	sd	s1,1096(sp)
	sd	s3,1080(sp)
	sd	s5,1064(sp)
	mv	s3,a2
	sd	s6,1056(sp)
	mv	s0,a0
	jal	ra,0x11f0c # lua_pushfstring>
	jal	ra,0x2f888 # getenv>
	mv	s1,a0
	beqz	a0,0x2ad08 # setpath+0x11c>
	lui	a1,0xfff0c
	auipc	a2,0x16
	addi	a2,a2,1510 # 0x41220 # __clzdi2+0x358>
	addi	a1,a1,-1576 # 0xfffffffffff0b9d8 # __BSS_END__+0xffffffffffebd650>
	mv	a0,s0
	jal	ra,0x120a4 # lua_getfield>
	li	a1,-1
	mv	a0,s0
	jal	ra,0x119ee # lua_toboolean>
	mv	s3,a0
	li	a1,-2
	mv	a0,s0
	jal	ra,0x1110c # lua_settop>
	beqz	s3,0x2aca0 # setpath+0xb4>
	mv	a1,s4
	mv	a0,s0
	jal	ra,0x11e96 # lua_pushstring>
	mv	a0,s0
	li	a1,-3
	mv	a2,s2
	jal	ra,0x124d2 # lua_setfield>
	mv	a0,s0
	ld	s0,1104(sp)
	ld	ra,1112(sp)
	ld	s1,1096(sp)
	ld	s2,1088(sp)
	ld	s3,1080(sp)
	ld	s4,1072(sp)
	ld	s5,1064(sp)
	ld	s6,1056(sp)
	li	a1,-2
	addi	sp,sp,1120
	j	0x1110c # lua_settop>
	auipc	a1,0x1a
	addi	a1,a1,-1560 # 0x44688 # mode.0+0x308>
	mv	a0,s1
	jal	ra,0x36e20 # strstr>
	mv	s3,a0
	beqz	a0,0x2ad3c # setpath+0x150>
	mv	a0,s1
	jal	ra,0x369fa # strlen>
	mv	s6,sp
	mv	s5,a0
	mv	a1,s6
	mv	a0,s0
	jal	ra,0x22348 # luaL_buffinit>
	bltu	s1,s3,0x2ad14 # setpath+0x128>
	addi	s5,s5,-2
	mv	a1,s4
	mv	a0,s6
	add	s1,s1,s5
	jal	ra,0x22b68 # luaL_addstring>
	bleu	s1,s3,0x2ad00 # setpath+0x114>
	ld	a5,16(sp)
	ld	a4,8(sp)
	bleu	a4,a5,0x2ad46 # setpath+0x15a>
	addi	a4,a5,1
	sd	a4,16(sp)
	ld	a4,0(sp)
	sub	a2,s1,s3
	addi	a1,s3,2
	add	a5,a5,a4
	li	a4,59
	sb	a4,0(a5)
	mv	a0,s6
	jal	ra,0x22b22 # luaL_addlstring>
	mv	a0,s6
	jal	ra,0x222fe # luaL_pushresult>
	j	0x2ac6a # setpath+0x7e>
	mv	a0,s3
	jal	ra,0x2f888 # getenv>
	mv	s1,a0
	beqz	a0,0x2ac62 # setpath+0x76>
	j	0x2ac36 # setpath+0x4a>
	sub	a2,s3,s1
	mv	a1,s1
	mv	a0,s6
	jal	ra,0x22b22 # luaL_addlstring>
	ld	a5,16(sp)
	ld	a4,8(sp)
	bleu	a4,a5,0x2ad52 # setpath+0x166>
	addi	a4,a5,1
	sd	a4,16(sp)
	ld	a4,0(sp)
	add	a5,a5,a4
	li	a4,59
	sb	a4,0(a5)
	j	0x2acc8 # setpath+0xdc>
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x11e96 # lua_pushstring>
	j	0x2ac6a # setpath+0x7e>
	li	a1,1
	mv	a0,s6
	jal	ra,0x22a66 # luaL_prepbuffsize>
	ld	a5,16(sp)
	j	0x2ace0 # setpath+0xf4>
	li	a1,1
	mv	a0,s6
	jal	ra,0x22a66 # luaL_prepbuffsize>
	ld	a5,16(sp)
	j	0x2ad28 # setpath+0x13c>

findfile.constprop.0:
	addi	sp,sp,-48
	sd	s2,16(sp)
	mv	s2,a1
	lui	a1,0xfff0c
	addi	a1,a1,-1577 # 0xfffffffffff0b9d7 # __BSS_END__+0xffffffffffebd64f>
	sd	ra,40(sp)
	sd	s0,32(sp)
	sd	s1,24(sp)
	sd	s3,8(sp)
	mv	s0,a0
	mv	s3,a2
	jal	ra,0x120a4 # lua_getfield>
	li	a2,0
	li	a1,-1
	mv	a0,s0
	jal	ra,0x11a62 # lua_tolstring>
	mv	s1,a0
	beqz	a0,0x2adae # findfile.constprop.0+0x50>
	mv	a0,s0
	ld	s0,32(sp)
	ld	ra,40(sp)
	ld	s3,8(sp)
	mv	a2,s1
	mv	a1,s2
	ld	s1,24(sp)
	ld	s2,16(sp)
	auipc	a4,0x1a
	addi	a4,a4,-2010 # 0x445c0 # mode.0+0x240>
	auipc	a3,0x18
	addi	a3,a3,14 # 0x42db0 # udatatypename+0x3e8>
	addi	sp,sp,48
	j	0x2a798 # searchpath>
	mv	a2,s3
	auipc	a1,0x1a
	addi	a1,a1,-1824 # 0x44690 # mode.0+0x310>
	mv	a0,s0
	jal	ra,0x21bdc # luaL_error>
	j	0x2ad8a # findfile.constprop.0+0x2c>

searcher_C:
	addi	sp,sp,-32
	li	a2,0
	li	a1,1
	sd	s0,16(sp)
	sd	s2,0(sp)
	sd	ra,24(sp)
	sd	s1,8(sp)
	mv	s0,a0
	jal	ra,0x22138 # luaL_checklstring>
	mv	s2,a0
	mv	a1,a0
	auipc	a2,0x1a
	addi	a2,a2,-1832 # 0x446b0 # mode.0+0x330>
	mv	a0,s0
	jal	ra,0x2ad5e # findfile.constprop.0>
	beqz	a0,0x2ae0c # searcher_C+0x4c>
	mv	s1,a0
	mv	a1,a0
	mv	a2,s2
	mv	a0,s0
	jal	ra,0x2aae8 # loadfunc>
	bnez	a0,0x2ae1a # searcher_C+0x5a>
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x11e96 # lua_pushstring>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	li	a0,2
	addi	sp,sp,32
	ret
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	li	a0,1
	addi	sp,sp,32
	ret
	li	a2,0
	li	a1,1
	mv	a0,s0
	jal	ra,0x11a62 # lua_tolstring>
	mv	s2,a0
	li	a1,-1
	li	a2,0
	mv	a0,s0
	jal	ra,0x11a62 # lua_tolstring>
	mv	a4,a0
	mv	a0,s0
	ld	s0,16(sp)
	ld	ra,24(sp)
	mv	a3,s1
	mv	a2,s2
	ld	s1,8(sp)
	ld	s2,0(sp)
	auipc	a1,0x1a
	addi	a1,a1,-1928 # 0x446b8 # mode.0+0x338>
	addi	sp,sp,32
	j	0x21bdc # luaL_error>

searcher_Croot:
	addi	sp,sp,-32
	li	a1,1
	li	a2,0
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	ra,24(sp)
	sd	s2,0(sp)
	mv	s0,a0
	jal	ra,0x22138 # luaL_checklstring>
	li	a1,46
	mv	s1,a0
	jal	ra,0x3690a # strchr>
	beqz	a0,0x2aeec # searcher_Croot+0x9e>
	sub	a2,a0,s1
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x11e42 # lua_pushlstring>
	li	a2,0
	li	a1,-1
	mv	a0,s0
	jal	ra,0x11a62 # lua_tolstring>
	mv	a1,a0
	auipc	a2,0x1a
	addi	a2,a2,-2006 # 0x446b0 # mode.0+0x330>
	mv	a0,s0
	jal	ra,0x2ad5e # findfile.constprop.0>
	mv	s2,a0
	beqz	a0,0x2aede # searcher_Croot+0x90>
	mv	a1,a0
	mv	a2,s1
	mv	a0,s0
	jal	ra,0x2aae8 # loadfunc>
	beqz	a0,0x2af1a # searcher_Croot+0xcc>
	li	a5,2
	beq	a0,a5,0x2aefa # searcher_Croot+0xac>
	li	a2,0
	li	a1,1
	mv	a0,s0
	jal	ra,0x11a62 # lua_tolstring>
	mv	s1,a0
	li	a1,-1
	li	a2,0
	mv	a0,s0
	jal	ra,0x11a62 # lua_tolstring>
	mv	a4,a0
	mv	a0,s0
	ld	s0,16(sp)
	ld	ra,24(sp)
	mv	a3,s2
	mv	a2,s1
	ld	s2,0(sp)
	ld	s1,8(sp)
	auipc	a1,0x19
	addi	a1,a1,2024 # 0x446b8 # mode.0+0x338>
	addi	sp,sp,32
	j	0x21bdc # luaL_error>
	li	a0,1
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	li	a0,0
	addi	sp,sp,32
	ret
	mv	a3,s2
	mv	a2,s1
	mv	a0,s0
	auipc	a1,0x19
	addi	a1,a1,2024 # 0x446e8 # mode.0+0x368>
	jal	ra,0x11f0c # lua_pushfstring>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	li	a0,1
	addi	sp,sp,32
	ret
	mv	a1,s2
	mv	a0,s0
	jal	ra,0x11e96 # lua_pushstring>
	li	a0,2
	j	0x2aee0 # searcher_Croot+0x92>

searcher_Lua:
	addi	sp,sp,-32
	li	a2,0
	li	a1,1
	sd	s0,16(sp)
	sd	ra,24(sp)
	sd	s1,8(sp)
	sd	s2,0(sp)
	mv	s0,a0
	jal	ra,0x22138 # luaL_checklstring>
	mv	a1,a0
	auipc	a2,0x19
	addi	a2,a2,1996 # 0x44708 # mode.0+0x388>
	mv	a0,s0
	jal	ra,0x2ad5e # findfile.constprop.0>
	beqz	a0,0x2af70 # searcher_Lua+0x4a>
	mv	s1,a0
	mv	a1,a0
	li	a2,0
	mv	a0,s0
	jal	ra,0x2244e # luaL_loadfilex>
	bnez	a0,0x2af7e # searcher_Lua+0x58>
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x11e96 # lua_pushstring>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	li	a0,2
	addi	sp,sp,32
	ret
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	li	a0,1
	addi	sp,sp,32
	ret
	li	a2,0
	li	a1,1
	mv	a0,s0
	jal	ra,0x11a62 # lua_tolstring>
	mv	s2,a0
	li	a1,-1
	li	a2,0
	mv	a0,s0
	jal	ra,0x11a62 # lua_tolstring>
	mv	a4,a0
	mv	a0,s0
	ld	s0,16(sp)
	ld	ra,24(sp)
	mv	a3,s1
	mv	a2,s2
	ld	s1,8(sp)
	ld	s2,0(sp)
	auipc	a1,0x19
	addi	a1,a1,1812 # 0x446b8 # mode.0+0x338>
	addi	sp,sp,32
	j	0x21bdc # luaL_error>

luaopen_package:
	lui	a1,0xfff0c
	addi	sp,sp,-48
	auipc	a2,0x19
	addi	a2,a2,1552 # 0x445c8 # mode.0+0x248>
	addi	a1,a1,-1576 # 0xfffffffffff0b9d8 # __BSS_END__+0xffffffffffebd650>
	sd	ra,40(sp)
	sd	s0,32(sp)
	sd	s1,24(sp)
	mv	s0,a0
	sd	s2,16(sp)
	sd	s3,8(sp)
	jal	ra,0x22e46 # luaL_getsubtable>
	li	a2,1
	li	a1,0
	mv	a0,s0
	jal	ra,0x1228e # lua_createtable>
	li	a2,0
	auipc	a1,0x0
	addi	a1,a1,-1336 # 0x2aaa8 # gctm>
	mv	a0,s0
	jal	ra,0x11f4a # lua_pushcclosure>
	auipc	a2,0x16
	addi	a2,a2,1298 # 0x41500 # lua_ident+0x168>
	li	a1,-2
	mv	a0,s0
	jal	ra,0x124d2 # lua_setfield>
	li	a1,-2
	mv	a0,s0
	jal	ra,0x1272e # lua_setmetatable>
	auipc	a5,0x16
	fld	fa0,826(a5) # 0x41340 # __clzdi2+0x478>
	li	a1,136
	mv	a0,s0
	jal	ra,0x230e8 # luaL_checkversion_>
	li	a2,7
	li	a1,0
	mv	a0,s0
	jal	ra,0x1228e # lua_createtable>
	li	a2,0
	auipc	a1,0x22
	addi	a1,a1,-1596 # 0x4c9e8 # pk_funcs>
	mv	a0,s0
	jal	ra,0x228d8 # luaL_setfuncs>
	li	a2,0
	li	a1,4
	mv	a0,s0
	jal	ra,0x1228e # lua_createtable>
	auipc	s3,0x22
	addi	s3,s3,-1484 # 0x4ca70 # searchers.0+0x8>
	li	s2,1
	auipc	s1,0x0
	addi	s1,s1,-1222 # 0x2ab80 # searcher_preload>
	li	a1,-2
	mv	a0,s0
	jal	ra,0x113c8 # lua_pushvalue>
	mv	a1,s1
	mv	a0,s0
	li	a2,1
	jal	ra,0x11f4a # lua_pushcclosure>
	mv	a2,s2
	li	a1,-2
	mv	a0,s0
	jal	ra,0x126cc # lua_rawseti>
	ld	s1,0(s3)
	addi	s2,s2,1
	addi	s3,s3,8
	bnez	s1,0x2b04e # luaopen_package+0x9c>
	mv	a0,s0
	auipc	a2,0x19
	addi	a2,a2,1218 # 0x44538 # mode.0+0x1b8>
	li	a1,-2
	jal	ra,0x124d2 # lua_setfield>
	mv	a0,s0
	auipc	a3,0x19
	addi	a3,a3,1674 # 0x44710 # mode.0+0x390>
	auipc	a2,0x19
	addi	a2,a2,1818 # 0x447a8 # mode.0+0x428>
	auipc	a1,0x19
	addi	a1,a1,1650 # 0x44708 # mode.0+0x388>
	jal	ra,0x2abec # setpath>
	auipc	a3,0x19
	addi	a3,a3,1814 # 0x447b8 # mode.0+0x438>
	auipc	a2,0x19
	addi	a2,a2,1878 # 0x44800 # mode.0+0x480>
	mv	a0,s0
	auipc	a1,0x19
	addi	a1,a1,1532 # 0x446b0 # mode.0+0x330>
	jal	ra,0x2abec # setpath>
	auipc	a1,0x19
	addi	a1,a1,1872 # 0x44810 # mode.0+0x490>
	mv	a0,s0
	jal	ra,0x11e96 # lua_pushstring>
	mv	a0,s0
	auipc	a2,0x19
	addi	a2,a2,1872 # 0x44820 # mode.0+0x4a0>
	li	a1,-2
	jal	ra,0x124d2 # lua_setfield>
	lui	s1,0xfff0c
	addi	a1,s1,-1576 # 0xfffffffffff0b9d8 # __BSS_END__+0xffffffffffebd650>
	auipc	a2,0x18
	addi	a2,a2,-806 # 0x42dc0 # udatatypename+0x3f8>
	mv	a0,s0
	jal	ra,0x22e46 # luaL_getsubtable>
	mv	a0,s0
	auipc	a2,0x19
	addi	a2,a2,1842 # 0x44828 # mode.0+0x4a8>
	li	a1,-2
	jal	ra,0x124d2 # lua_setfield>
	addi	a1,s1,-1576
	auipc	a2,0x19
	addi	a2,a2,1328 # 0x44638 # mode.0+0x2b8>
	mv	a0,s0
	jal	ra,0x22e46 # luaL_getsubtable>
	mv	a0,s0
	auipc	a2,0x19
	addi	a2,a2,1816 # 0x44830 # mode.0+0x4b0>
	li	a1,-2
	jal	ra,0x124d2 # lua_setfield>
	li	a2,2
	addi	a1,s1,-1576
	mv	a0,s0
	jal	ra,0x121ea # lua_rawgeti>
	mv	a0,s0
	li	a1,-2
	jal	ra,0x113c8 # lua_pushvalue>
	mv	a0,s0
	li	a2,1
	auipc	a1,0x22
	addi	a1,a1,-1710 # 0x4ca90 # ll_funcs>
	jal	ra,0x228d8 # luaL_setfuncs>
	mv	a0,s0
	li	a1,-2
	jal	ra,0x1110c # lua_settop>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	li	a0,1
	addi	sp,sp,48
	ret

getfield:
	addi	sp,sp,-64
	sd	s2,32(sp)
	mv	s2,a1
	sd	s0,48(sp)
	li	a1,-1
	mv	s0,a2
	mv	a2,s2
	sd	ra,56(sp)
	sd	s1,40(sp)
	sd	s3,24(sp)
	sd	s4,16(sp)
	mv	s1,a0
	mv	s4,a3
	jal	ra,0x120a4 # lua_getfield>
	mv	s3,a0
	addi	a2,sp,12
	li	a1,-1
	mv	a0,s1
	jal	ra,0x11952 # lua_tointegerx>
	lw	a5,12(sp)
	bnez	a5,0x2b1b4 # getfield+0x52>
	bnez	s3,0x2b1f8 # getfield+0x96>
	srliw	a5,s0,0x1f
	bnez	a5,0x2b20a # getfield+0xa8>
	mv	a0,s1
	li	a1,-2
	jal	ra,0x1110c # lua_settop>
	mv	a0,s0
	ld	ra,56(sp)
	ld	s0,48(sp)
	ld	s1,40(sp)
	ld	s2,32(sp)
	ld	s3,24(sp)
	ld	s4,16(sp)
	addi	sp,sp,64
	ret
	bltz	a0,0x2b1cc # getfield+0x6a>
	lui	a5,0x80000
	not	a5,a5
	add	a5,a5,s4
	bltu	a5,a0,0x2b1d8 # getfield+0x76>
	subw	s0,a0,s4
	j	0x2b19a # getfield+0x38>
	lui	a5,0x80000
	addw	a5,a5,s4
	ble	a5,a0,0x2b1c6 # getfield+0x64>
	mv	a2,s2
	mv	a0,s1
	auipc	a1,0x19
	addi	a1,a1,1724 # 0x44898 # mode.0+0x518>
	jal	ra,0x21bdc # luaL_error>
	ld	ra,56(sp)
	ld	s0,48(sp)
	ld	s1,40(sp)
	ld	s2,32(sp)
	ld	s3,24(sp)
	ld	s4,16(sp)
	addi	sp,sp,64
	ret
	mv	a2,s2
	auipc	a1,0x19
	addi	a1,a1,1622 # 0x44850 # mode.0+0x4d0>
	mv	a0,s1
	jal	ra,0x21bdc # luaL_error>
	j	0x2b1a4 # getfield+0x42>
	mv	a2,s2
	auipc	a1,0x19
	addi	a1,a1,1636 # 0x44870 # mode.0+0x4f0>
	mv	a0,s1
	jal	ra,0x21bdc # luaL_error>
	j	0x2b1a4 # getfield+0x42>

os_setlocale:
	addi	sp,sp,-32
	li	a3,0
	li	a2,0
	li	a1,1
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	mv	s0,a0
	jal	ra,0x2217c # luaL_optlstring>
	mv	s1,a0
	auipc	a3,0x22
	addi	a3,a3,-1922 # 0x4cab0 # catnames.1>
	auipc	a2,0x19
	addi	a2,a2,1662 # 0x448b8 # mode.0+0x538>
	li	a1,2
	mv	a0,s0
	jal	ra,0x21fd6 # luaL_checkoption>
	slli	a5,a0,0x2
	auipc	a0,0x1a
	addi	a0,a0,-1942 # 0x44ab8 # cat.0>
	add	a0,a0,a5
	lw	a0,0(a0)
	mv	a1,s1
	jal	ra,0x2fa00 # setlocale>
	mv	a1,a0
	mv	a0,s0
	jal	ra,0x11e96 # lua_pushstring>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	li	a0,1
	addi	sp,sp,32
	ret

os_rename:
	addi	sp,sp,-32
	li	a2,0
	li	a1,1
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	mv	s0,a0
	jal	ra,0x22138 # luaL_checklstring>
	li	a2,0
	mv	s1,a0
	li	a1,2
	mv	a0,s0
	jal	ra,0x22138 # luaL_checklstring>
	mv	a1,a0
	mv	a0,s1
	jal	ra,0x34404 # rename>
	seqz	a1,a0
	mv	a0,s0
	ld	s0,16(sp)
	ld	ra,24(sp)
	ld	s1,8(sp)
	li	a2,0
	addi	sp,sp,32
	j	0x21d6a # luaL_fileresult>

os_remove:
	addi	sp,sp,-32
	li	a1,1
	li	a2,0
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	mv	s0,a0
	jal	ra,0x22138 # luaL_checklstring>
	mv	s1,a0
	jal	ra,0x343ce # remove>
	seqz	a1,a0
	mv	a0,s0
	ld	s0,16(sp)
	ld	ra,24(sp)
	mv	a2,s1
	ld	s1,8(sp)
	addi	sp,sp,32
	j	0x21d6a # luaL_fileresult>

os_getenv:
	addi	sp,sp,-16
	li	a2,0
	li	a1,1
	sd	ra,8(sp)
	sd	s0,0(sp)
	mv	s0,a0
	jal	ra,0x22138 # luaL_checklstring>
	jal	ra,0x2f888 # getenv>
	mv	a1,a0
	mv	a0,s0
	jal	ra,0x11e96 # lua_pushstring>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret

os_exit:
	addi	sp,sp,-32
	li	a1,1
	sd	s0,16(sp)
	sd	ra,24(sp)
	sd	s1,8(sp)
	mv	s0,a0
	jal	ra,0x1144a # lua_type>
	li	a5,1
	beq	a0,a5,0x2b344 # os_exit+0x44>
	li	a2,0
	li	a1,1
	mv	a0,s0
	jal	ra,0x222c8 # luaL_optinteger>
	sext.w	s1,a0
	li	a1,2
	mv	a0,s0
	jal	ra,0x119ee # lua_toboolean>
	bnez	a0,0x2b33c # os_exit+0x3c>
	bnez	s0,0x2b352 # os_exit+0x52>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	li	a0,0
	addi	sp,sp,32
	ret
	mv	a0,s0
	jal	ra,0x1bb26 # lua_close>
	j	0x2b32e # os_exit+0x2e>
	li	a1,1
	mv	a0,s0
	jal	ra,0x119ee # lua_toboolean>
	seqz	s1,a0
	j	0x2b324 # os_exit+0x24>
	mv	a0,s1
	jal	ra,0x10120 # exit>

os_execute:
	addi	sp,sp,-32
	li	a1,1
	li	a3,0
	li	a2,0
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	mv	s1,a0
	jal	ra,0x2217c # luaL_optlstring>
	mv	s0,a0
	jal	ra,0x2f900 # __errno_location>
	sw	zero,0(a0)
	mv	a0,s0
	jal	ra,0x32efc # system>
	mv	a1,a0
	mv	a0,s1
	beqz	s0,0x2b38e # os_execute+0x36>
	ld	s0,16(sp)
	ld	ra,24(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	j	0x21ddc # luaL_execresult>
	jal	ra,0x11fdc # lua_pushboolean>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	li	a0,1
	addi	sp,sp,32
	ret

os_difftime:
	addi	sp,sp,-32
	li	a1,1
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	mv	s0,a0
	jal	ra,0x22270 # luaL_checkinteger>
	mv	s1,a0
	li	a1,2
	mv	a0,s0
	jal	ra,0x22270 # luaL_checkinteger>
	mv	a1,a0
	mv	a0,s1
	jal	ra,0x37234 # difftime>
	mv	a0,s0
	jal	ra,0x11e22 # lua_pushnumber>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	li	a0,1
	addi	sp,sp,32
	ret

os_clock:
	addi	sp,sp,-16
	sd	ra,8(sp)
	sd	s0,0(sp)
	mv	s0,a0
	jal	ra,0x3717e # clock>
	fcvt.d.l	fa0,a0
	auipc	a5,0x19
	fld	fa5,1742(a5) # 0x44ab0 # mode.0+0x730>
	mv	a0,s0
	fdiv.d	fa0,fa0,fa5
	jal	ra,0x11e22 # lua_pushnumber>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret

os_tmpname:
	auipc	a5,0x19
	addi	a5,a5,1218 # 0x448c0 # mode.0+0x540>
	ld	a4,0(a5)
	addi	sp,sp,-64
	ld	a5,8(a5)
	sd	s1,40(sp)
	mv	s1,sp
	sd	s0,48(sp)
	sd	ra,56(sp)
	sd	a4,0(sp)
	mv	s0,a0
	mv	a0,s1
	sd	a5,8(s1)
	jal	ra,0x36ff6 # mkstemp>
	li	a5,-1
	bne	a0,a5,0x2b43e # os_tmpname+0x40>
	mv	a0,s0
	auipc	a1,0x19
	addi	a1,a1,1192 # 0x448d0 # mode.0+0x550>
	jal	ra,0x21bdc # luaL_error>
	ld	ra,56(sp)
	ld	s0,48(sp)
	ld	s1,40(sp)
	addi	sp,sp,64
	ret
	jal	ra,0x37b70 # close>
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x11e96 # lua_pushstring>
	ld	ra,56(sp)
	ld	s0,48(sp)
	ld	s1,40(sp)
	li	a0,1
	addi	sp,sp,64
	ret

setallfields:
	addi	sp,sp,-32
	sd	s1,8(sp)
	mv	s1,a1
	lw	a1,20(a1)
	sd	ra,24(sp)
	sd	s0,16(sp)
	addi	a1,a1,1900
	mv	s0,a0
	jal	ra,0x11e32 # lua_pushinteger>
	auipc	a2,0x19
	addi	a2,a2,1164 # 0x448f8 # mode.0+0x578>
	li	a1,-2
	mv	a0,s0
	jal	ra,0x124d2 # lua_setfield>
	lw	a1,16(s1)
	mv	a0,s0
	addi	a1,a1,1
	jal	ra,0x11e32 # lua_pushinteger>
	auipc	a2,0x19
	addi	a2,a2,1146 # 0x44900 # mode.0+0x580>
	li	a1,-2
	mv	a0,s0
	jal	ra,0x124d2 # lua_setfield>
	lw	a1,12(s1)
	mv	a0,s0
	jal	ra,0x11e32 # lua_pushinteger>
	auipc	a2,0x19
	addi	a2,a2,1130 # 0x44908 # mode.0+0x588>
	li	a1,-2
	mv	a0,s0
	jal	ra,0x124d2 # lua_setfield>
	lw	a1,8(s1)
	mv	a0,s0
	jal	ra,0x11e32 # lua_pushinteger>
	auipc	a2,0x19
	addi	a2,a2,1114 # 0x44910 # mode.0+0x590>
	li	a1,-2
	mv	a0,s0
	jal	ra,0x124d2 # lua_setfield>
	lw	a1,4(s1)
	mv	a0,s0
	jal	ra,0x11e32 # lua_pushinteger>
	auipc	a2,0x19
	addi	a2,a2,-78 # 0x44480 # mode.0+0x100>
	li	a1,-2
	mv	a0,s0
	jal	ra,0x124d2 # lua_setfield>
	lw	a1,0(s1)
	mv	a0,s0
	jal	ra,0x11e32 # lua_pushinteger>
	auipc	a2,0x19
	addi	a2,a2,1074 # 0x44918 # mode.0+0x598>
	li	a1,-2
	mv	a0,s0
	jal	ra,0x124d2 # lua_setfield>
	lw	a1,28(s1)
	mv	a0,s0
	addi	a1,a1,1
	jal	ra,0x11e32 # lua_pushinteger>
	auipc	a2,0x19
	addi	a2,a2,1056 # 0x44920 # mode.0+0x5a0>
	li	a1,-2
	mv	a0,s0
	jal	ra,0x124d2 # lua_setfield>
	lw	a1,24(s1)
	mv	a0,s0
	addi	a1,a1,1
	jal	ra,0x11e32 # lua_pushinteger>
	li	a1,-2
	auipc	a2,0x19
	addi	a2,a2,1036 # 0x44928 # mode.0+0x5a8>
	mv	a0,s0
	jal	ra,0x124d2 # lua_setfield>
	lw	a1,32(s1)
	bltz	a1,0x2b54e # setallfields+0xf8>
	mv	a0,s0
	jal	ra,0x11fdc # lua_pushboolean>
	mv	a0,s0
	ld	s0,16(sp)
	ld	ra,24(sp)
	ld	s1,8(sp)
	auipc	a2,0x19
	addi	a2,a2,1010 # 0x44930 # mode.0+0x5b0>
	li	a1,-2
	addi	sp,sp,32
	j	0x124d2 # lua_setfield>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret

os_time:
	addi	sp,sp,-96
	li	a1,1
	sd	s0,80(sp)
	sd	ra,88(sp)
	sd	s1,72(sp)
	sd	s2,64(sp)
	mv	s0,a0
	jal	ra,0x1144a # lua_type>
	blez	a0,0x2b65c # os_time+0x104>
	li	a2,5
	li	a1,1
	mv	a0,s0
	jal	ra,0x220c4 # luaL_checktype>
	li	a1,1
	mv	a0,s0
	jal	ra,0x1110c # lua_settop>
	li	a3,1900
	li	a2,-1
	auipc	a1,0x19
	addi	a1,a1,882 # 0x448f8 # mode.0+0x578>
	mv	a0,s0
	jal	ra,0x2b162 # getfield>
	mv	a5,a0
	li	a3,1
	li	a2,-1
	auipc	a1,0x19
	addi	a1,a1,870 # 0x44900 # mode.0+0x580>
	mv	a0,s0
	sw	a5,28(sp)
	jal	ra,0x2b162 # getfield>
	mv	a5,a0
	li	a3,0
	li	a2,-1
	auipc	a1,0x19
	addi	a1,a1,856 # 0x44908 # mode.0+0x588>
	mv	a0,s0
	sw	a5,24(sp)
	jal	ra,0x2b162 # getfield>
	mv	a5,a0
	li	a3,0
	li	a2,12
	auipc	a1,0x19
	addi	a1,a1,842 # 0x44910 # mode.0+0x590>
	mv	a0,s0
	sw	a5,20(sp)
	jal	ra,0x2b162 # getfield>
	mv	a5,a0
	li	a3,0
	li	a2,0
	auipc	a1,0x19
	addi	a1,a1,-348 # 0x44480 # mode.0+0x100>
	mv	a0,s0
	sw	a5,16(sp)
	jal	ra,0x2b162 # getfield>
	mv	a5,a0
	li	a2,0
	auipc	a1,0x19
	addi	a1,a1,808 # 0x44918 # mode.0+0x598>
	li	a3,0
	mv	a0,s0
	sw	a5,12(sp)
	jal	ra,0x2b162 # getfield>
	mv	a5,a0
	auipc	a2,0x19
	addi	a2,a2,812 # 0x44930 # mode.0+0x5b0>
	li	a1,-1
	mv	a0,s0
	sw	a5,8(sp)
	jal	ra,0x120a4 # lua_getfield>
	beqz	a0,0x2b682 # os_time+0x12a>
	li	a1,-1
	mv	a0,s0
	jal	ra,0x119ee # lua_toboolean>
	mv	s1,a0
	li	a1,-2
	mv	a0,s0
	jal	ra,0x1110c # lua_settop>
	addi	s2,sp,8
	mv	a0,s2
	sw	s1,40(sp)
	jal	ra,0x372e8 # mktime>
	mv	s1,a0
	mv	a1,s2
	mv	a0,s0
	jal	ra,0x2b456 # setallfields>
	li	a5,-1
	beq	s1,a5,0x2b66a # os_time+0x112>
	mv	a0,s0
	mv	a1,s1
	jal	ra,0x11e32 # lua_pushinteger>
	ld	ra,88(sp)
	ld	s0,80(sp)
	ld	s1,72(sp)
	ld	s2,64(sp)
	li	a0,1
	addi	sp,sp,96
	ret
	li	a0,0
	jal	ra,0x37b34 # time>
	mv	s1,a0
	li	a5,-1
	bne	s1,a5,0x2b646 # os_time+0xee>
	mv	a0,s0
	ld	s0,80(sp)
	ld	ra,88(sp)
	ld	s1,72(sp)
	ld	s2,64(sp)
	auipc	a1,0x19
	addi	a1,a1,708 # 0x44938 # mode.0+0x5b8>
	addi	sp,sp,96
	j	0x21bdc # luaL_error>
	li	s1,-1
	j	0x2b622 # os_time+0xca>

os_date:
	addi	sp,sp,-1264
	li	a1,1
	addi	a3,sp,24
	auipc	a2,0x19
	addi	a2,a2,818 # 0x449c0 # mode.0+0x640>
	sd	s1,1240(sp)
	sd	s4,1216(sp)
	sd	ra,1256(sp)
	sd	s0,1248(sp)
	sd	s2,1232(sp)
	sd	s3,1224(sp)
	sd	s5,1208(sp)
	sd	s6,1200(sp)
	sd	s7,1192(sp)
	sd	s8,1184(sp)
	sd	s9,1176(sp)
	sd	s10,1168(sp)
	sd	s11,1160(sp)
	mv	s4,a0
	jal	ra,0x2217c # luaL_optlstring>
	mv	s1,a0
	li	a1,2
	mv	a0,s4
	jal	ra,0x1144a # lua_type>
	blez	a0,0x2b85a # os_date+0x1d4>
	li	a1,2
	mv	a0,s4
	jal	ra,0x22270 # luaL_checkinteger>
	sd	a0,32(sp)
	lbu	a4,0(s1)
	li	a5,33
	ld	s2,24(sp)
	addi	a1,sp,40
	addi	a0,sp,32
	beq	a4,a5,0x2b874 # os_date+0x1ee>
	jal	ra,0x3727e # __localtime_r>
	mv	s5,a0
	mv	s0,s1
	beqz	s5,0x2b89c # os_date+0x216>
	lbu	a5,0(s0)
	addiw	a5,a5,-42
	beqz	a5,0x2b770 # os_date+0xea>
	addi	s7,sp,96
	add	s1,s1,s2
	li	a5,37
	mv	a1,s7
	mv	a0,s4
	sb	a5,16(sp)
	jal	ra,0x22348 # luaL_buffinit>
	bleu	s1,s0,0x2b766 # os_date+0xe0>
	li	s6,37
	addi	s9,sp,16
	li	s3,124
	addi	s11,sp,17
	lbu	a5,0(s0)
	addi	s10,s0,1
	beq	a5,s6,0x2b7da # os_date+0x154>
	ld	a5,112(sp)
	ld	a4,104(sp)
	bleu	a4,a5,0x2b7ce # os_date+0x148>
	addi	a4,a5,1
	sd	a4,112(sp)
	ld	a4,96(sp)
	lbu	a2,0(s0)
	mv	s0,s10
	add	a5,a5,a4
	sb	a2,0(a5)
	bltu	s0,s1,0x2b73a # os_date+0xb4>
	mv	a0,s7
	jal	ra,0x222fe # luaL_pushresult>
	li	a0,1
	j	0x2b794 # os_date+0x10e>
	lbu	a5,1(s0)
	addiw	a5,a5,-116
	bnez	a5,0x2b710 # os_date+0x8a>
	lbu	a5,2(s0)
	bnez	a5,0x2b710 # os_date+0x8a>
	li	a2,9
	li	a1,0
	mv	a0,s4
	jal	ra,0x1228e # lua_createtable>
	mv	a0,s4
	mv	a1,s5
	jal	ra,0x2b456 # setallfields>
	li	a0,1
	ld	ra,1256(sp)
	ld	s0,1248(sp)
	ld	s1,1240(sp)
	ld	s2,1232(sp)
	ld	s3,1224(sp)
	ld	s4,1216(sp)
	ld	s5,1208(sp)
	ld	s6,1200(sp)
	ld	s7,1192(sp)
	ld	s8,1184(sp)
	ld	s9,1176(sp)
	ld	s10,1168(sp)
	ld	s11,1160(sp)
	addi	sp,sp,1264
	ret
	li	a1,1
	mv	a0,s7
	jal	ra,0x22a66 # luaL_prepbuffsize>
	ld	a5,112(sp)
	j	0x2b74e # os_date+0xc8>
	li	a1,250
	mv	a0,s7
	jal	ra,0x22a66 # luaL_prepbuffsize>
	sub	s2,s1,s10
	sd	a0,8(sp)
	blez	s2,0x2b824 # os_date+0x19e>
	auipc	s0,0x19
	addi	s0,s0,386 # 0x44970 # mode.0+0x5f0>
	li	s8,1
	li	a4,97
	j	0x2b810 # os_date+0x18a>
	jal	ra,0x36306 # memcmp>
	beqz	a0,0x2b880 # os_date+0x1fa>
	add	s0,s0,s8
	lbu	a4,0(s0)
	beqz	a4,0x2b824 # os_date+0x19e>
	blt	s2,s8,0x2b824 # os_date+0x19e>
	mv	a1,s0
	mv	a2,s8
	mv	a0,s10
	bne	a4,s3,0x2b7fe # os_date+0x178>
	addiw	s8,s8,1
	add	s0,s0,s8
	lbu	a4,0(s0)
	bnez	a4,0x2b80c # os_date+0x186>
	auipc	a1,0x19
	addi	a1,a1,476 # 0x44a00 # mode.0+0x680>
	mv	a2,s10
	mv	a0,s4
	jal	ra,0x11f0c # lua_pushfstring>
	mv	a2,a0
	li	a1,1
	mv	a0,s4
	jal	ra,0x21c20 # luaL_argerror>
	mv	s0,s10
	ld	a0,8(sp)
	mv	a3,s5
	mv	a2,s9
	li	a1,250
	jal	ra,0x37b2a # strftime>
	ld	a5,112(sp)
	add	a5,a5,a0
	sd	a5,112(sp)
	bltu	s0,s1,0x2b73a # os_date+0xb4>
	j	0x2b766 # os_date+0xe0>
	li	a0,0
	jal	ra,0x37b34 # time>
	sd	a0,32(sp)
	lbu	a4,0(s1)
	li	a5,33
	ld	s2,24(sp)
	addi	a1,sp,40
	addi	a0,sp,32
	bne	a4,a5,0x2b6fa # os_date+0x74>
	jal	ra,0x3723c # __gmtime_r>
	mv	s5,a0
	addi	s0,s1,1
	j	0x2b702 # os_date+0x7c>
	mv	a2,s8
	mv	a1,s10
	mv	a0,s11
	jal	ra,0x3632a # memcpy>
	addi	a5,sp,1152
	add	a4,a5,s8
	sb	zero,-1135(a4)
	add	s0,s10,s8
	j	0x2b840 # os_date+0x1ba>
	auipc	a1,0x19
	addi	a1,a1,300 # 0x449c8 # mode.0+0x648>
	mv	a0,s4
	jal	ra,0x21bdc # luaL_error>
	j	0x2b794 # os_date+0x10e>

luaopen_os:
	addi	sp,sp,-16
	auipc	a5,0x16
	fld	fa0,-1390(a5) # 0x41340 # __clzdi2+0x478>
	li	a1,136
	sd	ra,8(sp)
	sd	s0,0(sp)
	mv	s0,a0
	jal	ra,0x230e8 # luaL_checkversion_>
	mv	a0,s0
	li	a2,11
	li	a1,0
	jal	ra,0x1228e # lua_createtable>
	mv	a0,s0
	li	a2,0
	auipc	a1,0x21
	addi	a1,a1,534 # 0x4cae8 # syslib>
	jal	ra,0x228d8 # luaL_setfuncs>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret

str_len:
	addi	sp,sp,-32
	addi	a2,sp,8
	li	a1,1
	sd	ra,24(sp)
	sd	s0,16(sp)
	mv	s0,a0
	jal	ra,0x22138 # luaL_checklstring>
	ld	a1,8(sp)
	mv	a0,s0
	jal	ra,0x11e32 # lua_pushinteger>
	ld	ra,24(sp)
	ld	s0,16(sp)
	li	a0,1
	addi	sp,sp,32
	ret

unpackint:
	addi	sp,sp,-96
	sd	s1,72(sp)
	sd	s2,64(sp)
	sd	s3,56(sp)
	sd	s6,32(sp)
	sd	s7,24(sp)
	sd	ra,88(sp)
	sd	s0,80(sp)
	sd	s4,48(sp)
	sd	s5,40(sp)
	sd	s8,16(sp)
	sd	s9,8(sp)
	li	a5,8
	mv	s3,a3
	mv	s7,a0
	mv	s1,a1
	mv	s2,a2
	mv	s6,a4
	li	a7,8
	blt	a5,a3,0x2b936 # unpackint+0x2c>
	mv	a7,a3
	addiw	t1,a7,-1
	sext.w	s4,a7
	bltz	t1,0x2b9fe # unpackint+0xf4>
	sext.w	a3,s3
	subw	a7,s3,a7
	li	a5,0
	mv	a6,t1
	slli	a5,a5,0x8
	bnez	s2,0x2b958 # unpackint+0x4e>
	sext.w	a6,a7
	add	a6,a6,s1
	lbu	a6,0(a6)
	addiw	a7,a7,1
	addi	t1,t1,-1
	or	a5,a6,a5
	bne	a7,a3,0x2b94c # unpackint+0x42>
	li	a4,7
	blt	a4,s3,0x2b9a4 # unpackint+0x9a>
	mv	s0,a5
	beqz	s6,0x2b988 # unpackint+0x7e>
	slliw	s3,s3,0x3
	addiw	s3,s3,-1
	li	a4,1
	sll	a4,a4,s3
	xor	a5,a5,a4
	sub	s0,a5,a4
	ld	ra,88(sp)
	mv	a0,s0
	ld	s0,80(sp)
	ld	s1,72(sp)
	ld	s2,64(sp)
	ld	s3,56(sp)
	ld	s4,48(sp)
	ld	s5,40(sp)
	ld	s6,32(sp)
	ld	s7,24(sp)
	ld	s8,16(sp)
	ld	s9,8(sp)
	addi	sp,sp,96
	ret
	li	a4,8
	mv	s0,a5
	beq	s3,a4,0x2b988 # unpackint+0x7e>
	bnez	s6,0x2b9ec # unpackint+0xe2>
	mv	s5,s4
	addiw	s8,s3,-1
	auipc	s9,0x19
	addi	s9,s9,282 # 0x44ad0 # cat.0+0x18>
	mv	a5,s5
	bnez	s2,0x2b9c8 # unpackint+0xbe>
	subw	a5,s8,s4
	add	a5,a5,s1
	lbu	a5,0(a5)
	addiw	s4,s4,1
	addi	s5,s5,1
	bne	a5,s6,0x2b9dc # unpackint+0xd2>
	blt	s4,s3,0x2b9be # unpackint+0xb4>
	j	0x2b988 # unpackint+0x7e>
	mv	a2,s3
	mv	a1,s9
	mv	a0,s7
	jal	ra,0x21bdc # luaL_error>
	blt	s4,s3,0x2b9be # unpackint+0xb4>
	j	0x2b988 # unpackint+0x7e>
	not	s6,a5
	srai	s6,s6,0x3f
	andi	s6,s6,-255
	addi	s6,s6,255
	j	0x2b9b0 # unpackint+0xa6>
	li	a5,0
	j	0x2b96a # unpackint+0x60>

classend:
	addi	sp,sp,-48
	sd	s0,32(sp)
	sd	s1,24(sp)
	sd	s2,16(sp)
	sd	ra,40(sp)
	sd	s3,8(sp)
	sd	s4,0(sp)
	lbu	a5,0(a1)
	li	a4,37
	mv	s2,a1
	mv	s1,a0
	addi	s0,a1,1
	beq	a5,a4,0x2ba82 # classend+0x80>
	li	a4,91
	bne	a5,a4,0x2ba66 # classend+0x64>
	lbu	a4,1(a1)
	li	a5,94
	beq	a4,a5,0x2ba98 # classend+0x96>
	auipc	s4,0x19
	addi	s4,s4,240 # 0x44b28 # cat.0+0x70>
	li	s3,37
	li	s2,93
	ld	a5,16(s1)
	beq	a5,s0,0x2ba8e # classend+0x8c>
	lbu	a4,0(s0)
	addi	a5,s0,1
	beq	a4,s3,0x2ba78 # classend+0x76>
	mv	s0,a5
	lbu	a5,0(s0)
	bne	a5,s2,0x2ba48 # classend+0x46>
	addi	s0,s0,1
	ld	ra,40(sp)
	mv	a0,s0
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	ld	s4,0(sp)
	addi	sp,sp,48
	ret
	ld	a4,16(s1)
	addi	s0,s0,2
	bleu	a4,a5,0x2ba5a # classend+0x58>
	j	0x2ba5c # classend+0x5a>
	ld	a5,16(a0)
	beq	a5,s0,0x2ba9e # classend+0x9c>
	addi	s0,s2,2
	j	0x2ba66 # classend+0x64>
	ld	a0,24(s1)
	mv	a1,s4
	jal	ra,0x21bdc # luaL_error>
	j	0x2ba4e # classend+0x4c>
	addi	s0,a1,2
	j	0x2ba38 # classend+0x36>
	ld	a0,24(a0)
	auipc	a1,0x19
	addi	a1,a1,96 # 0x44b00 # cat.0+0x48>
	addi	s0,s2,2
	jal	ra,0x21bdc # luaL_error>
	j	0x2ba66 # classend+0x64>

writer:
	lw	a5,0(a3)
	addi	sp,sp,-48
	sd	s0,32(sp)
	sd	s1,24(sp)
	sd	ra,40(sp)
	mv	s0,a1
	addi	s1,a3,8
	beqz	a5,0x2bad8 # writer+0x26>
	mv	a0,s1
	mv	a1,s0
	jal	ra,0x22b22 # luaL_addlstring>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	li	a0,0
	addi	sp,sp,48
	ret
	li	a5,1
	sw	a5,0(a3)
	mv	a1,s1
	sd	a2,8(sp)
	jal	ra,0x22348 # luaL_buffinit>
	ld	a2,8(sp)
	j	0x2bac4 # writer+0x12>

str_upper:
	addi	sp,sp,-1120
	addi	a2,sp,8
	li	a1,1
	sd	ra,1112(sp)
	sd	s0,1104(sp)
	sd	s1,1096(sp)
	sd	s3,1080(sp)
	mv	s0,a0
	sd	s2,1088(sp)
	jal	ra,0x22138 # luaL_checklstring>
	ld	a2,8(sp)
	addi	s3,sp,16
	mv	a1,s3
	mv	s1,a0
	mv	a0,s0
	jal	ra,0x22a7a # luaL_buffinitsize>
	ld	a1,8(sp)
	beqz	a1,0x2bb3e # str_upper+0x56>
	mv	s2,a0
	li	s0,0
	add	a5,s1,s0
	lbu	a0,0(a5)
	jal	ra,0x2f65e # toupper>
	add	a5,s2,s0
	sb	a0,0(a5)
	ld	a1,8(sp)
	addi	s0,s0,1
	bltu	s0,a1,0x2bb22 # str_upper+0x3a>
	mv	a0,s3
	jal	ra,0x22340 # luaL_pushresultsize>
	ld	ra,1112(sp)
	ld	s0,1104(sp)
	ld	s1,1096(sp)
	ld	s2,1088(sp)
	ld	s3,1080(sp)
	li	a0,1
	addi	sp,sp,1120
	ret

str_reverse:
	addi	sp,sp,-1104
	addi	a2,sp,8
	li	a1,1
	sd	ra,1096(sp)
	sd	s0,1088(sp)
	sd	s1,1080(sp)
	sd	s2,1072(sp)
	mv	s1,a0
	jal	ra,0x22138 # luaL_checklstring>
	ld	a2,8(sp)
	addi	s2,sp,16
	mv	a1,s2
	mv	s0,a0
	mv	a0,s1
	jal	ra,0x22a7a # luaL_buffinitsize>
	ld	a1,8(sp)
	beqz	a1,0x2bbb2 # str_reverse+0x52>
	li	a4,0
	not	a3,a4
	add	a5,s0,a1
	add	a5,a5,a3
	lbu	a3,0(a5)
	add	a5,a0,a4
	addi	a4,a4,1
	sb	a3,0(a5)
	ld	a1,8(sp)
	bltu	a4,a1,0x2bb94 # str_reverse+0x34>
	mv	a0,s2
	jal	ra,0x22340 # luaL_pushresultsize>
	ld	ra,1096(sp)
	ld	s0,1088(sp)
	ld	s1,1080(sp)
	ld	s2,1072(sp)
	li	a0,1
	addi	sp,sp,1104
	ret

str_rep:
	addi	sp,sp,-1136
	mv	a2,sp
	li	a1,1
	sd	ra,1128(sp)
	sd	s1,1112(sp)
	sd	s2,1104(sp)
	sd	s3,1096(sp)
	sd	s0,1120(sp)
	mv	s3,a0
	sd	s4,1088(sp)
	sd	s5,1080(sp)
	jal	ra,0x22138 # luaL_checklstring>
	li	a1,2
	mv	s1,a0
	mv	a0,s3
	jal	ra,0x22270 # luaL_checkinteger>
	mv	s2,a0
	addi	a3,sp,8
	auipc	a2,0x15
	addi	a2,a2,1496 # 0x411e0 # __clzdi2+0x318>
	li	a1,3
	mv	a0,s3
	jal	ra,0x2217c # luaL_optlstring>
	blez	s2,0x2bcd0 # str_rep+0x100>
	ld	a5,0(sp)
	ld	a4,8(sp)
	add	a2,a5,a4
	bleu	a5,a2,0x2bc38 # str_rep+0x68>
	auipc	a1,0x19
	addi	a1,a1,-224 # 0x44b48 # cat.0+0x90>
	mv	a0,s3
	jal	ra,0x21bdc # luaL_error>
	j	0x2bc98 # str_rep+0xc8>
	lui	a3,0x80000
	not	a3,a3
	divu	a3,a3,s2
	bltu	a3,a2,0x2bc28 # str_rep+0x58>
	addi	s0,s2,-1
	mul	a5,a5,s2
	mv	s4,a0
	mv	a0,s3
	addi	s5,sp,16
	mv	a1,s5
	mul	s3,s0,a4
	add	s3,s3,a5
	mv	a2,s3
	jal	ra,0x22a7a # luaL_buffinitsize>
	li	a4,1
	ld	a2,0(sp)
	mv	a5,a0
	beq	s2,a4,0x2bc86 # str_rep+0xb6>
	mv	a0,a5
	mv	a1,s1
	jal	ra,0x3632a # memcpy>
	ld	a2,0(sp)
	ld	a4,8(sp)
	addi	s0,s0,-1
	add	a5,a0,a2
	bnez	a4,0x2bcba # str_rep+0xea>
	bnez	s0,0x2bc70 # str_rep+0xa0>
	mv	a1,s1
	mv	a0,a5
	jal	ra,0x3632a # memcpy>
	mv	a0,s5
	mv	a1,s3
	jal	ra,0x22340 # luaL_pushresultsize>
	li	a0,1
	ld	ra,1128(sp)
	ld	s0,1120(sp)
	ld	s1,1112(sp)
	ld	s2,1104(sp)
	ld	s3,1096(sp)
	ld	s4,1088(sp)
	ld	s5,1080(sp)
	addi	sp,sp,1136
	ret
	mv	a2,a4
	mv	a0,a5
	mv	a1,s4
	jal	ra,0x3632a # memcpy>
	ld	a4,8(sp)
	ld	a2,0(sp)
	add	a5,a0,a4
	bnez	s0,0x2bc70 # str_rep+0xa0>
	j	0x2bc86 # str_rep+0xb6>
	auipc	a1,0x15
	addi	a1,a1,1296 # 0x411e0 # __clzdi2+0x318>
	mv	a0,s3
	jal	ra,0x11e96 # lua_pushstring>
	li	a0,1
	j	0x2bc98 # str_rep+0xc8>

str_lower:
	addi	sp,sp,-1120
	addi	a2,sp,8
	li	a1,1
	sd	ra,1112(sp)
	sd	s0,1104(sp)
	sd	s1,1096(sp)
	sd	s3,1080(sp)
	mv	s0,a0
	sd	s2,1088(sp)
	jal	ra,0x22138 # luaL_checklstring>
	ld	a2,8(sp)
	addi	s3,sp,16
	mv	a1,s3
	mv	s1,a0
	mv	a0,s0
	jal	ra,0x22a7a # luaL_buffinitsize>
	ld	a1,8(sp)
	beqz	a1,0x2bd38 # str_lower+0x56>
	mv	s2,a0
	li	s0,0
	add	a5,s1,s0
	lbu	a0,0(a5)
	jal	ra,0x2f648 # tolower>
	add	a5,s2,s0
	sb	a0,0(a5)
	ld	a1,8(sp)
	addi	s0,s0,1
	bltu	s0,a1,0x2bd1c # str_lower+0x3a>
	mv	a0,s3
	jal	ra,0x22340 # luaL_pushresultsize>
	ld	ra,1112(sp)
	ld	s0,1104(sp)
	ld	s1,1096(sp)
	ld	s2,1088(sp)
	ld	s3,1080(sp)
	li	a0,1
	addi	sp,sp,1120
	ret

match_class:
	addi	sp,sp,-32
	sd	s1,8(sp)
	mv	s1,a0
	mv	a0,a1
	sd	s0,16(sp)
	sd	ra,24(sp)
	mv	s0,a1
	jal	ra,0x2f648 # tolower>
	addiw	a5,a0,-97
	sext.w	a3,a5
	li	a4,25
	bltu	a4,a3,0x2bd90 # match_class+0x36>
	slli	a5,a5,0x20
	srli	a5,a5,0x20
	auipc	a4,0x19
	addi	a4,a4,810 # 0x450a8 # cat.0+0x5f0>
	slli	a5,a5,0x2
	add	a5,a5,a4
	lw	a5,0(a5)
	add	a5,a5,a4
	jr	a5
	sub	a0,s0,s1
	seqz	a0,a0
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret
	ori	a0,s1,32
	addiw	a0,a0,-97
	sltiu	a0,a0,26
	addiw	s0,s0,-97
	li	a5,25
	bleu	s0,a5,0x2bd98 # match_class+0x3e>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	seqz	a0,a0
	addi	sp,sp,32
	ret
	mv	a0,s1
	jal	ra,0x2f5ea # iscntrl>
	j	0x2bdae # match_class+0x54>
	addiw	a0,s1,-48
	sltiu	a0,a0,10
	j	0x2bdae # match_class+0x54>
	addiw	a0,s1,-33
	sltiu	a0,a0,94
	j	0x2bdae # match_class+0x54>
	addiw	a0,s1,-97
	sltiu	a0,a0,26
	j	0x2bdae # match_class+0x54>
	mv	a0,s1
	jal	ra,0x2f602 # ispunct>
	j	0x2bdae # match_class+0x54>
	li	a5,32
	li	a0,1
	beq	s1,a5,0x2bdae # match_class+0x54>
	addiw	a0,s1,-9
	sltiu	a0,a0,5
	j	0x2bdae # match_class+0x54>
	addiw	a0,s1,-65
	sltiu	a0,a0,26
	j	0x2bdae # match_class+0x54>
	mv	a0,s1
	jal	ra,0x2f5ca # isalnum>
	j	0x2bdae # match_class+0x54>
	mv	a0,s1
	jal	ra,0x2f628 # isxdigit>
	j	0x2bdae # match_class+0x54>
	seqz	a0,s1
	j	0x2bdae # match_class+0x54>

matchbracketclass:
	addi	sp,sp,-64
	sd	s0,48(sp)
	sd	s1,40(sp)
	sd	s2,32(sp)
	sd	s5,8(sp)
	sd	ra,56(sp)
	sd	s3,24(sp)
	sd	s4,16(sp)
	lbu	a3,1(a1)
	li	a5,94
	mv	s0,a1
	mv	s2,a0
	mv	s1,a2
	addi	a4,a1,1
	li	s5,1
	bne	a3,a5,0x2be5a # matchbracketclass+0x32>
	addi	a5,a1,2
	mv	s0,a4
	li	s5,0
	mv	a4,a5
	li	s3,37
	li	s4,45
	bleu	s1,a4,0x2be86 # matchbracketclass+0x5e>
	lbu	a5,1(s0)
	lbu	a1,2(s0)
	beq	a5,s3,0x2beb6 # matchbracketclass+0x8e>
	sext.w	a5,a5
	beq	a1,s4,0x2be9e # matchbracketclass+0x76>
	beq	s2,a5,0x2be8a # matchbracketclass+0x62>
	mv	s0,a4
	addi	a4,s0,1
	bltu	a4,s1,0x2be66 # matchbracketclass+0x3e>
	xori	s5,s5,1
	ld	ra,56(sp)
	ld	s0,48(sp)
	ld	s1,40(sp)
	ld	s2,32(sp)
	ld	s3,24(sp)
	ld	s4,16(sp)
	mv	a0,s5
	ld	s5,8(sp)
	addi	sp,sp,64
	ret
	addi	a3,s0,3
	bleu	s1,a3,0x2be78 # matchbracketclass+0x50>
	blt	s2,a5,0x2beb2 # matchbracketclass+0x8a>
	lbu	a5,3(s0)
	ble	s2,a5,0x2be8a # matchbracketclass+0x62>
	mv	s0,a3
	j	0x2be7e # matchbracketclass+0x56>
	mv	a0,s2
	jal	ra,0x2bd5a # match_class>
	addi	s0,s0,2
	beqz	a0,0x2be7e # matchbracketclass+0x56>
	j	0x2be8a # matchbracketclass+0x62>

str_char:
	addi	sp,sp,-1136
	sd	s3,1096(sp)
	sd	s4,1088(sp)
	sd	s6,1072(sp)
	sd	ra,1128(sp)
	sd	s0,1120(sp)
	sd	s1,1112(sp)
	sd	s2,1104(sp)
	sd	s5,1080(sp)
	sd	s7,1064(sp)
	mv	s4,a0
	mv	s6,sp
	jal	ra,0x110fc # lua_gettop>
	mv	s3,a0
	mv	a2,a0
	mv	a1,s6
	mv	a0,s4
	jal	ra,0x22a7a # luaL_buffinitsize>
	blez	s3,0x2bf2c # str_char+0x6a>
	mv	s2,a0
	li	s1,1
	li	s5,255
	auipc	s7,0x19
	addi	s7,s7,-930 # 0x44b68 # cat.0+0xb0>
	mv	a1,s1
	mv	a0,s4
	jal	ra,0x22270 # luaL_checkinteger>
	mv	s0,a0
	bltu	s5,a0,0x2bf60 # str_char+0x9e>
	sb	s0,0(s2)
	addiw	s1,s1,1
	addi	s2,s2,1
	ble	s1,s3,0x2bf12 # str_char+0x50>
	mv	a0,s6
	mv	a1,s3
	jal	ra,0x22340 # luaL_pushresultsize>
	ld	ra,1128(sp)
	ld	s0,1120(sp)
	ld	s1,1112(sp)
	ld	s2,1104(sp)
	ld	s3,1096(sp)
	ld	s4,1088(sp)
	ld	s5,1080(sp)
	ld	s6,1072(sp)
	ld	s7,1064(sp)
	li	a0,1
	addi	sp,sp,1136
	ret
	mv	a1,s1
	mv	a2,s7
	mv	a0,s4
	jal	ra,0x21c20 # luaL_argerror>
	j	0x2bf20 # str_char+0x5e>

addlenmod:
	addi	sp,sp,-48
	sd	ra,40(sp)
	sd	s0,32(sp)
	sd	s1,24(sp)
	sd	s2,16(sp)
	sd	s3,8(sp)
	sd	s4,0(sp)
	mv	s3,a1
	mv	s0,a0
	jal	ra,0x369fa # strlen>
	mv	s1,a0
	mv	a0,s3
	jal	ra,0x369fa # strlen>
	addi	a5,s1,-1
	mv	s2,a0
	add	a0,s0,a5
	lbu	s4,0(a0)
	add	s1,s1,s2
	add	s0,s0,s1
	addi	a2,s2,1
	mv	a1,s3
	jal	ra,0x3632a # memcpy>
	sb	s4,-1(s0)
	sb	zero,0(s0)
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	ld	s4,0(sp)
	addi	sp,sp,48
	ret

str_dump:
	addi	sp,sp,-1104
	li	a1,2
	sd	ra,1096(sp)
	sd	s0,1088(sp)
	sd	s1,1080(sp)
	mv	s0,a0
	jal	ra,0x119ee # lua_toboolean>
	li	a2,6
	mv	s1,a0
	li	a1,1
	mv	a0,s0
	jal	ra,0x220c4 # luaL_checktype>
	li	a1,1
	mv	a0,s0
	jal	ra,0x1110c # lua_settop>
	mv	a3,s1
	addi	a2,sp,8
	auipc	a1,0x0
	addi	a1,a1,-1340 # 0x2bab2 # writer>
	mv	a0,s0
	sw	zero,8(sp)
	jal	ra,0x12a90 # lua_dump>
	bnez	a0,0x2c01a # str_dump+0x5c>
	addi	a0,sp,16
	jal	ra,0x222fe # luaL_pushresult>
	ld	ra,1096(sp)
	ld	s0,1088(sp)
	ld	s1,1080(sp)
	li	a0,1
	addi	sp,sp,1104
	ret
	mv	a0,s0
	auipc	a1,0x19
	addi	a1,a1,-1180 # 0x44b80 # cat.0+0xc8>
	jal	ra,0x21bdc # luaL_error>
	ld	ra,1096(sp)
	ld	s0,1088(sp)
	ld	s1,1080(sp)
	addi	sp,sp,1104
	ret

trymt:
	addi	sp,sp,-32
	sd	s1,8(sp)
	mv	s1,a1
	li	a1,2
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s2,0(sp)
	mv	s0,a0
	jal	ra,0x1110c # lua_settop>
	li	a1,2
	mv	a0,s0
	jal	ra,0x1144a # lua_type>
	li	a5,4
	bne	a0,a5,0x2c0b6 # trymt+0x7c>
	li	a1,-2
	mv	a0,s0
	jal	ra,0x1144a # lua_type>
	mv	a1,a0
	mv	a0,s0
	jal	ra,0x114d0 # lua_typename>
	mv	s2,a0
	li	a1,-1
	mv	a0,s0
	jal	ra,0x1144a # lua_type>
	mv	a1,a0
	mv	a0,s0
	jal	ra,0x114d0 # lua_typename>
	mv	a4,a0
	mv	a3,s2
	addi	a2,s1,2
	auipc	a1,0x19
	addi	a1,a1,-1254 # 0x44ba0 # cat.0+0xe8>
	mv	a0,s0
	jal	ra,0x21bdc # luaL_error>
	mv	a0,s0
	li	a2,1
	li	a1,-3
	jal	ra,0x111ea # lua_rotate>
	mv	a0,s0
	ld	s0,16(sp)
	ld	ra,24(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	li	a4,0
	li	a3,0
	li	a2,1
	li	a1,2
	addi	sp,sp,32
	j	0x128c8 # lua_callk>
	mv	a2,s1
	li	a1,2
	mv	a0,s0
	jal	ra,0x22666 # luaL_getmetafield>
	beqz	a0,0x2c05c # trymt+0x22>
	j	0x2c094 # trymt+0x5a>

tonum:
	addi	sp,sp,-48
	sd	s0,32(sp)
	sd	s1,24(sp)
	sd	ra,40(sp)
	mv	s0,a0
	mv	s1,a1
	jal	ra,0x1144a # lua_type>
	li	a5,3
	beq	a0,a5,0x2c106 # tonum+0x42>
	mv	a1,s1
	addi	a2,sp,8
	mv	a0,s0
	jal	ra,0x11a62 # lua_tolstring>
	mv	a1,a0
	li	a0,0
	beqz	a1,0x2c0fc # tonum+0x38>
	mv	a0,s0
	jal	ra,0x11890 # lua_stringtonumber>
	ld	a5,8(sp)
	addi	a5,a5,1
	sub	a0,a5,a0
	seqz	a0,a0
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	addi	sp,sp,48
	ret
	mv	a0,s0
	mv	a1,s1
	jal	ra,0x113c8 # lua_pushvalue>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	li	a0,1
	addi	sp,sp,48
	ret

arith_pow:
	addi	sp,sp,-16
	li	a1,1
	sd	s0,0(sp)
	sd	ra,8(sp)
	mv	s0,a0
	jal	ra,0x2c0c4 # tonum>
	beqz	a0,0x2c134 # arith_pow+0x1a>
	li	a1,2
	mv	a0,s0
	jal	ra,0x2c0c4 # tonum>
	bnez	a0,0x2c14c # arith_pow+0x32>
	mv	a0,s0
	auipc	a1,0x16
	addi	a1,a1,1994 # 0x42900 # dummynode_+0x120>
	jal	ra,0x2c03a # trymt>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret
	mv	a0,s0
	li	a1,4
	jal	ra,0x117a6 # lua_arith>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret

str_format:
	addi	sp,sp,-1296
	sd	ra,1288(sp)
	sd	s2,1264(sp)
	sd	s5,1240(sp)
	sd	s6,1232(sp)
	sd	s7,1224(sp)
	mv	s6,a0
	sd	s0,1280(sp)
	sd	s1,1272(sp)
	sd	s3,1256(sp)
	sd	s4,1248(sp)
	sd	s8,1216(sp)
	sd	s9,1208(sp)
	sd	s10,1200(sp)
	sd	s11,1192(sp)
	fsd	fs0,1176(sp)
	fsd	fs1,1168(sp)
	fsd	fs2,1160(sp)
	jal	ra,0x110fc # lua_gettop>
	mv	s7,a0
	li	a1,1
	addi	a2,sp,32
	mv	a0,s6
	sd	s7,8(sp)
	jal	ra,0x22138 # luaL_checklstring>
	ld	s2,32(sp)
	addi	s5,sp,96
	mv	s7,a0
	add	s2,s2,a0
	mv	a1,s5
	mv	a0,s6
	jal	ra,0x22348 # luaL_buffinit>
	bleu	s2,s7,0x2c222 # str_format+0xc4>
	li	a4,-1
	slli	a5,a4,0x3f
	sd	a5,24(sp)
	li	s3,1
	addi	s10,sp,65
	addi	s11,sp,48
	addi	s9,sp,64
	auipc	a5,0x18
	fld	fs2,846(a5) # 0x44530 # mode.0+0x1b0>
	auipc	a5,0x19
	fld	fs1,462(a5) # 0x453b8 # cat.0+0x900>
	lbu	a4,0(s7)
	li	a3,37
	addi	s0,s7,1
	beq	a4,a3,0x2c270 # str_format+0x112>
	ld	a4,112(sp)
	ld	a3,104(sp)
	bleu	a3,a4,0x2c29a # str_format+0x13c>
	addi	a3,a4,1
	ld	a5,96(sp)
	sd	a3,112(sp)
	lbu	a3,0(s7)
	add	a4,a4,a5
	mv	s7,s0
	sb	a3,0(a4)
	bltu	s7,s2,0x2c1f2 # str_format+0x94>
	mv	a0,s5
	jal	ra,0x222fe # luaL_pushresult>
	li	a0,1
	ld	ra,1288(sp)
	ld	s0,1280(sp)
	ld	s1,1272(sp)
	ld	s2,1264(sp)
	ld	s3,1256(sp)
	ld	s4,1248(sp)
	ld	s5,1240(sp)
	ld	s6,1232(sp)
	ld	s7,1224(sp)
	ld	s8,1216(sp)
	ld	s9,1208(sp)
	ld	s10,1200(sp)
	ld	s11,1192(sp)
	fld	fs0,1176(sp)
	fld	fs1,1168(sp)
	fld	fs2,1160(sp)
	addi	sp,sp,1296
	ret
	lbu	a3,1(s7)
	bne	a3,a4,0x2c2a6 # str_format+0x148>
	ld	a4,112(sp)
	ld	a3,104(sp)
	bleu	a3,a4,0x2c3d0 # str_format+0x272>
	addi	a3,a4,1
	sd	a3,112(sp)
	ld	a3,96(sp)
	lbu	a2,1(s7)
	addi	s7,s7,2
	add	a4,a4,a3
	sb	a2,0(a4)
	bltu	s7,s2,0x2c1f2 # str_format+0x94>
	j	0x2c222 # str_format+0xc4>
	li	a1,1
	mv	a0,s5
	jal	ra,0x22a66 # luaL_prepbuffsize>
	ld	a4,112(sp)
	j	0x2c20a # str_format+0xac>
	li	a1,120
	mv	a0,s5
	jal	ra,0x22a66 # luaL_prepbuffsize>
	ld	a5,8(sp)
	addiw	s3,s3,1
	mv	s4,a0
	blt	a5,s3,0x2c68c # str_format+0x52e>
	lbu	a1,1(s7)
	mv	s8,s0
	addi	s7,s7,2
	beqz	a1,0x2c344 # str_format+0x1e6>
	mv	s7,s0
	auipc	s1,0x19
	addi	s1,s1,-1758 # 0x44be8 # cat.0+0x130>
	j	0x2c2d6 # str_format+0x178>
	lbu	a1,0(s7)
	beqz	a1,0x2c38c # str_format+0x22e>
	mv	a0,s1
	jal	ra,0x3690a # strchr>
	mv	a4,s7
	addi	s7,s7,1
	bnez	a0,0x2c2d0 # str_format+0x172>
	sub	a3,a4,s0
	li	a2,5
	bleu	a3,a2,0x2c2fe # str_format+0x1a0>
	auipc	a1,0x19
	addi	a1,a1,-1788 # 0x44bf0 # cat.0+0x138>
	mv	a0,s6
	sd	a4,16(sp)
	jal	ra,0x21bdc # luaL_error>
	ld	a4,16(sp)
	lbu	a2,0(a4)
	li	a1,9
	addiw	a3,a2,-48
	bltu	a1,a3,0x2c39a # str_format+0x23c>
	lbu	a2,1(a4)
	addiw	a3,a2,-48
	bltu	a1,a3,0x2c396 # str_format+0x238>
	lbu	a2,2(a4)
	li	a1,46
	addi	s8,a4,2
	addi	s7,a4,3
	beq	a2,a1,0x2c3dc # str_format+0x27e>
	addiw	a2,a2,-48
	li	a4,9
	bltu	a4,a2,0x2c344 # str_format+0x1e6>
	auipc	a1,0x19
	addi	a1,a1,-1830 # 0x44c10 # cat.0+0x158>
	mv	a0,s6
	jal	ra,0x21bdc # luaL_error>
	sub	s1,s8,s0
	li	a4,37
	addi	a2,s1,1
	mv	a1,s0
	mv	a0,s10
	sb	a4,64(sp)
	jal	ra,0x3632a # memcpy>
	addi	a5,sp,1152
	add	s1,s1,a5
	sb	zero,-1086(s1)
	lbu	a4,0(s8)
	li	a3,55
	addiw	a4,a4,-65
	andi	a4,a4,255
	bltu	a3,a4,0x2c3f2 # str_format+0x294>
	auipc	a5,0x19
	addi	a5,a5,-618 # 0x45110 # cat.0+0x658>
	slli	a4,a4,0x2
	add	a4,a4,a5
	lw	a4,0(a4)
	add	a4,a4,a5
	jr	a4
	addi	a3,a4,2
	mv	a4,s7
	mv	s7,a3
	j	0x2c2e2 # str_format+0x184>
	mv	a4,s7
	addi	s7,s7,1
	li	a3,46
	mv	s8,a4
	bne	a2,a3,0x2c344 # str_format+0x1e6>
	lbu	a3,1(a4)
	li	a2,9
	addiw	a3,a3,-48
	bltu	a2,a3,0x2c3ec # str_format+0x28e>
	lbu	a5,2(a4)
	addi	a1,a4,2
	addi	s8,a4,3
	addiw	a5,a5,-48
	bltu	a2,a5,0x2c7da # str_format+0x67c>
	lbu	a2,3(a4)
	addi	s7,a4,4
	j	0x2c32c # str_format+0x1ce>
	li	a1,1
	mv	a0,s5
	jal	ra,0x22a66 # luaL_prepbuffsize>
	ld	a4,112(sp)
	j	0x2c280 # str_format+0x122>
	mv	a4,s8
	lbu	a3,1(a4)
	li	a2,9
	addiw	a3,a3,-48
	bleu	a3,a2,0x2c3b2 # str_format+0x254>
	mv	s8,s7
	addi	s7,s7,1
	j	0x2c344 # str_format+0x1e6>
	addi	a2,sp,64
	auipc	a1,0x19
	addi	a1,a1,-1852 # 0x44cb8 # cat.0+0x200>
	mv	a0,s6
	jal	ra,0x21bdc # luaL_error>
	j	0x2c22a # str_format+0xcc>
	mv	a1,s3
	mv	a0,s6
	jal	ra,0x22270 # luaL_checkinteger>
	mv	s0,a0
	auipc	a1,0x18
	addi	a1,a1,-862 # 0x440b0 # optsnum.0+0x268>
	mv	a0,s9
	jal	ra,0x2bf6c # addlenmod>
	mv	a3,s0
	mv	a2,s9
	li	a1,120
	mv	a0,s4
	jal	ra,0x3448a # snprintf>
	ld	a4,112(sp)
	add	a0,a0,a4
	sd	a0,112(sp)
	bltu	s7,s2,0x2c1f2 # str_format+0x94>
	j	0x2c222 # str_format+0xc4>
	li	s0,120
	mv	a1,s3
	mv	a0,s6
	jal	ra,0x221e0 # luaL_checknumber>
	fmv.d	fs0,fa0
	auipc	a1,0x15
	addi	a1,a1,-614 # 0x411e0 # __clzdi2+0x318>
	mv	a0,s9
	jal	ra,0x2bf6c # addlenmod>
	fmv.x.d	a3,fs0
	mv	a2,s9
	mv	a1,s0
	mv	a0,s4
	jal	ra,0x3448a # snprintf>
	ld	a4,112(sp)
	add	a0,a0,a4
	sd	a0,112(sp)
	j	0x2c430 # str_format+0x2d2>
	auipc	a1,0x15
	addi	a1,a1,-650 # 0x411e0 # __clzdi2+0x318>
	mv	a0,s9
	jal	ra,0x2bf6c # addlenmod>
	mv	a1,s3
	mv	a0,s6
	jal	ra,0x221e0 # luaL_checknumber>
	fmv.x.d	a3,fa0
	mv	a2,s9
	li	a1,120
	mv	a0,s4
	jal	ra,0x3448a # snprintf>
	ld	a4,112(sp)
	add	a0,a0,a4
	sd	a0,112(sp)
	j	0x2c430 # str_format+0x2d2>
	mv	a1,s3
	mv	a0,s6
	jal	ra,0x22270 # luaL_checkinteger>
	sext.w	a3,a0
	mv	a2,s9
	li	a1,120
	mv	a0,s4
	jal	ra,0x3448a # snprintf>
	ld	a4,112(sp)
	add	a0,a0,a4
	sd	a0,112(sp)
	j	0x2c430 # str_format+0x2d2>
	mv	a2,s11
	mv	a1,s3
	mv	a0,s6
	jal	ra,0x2272e # luaL_tolstring>
	lbu	a4,66(sp)
	mv	s0,a0
	beqz	a4,0x2c60c # str_format+0x4ae>
	jal	ra,0x369fa # strlen>
	ld	a4,48(sp)
	bne	a0,a4,0x2c760 # str_format+0x602>
	li	a1,46
	mv	a0,s9
	jal	ra,0x3690a # strchr>
	beqz	a0,0x2c602 # str_format+0x4a4>
	mv	a3,s0
	mv	a2,s9
	li	a1,120
	mv	a0,s4
	jal	ra,0x3448a # snprintf>
	mv	s0,a0
	li	a1,-2
	mv	a0,s6
	jal	ra,0x1110c # lua_settop>
	mv	a0,s0
	ld	a4,112(sp)
	add	a0,a0,a4
	sd	a0,112(sp)
	j	0x2c430 # str_format+0x2d2>
	lbu	a4,66(sp)
	bnez	a4,0x2c786 # str_format+0x628>
	mv	a1,s3
	mv	a0,s6
	jal	ra,0x1144a # lua_type>
	li	a4,3
	beq	a0,a4,0x2c69e # str_format+0x540>
	blt	a4,a0,0x2c53e # str_format+0x3e0>
	sext.w	a0,a0
	li	a4,1
	bltu	a4,a0,0x2c6ee # str_format+0x590>
	li	a2,0
	mv	a1,s3
	mv	a0,s6
	jal	ra,0x2272e # luaL_tolstring>
	mv	a0,s5
	jal	ra,0x22ac4 # luaL_addvalue>
	ld	a0,112(sp)
	sd	a0,112(sp)
	j	0x2c430 # str_format+0x2d2>
	li	a4,4
	bne	a0,a4,0x2c6ee # str_format+0x590>
	addi	a2,sp,40
	mv	a1,s3
	mv	a0,s6
	jal	ra,0x11a62 # lua_tolstring>
	ld	a3,112(sp)
	ld	a2,104(sp)
	ld	s0,40(sp)
	mv	s8,a0
	bleu	a2,a3,0x2c748 # str_format+0x5ea>
	addi	a2,a3,1 # 0xffffffff80000001 # __BSS_END__+0xffffffff7ffb1c79>
	sd	a2,112(sp)
	ld	a2,96(sp)
	add	s1,s8,s0
	add	a3,a3,a2
	li	a2,34
	sb	a2,0(a3)
	beqz	s0,0x2c64c # str_format+0x4ee>
	li	s4,34
	li	s0,92
	lbu	a3,0(s8)
	beq	a3,s4,0x2c616 # str_format+0x4b8>
	beq	a3,s0,0x2c616 # str_format+0x4b8>
	li	a5,10
	beq	a3,a5,0x2c616 # str_format+0x4b8>
	sext.w	a3,a3
	mv	a0,a3
	sd	a3,16(sp)
	jal	ra,0x2f5ea # iscntrl>
	beqz	a0,0x2c66c # str_format+0x50e>
	lbu	a2,1(s8)
	li	a5,9
	ld	a3,16(sp)
	addiw	a2,a2,-48
	bltu	a5,a2,0x2c704 # str_format+0x5a6>
	auipc	a2,0x18
	addi	a2,a2,1736 # 0x44c70 # cat.0+0x1b8>
	li	a1,10
	mv	a0,s11
	jal	ra,0x3448a # snprintf>
	mv	a1,s11
	mv	a0,s5
	jal	ra,0x22b68 # luaL_addstring>
	j	0x2c646 # str_format+0x4e8>
	mv	a1,s3
	mv	a0,s6
	jal	ra,0x11d68 # lua_topointer>
	mv	a3,a0
	bnez	a0,0x2c41e # str_format+0x2c0>
	mv	a0,s9
	jal	ra,0x369fa # strlen>
	addi	a5,sp,1152
	li	a3,115
	add	a4,a5,a0
	sb	a3,-1089(a4)
	auipc	a3,0x16
	addi	a3,a3,-1390 # 0x42078 # log_2.0+0x128>
	j	0x2c41e # str_format+0x2c0>
	li	a1,418
	mv	a0,s5
	jal	ra,0x22a66 # luaL_prepbuffsize>
	mv	s4,a0
	li	s0,418
	j	0x2c43a # str_format+0x2dc>
	ld	a3,48(sp)
	li	a4,99
	bleu	a3,a4,0x2c4e4 # str_format+0x386>
	mv	a0,s5
	jal	ra,0x22ac4 # luaL_addvalue>
	li	a0,0
	j	0x2c4fe # str_format+0x3a0>
	ld	a3,112(sp)
	ld	a2,104(sp)
	bleu	a2,a3,0x2c680 # str_format+0x522>
	addi	a2,a3,1
	sd	a2,112(sp)
	ld	a2,96(sp)
	add	a3,a3,a2
	sb	s0,0(a3)
	ld	a3,112(sp)
	ld	a2,104(sp)
	bleu	a2,a3,0x2c674 # str_format+0x516>
	addi	a2,a3,1
	sd	a2,112(sp)
	ld	a2,96(sp)
	lbu	a1,0(s8)
	add	a3,a3,a2
	sb	a1,0(a3)
	addi	s8,s8,1
	bne	s1,s8,0x2c57a # str_format+0x41c>
	ld	a4,112(sp)
	ld	a3,104(sp)
	bleu	a3,a4,0x2c754 # str_format+0x5f6>
	addi	a3,a4,1
	sd	a3,112(sp)
	ld	a3,96(sp)
	add	a4,a4,a3
	li	a3,34
	sb	a3,0(a4)
	ld	a0,112(sp)
	sd	a0,112(sp)
	j	0x2c430 # str_format+0x2d2>
	ld	a3,112(sp)
	ld	a2,104(sp)
	bltu	a3,a2,0x2c634 # str_format+0x4d6>
	li	a1,1
	mv	a0,s5
	jal	ra,0x22a66 # luaL_prepbuffsize>
	ld	a3,112(sp)
	j	0x2c634 # str_format+0x4d6>
	li	a1,1
	mv	a0,s5
	jal	ra,0x22a66 # luaL_prepbuffsize>
	ld	a3,112(sp)
	j	0x2c61e # str_format+0x4c0>
	auipc	a2,0x16
	addi	a2,a2,756 # 0x42980 # dummynode_+0x1a0>
	mv	a1,s3
	mv	a0,s6
	jal	ra,0x21c20 # luaL_argerror>
	j	0x2c22a # str_format+0xcc>
	li	a1,120
	mv	a0,s5
	jal	ra,0x22a66 # luaL_prepbuffsize>
	mv	a1,s3
	mv	s0,a0
	mv	a0,s6
	jal	ra,0x11558 # lua_isinteger>
	li	a2,0
	mv	a1,s3
	bnez	a0,0x2c716 # str_format+0x5b8>
	mv	a0,s6
	jal	ra,0x118b0 # lua_tonumberx>
	feq.d	a4,fa0,fs2
	bnez	a4,0x2c77c # str_format+0x61e>
	feq.d	a4,fa0,fs1
	bnez	a4,0x2c772 # str_format+0x614>
	feq.d	a4,fa0,fa0
	auipc	a3,0x18
	addi	a3,a3,1290 # 0x44bd8 # cat.0+0x120>
	bnez	a4,0x2c796 # str_format+0x638>
	auipc	a2,0x17
	addi	a2,a2,-408 # 0x43540 # luai_ctype_+0x130>
	li	a1,120
	mv	a0,s0
	jal	ra,0x3448a # snprintf>
	mv	s1,a0
	j	0x2c740 # str_format+0x5e2>
	auipc	a2,0x18
	addi	a2,a2,1426 # 0x44c80 # cat.0+0x1c8>
	mv	a1,s3
	mv	a0,s6
	jal	ra,0x21c20 # luaL_argerror>
	ld	a0,112(sp)
	sd	a0,112(sp)
	j	0x2c430 # str_format+0x2d2>
	auipc	a2,0x18
	addi	a2,a2,1380 # 0x44c68 # cat.0+0x1b0>
	li	a1,10
	mv	a0,s11
	jal	ra,0x3448a # snprintf>
	j	0x2c5b8 # str_format+0x45a>
	mv	a0,s6
	jal	ra,0x11952 # lua_tointegerx>
	ld	a5,24(sp)
	mv	a3,a0
	auipc	a2,0x18
	addi	a2,a2,1216 # 0x44be0 # cat.0+0x128>
	beq	a0,a5,0x2c734 # str_format+0x5d6>
	auipc	a2,0x16
	addi	a2,a2,-1732 # 0x42068 # log_2.0+0x118>
	li	a1,120
	mv	a0,s0
	jal	ra,0x3448a # snprintf>
	mv	s1,a0
	ld	a0,112(sp)
	add	a0,a0,s1
	sd	a0,112(sp)
	j	0x2c430 # str_format+0x2d2>
	li	a1,1
	mv	a0,s5
	jal	ra,0x22a66 # luaL_prepbuffsize>
	ld	a3,112(sp)
	j	0x2c55a # str_format+0x3fc>
	li	a1,1
	mv	a0,s5
	jal	ra,0x22a66 # luaL_prepbuffsize>
	ld	a4,112(sp)
	j	0x2c654 # str_format+0x4f6>
	auipc	a2,0x18
	addi	a2,a2,1344 # 0x44ca0 # cat.0+0x1e8>
	mv	a1,s3
	mv	a0,s6
	jal	ra,0x21c20 # luaL_argerror>
	j	0x2c4d6 # str_format+0x378>
	auipc	a3,0x18
	addi	a3,a3,1118 # 0x44bd0 # cat.0+0x118>
	j	0x2c6d8 # str_format+0x57a>
	auipc	a3,0x18
	addi	a3,a3,1100 # 0x44bc8 # cat.0+0x110>
	j	0x2c6d8 # str_format+0x57a>
	auipc	a1,0x18
	addi	a1,a1,1210 # 0x44c40 # cat.0+0x188>
	mv	a0,s6
	jal	ra,0x21bdc # luaL_error>
	j	0x2c22a # str_format+0xcc>
	fmv.x.d	a3,fa0
	auipc	a2,0x18
	addi	a2,a2,1246 # 0x44c78 # cat.0+0x1c0>
	li	a1,120
	mv	a0,s0
	jal	ra,0x3448a # snprintf>
	mv	s1,a0
	mv	a2,a0
	li	a1,46
	mv	a0,s0
	jal	ra,0x36278 # memchr>
	bnez	a0,0x2c740 # str_format+0x5e2>
	jal	ra,0x2f9f6 # localeconv>
	ld	a4,0(a0)
	mv	a2,s1
	mv	a0,s0
	lbu	a1,0(a4)
	jal	ra,0x36278 # memchr>
	beqz	a0,0x2c740 # str_format+0x5e2>
	li	a3,46
	sb	a3,0(a0)
	j	0x2c740 # str_format+0x5e2>
	mv	s7,s8
	mv	s8,a1
	j	0x2c344 # str_format+0x1e6>

singlematch.part.0.isra.0:
	lbu	a5,0(a1)
	li	a3,46
	beq	a5,a3,0x2c808 # singlematch.part.0.isra.0+0x28>
	li	a3,91
	beq	a5,a3,0x2c816 # singlematch.part.0.isra.0+0x36>
	sub	a3,a5,a0
	li	a2,37
	seqz	a3,a3
	beq	a5,a2,0x2c80e # singlematch.part.0.isra.0+0x2e>
	mv	a0,a3
	ret
	li	a3,1
	mv	a0,a3
	ret
	lbu	a1,1(a1)
	j	0x2bd5a # match_class>
	addi	a2,a2,-1
	j	0x2be28 # matchbracketclass>

getnumlimit:
	ld	a4,0(a1)
	li	a3,9
	lbu	a5,0(a4)
	addiw	a5,a5,-48
	bltu	a3,a5,0x2c86e # getnumlimit+0x52>
	lui	a7,0xcccd
	li	a2,0
	li	t1,9
	addi	a7,a7,-821 # 0xccccccb # __BSS_END__+0xcc7e943>
	j	0x2c83e # getnumlimit+0x22>
	blt	a7,a2,0x2c864 # getnumlimit+0x48>
	addi	a4,a4,1
	sd	a4,0(a1)
	lbu	a6,-1(a4)
	lbu	a3,0(a4)
	slliw	a5,a2,0x2
	addw	a2,a2,a5
	slliw	a2,a2,0x1
	addiw	a6,a6,-48
	addiw	a5,a3,-48
	addw	a2,a6,a2
	bleu	a5,t1,0x2c83a # getnumlimit+0x1e>
	addiw	a5,a2,-1
	li	a4,15
	bltu	a4,a5,0x2c872 # getnumlimit+0x56>
	mv	a0,a2
	ret
	ld	a0,0(a0)
	li	a3,16
	auipc	a1,0x18
	addi	a1,a1,1130 # 0x44ce0 # cat.0+0x228>
	j	0x21bdc # luaL_error>

getoption:
	ld	a4,0(a1)
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	ra,24(sp)
	sd	s1,8(sp)
	addi	a5,a4,1
	sd	a5,0(a1)
	lbu	a3,0(a4)
	li	a6,90
	sw	zero,0(a2)
	addiw	a5,a3,-32
	andi	a5,a5,255
	mv	s0,a0
	bltu	a6,a5,0x2c8e0 # getoption+0x5e>
	mv	s1,a2
	slli	a5,a5,0x2
	auipc	a2,0x19
	addi	a2,a2,-1728 # 0x451f0 # cat.0+0x738>
	add	a5,a5,a2
	lw	a5,0(a5)
	add	a5,a5,a2
	jr	a5
	li	a5,8
	sw	a5,0(s1)
	li	a0,1
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret
	li	a5,1
	sw	a5,8(a0)
	li	a0,10
	j	0x2c8c6 # getoption+0x44>
	li	a5,8
	sw	a5,0(s1)
	li	a0,0
	j	0x2c8c6 # getoption+0x44>
	ld	a0,0(s0)
	mv	a2,a3
	auipc	a1,0x18
	addi	a1,a1,1100 # 0x44d30 # cat.0+0x278>
	jal	ra,0x21bdc # luaL_error>
	li	a0,10
	j	0x2c8c6 # getoption+0x44>
	li	a5,1
	sw	a5,0(s1)
	li	a0,8
	j	0x2c8c6 # getoption+0x44>
	li	a2,8
	jal	ra,0x2c81c # getnumlimit>
	sw	a0,0(s1)
	li	a0,6
	j	0x2c8c6 # getoption+0x44>
	li	a5,8
	sw	a5,0(s1)
	li	a0,3
	j	0x2c8c6 # getoption+0x44>
	li	a5,2
	sw	a5,0(s1)
	li	a0,1
	j	0x2c8c6 # getoption+0x44>
	li	a5,1
	sw	a5,0(s1)
	li	a0,1
	j	0x2c8c6 # getoption+0x44>
	li	a5,2
	sw	a5,0(s1)
	li	a0,0
	j	0x2c8c6 # getoption+0x44>
	li	a5,4
	sw	a5,0(s1)
	li	a0,2
	j	0x2c8c6 # getoption+0x44>
	li	a5,8
	sw	a5,0(s1)
	li	a0,4
	j	0x2c8c6 # getoption+0x44>
	li	a2,4
	jal	ra,0x2c81c # getnumlimit>
	sw	a0,0(s1)
	li	a0,0
	j	0x2c8c6 # getoption+0x44>
	li	a2,8
	jal	ra,0x2c81c # getnumlimit>
	sw	a0,12(s0)
	li	a0,10
	j	0x2c8c6 # getoption+0x44>
	li	a2,4
	jal	ra,0x2c81c # getnumlimit>
	sw	a0,0(s1)
	li	a0,1
	j	0x2c8c6 # getoption+0x44>
	sw	zero,8(a0)
	li	a0,10
	j	0x2c8c6 # getoption+0x44>
	lbu	a5,1(a4)
	li	a3,9
	addiw	a5,a5,-48
	bltu	a3,a5,0x2c9d6 # getoption+0x154>
	lui	a6,0xcccd
	addi	a4,a4,2
	li	a3,0
	li	a7,9
	addi	a6,a6,-821 # 0xccccccb # __BSS_END__+0xcc7e943>
	j	0x2c988 # getoption+0x106>
	addi	a4,a4,1
	blt	a6,a3,0x2c9dc # getoption+0x15a>
	sd	a4,0(a1)
	lbu	a0,-1(a4)
	lbu	a2,0(a4)
	slliw	a5,a3,0x2
	addw	a5,a5,a3
	slliw	a5,a5,0x1
	addiw	a3,a0,-48
	addiw	a2,a2,-48
	addw	a3,a3,a5
	bleu	a2,a7,0x2c982 # getoption+0x100>
	sw	a3,0(s1)
	li	a5,-1
	li	a0,5
	bne	a3,a5,0x2c8c6 # getoption+0x44>
	ld	a0,0(s0)
	auipc	a1,0x18
	addi	a1,a1,850 # 0x44d08 # cat.0+0x250>
	jal	ra,0x21bdc # luaL_error>
	li	a0,5
	j	0x2c8c6 # getoption+0x44>
	li	a5,1
	sw	a5,0(s1)
	li	a0,0
	j	0x2c8c6 # getoption+0x44>
	li	a0,9
	j	0x2c8c6 # getoption+0x44>
	li	a0,7
	j	0x2c8c6 # getoption+0x44>
	li	a5,-1
	sw	a5,0(s1)
	j	0x2c9b4 # getoption+0x132>
	sw	a3,0(s1)
	li	a0,5
	j	0x2c8c6 # getoption+0x44>

getdetails:
	addi	sp,sp,-64
	sd	s1,40(sp)
	mv	s1,a2
	sd	s4,16(sp)
	mv	a2,a3
	mv	s4,a1
	mv	a1,s1
	sd	s0,48(sp)
	sd	s2,32(sp)
	mv	s0,a3
	sd	s3,24(sp)
	sd	ra,56(sp)
	mv	s3,a0
	mv	s2,a4
	jal	ra,0x2c882 # getoption>
	lw	a5,0(s0)
	li	a2,9
	sext.w	s0,a0
	sw	a5,12(sp)
	beq	s0,a2,0x2ca32 # getdetails+0x50>
	li	a4,1
	ble	a5,a4,0x2ca1c # getdetails+0x3a>
	li	a4,5
	bne	s0,a4,0x2ca54 # getdetails+0x72>
	sw	zero,0(s2)
	ld	ra,56(sp)
	mv	a0,s0
	ld	s0,48(sp)
	ld	s1,40(sp)
	ld	s2,32(sp)
	ld	s3,24(sp)
	ld	s4,16(sp)
	addi	sp,sp,64
	ret
	ld	a5,0(s1)
	lbu	a5,0(a5)
	bnez	a5,0x2ca7c # getdetails+0x9a>
	ld	a0,0(s3)
	auipc	a2,0x18
	addi	a2,a2,786 # 0x44d50 # cat.0+0x298>
	li	a1,1
	jal	ra,0x21c20 # luaL_argerror>
	lw	a5,12(sp)
	li	a4,1
	ble	a5,a4,0x2ca1c # getdetails+0x3a>
	lw	a3,12(s3)
	blt	a3,a5,0x2ca78 # getdetails+0x96>
	lw	a3,12(sp)
	addiw	a5,a3,-1
	and	a4,a5,a3
	bnez	a4,0x2ca94 # getdetails+0xb2>
	and	s4,s4,a5
	subw	a3,a3,s4
	and	a3,a3,a5
	sw	a3,0(s2)
	j	0x2ca20 # getdetails+0x3e>
	sw	a3,12(sp)
	j	0x2ca5e # getdetails+0x7c>
	addi	a2,sp,12
	mv	a1,s1
	mv	a0,s3
	jal	ra,0x2c882 # getoption>
	sext.w	a0,a0
	li	a5,5
	beq	a0,a5,0x2ca3a # getdetails+0x58>
	lw	a5,12(sp)
	beqz	a5,0x2ca3a # getdetails+0x58>
	j	0x2ca4e # getdetails+0x6c>
	ld	a0,0(s3)
	auipc	a2,0x18
	addi	a2,a2,736 # 0x44d78 # cat.0+0x2c0>
	li	a1,1
	jal	ra,0x21c20 # luaL_argerror>
	lw	a3,12(sp)
	addiw	a5,a3,-1
	j	0x2ca68 # getdetails+0x86>

str_packsize:
	addi	sp,sp,-128
	li	a2,0
	li	a1,1
	sd	s6,64(sp)
	sd	ra,120(sp)
	mv	s6,a0
	sd	s0,112(sp)
	sd	s1,104(sp)
	sd	s2,96(sp)
	sd	s3,88(sp)
	sd	s4,80(sp)
	sd	s5,72(sp)
	sd	s7,56(sp)
	sd	s8,48(sp)
	sd	s9,40(sp)
	jal	ra,0x22138 # luaL_checklstring>
	li	a5,1
	slli	a5,a5,0x20
	addi	a5,a5,1
	sd	a0,8(sp)
	sd	s6,16(sp)
	sd	a5,24(sp)
	lbu	a5,0(a0)
	beqz	a5,0x2cb78 # str_packsize+0xca>
	lui	s1,0x80000
	li	s0,0
	addi	s9,sp,4
	mv	s5,sp
	addi	s4,sp,8
	addi	s3,sp,16
	li	s2,1
	auipc	s8,0x18
	addi	s8,s8,688 # 0x44da8 # cat.0+0x2f0>
	not	s1,s1
	auipc	s7,0x18
	addi	s7,s7,700 # 0x44dc0 # cat.0+0x308>
	mv	a1,s0
	mv	a4,s9
	mv	a3,s5
	mv	a2,s4
	mv	a0,s3
	jal	ra,0x2c9e2 # getdetails>
	addiw	a0,a0,-6
	bleu	a0,s2,0x2cb6c # str_packsize+0xbe>
	lw	a5,0(sp)
	lw	a4,4(sp)
	addw	a4,a4,a5
	sw	a4,0(sp)
	sub	a5,s1,a4
	bltu	a5,s0,0x2cb5e # str_packsize+0xb0>
	ld	a5,8(sp)
	add	s0,s0,a4
	lbu	a5,0(a5)
	bnez	a5,0x2cb0c # str_packsize+0x5e>
	mv	a1,s0
	mv	a0,s6
	jal	ra,0x11e32 # lua_pushinteger>
	ld	ra,120(sp)
	ld	s0,112(sp)
	ld	s1,104(sp)
	ld	s2,96(sp)
	ld	s3,88(sp)
	ld	s4,80(sp)
	ld	s5,72(sp)
	ld	s6,64(sp)
	ld	s7,56(sp)
	ld	s8,48(sp)
	ld	s9,40(sp)
	li	a0,1
	addi	sp,sp,128
	ret
	mv	a2,s7
	li	a1,1
	mv	a0,s6
	jal	ra,0x21c20 # luaL_argerror>
	lw	a4,0(sp)
	j	0x2cb30 # str_packsize+0x82>
	mv	a2,s8
	li	a1,1
	mv	a0,s6
	jal	ra,0x21c20 # luaL_argerror>
	j	0x2cb20 # str_packsize+0x72>
	li	a1,0
	j	0x2cb3c # str_packsize+0x8e>

push_onecapture:
	addi	sp,sp,-48
	sd	s1,24(sp)
	sd	ra,40(sp)
	sd	s0,32(sp)
	sd	s2,16(sp)
	lbu	a5,36(a0)
	mv	s1,a0
	blt	a1,a5,0x2cbaa # push_onecapture+0x2e>
	mv	s2,a2
	bnez	a1,0x2cbec # push_onecapture+0x70>
	sub	a2,a3,s2
	li	a5,-2
	bne	a2,a5,0x2cbc8 # push_onecapture+0x4c>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	addi	sp,sp,48
	ret
	slli	a1,a1,0x4
	add	a1,a1,a0
	ld	s0,48(a1)
	li	a5,-1
	ld	s2,40(a1)
	beq	s0,a5,0x2cc04 # push_onecapture+0x88>
	li	a5,-2
	beq	s0,a5,0x2cbda # push_onecapture+0x5e>
	mv	a2,s0
	li	a5,-2
	beq	a2,a5,0x2cb9e # push_onecapture+0x22>
	ld	s0,32(sp)
	ld	a0,24(s1)
	ld	ra,40(sp)
	ld	s1,24(sp)
	mv	a1,s2
	ld	s2,16(sp)
	addi	sp,sp,48
	j	0x11e42 # lua_pushlstring>
	ld	a1,0(a0)
	ld	a0,24(a0)
	sub	a1,s2,a1
	addi	a1,a1,1
	jal	ra,0x11e32 # lua_pushinteger>
	mv	a2,s0
	j	0x2cbc2 # push_onecapture+0x46>
	ld	a0,24(a0)
	addiw	a2,a1,1
	auipc	a1,0x18
	addi	a1,a1,486 # 0x44dd8 # cat.0+0x320>
	sd	a3,8(sp)
	jal	ra,0x21bdc # luaL_error>
	ld	a3,8(sp)
	j	0x2cb94 # push_onecapture+0x18>
	ld	a0,24(a0)
	auipc	a1,0x18
	addi	a1,a1,498 # 0x44df8 # cat.0+0x340>
	jal	ra,0x21bdc # luaL_error>
	mv	a2,s0
	j	0x2cbc2 # push_onecapture+0x46>

str_sub:
	addi	sp,sp,-64
	addi	a2,sp,8
	li	a1,1
	sd	ra,56(sp)
	sd	s0,48(sp)
	sd	s1,40(sp)
	sd	s2,32(sp)
	sd	s3,24(sp)
	mv	s1,a0
	jal	ra,0x22138 # luaL_checklstring>
	mv	s3,a0
	li	a1,2
	mv	a0,s1
	jal	ra,0x22270 # luaL_checkinteger>
	mv	s2,a0
	ld	s0,8(sp)
	bgtz	a0,0x2cc4a # str_sub+0x34>
	li	s2,1
	beqz	a0,0x2cc4a # str_sub+0x34>
	neg	a5,s0
	ble	a5,a0,0x2ccae # str_sub+0x98>
	li	a2,-1
	li	a1,3
	mv	a0,s1
	jal	ra,0x222c8 # luaL_optinteger>
	blt	s0,a0,0x2cc66 # str_sub+0x50>
	bgez	a0,0x2ccaa # str_sub+0x94>
	neg	a5,s0
	ble	a5,a0,0x2ccb6 # str_sub+0xa0>
	li	s0,0
	bltu	s0,s2,0x2cc8c # str_sub+0x76>
	sub	a2,s0,s2
	addi	a1,s2,-1
	add	a1,a1,s3
	mv	a0,s1
	addi	a2,a2,1
	jal	ra,0x11e42 # lua_pushlstring>
	ld	ra,56(sp)
	ld	s0,48(sp)
	ld	s1,40(sp)
	ld	s2,32(sp)
	ld	s3,24(sp)
	li	a0,1
	addi	sp,sp,64
	ret
	mv	a0,s1
	auipc	a1,0x14
	addi	a1,a1,1362 # 0x411e0 # __clzdi2+0x318>
	jal	ra,0x11e96 # lua_pushstring>
	ld	ra,56(sp)
	ld	s0,48(sp)
	ld	s1,40(sp)
	ld	s2,32(sp)
	ld	s3,24(sp)
	li	a0,1
	addi	sp,sp,64
	ret
	mv	s0,a0
	j	0x2cc66 # str_sub+0x50>
	addi	s2,s0,1
	add	s2,s2,a0
	j	0x2cc4a # str_sub+0x34>
	addi	s0,s0,1
	add	s0,s0,a0
	j	0x2cc66 # str_sub+0x50>

gmatch:
	addi	sp,sp,-64
	mv	a2,sp
	li	a1,1
	sd	ra,56(sp)
	sd	s0,48(sp)
	sd	s2,32(sp)
	mv	s0,a0
	sd	s3,24(sp)
	sd	s1,40(sp)
	jal	ra,0x22138 # luaL_checklstring>
	addi	a2,sp,8
	li	a1,2
	mv	s2,a0
	mv	a0,s0
	jal	ra,0x22138 # luaL_checklstring>
	mv	s3,a0
	li	a2,1
	li	a1,3
	mv	a0,s0
	jal	ra,0x222c8 # luaL_optinteger>
	mv	a5,a0
	bgtz	a0,0x2cd5c # gmatch+0xa0>
	ld	s1,0(sp)
	beqz	a0,0x2ccfc # gmatch+0x40>
	neg	a4,s1
	ble	a4,a0,0x2cd56 # gmatch+0x9a>
	li	a1,2
	mv	a0,s0
	jal	ra,0x1110c # lua_settop>
	li	a2,0
	li	a1,576
	mv	a0,s0
	jal	ra,0x12e88 # lua_newuserdatauv>
	ld	a4,0(sp)
	mv	a5,a0
	mv	a2,s2
	ld	a3,8(sp)
	add	a4,a4,s2
	li	a1,200
	add	a3,a3,s3
	mv	a0,s0
	sd	s0,48(a5)
	sw	a1,56(a5)
	sd	s2,24(a5)
	sd	a2,0(a5)
	sd	s3,8(a5)
	sd	a4,32(a5)
	sd	a3,40(a5)
	sd	zero,16(a5)
	li	a2,3
	auipc	a1,0x1
	addi	a1,a1,-1924 # 0x2d5b6 # gmatch_aux>
	jal	ra,0x11f4a # lua_pushcclosure>
	ld	ra,56(sp)
	ld	s0,48(sp)
	ld	s1,40(sp)
	ld	s2,32(sp)
	ld	s3,24(sp)
	li	a0,1
	addi	sp,sp,64
	ret
	addi	s1,s1,1
	add	a5,s1,a0
	li	a1,2
	mv	a0,s0
	addi	s1,a5,-1
	jal	ra,0x1110c # lua_settop>
	li	a2,0
	li	a1,576
	mv	a0,s0
	jal	ra,0x12e88 # lua_newuserdatauv>
	ld	a4,0(sp)
	mv	a5,a0
	addi	a2,a4,1
	add	a2,a2,s2
	bltu	a4,s1,0x2cd16 # gmatch+0x5a>
	add	a2,s2,s1
	j	0x2cd16 # gmatch+0x5a>

str_byte:
	addi	sp,sp,-64
	addi	a2,sp,8
	li	a1,1
	sd	ra,56(sp)
	sd	s0,48(sp)
	sd	s1,40(sp)
	sd	s2,32(sp)
	sd	s3,24(sp)
	mv	s1,a0
	sd	s4,16(sp)
	jal	ra,0x22138 # luaL_checklstring>
	li	a2,1
	mv	s2,a0
	li	a1,2
	mv	a0,s1
	jal	ra,0x222c8 # luaL_optinteger>
	mv	a2,a0
	ld	s3,8(sp)
	mv	s0,a0
	bgtz	a0,0x2cdc2 # str_byte+0x3a>
	li	s0,1
	beqz	a0,0x2cdc2 # str_byte+0x3a>
	neg	a5,s3
	ble	a5,a0,0x2ce38 # str_byte+0xb0>
	li	a1,3
	mv	a0,s1
	jal	ra,0x222c8 # luaL_optinteger>
	blt	s3,a0,0x2cddc # str_byte+0x54>
	bgez	a0,0x2ce34 # str_byte+0xac>
	neg	a5,s3
	ble	a5,a0,0x2ce40 # str_byte+0xb8>
	li	s3,0
	li	s4,0
	bltu	s3,s0,0x2ce22 # str_byte+0x9a>
	lui	a5,0x80000
	sub	a4,s3,s0
	xori	a5,a5,-2
	bltu	a5,a4,0x2ce46 # str_byte+0xbe>
	subw	s4,s3,s0
	addiw	s4,s4,1
	auipc	a2,0x18
	addi	a2,a2,24 # 0x44e10 # cat.0+0x358>
	mv	a1,s4
	mv	a0,s1
	jal	ra,0x2207c # luaL_checkstack>
	blez	s4,0x2ce22 # str_byte+0x9a>
	addi	s0,s0,-1
	add	s0,s0,s2
	add	s2,s2,s3
	lbu	a1,0(s0)
	mv	a0,s1
	addi	s0,s0,1
	jal	ra,0x11e32 # lua_pushinteger>
	bne	s2,s0,0x2ce12 # str_byte+0x8a>
	ld	ra,56(sp)
	ld	s0,48(sp)
	ld	s1,40(sp)
	ld	s2,32(sp)
	ld	s3,24(sp)
	mv	a0,s4
	ld	s4,16(sp)
	addi	sp,sp,64
	ret
	mv	s3,a0
	j	0x2cddc # str_byte+0x54>
	addi	s0,s3,1
	add	s0,s0,a0
	j	0x2cdc2 # str_byte+0x3a>
	addi	s3,s3,1
	add	s3,s3,a0
	j	0x2cddc # str_byte+0x54>
	auipc	a1,0x18
	addi	a1,a1,-54 # 0x44e10 # cat.0+0x358>
	mv	a0,s1
	jal	ra,0x21bdc # luaL_error>
	mv	s4,a0
	j	0x2ce22 # str_byte+0x9a>

match:
	lw	a5,32(a0)
	addi	sp,sp,-112
	sd	s0,96(sp)
	sd	s1,88(sp)
	sd	s3,72(sp)
	sd	ra,104(sp)
	sd	s2,80(sp)
	sd	s4,64(sp)
	sd	s5,56(sp)
	sd	s6,48(sp)
	sd	s7,40(sp)
	sd	s8,32(sp)
	sd	s9,24(sp)
	sd	s10,16(sp)
	addiw	a4,a5,-1
	sw	a4,32(a0)
	mv	s0,a0
	mv	s3,a1
	mv	s1,a2
	beqz	a5,0x2d18a # match+0x332>
	ld	a4,16(s0)
	beq	a4,s1,0x2d02a # match+0x1d2>
	lui	s4,0xffe00
	addi	s4,s4,9
	li	s9,40
	li	s5,63
	slli	s4,s4,0x2a
	li	s6,45
	li	s8,42
	li	s7,43
	lbu	a5,0(s1) # 0xffffffff80000000 # __BSS_END__+0xffffffff7ffb1c78>
	beq	a5,s9,0x2d092 # match+0x23a>
	bltu	s9,a5,0x2cf38 # match+0xe0>
	li	a3,36
	beq	a5,a3,0x2cf8c # match+0x134>
	li	a3,37
	bne	a5,a3,0x2cf94 # match+0x13c>
	lbu	a2,1(s1)
	li	a5,98
	beq	a2,a5,0x2d0fc # match+0x2a4>
	bltu	a5,a2,0x2d02e # match+0x1d6>
	addiw	a5,a2,-48
	andi	a5,a5,255
	li	a4,9
	bltu	a4,a5,0x2cf94 # match+0x13c>
	addiw	a4,a2,-49
	li	a3,-1
	sext.w	a5,a2
	beq	a4,a3,0x2cef6 # match+0x9e>
	lbu	a2,36(s0)
	blt	a4,a2,0x2d1c4 # match+0x36c>
	ld	a0,24(s0)
	addiw	a2,a5,-48
	auipc	a1,0x18
	addi	a1,a1,-292 # 0x44dd8 # cat.0+0x320>
	jal	ra,0x21bdc # luaL_error>
	addi	a4,a0,2
	slli	a5,a4,0x4
	add	a5,a5,s0
	ld	s2,16(a5) # 0xffffffff80000010 # __BSS_END__+0xffffffff7ffb1c88>
	ld	a5,8(s0)
	sub	a5,a5,s3
	bltu	a5,s2,0x2cfec # match+0x194>
	slli	a5,a4,0x4
	add	a5,a5,s0
	ld	a0,8(a5)
	mv	a2,s2
	mv	a1,s3
	jal	ra,0x36306 # memcmp>
	bnez	a0,0x2cfec # match+0x194>
	add	s3,s3,s2
	addi	s1,s1,2
	j	0x2d024 # match+0x1cc>
	li	a4,41
	bne	a5,a4,0x2cf94 # match+0x13c>
	lbu	a5,36(s0)
	addi	s1,s1,1
	addiw	a0,a5,-1
	beqz	a5,0x2d162 # match+0x30a>
	addi	a5,a5,2
	slli	a5,a5,0x4
	add	a5,a5,s0
	li	a4,-1
	j	0x2cf5e # match+0x106>
	addiw	a0,a0,-1
	beq	a0,a4,0x2d162 # match+0x30a>
	ld	a3,0(a5)
	addi	a5,a5,-16
	bne	a3,a4,0x2cf58 # match+0x100>
	slli	a0,a0,0x4
	add	s2,s0,a0
	ld	a5,40(s2)
	mv	a2,s1
	mv	a1,s3
	sub	a5,s3,a5
	sd	a5,48(s2)
	mv	a0,s0
	jal	ra,0x2ce58 # match>
	bnez	a0,0x2cfee # match+0x196>
	li	a5,-1
	sd	a5,48(s2)
	j	0x2cfee # match+0x196>
	addi	a5,s1,1
	beq	a4,a5,0x2d1e6 # match+0x38e>
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x2ba02 # classend>
	ld	s10,8(s0)
	mv	s2,a0
	bleu	s10,s3,0x2d010 # match+0x1b8>
	lbu	a0,0(s3)
	mv	a2,s2
	mv	a1,s1
	jal	ra,0x2c7e0 # singlematch.part.0.isra.0>
	lbu	a5,0(s2)
	beqz	a0,0x2d014 # match+0x1bc>
	beq	a5,s6,0x2d19a # match+0x342>
	bltu	s6,a5,0x2d07a # match+0x222>
	beq	a5,s8,0x2d0da # match+0x282>
	bne	a5,s7,0x2d148 # match+0x2f0>
	addi	s3,s3,1
	li	s4,0
	bltu	s3,s10,0x2d0da # match+0x282>
	addi	s2,s2,1
	add	s4,s4,s3
	j	0x2cfd8 # match+0x180>
	mv	s4,a5
	mv	a1,s4
	mv	a2,s2
	mv	a0,s0
	jal	ra,0x2ce58 # match>
	bnez	a0,0x2cfee # match+0x196>
	addi	a5,s4,-1 # 0xffffffffffdfffff # __BSS_END__+0xffffffffffdb1c77>
	bne	s3,s4,0x2cfd6 # match+0x17e>
	li	a0,0
	lw	a5,32(s0)
	ld	ra,104(sp)
	ld	s1,88(sp)
	addiw	a5,a5,1
	sw	a5,32(s0)
	ld	s0,96(sp)
	ld	s2,80(sp)
	ld	s3,72(sp)
	ld	s4,64(sp)
	ld	s5,56(sp)
	ld	s6,48(sp)
	ld	s7,40(sp)
	ld	s8,32(sp)
	ld	s9,24(sp)
	ld	s10,16(sp)
	addi	sp,sp,112
	ret
	lbu	a5,0(a0)
	bltu	s5,a5,0x2cfec # match+0x194>
	srl	a5,s4,a5
	andi	a5,a5,1
	beqz	a5,0x2cfec # match+0x194>
	addi	s1,s2,1
	ld	a4,16(s0)
	bne	a4,s1,0x2cea6 # match+0x4e>
	mv	a0,s3
	j	0x2cfee # match+0x196>
	li	a5,102
	bne	a2,a5,0x2cf94 # match+0x13c>
	lbu	a4,2(s1)
	li	a5,91
	addi	s2,s1,2
	bne	a4,a5,0x2d1d6 # match+0x37e>
	mv	a1,s2
	mv	a0,s0
	jal	ra,0x2ba02 # classend>
	ld	a5,0(s0)
	mv	s1,a0
	li	a0,0
	beq	a5,s3,0x2d05c # match+0x204>
	lbu	a0,-1(s3)
	addi	s10,s1,-1
	mv	a2,s10
	mv	a1,s2
	jal	ra,0x2be28 # matchbracketclass>
	bnez	a0,0x2cfec # match+0x194>
	lbu	a0,0(s3)
	mv	a2,s10
	mv	a1,s2
	jal	ra,0x2be28 # matchbracketclass>
	bnez	a0,0x2d024 # match+0x1cc>
	j	0x2cfec # match+0x194>
	bne	a5,s5,0x2d148 # match+0x2f0>
	addi	s1,s2,1
	mv	a2,s1
	addi	a1,s3,1
	mv	a0,s0
	jal	ra,0x2ce58 # match>
	beqz	a0,0x2d024 # match+0x1cc>
	j	0x2cfee # match+0x196>
	lbu	s2,36(s0)
	lbu	a4,1(s1)
	li	a5,41
	sext.w	a3,s2
	beq	a4,a5,0x2d172 # match+0x31a>
	li	a5,31
	addi	a2,s1,1
	blt	a5,a3,0x2d14e # match+0x2f6>
	slli	a5,s2,0x4
	add	a5,a5,s0
	sd	s3,40(a5)
	li	a4,-1
	sd	a4,48(a5)
	addiw	s2,s2,1
	sb	s2,36(s0)
	mv	a1,s3
	mv	a0,s0
	jal	ra,0x2ce58 # match>
	bnez	a0,0x2cfee # match+0x196>
	lbu	a5,36(s0)
	addiw	a5,a5,-1
	sb	a5,36(s0)
	j	0x2cfee # match+0x196>
	sub	s4,s10,s3
	li	s5,0
	add	a5,s3,s5
	lbu	a0,0(a5)
	mv	a2,s2
	mv	a1,s1
	jal	ra,0x2c7e0 # singlematch.part.0.isra.0>
	beqz	a0,0x2d204 # match+0x3ac>
	addi	s5,s5,1
	bne	s5,s4,0x2d0e0 # match+0x288>
	j	0x2cfd0 # match+0x178>
	addi	a5,s1,2
	addi	a4,a4,-1
	bleu	a4,a5,0x2d208 # match+0x3b0>
	lbu	a6,2(s1)
	lbu	a5,0(s3)
	bne	a5,a6,0x2cfec # match+0x194>
	ld	a1,8(s0)
	addi	a5,s3,1
	lbu	a0,3(s1)
	bleu	a1,a5,0x2cfec # match+0x194>
	li	a2,1
	j	0x2d132 # match+0x2da>
	bne	a6,a3,0x2d12a # match+0x2d2>
	addiw	a2,a2,1
	mv	s3,a5
	beq	a1,a4,0x2cfec # match+0x194>
	mv	a5,a4
	lbu	a3,0(a5)
	addi	a4,a5,1
	bne	a0,a3,0x2d124 # match+0x2cc>
	addiw	a2,a2,-1
	bnez	a2,0x2d12a # match+0x2d2>
	addi	s3,s3,2
	addi	s1,s1,4
	j	0x2d024 # match+0x1cc>
	addi	s3,s3,1
	mv	s1,s2
	j	0x2d024 # match+0x1cc>
	ld	a0,24(s0)
	auipc	a1,0x18
	addi	a1,a1,-784 # 0x44e40 # cat.0+0x388>
	sd	a2,8(sp)
	jal	ra,0x21bdc # luaL_error>
	ld	a2,8(sp)
	j	0x2d0b0 # match+0x258>
	ld	a0,24(s0)
	auipc	a1,0x18
	addi	a1,a1,-780 # 0x44e58 # cat.0+0x3a0>
	jal	ra,0x21bdc # luaL_error>
	j	0x2cf66 # match+0x10e>
	li	a5,31
	addi	a2,s1,2
	blt	a5,a3,0x2d1f0 # match+0x398>
	slli	a5,s2,0x4
	add	a5,a5,s0
	sd	s3,40(a5)
	li	a4,-2
	j	0x2d0bc # match+0x264>
	ld	a0,24(a0)
	auipc	a1,0x18
	addi	a1,a1,-868 # 0x44e28 # cat.0+0x370>
	jal	ra,0x21bdc # luaL_error>
	j	0x2ce84 # match+0x2c>
	addi	s4,s2,1
	mv	a2,s4
	mv	a1,s3
	mv	a0,s0
	jal	ra,0x2ce58 # match>
	mv	a2,s2
	mv	a1,s1
	bnez	a0,0x2cfee # match+0x196>
	ld	a5,8(s0)
	bleu	a5,s3,0x2cfec # match+0x194>
	lbu	a0,0(s3)
	addi	s3,s3,1
	jal	ra,0x2c7e0 # singlematch.part.0.isra.0>
	bnez	a0,0x2d19e # match+0x346>
	j	0x2cfec # match+0x194>
	addi	a4,a4,2
	slli	a2,a4,0x4
	add	a2,a2,s0
	ld	s2,16(a2)
	bne	s2,a3,0x2cf16 # match+0xbe>
	j	0x2cef6 # match+0x9e>
	ld	a0,24(s0)
	auipc	a1,0x18
	addi	a1,a1,-824 # 0x44ea0 # cat.0+0x3e8>
	jal	ra,0x21bdc # luaL_error>
	j	0x2d046 # match+0x1ee>
	ld	a5,8(s0)
	mv	a0,s3
	beq	a5,s3,0x2cfee # match+0x196>
	j	0x2cfec # match+0x194>
	ld	a0,24(s0)
	auipc	a1,0x18
	addi	a1,a1,-946 # 0x44e40 # cat.0+0x388>
	sd	a2,8(sp)
	jal	ra,0x21bdc # luaL_error>
	ld	a2,8(sp)
	j	0x2d17c # match+0x324>
	mv	s4,s5
	j	0x2cfd0 # match+0x178>
	ld	a0,24(s0)
	auipc	a1,0x18
	addi	a1,a1,-922 # 0x44e70 # cat.0+0x3b8>
	jal	ra,0x21bdc # luaL_error>
	j	0x2d106 # match+0x2ae>

str_unpack:
	addi	sp,sp,-192
	li	a2,0
	li	a1,1
	sd	ra,184(sp)
	sd	s1,168(sp)
	sd	s5,136(sp)
	mv	s1,a0
	sd	s0,176(sp)
	sd	s2,160(sp)
	sd	s3,152(sp)
	sd	s4,144(sp)
	sd	s6,128(sp)
	sd	s7,120(sp)
	sd	s8,112(sp)
	sd	s9,104(sp)
	sd	s10,96(sp)
	sd	s11,88(sp)
	jal	ra,0x22138 # luaL_checklstring>
	mv	a5,a0
	addi	a2,sp,48
	li	a1,2
	mv	a0,s1
	sd	a5,40(sp)
	jal	ra,0x22138 # luaL_checklstring>
	mv	s5,a0
	li	a2,1
	li	a1,3
	mv	a0,s1
	sd	s5,8(sp)
	jal	ra,0x222c8 # luaL_optinteger>
	ld	a5,48(sp)
	bgtz	a0,0x2d4cc # str_unpack+0x2b4>
	li	s0,0
	beqz	a0,0x2d26c # str_unpack+0x54>
	neg	a4,a5
	ble	a4,a0,0x2d4c6 # str_unpack+0x2ae>
	li	a5,1
	slli	a5,a5,0x20
	addi	a5,a5,1
	sd	a5,72(sp)
	ld	a5,40(sp)
	sd	s1,64(sp)
	lbu	a5,0(a5)
	beqz	a5,0x2d4f8 # str_unpack+0x2e0>
	li	s3,0
	addi	s11,sp,36
	addi	s10,sp,32
	addi	s9,sp,40
	addi	s8,sp,64
	auipc	s7,0x18
	addi	s7,s7,-914 # 0x44f00 # cat.0+0x448>
	li	s6,10
	auipc	s4,0x18
	addi	s4,s4,192 # 0x4535c # cat.0+0x8a4>
	mv	a3,s10
	mv	a4,s11
	mv	a2,s9
	mv	a1,s0
	mv	a0,s8
	jal	ra,0x2c9e2 # getdetails>
	lw	a5,32(sp)
	lw	a6,36(sp)
	sext.w	s5,a0
	add	a3,a5,a6
	ld	a5,48(sp)
	sub	a5,a5,s0
	bltu	a5,a3,0x2d4b2 # str_unpack+0x29a>
	mv	a2,s7
	li	a1,2
	mv	a0,s1
	add	s0,s0,a6
	addiw	s2,s3,1
	jal	ra,0x2207c # luaL_checkstack>
	bltu	s6,s5,0x2d302 # str_unpack+0xea>
	slli	a5,s5,0x2
	add	a5,a5,s4
	lw	a5,0(a5)
	add	a5,a5,s4
	jr	a5
	ld	a5,8(sp)
	lw	a3,32(sp)
	lw	a2,72(sp)
	add	a1,a5,s0
	xori	a4,s5,1
	mv	a0,s1
	jal	ra,0x2b90a # unpackint>
	mv	a1,a0
	mv	a0,s1
	jal	ra,0x11e32 # lua_pushinteger>
	addiw	a5,s3,2
	mv	s3,s2
	mv	s2,a5
	ld	a5,40(sp)
	lw	a4,32(sp)
	lbu	a5,0(a5)
	add	s0,s0,a4
	bnez	a5,0x2d2a4 # str_unpack+0x8c>
	mv	a0,s1
	addi	a1,s0,1
	jal	ra,0x11e32 # lua_pushinteger>
	ld	ra,184(sp)
	ld	s0,176(sp)
	ld	s1,168(sp)
	ld	s3,152(sp)
	ld	s4,144(sp)
	ld	s5,136(sp)
	ld	s6,128(sp)
	ld	s7,120(sp)
	ld	s8,112(sp)
	ld	s9,104(sp)
	ld	s10,96(sp)
	ld	s11,88(sp)
	mv	a0,s2
	ld	s2,160(sp)
	addi	sp,sp,192
	ret
	ld	a5,8(sp)
	lw	a3,72(sp)
	li	a1,1
	add	a5,a5,s0
	addi	a2,a5,4
	addi	a4,sp,59
	beq	a3,a1,0x2d54e # str_unpack+0x336>
	lbu	a3,0(a5)
	addi	a5,a5,1
	addi	a4,a4,-1
	sb	a3,1(a4)
	bne	a5,a2,0x2d354 # str_unpack+0x13c>
	flw	fa0,56(sp)
	mv	a0,s1
	fcvt.d.s	fa0,fa0
	jal	ra,0x11e22 # lua_pushnumber>
	addiw	a5,s3,2
	mv	s3,s2
	mv	s2,a5
	ld	a5,40(sp)
	lw	a4,32(sp)
	lbu	a5,0(a5)
	add	s0,s0,a4
	bnez	a5,0x2d2a4 # str_unpack+0x8c>
	j	0x2d316 # str_unpack+0xfe>
	ld	a5,8(sp)
	lw	a3,72(sp)
	li	a1,1
	add	a5,a5,s0
	addi	a2,a5,8
	addi	a4,sp,63
	beq	a3,a1,0x2d4fc # str_unpack+0x2e4>
	lbu	a3,0(a5)
	addi	a5,a5,1
	addi	a4,a4,-1
	sb	a3,1(a4)
	bne	a5,a2,0x2d39c # str_unpack+0x184>
	fld	fa0,56(sp)
	mv	a0,s1
	jal	ra,0x11e22 # lua_pushnumber>
	addiw	a5,s3,2
	mv	s3,s2
	mv	s2,a5
	ld	a5,40(sp)
	lw	a4,32(sp)
	lbu	a5,0(a5)
	add	s0,s0,a4
	bnez	a5,0x2d2a4 # str_unpack+0x8c>
	j	0x2d316 # str_unpack+0xfe>
	ld	a5,8(sp)
	lw	a3,72(sp)
	li	a1,1
	add	a5,a5,s0
	addi	a2,a5,8
	addi	a4,sp,63
	beq	a3,a1,0x2d4fc # str_unpack+0x2e4>
	lbu	a3,0(a5)
	addi	a5,a5,1
	addi	a4,a4,-1
	sb	a3,1(a4)
	bne	a5,a2,0x2d3e0 # str_unpack+0x1c8>
	fld	fa0,56(sp)
	mv	a0,s1
	jal	ra,0x11e22 # lua_pushnumber>
	addiw	a5,s3,2
	mv	s3,s2
	mv	s2,a5
	j	0x2d3bc # str_unpack+0x1a4>
	ld	a5,8(sp)
	add	a4,a5,s0
	mv	a0,a4
	sd	a4,16(sp)
	jal	ra,0x369fa # strlen>
	ld	a3,48(sp)
	add	s0,s0,a0
	ld	a4,16(sp)
	mv	a5,a0
	bleu	a3,s0,0x2d586 # str_unpack+0x36e>
	mv	a2,a5
	mv	a1,a4
	mv	a0,s1
	jal	ra,0x11e42 # lua_pushlstring>
	addiw	a5,s3,2
	mv	s3,s2
	mv	s2,a5
	ld	a5,40(sp)
	lw	a4,32(sp)
	addi	s0,s0,1
	lbu	a5,0(a5)
	add	s0,s0,a4
	bnez	a5,0x2d2a4 # str_unpack+0x8c>
	j	0x2d316 # str_unpack+0xfe>
	ld	a5,8(sp)
	lw	a3,32(sp)
	lw	a2,72(sp)
	add	a1,a5,s0
	li	a4,0
	mv	a0,s1
	jal	ra,0x2b90a # unpackint>
	lw	a1,32(sp)
	ld	a4,48(sp)
	mv	a5,a0
	sub	a4,a4,a1
	sub	a4,a4,s0
	bltu	a4,a0,0x2d59e # str_unpack+0x386>
	mv	a2,a5
	sd	a5,16(sp)
	ld	a5,8(sp)
	add	a1,a1,s0
	mv	a0,s1
	add	a1,a1,a5
	jal	ra,0x11e42 # lua_pushlstring>
	ld	a5,16(sp)
	addiw	a4,s3,2
	mv	s3,s2
	add	s0,s0,a5
	ld	a5,40(sp)
	mv	s2,a4
	lw	a4,32(sp)
	lbu	a5,0(a5)
	add	s0,s0,a4
	bnez	a5,0x2d2a4 # str_unpack+0x8c>
	j	0x2d316 # str_unpack+0xfe>
	ld	a5,8(sp)
	lw	a2,32(sp)
	mv	a0,s1
	add	a1,a5,s0
	jal	ra,0x11e42 # lua_pushlstring>
	addiw	a5,s3,2
	mv	s3,s2
	mv	s2,a5
	ld	a5,40(sp)
	lw	a4,32(sp)
	lbu	a5,0(a5)
	add	s0,s0,a4
	bnez	a5,0x2d2a4 # str_unpack+0x8c>
	j	0x2d316 # str_unpack+0xfe>
	auipc	a2,0x18
	addi	a2,a2,-1482 # 0x44ee8 # cat.0+0x430>
	li	a1,2
	mv	a0,s1
	jal	ra,0x21c20 # luaL_argerror>
	lw	a6,36(sp)
	j	0x2d2c6 # str_unpack+0xae>
	addi	s0,a5,1
	add	a0,a0,s0
	addi	s0,a0,-1
	bleu	s0,a5,0x2d26c # str_unpack+0x54>
	auipc	a2,0x18
	addi	a2,a2,-1548 # 0x44ec8 # cat.0+0x410>
	li	a1,3
	mv	a0,s1
	jal	ra,0x21c20 # luaL_argerror>
	li	a5,1
	slli	a5,a5,0x20
	addi	a5,a5,1
	sd	a5,72(sp)
	ld	a5,40(sp)
	sd	s1,64(sp)
	lbu	a5,0(a5)
	bnez	a5,0x2d280 # str_unpack+0x68>
	li	s2,1
	j	0x2d316 # str_unpack+0xfe>
	lbu	a0,3(a5)
	lbu	t1,0(a5)
	lbu	a7,1(a5)
	lbu	a6,2(a5)
	lbu	a1,4(a5)
	lbu	a2,5(a5)
	lbu	a3,6(a5)
	lbu	a4,7(a5)
	sb	a0,59(sp)
	sb	t1,56(sp)
	sb	a7,57(sp)
	sb	a6,58(sp)
	sb	a1,60(sp)
	sb	a2,61(sp)
	sb	a3,62(sp)
	sb	a4,63(sp)
	fld	fa0,56(sp)
	mv	a0,s1
	jal	ra,0x11e22 # lua_pushnumber>
	addiw	a5,s3,2
	mv	s3,s2
	mv	s2,a5
	j	0x2d3bc # str_unpack+0x1a4>
	lbu	a1,0(a5)
	lbu	a2,1(a5)
	lbu	a3,2(a5)
	lbu	a4,3(a5)
	sb	a1,56(sp)
	sb	a2,57(sp)
	sb	a3,58(sp)
	sb	a4,59(sp)
	flw	fa0,56(sp)
	mv	a0,s1
	fcvt.d.s	fa0,fa0
	jal	ra,0x11e22 # lua_pushnumber>
	addiw	a5,s3,2
	mv	s3,s2
	mv	s2,a5
	j	0x2d37a # str_unpack+0x162>
	sd	a0,24(sp)
	auipc	a2,0x18
	addi	a2,a2,-1648 # 0x44f18 # cat.0+0x460>
	li	a1,2
	mv	a0,s1
	jal	ra,0x21c20 # luaL_argerror>
	ld	a5,24(sp)
	ld	a4,16(sp)
	j	0x2d41c # str_unpack+0x204>
	sd	a0,16(sp)
	li	a1,2
	auipc	a2,0x18
	addi	a2,a2,-1722 # 0x44ee8 # cat.0+0x430>
	mv	a0,s1
	jal	ra,0x21c20 # luaL_argerror>
	lw	a1,32(sp)
	ld	a5,16(sp)
	j	0x2d460 # str_unpack+0x248>

gmatch_aux:
	lui	a1,0xfff0c
	addi	sp,sp,-48
	addi	a1,a1,-1579 # 0xfffffffffff0b9d5 # __BSS_END__+0xffffffffffebd64d>
	sd	s0,32(sp)
	sd	s1,24(sp)
	sd	s2,16(sp)
	sd	s3,8(sp)
	mv	s0,a0
	sd	ra,40(sp)
	sd	s4,0(sp)
	jal	ra,0x11c6a # lua_touserdata>
	ld	s2,0(a0)
	ld	a5,32(a0)
	sd	s0,48(a0)
	mv	s1,a0
	addi	s3,a0,24
	bltu	a5,s2,0x2d604 # gmatch_aux+0x4e>
	ld	a2,8(s1)
	mv	a1,s2
	sb	zero,60(s1)
	mv	a0,s3
	jal	ra,0x2ce58 # match>
	mv	s0,a0
	beqz	a0,0x2d5fc # gmatch_aux+0x46>
	ld	a5,16(s1)
	bne	a5,a0,0x2d618 # gmatch_aux+0x62>
	ld	a5,32(s1)
	addi	s2,s2,1
	bleu	s2,a5,0x2d5e4 # gmatch_aux+0x2e>
	li	s1,0
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	ld	s4,0(sp)
	mv	a0,s1
	ld	s1,24(sp)
	addi	sp,sp,48
	ret
	lbu	s4,60(s1)
	sd	a0,16(s1)
	sd	a0,0(s1)
	ld	a0,48(s1)
	beqz	s4,0x2d64c # gmatch_aux+0x96>
	sext.w	s4,s4
	auipc	a2,0x18
	addi	a2,a2,-2024 # 0x44e40 # cat.0+0x388>
	mv	a1,s4
	jal	ra,0x2207c # luaL_checkstack>
	li	s1,0
	mv	a1,s1
	mv	a3,s0
	addiw	s1,s1,1
	mv	a2,s2
	mv	a0,s3
	jal	ra,0x2cb7c # push_onecapture>
	bne	s4,s1,0x2d638 # gmatch_aux+0x82>
	j	0x2d606 # gmatch_aux+0x50>
	beqz	s2,0x2d66e # gmatch_aux+0xb8>
	li	a1,1
	auipc	a2,0x17
	addi	a2,a2,2030 # 0x44e40 # cat.0+0x388>
	jal	ra,0x2207c # luaL_checkstack>
	mv	a3,s0
	mv	a2,s2
	li	a1,0
	mv	a0,s3
	jal	ra,0x2cb7c # push_onecapture>
	li	s1,1
	j	0x2d606 # gmatch_aux+0x50>
	auipc	a2,0x17
	addi	a2,a2,2002 # 0x44e40 # cat.0+0x388>
	li	a1,0
	jal	ra,0x2207c # luaL_checkstack>
	j	0x2d604 # gmatch_aux+0x4e>

str_gsub:
	addi	sp,sp,-1792
	addi	a2,sp,48
	li	a1,1
	sd	ra,1784(sp)
	sd	s0,1776(sp)
	sd	s1,1768(sp)
	mv	s0,a0
	sd	s2,1760(sp)
	sd	s6,1728(sp)
	sd	s8,1712(sp)
	sd	s9,1704(sp)
	sd	s3,1752(sp)
	sd	s4,1744(sp)
	sd	s5,1736(sp)
	sd	s7,1720(sp)
	sd	s10,1696(sp)
	sd	s11,1688(sp)
	sd	a0,16(sp)
	jal	ra,0x22138 # luaL_checklstring>
	addi	a2,sp,56
	li	a1,2
	mv	s1,a0
	mv	a0,s0
	jal	ra,0x22138 # luaL_checklstring>
	mv	s6,a0
	li	a1,3
	mv	a0,s0
	jal	ra,0x1144a # lua_type>
	ld	a2,48(sp)
	mv	s2,a0
	sd	a0,8(sp)
	li	a1,4
	addi	a2,a2,1
	mv	a0,s0
	jal	ra,0x222c8 # luaL_optinteger>
	addiw	a4,s2,-3
	li	a5,3
	lbu	s9,0(s6)
	mv	s8,a0
	bleu	a4,a5,0x2d708 # str_gsub+0x8a>
	ld	a0,16(sp)
	auipc	a2,0x18
	addi	a2,a2,-1890 # 0x44f98 # cat.0+0x4e0>
	li	a1,3
	jal	ra,0x21ce6 # luaL_typeerror>
	ld	a0,16(sp)
	addi	s2,sp,624
	mv	a1,s2
	jal	ra,0x22348 # luaL_buffinit>
	li	a5,94
	beq	s9,a5,0x2da12 # str_gsub+0x394>
	ld	a5,56(sp)
	ld	a3,16(sp)
	ld	a4,48(sp)
	add	a5,a5,s6
	sd	a3,96(sp)
	add	a4,a4,s1
	li	a3,200
	sd	a5,88(sp)
	addi	a5,sp,64
	sw	a3,104(sp)
	sd	s1,72(sp)
	sd	a4,80(sp)
	sd	zero,0(sp)
	li	s4,0
	li	s5,0
	addi	s3,sp,72
	sd	a5,32(sp)
	ble	s8,s4,0x2d802 # str_gsub+0x184>
	mv	a2,s6
	mv	a1,s1
	mv	a0,s3
	sb	zero,108(sp)
	jal	ra,0x2ce58 # match>
	mv	s0,a0
	beqz	a0,0x2d7d0 # str_gsub+0x152>
	beq	s5,a0,0x2d7d0 # str_gsub+0x152>
	ld	a4,8(sp)
	li	a5,5
	ld	s5,96(sp)
	addi	s4,s4,1
	beq	a4,a5,0x2d982 # str_gsub+0x304>
	li	a5,6
	bne	a4,a5,0x2d862 # str_gsub+0x1e4>
	mv	a0,s5
	li	a1,3
	jal	ra,0x113c8 # lua_pushvalue>
	lbu	s7,108(sp)
	ld	a0,96(sp)
	bnez	s7,0x2d9ca # str_gsub+0x34c>
	beqz	s1,0x2da1c # str_gsub+0x39e>
	li	a1,1
	auipc	a2,0x17
	addi	a2,a2,1722 # 0x44e40 # cat.0+0x388>
	jal	ra,0x2207c # luaL_checkstack>
	mv	a3,s0
	mv	a2,s1
	li	a1,0
	mv	a0,s3
	jal	ra,0x2cb7c # push_onecapture>
	li	s10,1
	li	a4,0
	li	a3,0
	li	a2,1
	mv	a1,s10
	mv	a0,s5
	jal	ra,0x128c8 # lua_callk>
	li	a1,-1
	mv	a0,s5
	jal	ra,0x119ee # lua_toboolean>
	bnez	a0,0x2d9a2 # str_gsub+0x324>
	mv	a0,s5
	li	a1,-2
	jal	ra,0x1110c # lua_settop>
	sub	a2,s0,s1
	mv	a1,s1
	mv	a0,s2
	jal	ra,0x22b22 # luaL_addlstring>
	j	0x2d97c # str_gsub+0x2fe>
	ld	a5,80(sp)
	bleu	a5,s1,0x2d802 # str_gsub+0x184>
	ld	a5,640(sp)
	ld	a4,632(sp)
	bleu	a4,a5,0x2d854 # str_gsub+0x1d6>
	addi	a4,a5,1
	sd	a4,640(sp)
	ld	a4,624(sp)
	lbu	a3,0(s1)
	addi	s1,s1,1
	add	a5,a5,a4
	sb	a3,0(a5)
	li	a5,94
	bne	s9,a5,0x2d742 # str_gsub+0xc4>
	ld	a5,0(sp)
	bnez	a5,0x2d9fe # str_gsub+0x380>
	ld	a0,16(sp)
	li	a1,1
	jal	ra,0x113c8 # lua_pushvalue>
	ld	a0,16(sp)
	mv	a1,s4
	jal	ra,0x11e32 # lua_pushinteger>
	ld	ra,1784(sp)
	ld	s0,1776(sp)
	ld	s1,1768(sp)
	ld	s2,1760(sp)
	ld	s3,1752(sp)
	ld	s4,1744(sp)
	ld	s5,1736(sp)
	ld	s6,1728(sp)
	ld	s7,1720(sp)
	ld	s8,1712(sp)
	ld	s9,1704(sp)
	ld	s10,1696(sp)
	ld	s11,1688(sp)
	li	a0,2
	addi	sp,sp,1792
	ret
	li	a1,1
	mv	a0,s2
	jal	ra,0x22a66 # luaL_prepbuffsize>
	ld	a5,640(sp)
	j	0x2d7e2 # str_gsub+0x164>
	ld	a2,32(sp)
	li	a1,3
	mv	a0,s5
	jal	ra,0x11a62 # lua_tolstring>
	sub	a5,s0,s1
	ld	s7,64(sp)
	mv	s10,a0
	sd	a5,24(sp)
	j	0x2d8c0 # str_gsub+0x242>
	li	a5,48
	beq	a2,a5,0x2d920 # str_gsub+0x2a2>
	addiw	a3,a2,-48
	li	a5,9
	bltu	a5,a3,0x2d90c # str_gsub+0x28e>
	lbu	a1,108(sp)
	addiw	a3,a2,-49
	sext.w	a2,a2
	blt	a3,a1,0x2d92c # str_gsub+0x2ae>
	bnez	a3,0x2da66 # str_gsub+0x3e8>
	ld	a2,24(sp)
	mv	s7,s1
	li	a5,-2
	beq	a2,a5,0x2d962 # str_gsub+0x2e4>
	mv	a1,s7
	mv	a0,s2
	jal	ra,0x22b22 # luaL_addlstring>
	ld	a2,64(sp)
	addi	a5,s11,2
	sub	a4,a5,s10
	sub	s7,a2,a4
	sd	s7,64(sp)
	mv	s10,a5
	mv	a2,s7
	li	a1,37
	mv	a0,s10
	jal	ra,0x36278 # memchr>
	mv	s11,a0
	beqz	a0,0x2d96a # str_gsub+0x2ec>
	sub	a2,s11,s10
	mv	a1,s10
	mv	a0,s2
	jal	ra,0x22b22 # luaL_addlstring>
	lbu	a2,1(s11)
	li	a3,37
	bne	a2,a3,0x2d878 # str_gsub+0x1fa>
	ld	a3,640(sp)
	ld	a2,632(sp)
	bleu	a2,a3,0x2d9bc # str_gsub+0x33e>
	addi	a2,a3,1
	sd	a2,640(sp)
	ld	a2,624(sp)
	lbu	a1,1(s11)
	add	a3,a3,a2
	sb	a1,0(a3)
	j	0x2d8ae # str_gsub+0x230>
	li	a2,37
	auipc	a1,0x17
	addi	a1,a1,1584 # 0x44f40 # cat.0+0x488>
	mv	a0,s5
	jal	ra,0x21bdc # luaL_error>
	j	0x2d8ae # str_gsub+0x230>
	ld	a2,24(sp)
	mv	a1,s1
	mv	a0,s2
	jal	ra,0x22b22 # luaL_addlstring>
	j	0x2d8ae # str_gsub+0x230>
	addi	a3,a3,2
	addi	a5,sp,1680
	slli	a3,a3,0x4
	add	a3,a3,a5
	ld	a2,-1592(a3)
	li	a5,-1
	ld	s7,-1600(a3)
	beq	a2,a5,0x2da7a # str_gsub+0x3fc>
	li	a5,-2
	bne	a2,a5,0x2d8a0 # str_gsub+0x222>
	ld	a1,72(sp)
	ld	a0,96(sp)
	sd	a2,40(sp)
	sub	a1,s7,a1
	addi	a1,a1,1
	jal	ra,0x11e32 # lua_pushinteger>
	ld	a2,40(sp)
	li	a5,-2
	bne	a2,a5,0x2d8a6 # str_gsub+0x228>
	mv	a0,s2
	jal	ra,0x22ac4 # luaL_addvalue>
	j	0x2d8ae # str_gsub+0x230>
	mv	a2,s7
	mv	a1,s10
	mv	a0,s2
	jal	ra,0x22b22 # luaL_addlstring>
	ld	a5,0(sp)
	ori	a5,a5,1
	sd	a5,0(sp)
	mv	s5,s0
	mv	s1,s0
	j	0x2d7fa # str_gsub+0x17c>
	mv	a0,s3
	mv	a3,s0
	mv	a2,s1
	li	a1,0
	jal	ra,0x2cb7c # push_onecapture>
	li	a1,3
	mv	a0,s5
	jal	ra,0x12038 # lua_gettable>
	li	a1,-1
	mv	a0,s5
	jal	ra,0x119ee # lua_toboolean>
	beqz	a0,0x2d7ba # str_gsub+0x13c>
	li	a1,-1
	mv	a0,s5
	jal	ra,0x11656 # lua_isstring>
	beqz	a0,0x2da3c # str_gsub+0x3be>
	mv	a0,s2
	jal	ra,0x22ac4 # luaL_addvalue>
	ld	a5,0(sp)
	ori	a5,a5,1
	sd	a5,0(sp)
	j	0x2d97c # str_gsub+0x2fe>
	li	a1,1
	mv	a0,s2
	jal	ra,0x22a66 # luaL_prepbuffsize>
	ld	a3,640(sp)
	j	0x2d8f4 # str_gsub+0x276>
	sext.w	s7,s7
	auipc	a2,0x17
	addi	a2,a2,1140 # 0x44e40 # cat.0+0x388>
	mv	a1,s7
	jal	ra,0x2207c # luaL_checkstack>
	li	s10,0
	mv	a1,s10
	mv	a3,s0
	addiw	s10,s10,1
	mv	a2,s1
	mv	a0,s3
	jal	ra,0x2cb7c # push_onecapture>
	bne	s7,s10,0x2d9dc # str_gsub+0x35e>
	li	a4,0
	li	a3,0
	li	a2,1
	mv	a1,s10
	mv	a0,s5
	jal	ra,0x128c8 # lua_callk>
	j	0x2d7ae # str_gsub+0x130>
	ld	a2,80(sp)
	mv	a0,s2
	mv	a1,s1
	sub	a2,a2,s1
	jal	ra,0x22b22 # luaL_addlstring>
	mv	a0,s2
	jal	ra,0x222fe # luaL_pushresult>
	j	0x2d810 # str_gsub+0x192>
	ld	a5,56(sp)
	addi	s6,s6,1
	addi	a5,a5,-1
	sd	a5,56(sp)
	j	0x2d71e # str_gsub+0xa0>
	auipc	a2,0x17
	addi	a2,a2,1060 # 0x44e40 # cat.0+0x388>
	li	a1,0
	jal	ra,0x2207c # luaL_checkstack>
	li	s10,0
	li	a4,0
	li	a3,0
	li	a2,1
	mv	a1,s10
	mv	a0,s5
	jal	ra,0x128c8 # lua_callk>
	j	0x2d7ae # str_gsub+0x130>
	li	a1,-1
	mv	a0,s5
	jal	ra,0x1144a # lua_type>
	mv	a1,a0
	mv	a0,s5
	jal	ra,0x114d0 # lua_typename>
	mv	a2,a0
	auipc	a1,0x17
	addi	a1,a1,1314 # 0x44f70 # cat.0+0x4b8>
	mv	a0,s5
	jal	ra,0x21bdc # luaL_error>
	ld	a5,0(sp)
	or	a5,a5,a0
	sext.w	a5,a5
	sd	a5,0(sp)
	j	0x2d97c # str_gsub+0x2fe>
	ld	a0,96(sp)
	addiw	a2,a2,-48
	auipc	a1,0x17
	addi	a1,a1,876 # 0x44dd8 # cat.0+0x320>
	jal	ra,0x21bdc # luaL_error>
	j	0x2d89c # str_gsub+0x21e>
	ld	a0,96(sp)
	auipc	a1,0x17
	addi	a1,a1,892 # 0x44df8 # cat.0+0x340>
	sd	a2,40(sp)
	jal	ra,0x21bdc # luaL_error>
	ld	a2,40(sp)
	j	0x2d8a0 # str_gsub+0x222>

str_pack:
	addi	sp,sp,-1232
	li	a2,0
	li	a1,1
	sd	ra,1224(sp)
	sd	s1,1208(sp)
	sd	s6,1168(sp)
	sd	s0,1216(sp)
	mv	s6,a0
	sd	s2,1200(sp)
	sd	s3,1192(sp)
	sd	s4,1184(sp)
	sd	s5,1176(sp)
	sd	s7,1160(sp)
	sd	s8,1152(sp)
	sd	s9,1144(sp)
	sd	s10,1136(sp)
	sd	s11,1128(sp)
	jal	ra,0x22138 # luaL_checklstring>
	li	a5,1
	slli	a5,a5,0x20
	mv	a4,a0
	addi	a5,a5,1
	mv	a0,s6
	sd	a5,56(sp)
	sd	a4,32(sp)
	sd	s6,48(sp)
	addi	s1,sp,64
	jal	ra,0x11e16 # lua_pushnil>
	mv	a1,s1
	mv	a0,s6
	jal	ra,0x22348 # luaL_buffinit>
	ld	a5,32(sp)
	lbu	a5,0(a5)
	beqz	a5,0x2dbc4 # str_pack+0x136>
	li	s2,0
	li	s5,1
	addi	s10,sp,28
	addi	s9,sp,24
	addi	s8,sp,32
	addi	s7,sp,48
	auipc	s4,0x18
	addi	s4,s4,-1922 # 0x45388 # cat.0+0x8d0>
	addi	s11,sp,40
	mv	a1,s2
	mv	a4,s10
	mv	a3,s9
	mv	a2,s8
	mv	a0,s7
	jal	ra,0x2c9e2 # getdetails>
	lw	a5,28(sp)
	lw	a4,24(sp)
	sext.w	s0,a0
	addiw	a3,a5,-1
	addw	a4,a4,a5
	sw	a3,28(sp)
	add	s2,s2,a4
	bgtz	a5,0x2db56 # str_pack+0xc8>
	j	0x2db6a # str_pack+0xdc>
	addi	a4,a5,1
	sd	a4,80(sp)
	ld	a4,64(sp)
	add	a5,a5,a4
	sb	zero,0(a5)
	lw	a5,28(sp)
	addiw	a4,a5,-1
	sw	a4,28(sp)
	blez	a5,0x2db6a # str_pack+0xdc>
	ld	a5,80(sp)
	ld	a4,72(sp)
	bltu	a5,a4,0x2db3c # str_pack+0xae>
	li	a1,1
	mv	a0,s1
	jal	ra,0x22a66 # luaL_prepbuffsize>
	ld	a5,80(sp)
	j	0x2db3c # str_pack+0xae>
	li	a5,10
	addiw	s3,s5,1
	bltu	a5,s0,0x2dee2 # str_pack+0x454>
	slli	s0,s0,0x2
	add	s0,s0,s4
	lw	a5,0(s0)
	add	a5,a5,s4
	jr	a5
	mv	a1,s3
	mv	a0,s6
	jal	ra,0x221e0 # luaL_checknumber>
	li	a1,8
	mv	a0,s1
	fsd	fa0,40(sp)
	jal	ra,0x22a66 # luaL_prepbuffsize>
	lw	a4,56(sp)
	li	a5,1
	beq	a4,a5,0x2df7c # str_pack+0x4ee>
	addi	a5,a0,7
	addi	a3,a0,-1
	addi	a4,sp,40
	lbu	a2,0(a4)
	addi	a5,a5,-1
	addi	a4,a4,1
	sb	a2,1(a5)
	bne	a3,a5,0x2dba2 # str_pack+0x114>
	ld	a5,80(sp)
	lw	a4,24(sp)
	mv	s5,s3
	add	a5,a5,a4
	sd	a5,80(sp)
	ld	a5,32(sp)
	lbu	a5,0(a5)
	bnez	a5,0x2db16 # str_pack+0x88>
	mv	a0,s1
	jal	ra,0x222fe # luaL_pushresult>
	ld	ra,1224(sp)
	ld	s0,1216(sp)
	ld	s1,1208(sp)
	ld	s2,1200(sp)
	ld	s3,1192(sp)
	ld	s4,1184(sp)
	ld	s5,1176(sp)
	ld	s6,1168(sp)
	ld	s7,1160(sp)
	ld	s8,1152(sp)
	ld	s9,1144(sp)
	ld	s10,1136(sp)
	ld	s11,1128(sp)
	li	a0,1
	addi	sp,sp,1232
	ret
	ld	a5,80(sp)
	ld	a4,72(sp)
	bleu	a4,a5,0x2df62 # str_pack+0x4d4>
	addi	a4,a5,1
	sd	a4,80(sp)
	ld	a4,64(sp)
	add	a5,a5,a4
	sb	zero,0(a5)
	ld	a5,32(sp)
	lbu	a5,0(a5)
	bnez	a5,0x2db16 # str_pack+0x88>
	j	0x2dbc4 # str_pack+0x136>
	mv	a2,s11
	mv	a1,s3
	mv	a0,s6
	jal	ra,0x22138 # luaL_checklstring>
	mv	s0,a0
	jal	ra,0x369fa # strlen>
	ld	a2,40(sp)
	bne	a0,a2,0x2e008 # str_pack+0x57a>
	mv	a1,s0
	mv	a0,s1
	jal	ra,0x22b22 # luaL_addlstring>
	ld	a5,80(sp)
	ld	a4,72(sp)
	bleu	a4,a5,0x2df56 # str_pack+0x4c8>
	addi	a4,a5,1
	sd	a4,80(sp)
	ld	a4,64(sp)
	mv	s5,s3
	add	a5,a5,a4
	sb	zero,0(a5)
	ld	a5,40(sp)
	addi	a5,a5,1
	add	s2,s2,a5
	ld	a5,32(sp)
	lbu	a5,0(a5)
	bnez	a5,0x2db16 # str_pack+0x88>
	j	0x2dbc4 # str_pack+0x136>
	mv	a1,s3
	mv	a0,s6
	jal	ra,0x221e0 # luaL_checknumber>
	li	a1,8
	mv	a0,s1
	fsd	fa0,40(sp)
	jal	ra,0x22a66 # luaL_prepbuffsize>
	lw	a4,56(sp)
	li	a5,1
	beq	a4,a5,0x2df7c # str_pack+0x4ee>
	addi	a5,a0,7
	addi	a3,a0,-1
	addi	a4,sp,40
	lbu	a2,0(a4)
	addi	a5,a5,-1
	addi	a4,a4,1
	sb	a2,1(a5)
	bne	a3,a5,0x2dc94 # str_pack+0x206>
	ld	a5,80(sp)
	lw	a4,24(sp)
	mv	s5,s3
	add	a5,a5,a4
	sd	a5,80(sp)
	j	0x2dbbc # str_pack+0x12e>
	mv	a2,s11
	mv	a1,s3
	mv	a0,s6
	jal	ra,0x22138 # luaL_checklstring>
	ld	a2,40(sp)
	lw	a5,24(sp)
	mv	s0,a0
	bltu	a5,a2,0x2dff4 # str_pack+0x566>
	mv	a1,s0
	mv	a0,s1
	jal	ra,0x22b22 # luaL_addlstring>
	j	0x2dcdc # str_pack+0x24e>
	addi	a4,a5,1
	sd	a4,80(sp)
	ld	a4,64(sp)
	add	a5,a5,a4
	sb	zero,0(a5)
	ld	a5,40(sp)
	lw	a4,24(sp)
	addi	a3,a5,1
	sd	a3,40(sp)
	bleu	a4,a5,0x2dee2 # str_pack+0x454>
	ld	a5,80(sp)
	ld	a4,72(sp)
	bltu	a5,a4,0x2dcce # str_pack+0x240>
	li	a1,1
	mv	a0,s1
	jal	ra,0x22a66 # luaL_prepbuffsize>
	ld	a5,80(sp)
	j	0x2dcce # str_pack+0x240>
	mv	a1,s3
	mv	a0,s6
	jal	ra,0x22270 # luaL_checkinteger>
	lw	a1,24(sp)
	li	a4,7
	mv	a5,a0
	mv	s0,a0
	ble	a1,a4,0x2df30 # str_pack+0x4a2>
	lw	s5,56(sp)
	mv	a0,s1
	sd	a5,8(sp)
	sd	a1,0(sp)
	jal	ra,0x22a66 # luaL_prepbuffsize>
	ld	a1,0(sp)
	ld	a5,8(sp)
	mv	a4,a0
	beqz	s5,0x2def0 # str_pack+0x462>
	sb	a5,0(a4)
	li	a5,1
	addiw	a3,a1,-1
	ble	a1,a5,0x2dd52 # str_pack+0x2c4>
	srli	s0,s0,0x8
	mv	a4,a5
	bnez	s5,0x2dd42 # str_pack+0x2b4>
	subw	a4,a3,a5
	add	a4,a4,a0
	addi	a5,a5,1
	sb	s0,0(a4)
	sext.w	a4,a5
	blt	a4,a1,0x2dd36 # str_pack+0x2a8>
	ld	a5,80(sp)
	mv	s5,s3
	add	a5,a5,a1
	sd	a5,80(sp)
	ld	a5,32(sp)
	lbu	a5,0(a5)
	bnez	a5,0x2db16 # str_pack+0x88>
	j	0x2dbc4 # str_pack+0x136>
	mv	a1,s3
	mv	a0,s6
	jal	ra,0x22270 # luaL_checkinteger>
	lw	s0,24(sp)
	li	a5,7
	mv	a6,a0
	blt	a5,s0,0x2dda8 # str_pack+0x31a>
	slliw	a5,s0,0x3
	addiw	a4,a5,-1
	li	a5,1
	sll	a5,a5,a4
	neg	a4,a5
	blt	a0,a4,0x2dd92 # str_pack+0x304>
	blt	a0,a5,0x2dda8 # str_pack+0x31a>
	auipc	a2,0x15
	addi	a2,a2,-882 # 0x42a20 # udatatypename+0x58>
	mv	a1,s3
	mv	a0,s6
	sd	a6,0(sp)
	jal	ra,0x21c20 # luaL_argerror>
	ld	a6,0(sp)
	lw	s0,24(sp)
	mv	a1,s0
	mv	a0,s1
	sd	a6,0(sp)
	lw	s5,56(sp)
	jal	ra,0x22a66 # luaL_prepbuffsize>
	ld	a6,0(sp)
	mv	a5,a0
	mv	a3,a6
	beqz	s5,0x2df00 # str_pack+0x472>
	sb	a6,0(a5)
	li	a5,1
	addiw	a2,s0,-1
	ble	s0,a5,0x2dde8 # str_pack+0x35a>
	srli	a3,a3,0x8
	mv	a4,a5
	bnez	s5,0x2ddd8 # str_pack+0x34a>
	subw	a4,a2,a5
	add	a4,a4,a0
	addi	a5,a5,1
	sb	a3,0(a4)
	sext.w	a4,a5
	blt	a4,s0,0x2ddcc # str_pack+0x33e>
	bgez	a6,0x2de12 # str_pack+0x384>
	li	a5,8
	ble	s0,a5,0x2de12 # str_pack+0x384>
	addiw	a2,s0,-1
	li	a3,-1
	mv	a4,a5
	bnez	s5,0x2de02 # str_pack+0x374>
	subw	a4,a2,a5
	add	a4,a4,a0
	addi	a5,a5,1
	sb	a3,0(a4)
	sext.w	a4,a5
	blt	a4,s0,0x2ddf8 # str_pack+0x36a>
	ld	a5,80(sp)
	mv	s5,s3
	add	a5,a5,s0
	sd	a5,80(sp)
	ld	a5,32(sp)
	lbu	a5,0(a5)
	bnez	a5,0x2db16 # str_pack+0x88>
	j	0x2dbc4 # str_pack+0x136>
	mv	a2,s11
	mv	a1,s3
	mv	a0,s6
	jal	ra,0x22138 # luaL_checklstring>
	lw	s5,24(sp)
	li	a5,7
	ld	s0,40(sp)
	mv	a6,a0
	ble	s5,a5,0x2df08 # str_pack+0x47a>
	lw	a3,56(sp)
	mv	a1,s5
	mv	a0,s1
	sd	a6,8(sp)
	sd	a3,0(sp)
	jal	ra,0x22a66 # luaL_prepbuffsize>
	ld	a3,0(sp)
	ld	a6,8(sp)
	mv	a5,a0
	beqz	a3,0x2def8 # str_pack+0x46a>
	sb	s0,0(a5)
	li	a5,1
	addiw	a2,s5,-1
	ble	s5,a5,0x2de7a # str_pack+0x3ec>
	srli	s0,s0,0x8
	mv	a4,a5
	bnez	a3,0x2de6a # str_pack+0x3dc>
	subw	a4,a2,a5
	add	a4,a4,a0
	addi	a5,a5,1
	sb	s0,0(a4)
	sext.w	a4,a5
	blt	a4,s5,0x2de60 # str_pack+0x3d2>
	ld	a5,80(sp)
	ld	a2,40(sp)
	mv	a1,a6
	add	s5,s5,a5
	mv	a0,s1
	sd	s5,80(sp)
	jal	ra,0x22b22 # luaL_addlstring>
	ld	a5,40(sp)
	mv	s5,s3
	add	s2,s2,a5
	ld	a5,32(sp)
	lbu	a5,0(a5)
	bnez	a5,0x2db16 # str_pack+0x88>
	j	0x2dbc4 # str_pack+0x136>
	mv	a1,s3
	mv	a0,s6
	jal	ra,0x221e0 # luaL_checknumber>
	fcvt.s.d	fa0,fa0
	li	a1,4
	mv	a0,s1
	fsw	fa0,40(sp)
	jal	ra,0x22a66 # luaL_prepbuffsize>
	lw	a4,56(sp)
	li	a5,1
	beq	a4,a5,0x2dfc8 # str_pack+0x53a>
	addi	a5,a0,3
	addi	a2,a0,-1
	addi	a4,sp,40
	lbu	a3,0(a4)
	addi	a5,a5,-1
	addi	a4,a4,1
	sb	a3,1(a5)
	bne	a2,a5,0x2dec6 # str_pack+0x438>
	ld	a5,80(sp)
	lw	a4,24(sp)
	mv	s5,s3
	add	a5,a5,a4
	sd	a5,80(sp)
	j	0x2dbbc # str_pack+0x12e>
	ld	a5,32(sp)
	mv	s5,s3
	lbu	a5,0(a5)
	bnez	a5,0x2db16 # str_pack+0x88>
	j	0x2dbc4 # str_pack+0x136>
	addiw	a4,a1,-1
	add	a4,a4,a0
	j	0x2dd28 # str_pack+0x29a>
	addiw	a5,s5,-1
	add	a5,a5,a0
	j	0x2de52 # str_pack+0x3c4>
	addiw	a5,s0,-1
	add	a5,a5,a0
	j	0x2ddbe # str_pack+0x330>
	slliw	a4,s5,0x3
	li	a5,1
	sll	a5,a5,a4
	bltu	s0,a5,0x2de3c # str_pack+0x3ae>
	sd	a0,0(sp)
	auipc	a2,0x17
	addi	a2,a2,208 # 0x44fe8 # cat.0+0x530>
	mv	a1,s3
	mv	a0,s6
	jal	ra,0x21c20 # luaL_argerror>
	ld	a6,0(sp)
	ld	s0,40(sp)
	lw	s5,24(sp)
	j	0x2de3c # str_pack+0x3ae>
	slliw	a3,a1,0x3
	li	a4,1
	sll	a4,a4,a3
	bltu	a0,a4,0x2dd12 # str_pack+0x284>
	sd	a0,0(sp)
	mv	a1,s3
	auipc	a2,0x17
	addi	a2,a2,110 # 0x44fb0 # cat.0+0x4f8>
	mv	a0,s6
	jal	ra,0x21c20 # luaL_argerror>
	lw	a1,24(sp)
	ld	a5,0(sp)
	j	0x2dd12 # str_pack+0x284>
	li	a1,1
	mv	a0,s1
	jal	ra,0x22a66 # luaL_prepbuffsize>
	ld	a5,80(sp)
	j	0x2dc4e # str_pack+0x1c0>
	li	a1,1
	mv	a0,s1
	jal	ra,0x22a66 # luaL_prepbuffsize>
	ld	a5,80(sp)
	addi	a4,a5,1
	sd	a4,80(sp)
	ld	a4,64(sp)
	add	a5,a5,a4
	sb	zero,0(a5)
	j	0x2dc1c # str_pack+0x18e>
	lbu	a4,6(s11)
	lbu	a5,7(s11)
	lbu	t1,0(s11)
	lbu	a7,1(s11)
	lbu	a6,2(s11)
	lbu	a1,3(s11)
	lbu	a2,4(s11)
	lbu	a3,5(s11)
	sb	t1,0(a0)
	sb	a7,1(a0)
	sb	a6,2(a0)
	sb	a1,3(a0)
	sb	a2,4(a0)
	sb	a3,5(a0)
	sb	a4,6(a0)
	sb	a5,7(a0)
	ld	a5,80(sp)
	lw	a4,24(sp)
	mv	s5,s3
	add	a5,a5,a4
	sd	a5,80(sp)
	j	0x2dbbc # str_pack+0x12e>
	lbu	a4,2(s11)
	lbu	a5,3(s11)
	lbu	a2,0(s11)
	lbu	a3,1(s11)
	sb	a4,2(a0)
	sb	a2,0(a0)
	sb	a3,1(a0)
	sb	a5,3(a0)
	ld	a5,80(sp)
	lw	a4,24(sp)
	mv	s5,s3
	add	a5,a5,a4
	sd	a5,80(sp)
	j	0x2dbbc # str_pack+0x12e>
	auipc	a2,0x17
	addi	a2,a2,-44 # 0x44fc8 # cat.0+0x510>
	mv	a1,s3
	mv	a0,s6
	jal	ra,0x21c20 # luaL_argerror>
	ld	a2,40(sp)
	j	0x2dcc4 # str_pack+0x236>
	auipc	a2,0x17
	addi	a2,a2,-872 # 0x44ca0 # cat.0+0x1e8>
	mv	a1,s3
	mv	a0,s6
	jal	ra,0x21c20 # luaL_argerror>
	ld	a2,40(sp)
	j	0x2dc3e # str_pack+0x1b0>

arith_div:
	addi	sp,sp,-16
	li	a1,1
	sd	s0,0(sp)
	sd	ra,8(sp)
	mv	s0,a0
	jal	ra,0x2c0c4 # tonum>
	beqz	a0,0x2e036 # arith_div+0x1a>
	li	a1,2
	mv	a0,s0
	jal	ra,0x2c0c4 # tonum>
	bnez	a0,0x2e04e # arith_div+0x32>
	mv	a0,s0
	auipc	a1,0x15
	addi	a1,a1,-1840 # 0x42908 # dummynode_+0x128>
	jal	ra,0x2c03a # trymt>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret
	mv	a0,s0
	li	a1,5
	jal	ra,0x117a6 # lua_arith>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret

arith_idiv:
	addi	sp,sp,-16
	li	a1,1
	sd	s0,0(sp)
	sd	ra,8(sp)
	mv	s0,a0
	jal	ra,0x2c0c4 # tonum>
	beqz	a0,0x2e07a # arith_idiv+0x1a>
	li	a1,2
	mv	a0,s0
	jal	ra,0x2c0c4 # tonum>
	bnez	a0,0x2e092 # arith_idiv+0x32>
	mv	a0,s0
	auipc	a1,0x15
	addi	a1,a1,-1900 # 0x42910 # dummynode_+0x130>
	jal	ra,0x2c03a # trymt>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret
	mv	a0,s0
	li	a1,6
	jal	ra,0x117a6 # lua_arith>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret

arith_unm:
	addi	sp,sp,-16
	li	a1,1
	sd	s0,0(sp)
	sd	ra,8(sp)
	mv	s0,a0
	jal	ra,0x2c0c4 # tonum>
	beqz	a0,0x2e0be # arith_unm+0x1a>
	li	a1,2
	mv	a0,s0
	jal	ra,0x2c0c4 # tonum>
	bnez	a0,0x2e0d6 # arith_unm+0x32>
	mv	a0,s0
	auipc	a1,0x15
	addi	a1,a1,-1920 # 0x42940 # dummynode_+0x160>
	jal	ra,0x2c03a # trymt>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret
	mv	a0,s0
	li	a1,12
	jal	ra,0x117a6 # lua_arith>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret

arith_add:
	addi	sp,sp,-16
	li	a1,1
	sd	s0,0(sp)
	sd	ra,8(sp)
	mv	s0,a0
	jal	ra,0x2c0c4 # tonum>
	beqz	a0,0x2e102 # arith_add+0x1a>
	li	a1,2
	mv	a0,s0
	jal	ra,0x2c0c4 # tonum>
	bnez	a0,0x2e11a # arith_add+0x32>
	mv	a0,s0
	auipc	a1,0x14
	addi	a1,a1,2012 # 0x428e0 # dummynode_+0x100>
	jal	ra,0x2c03a # trymt>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret
	mv	a0,s0
	li	a1,0
	jal	ra,0x117a6 # lua_arith>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret

arith_sub:
	addi	sp,sp,-16
	li	a1,1
	sd	s0,0(sp)
	sd	ra,8(sp)
	mv	s0,a0
	jal	ra,0x2c0c4 # tonum>
	beqz	a0,0x2e146 # arith_sub+0x1a>
	li	a1,2
	mv	a0,s0
	jal	ra,0x2c0c4 # tonum>
	bnez	a0,0x2e15e # arith_sub+0x32>
	mv	a0,s0
	auipc	a1,0x14
	addi	a1,a1,1952 # 0x428e8 # dummynode_+0x108>
	jal	ra,0x2c03a # trymt>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret
	mv	a0,s0
	li	a1,1
	jal	ra,0x117a6 # lua_arith>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret

arith_mul:
	addi	sp,sp,-16
	li	a1,1
	sd	s0,0(sp)
	sd	ra,8(sp)
	mv	s0,a0
	jal	ra,0x2c0c4 # tonum>
	beqz	a0,0x2e18a # arith_mul+0x1a>
	li	a1,2
	mv	a0,s0
	jal	ra,0x2c0c4 # tonum>
	bnez	a0,0x2e1a2 # arith_mul+0x32>
	mv	a0,s0
	auipc	a1,0x14
	addi	a1,a1,1892 # 0x428f0 # dummynode_+0x110>
	jal	ra,0x2c03a # trymt>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret
	mv	a0,s0
	li	a1,2
	jal	ra,0x117a6 # lua_arith>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret

arith_mod:
	addi	sp,sp,-16
	li	a1,1
	sd	s0,0(sp)
	sd	ra,8(sp)
	mv	s0,a0
	jal	ra,0x2c0c4 # tonum>
	beqz	a0,0x2e1ce # arith_mod+0x1a>
	li	a1,2
	mv	a0,s0
	jal	ra,0x2c0c4 # tonum>
	bnez	a0,0x2e1e6 # arith_mod+0x32>
	mv	a0,s0
	auipc	a1,0x14
	addi	a1,a1,1832 # 0x428f8 # dummynode_+0x118>
	jal	ra,0x2c03a # trymt>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret
	mv	a0,s0
	li	a1,3
	jal	ra,0x117a6 # lua_arith>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret

str_find_aux:
	addi	sp,sp,-672
	sd	s5,616(sp)
	addi	a2,sp,8
	mv	s5,a1
	li	a1,1
	sd	ra,664(sp)
	sd	s2,640(sp)
	sd	s3,632(sp)
	sd	s4,624(sp)
	mv	s3,a0
	sd	s0,656(sp)
	sd	s1,648(sp)
	sd	s6,608(sp)
	sd	s7,600(sp)
	sd	s8,592(sp)
	sd	s9,584(sp)
	jal	ra,0x22138 # luaL_checklstring>
	addi	a2,sp,16
	li	a1,2
	mv	s4,a0
	mv	a0,s3
	jal	ra,0x22138 # luaL_checklstring>
	mv	s2,a0
	li	a2,1
	li	a1,3
	mv	a0,s3
	jal	ra,0x222c8 # luaL_optinteger>
	ld	a5,8(sp)
	bgtz	a0,0x2e2fc # str_find_aux+0x104>
	beqz	a0,0x2e25c # str_find_aux+0x64>
	neg	a4,a5
	ble	a4,a0,0x2e2f6 # str_find_aux+0xfe>
	mv	s0,s4
	li	s1,0
	bnez	s5,0x2e34c # str_find_aux+0x154>
	ld	s8,16(sp)
	lbu	s7,0(s2)
	li	a4,94
	beq	s7,a4,0x2e344 # str_find_aux+0x14c>
	add	s8,s8,s2
	add	a5,a5,s4
	li	a4,200
	sd	s8,40(sp)
	sd	s3,48(sp)
	sw	a4,56(sp)
	sd	s4,24(sp)
	sd	a5,32(sp)
	addi	s6,sp,24
	li	s8,94
	j	0x2e29a # str_find_aux+0xa2>
	ld	a5,32(sp)
	bleu	a5,s0,0x2e308 # str_find_aux+0x110>
	addi	s0,s0,1
	beq	s7,s8,0x2e308 # str_find_aux+0x110>
	mv	a1,s0
	mv	a2,s2
	mv	a0,s6
	sb	zero,60(sp)
	jal	ra,0x2ce58 # match>
	mv	s1,a0
	beqz	a0,0x2e28e # str_find_aux+0x96>
	beqz	s5,0x2e3d6 # str_find_aux+0x1de>
	sub	a1,s0,s4
	addi	a1,a1,1
	mv	a0,s3
	jal	ra,0x11e32 # lua_pushinteger>
	sub	a1,s1,s4
	mv	a0,s3
	jal	ra,0x11e32 # lua_pushinteger>
	lbu	s1,60(sp)
	ld	a0,48(sp)
	auipc	a2,0x17
	addi	a2,a2,-1164 # 0x44e40 # cat.0+0x388>
	mv	a1,s1
	mv	s2,s1
	jal	ra,0x2207c # luaL_checkstack>
	li	s0,0
	beqz	s1,0x2e2f2 # str_find_aux+0xfa>
	mv	a1,s0
	li	a3,0
	addiw	s0,s0,1
	li	a2,0
	mv	a0,s6
	jal	ra,0x2cb7c # push_onecapture>
	bne	s1,s0,0x2e2e0 # str_find_aux+0xe8>
	addiw	s2,s2,2
	j	0x2e310 # str_find_aux+0x118>
	addi	s1,a5,1
	add	a0,a0,s1
	addi	s1,a0,-1
	add	s0,s4,s1
	bleu	s1,a5,0x2e260 # str_find_aux+0x68>
	mv	a0,s3
	jal	ra,0x11e16 # lua_pushnil>
	li	s2,1
	ld	ra,664(sp)
	ld	s0,656(sp)
	ld	s1,648(sp)
	ld	s3,632(sp)
	ld	s4,624(sp)
	ld	s5,616(sp)
	ld	s6,608(sp)
	ld	s7,600(sp)
	ld	s8,592(sp)
	ld	s9,584(sp)
	mv	a0,s2
	ld	s2,640(sp)
	addi	sp,sp,672
	ret
	addi	s8,s8,-1
	addi	s2,s2,1
	sd	s8,16(sp)
	j	0x2e272 # str_find_aux+0x7a>
	li	a1,4
	mv	a0,s3
	jal	ra,0x119ee # lua_toboolean>
	ld	s8,16(sp)
	beqz	a0,0x2e3a8 # str_find_aux+0x1b0>
	beqz	s8,0x2e400 # str_find_aux+0x208>
	ld	a5,8(sp)
	sub	s1,a5,s1
	bltu	s1,s8,0x2e308 # str_find_aux+0x110>
	addi	s8,s8,-1
	sub	s5,s1,s8
	beq	s1,s8,0x2e308 # str_find_aux+0x110>
	lbu	s6,0(s2)
	addi	s2,s2,1
	j	0x2e38c # str_find_aux+0x194>
	sub	s0,s1,s0
	jal	ra,0x36306 # memcmp>
	sub	s5,s5,s0
	beqz	a0,0x2e406 # str_find_aux+0x20e>
	beqz	s5,0x2e308 # str_find_aux+0x110>
	mv	s0,s1
	mv	a2,s5
	mv	a1,s6
	mv	a0,s0
	jal	ra,0x36278 # memchr>
	mv	a5,a0
	addi	s1,a0,1
	mv	a2,s8
	mv	a1,s2
	mv	a0,s1
	mv	s7,a5
	bnez	a5,0x2e378 # str_find_aux+0x180>
	j	0x2e308 # str_find_aux+0x110>
	li	s7,0
	auipc	s9,0x17
	addi	s9,s9,-914 # 0x45018 # cat.0+0x560>
	j	0x2e3c0 # str_find_aux+0x1c8>
	jal	ra,0x369fa # strlen>
	addi	a0,a0,1
	add	s7,s7,a0
	bltu	s8,s7,0x2e358 # str_find_aux+0x160>
	add	s6,s2,s7
	mv	a1,s9
	mv	a0,s6
	jal	ra,0x36ac4 # strpbrk>
	mv	a5,a0
	mv	a0,s6
	beqz	a5,0x2e3b4 # str_find_aux+0x1bc>
	ld	a5,8(sp)
	j	0x2e266 # str_find_aux+0x6e>
	lbu	s3,60(sp)
	ld	a0,48(sp)
	bnez	s3,0x2e422 # str_find_aux+0x22a>
	beqz	s0,0x2e448 # str_find_aux+0x250>
	li	a1,1
	auipc	a2,0x17
	addi	a2,a2,-1444 # 0x44e40 # cat.0+0x388>
	jal	ra,0x2207c # luaL_checkstack>
	mv	a3,s1
	mv	a2,s0
	li	a1,0
	mv	a0,s6
	jal	ra,0x2cb7c # push_onecapture>
	li	s2,1
	j	0x2e310 # str_find_aux+0x118>
	beqz	s0,0x2e308 # str_find_aux+0x110>
	mv	s7,s0
	sub	s4,s7,s4
	addi	a1,s4,1
	mv	a0,s3
	jal	ra,0x11e32 # lua_pushinteger>
	ld	a1,16(sp)
	mv	a0,s3
	li	s2,2
	add	a1,a1,s4
	jal	ra,0x11e32 # lua_pushinteger>
	j	0x2e310 # str_find_aux+0x118>
	sext.w	s3,s3
	auipc	a2,0x17
	addi	a2,a2,-1508 # 0x44e40 # cat.0+0x388>
	mv	a1,s3
	jal	ra,0x2207c # luaL_checkstack>
	li	s2,0
	mv	a1,s2
	mv	a3,s1
	addiw	s2,s2,1
	mv	a2,s0
	mv	a0,s6
	jal	ra,0x2cb7c # push_onecapture>
	bne	s3,s2,0x2e434 # str_find_aux+0x23c>
	j	0x2e310 # str_find_aux+0x118>
	auipc	a2,0x17
	addi	a2,a2,-1544 # 0x44e40 # cat.0+0x388>
	li	a1,0
	jal	ra,0x2207c # luaL_checkstack>
	li	s2,0
	j	0x2e310 # str_find_aux+0x118>

str_match:
	li	a1,0
	j	0x2e1f8 # str_find_aux>

str_find:
	li	a1,1
	j	0x2e1f8 # str_find_aux>

luaopen_string:
	addi	sp,sp,-16
	auipc	a5,0x13
	fld	fa0,-292(a5) # 0x41340 # __clzdi2+0x478>
	li	a1,136
	sd	ra,8(sp)
	sd	s0,0(sp)
	mv	s0,a0
	jal	ra,0x230e8 # luaL_checkversion_>
	mv	a0,s0
	li	a2,17
	li	a1,0
	jal	ra,0x1228e # lua_createtable>
	mv	a0,s0
	li	a2,0
	auipc	a1,0x1e
	addi	a1,a1,1824 # 0x4cba8 # strlib>
	jal	ra,0x228d8 # luaL_setfuncs>
	mv	a0,s0
	li	a2,9
	li	a1,0
	jal	ra,0x1228e # lua_createtable>
	li	a2,0
	mv	a0,s0
	auipc	a1,0x1f
	addi	a1,a1,-2010 # 0x4ccc8 # stringmetamethods>
	jal	ra,0x228d8 # luaL_setfuncs>
	auipc	a1,0x13
	addi	a1,a1,-718 # 0x411e0 # __clzdi2+0x318>
	mv	a0,s0
	jal	ra,0x11e96 # lua_pushstring>
	mv	a0,s0
	li	a1,-2
	jal	ra,0x113c8 # lua_pushvalue>
	li	a1,-2
	mv	a0,s0
	jal	ra,0x1272e # lua_setmetatable>
	mv	a0,s0
	li	a1,-2
	jal	ra,0x1110c # lua_settop>
	mv	a0,s0
	li	a1,-2
	jal	ra,0x113c8 # lua_pushvalue>
	mv	a0,s0
	auipc	a2,0x14
	addi	a2,a2,914 # 0x42870 # dummynode_+0x90>
	li	a1,-2
	jal	ra,0x124d2 # lua_setfield>
	mv	a0,s0
	li	a1,-2
	jal	ra,0x1110c # lua_settop>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret

tunpack:
	addi	sp,sp,-48
	li	a1,2
	li	a2,1
	sd	s0,32(sp)
	sd	s1,24(sp)
	sd	ra,40(sp)
	sd	s2,16(sp)
	sd	s3,8(sp)
	mv	s1,a0
	jal	ra,0x222c8 # luaL_optinteger>
	mv	s0,a0
	li	a1,3
	mv	a0,s1
	jal	ra,0x1144a # lua_type>
	blez	a0,0x2e596 # tunpack+0x98>
	li	a1,3
	mv	a0,s1
	jal	ra,0x22270 # luaL_checkinteger>
	mv	s2,a0
	blt	s2,s0,0x2e5a4 # tunpack+0xa6>
	lui	a5,0x80000
	sub	a0,s2,s0
	xori	a5,a5,-2
	bleu	a0,a5,0x2e55a # tunpack+0x5c>
	ld	s0,32(sp)
	ld	ra,40(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	mv	a0,s1
	ld	s1,24(sp)
	auipc	a1,0x17
	addi	a1,a1,-396 # 0x453c0 # cat.0+0x908>
	addi	sp,sp,48
	j	0x21bdc # luaL_error>
	addiw	s3,a0,1
	mv	a1,s3
	mv	a0,s1
	jal	ra,0x11002 # lua_checkstack>
	beqz	a0,0x2e540 # tunpack+0x42>
	ble	s2,s0,0x2e57c # tunpack+0x7e>
	mv	a2,s0
	li	a1,1
	addi	s0,s0,1
	mv	a0,s1
	jal	ra,0x12108 # lua_geti>
	bne	s2,s0,0x2e56c # tunpack+0x6e>
	mv	a2,s2
	mv	a0,s1
	li	a1,1
	jal	ra,0x12108 # lua_geti>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	mv	a0,s3
	ld	s3,8(sp)
	addi	sp,sp,48
	ret
	li	a1,1
	mv	a0,s1
	jal	ra,0x226ec # luaL_len>
	mv	s2,a0
	ble	s0,s2,0x2e530 # tunpack+0x32>
	ld	ra,40(sp)
	ld	s0,32(sp)
	li	s3,0
	ld	s1,24(sp)
	ld	s2,16(sp)
	mv	a0,s3
	ld	s3,8(sp)
	addi	sp,sp,48
	ret

tpack:
	addi	sp,sp,-48
	sd	ra,40(sp)
	sd	s1,24(sp)
	sd	s3,8(sp)
	mv	s1,a0
	sd	s0,32(sp)
	sd	s2,16(sp)
	jal	ra,0x110fc # lua_gettop>
	mv	a1,a0
	mv	s3,a0
	li	a2,1
	mv	a0,s1
	jal	ra,0x1228e # lua_createtable>
	li	a2,1
	li	a1,1
	mv	a0,s1
	jal	ra,0x111ea # lua_rotate>
	blez	s3,0x2e604 # tpack+0x4e>
	addiw	a5,s3,-1
	slli	a5,a5,0x20
	addi	s2,s3,-1
	srli	a5,a5,0x20
	mv	s0,s3
	sub	s2,s2,a5
	mv	a2,s0
	li	a1,1
	addi	s0,s0,-1
	mv	a0,s1
	jal	ra,0x12536 # lua_seti>
	bne	s0,s2,0x2e5f4 # tpack+0x3e>
	mv	a1,s3
	mv	a0,s1
	jal	ra,0x11e32 # lua_pushinteger>
	mv	a0,s1
	auipc	a2,0x15
	addi	a2,a2,-1966 # 0x42e60 # udatatypename+0x498>
	li	a1,1
	jal	ra,0x124d2 # lua_setfield>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	li	a0,1
	addi	sp,sp,48
	ret

addfield:
	addi	sp,sp,-32
	sd	s1,8(sp)
	mv	s1,a1
	li	a1,1
	sd	s0,16(sp)
	sd	s2,0(sp)
	sd	ra,24(sp)
	mv	s0,a0
	mv	s2,a2
	jal	ra,0x12108 # lua_geti>
	li	a1,-1
	mv	a0,s0
	jal	ra,0x11656 # lua_isstring>
	beqz	a0,0x2e65c # addfield+0x30>
	ld	s0,16(sp)
	ld	ra,24(sp)
	ld	s2,0(sp)
	mv	a0,s1
	ld	s1,8(sp)
	addi	sp,sp,32
	j	0x22ac4 # luaL_addvalue>
	li	a1,-1
	mv	a0,s0
	jal	ra,0x1144a # lua_type>
	mv	a1,a0
	mv	a0,s0
	jal	ra,0x114d0 # lua_typename>
	mv	a2,a0
	mv	a3,s2
	mv	a0,s0
	auipc	a1,0x17
	addi	a1,a1,-658 # 0x453e0 # cat.0+0x928>
	jal	ra,0x21bdc # luaL_error>
	ld	s0,16(sp)
	ld	ra,24(sp)
	ld	s2,0(sp)
	mv	a0,s1
	ld	s1,8(sp)
	addi	sp,sp,32
	j	0x22ac4 # luaL_addvalue>

sort_comp:
	addi	sp,sp,-32
	sd	s2,0(sp)
	mv	s2,a1
	li	a1,2
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	ra,24(sp)
	mv	s0,a0
	mv	s1,a2
	jal	ra,0x1144a # lua_type>
	bnez	a0,0x2e6bc # sort_comp+0x2e>
	mv	a0,s0
	ld	s0,16(sp)
	ld	ra,24(sp)
	mv	a2,s1
	mv	a1,s2
	ld	s1,8(sp)
	ld	s2,0(sp)
	li	a3,1
	addi	sp,sp,32
	j	0x117ea # lua_compare>
	mv	a0,s0
	li	a1,2
	jal	ra,0x113c8 # lua_pushvalue>
	addiw	a1,s2,-1
	mv	a0,s0
	jal	ra,0x113c8 # lua_pushvalue>
	addiw	a1,s1,-2
	mv	a0,s0
	jal	ra,0x113c8 # lua_pushvalue>
	li	a4,0
	li	a3,0
	li	a2,1
	mv	a0,s0
	li	a1,2
	jal	ra,0x128c8 # lua_callk>
	li	a1,-1
	mv	a0,s0
	jal	ra,0x119ee # lua_toboolean>
	mv	s1,a0
	li	a1,-2
	mv	a0,s0
	jal	ra,0x1110c # lua_settop>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s2,0(sp)
	mv	a0,s1
	ld	s1,8(sp)
	addi	sp,sp,32
	ret

checktab.part.0:
	addi	sp,sp,-48
	sd	s0,32(sp)
	sd	s1,24(sp)
	sd	s2,16(sp)
	sd	ra,40(sp)
	sd	s3,8(sp)
	sd	s4,0(sp)
	mv	s1,a0
	mv	s2,a1
	mv	s0,a2
	jal	ra,0x122ea # lua_getmetatable>
	beqz	a0,0x2e784 # checktab.part.0+0x7e>
	andi	a5,s0,1
	li	s3,-2
	li	s4,1
	bnez	a5,0x2e76c # checktab.part.0+0x66>
	andi	a5,s0,2
	bnez	a5,0x2e79c # checktab.part.0+0x96>
	andi	s0,s0,4
	beqz	s0,0x2e756 # checktab.part.0+0x50>
	auipc	a1,0x14
	addi	a1,a1,412 # 0x428d0 # dummynode_+0xf0>
	mv	a0,s1
	jal	ra,0x11e96 # lua_pushstring>
	mv	a1,s3
	mv	a0,s1
	jal	ra,0x1219e # lua_rawget>
	beqz	a0,0x2e784 # checktab.part.0+0x7e>
	addiw	s3,s4,1
	not	s3,s3
	sext.w	s3,s3
	ld	s0,32(sp)
	ld	ra,40(sp)
	ld	s2,16(sp)
	ld	s4,0(sp)
	mv	a1,s3
	mv	a0,s1
	ld	s3,8(sp)
	ld	s1,24(sp)
	addi	sp,sp,48
	j	0x1110c # lua_settop>
	auipc	a1,0x14
	addi	a1,a1,260 # 0x42870 # dummynode_+0x90>
	mv	a0,s1
	jal	ra,0x11e96 # lua_pushstring>
	li	a1,-2
	mv	a0,s1
	jal	ra,0x1219e # lua_rawget>
	bnez	a0,0x2e7be # checktab.part.0+0xb8>
	ld	s0,32(sp)
	ld	ra,40(sp)
	ld	s3,8(sp)
	ld	s4,0(sp)
	mv	a1,s2
	mv	a0,s1
	ld	s2,16(sp)
	ld	s1,24(sp)
	li	a2,5
	addi	sp,sp,48
	j	0x220c4 # luaL_checktype>
	auipc	a1,0x14
	addi	a1,a1,284 # 0x428b8 # dummynode_+0xd8>
	mv	a0,s1
	jal	ra,0x11e96 # lua_pushstring>
	mv	a1,s3
	mv	a0,s1
	jal	ra,0x1219e # lua_rawget>
	beqz	a0,0x2e784 # checktab.part.0+0x7e>
	addiw	s4,s4,1
	not	s3,s4
	sext.w	s3,s3
	j	0x2e730 # checktab.part.0+0x2a>
	andi	a5,s0,2
	li	s3,-3
	li	s4,2
	beqz	a5,0x2e730 # checktab.part.0+0x2a>
	j	0x2e79c # checktab.part.0+0x96>

auxsort:
	addi	sp,sp,-112
	sd	s0,96(sp)
	sd	ra,104(sp)
	sd	s1,88(sp)
	sd	s2,80(sp)
	sd	s3,72(sp)
	sd	s4,64(sp)
	sd	s5,56(sp)
	sd	s6,48(sp)
	sd	s7,40(sp)
	sd	s8,32(sp)
	sd	s9,24(sp)
	sd	s10,16(sp)
	sd	s11,8(sp)
	subw	s0,a2,a1
	bleu	a2,a1,0x2e9ba # auxsort+0x1f0>
	mv	s7,a1
	mv	s8,a2
	mv	s1,a0
	mv	s9,a3
	auipc	s6,0x17
	addi	s6,s6,-990 # 0x45418 # cat.0+0x960>
	slli	s3,s7,0x20
	srli	s3,s3,0x20
	mv	a2,s3
	li	a1,1
	mv	a0,s1
	slli	s4,s8,0x20
	jal	ra,0x12108 # lua_geti>
	srli	s4,s4,0x20
	mv	a2,s4
	li	a1,1
	mv	a0,s1
	jal	ra,0x12108 # lua_geti>
	li	a2,-2
	li	a1,-1
	mv	a0,s1
	jal	ra,0x2e68e # sort_comp>
	beqz	a0,0x2ea10 # auxsort+0x246>
	mv	a0,s1
	mv	a2,s3
	li	a1,1
	jal	ra,0x12536 # lua_seti>
	mv	a2,s4
	li	a1,1
	mv	a0,s1
	jal	ra,0x12536 # lua_seti>
	sext.w	s2,s0
	li	a5,1
	beq	s2,a5,0x2e9ba # auxsort+0x1f0>
	li	a5,99
	bleu	s2,a5,0x2ea06 # auxsort+0x23c>
	beqz	s9,0x2ea06 # auxsort+0x23c>
	srliw	a5,s0,0x2
	slliw	s0,a5,0x1
	remuw	s0,s9,s0
	addw	a5,a5,s7
	addw	s0,s0,a5
	slli	s0,s0,0x20
	srli	s0,s0,0x20
	li	a1,1
	mv	a2,s0
	mv	a0,s1
	jal	ra,0x12108 # lua_geti>
	mv	a2,s3
	li	a1,1
	mv	a0,s1
	jal	ra,0x12108 # lua_geti>
	li	a2,-1
	li	a1,-2
	mv	a0,s1
	jal	ra,0x2e68e # sort_comp>
	beqz	a0,0x2ea1a # auxsort+0x250>
	mv	a0,s1
	mv	a2,s0
	li	a1,1
	jal	ra,0x12536 # lua_seti>
	mv	a2,s3
	li	a1,1
	mv	a0,s1
	jal	ra,0x12536 # lua_seti>
	li	a5,2
	beq	s2,a5,0x2e9ba # auxsort+0x1f0>
	mv	a2,s0
	li	a1,1
	mv	a0,s1
	jal	ra,0x12108 # lua_geti>
	addiw	s5,s8,-1
	li	a1,-1
	mv	a0,s1
	slli	s10,s5,0x20
	jal	ra,0x113c8 # lua_pushvalue>
	srli	s10,s10,0x20
	li	a1,1
	mv	a2,s10
	mv	a0,s1
	jal	ra,0x12108 # lua_geti>
	mv	a2,s0
	li	a1,1
	mv	a0,s1
	jal	ra,0x12536 # lua_seti>
	mv	a2,s10
	li	a1,1
	mv	a0,s1
	jal	ra,0x12536 # lua_seti>
	mv	s0,s5
	mv	s4,s7
	addiw	s2,s4,1
	slli	s3,s2,0x20
	srli	s3,s3,0x20
	mv	a2,s3
	li	a1,1
	mv	a0,s1
	jal	ra,0x12108 # lua_geti>
	li	a2,-2
	li	a1,-1
	mv	a0,s1
	jal	ra,0x2e68e # sort_comp>
	beqz	a0,0x2e92a # auxsort+0x160>
	beq	s5,s2,0x2e9fc # auxsort+0x232>
	li	a1,-2
	mv	a0,s1
	jal	ra,0x1110c # lua_settop>
	mv	s4,s2
	j	0x2e8ec # auxsort+0x122>
	bltu	s0,s2,0x2e966 # auxsort+0x19c>
	li	a1,-2
	mv	a0,s1
	jal	ra,0x1110c # lua_settop>
	addiw	s0,s0,-1
	slli	s11,s0,0x20
	srli	s11,s11,0x20
	mv	a2,s11
	li	a1,1
	mv	a0,s1
	jal	ra,0x12108 # lua_geti>
	li	a2,-1
	li	a1,-3
	mv	a0,s1
	jal	ra,0x2e68e # sort_comp>
	bnez	a0,0x2e91e # auxsort+0x154>
	bltu	s0,s2,0x2e970 # auxsort+0x1a6>
	mv	a0,s1
	mv	a2,s3
	li	a1,1
	jal	ra,0x12536 # lua_seti>
	mv	a2,s11
	li	a1,1
	mv	a0,s1
	jal	ra,0x12536 # lua_seti>
	mv	s4,s2
	j	0x2e8ec # auxsort+0x122>
	mv	a1,s6
	mv	a0,s1
	jal	ra,0x21bdc # luaL_error>
	j	0x2e922 # auxsort+0x158>
	li	a1,-2
	mv	a0,s1
	jal	ra,0x1110c # lua_settop>
	mv	a2,s10
	li	a1,1
	mv	a0,s1
	jal	ra,0x12536 # lua_seti>
	mv	a2,s3
	li	a1,1
	mv	a0,s1
	subw	s3,s2,s7
	subw	s2,s8,s2
	jal	ra,0x12536 # lua_seti>
	addiw	s0,s4,2
	bleu	s2,s3,0x2ea4e # auxsort+0x284>
	mv	a1,s7
	mv	a3,s9
	mv	a2,s4
	mv	a0,s1
	jal	ra,0x2e7ca # auxsort>
	mv	s7,s0
	subw	s0,s8,s7
	srliw	a5,s0,0x7
	bltu	s3,a5,0x2e9d8 # auxsort+0x20e>
	bltu	s7,s8,0x2e7fe # auxsort+0x34>
	ld	ra,104(sp)
	ld	s0,96(sp)
	ld	s1,88(sp)
	ld	s2,80(sp)
	ld	s3,72(sp)
	ld	s4,64(sp)
	ld	s5,56(sp)
	ld	s6,48(sp)
	ld	s7,40(sp)
	ld	s8,32(sp)
	ld	s9,24(sp)
	ld	s10,16(sp)
	ld	s11,8(sp)
	addi	sp,sp,112
	ret
	jal	ra,0x3717e # clock>
	mv	s2,a0
	srli	s9,s2,0x20
	li	a0,0
	jal	ra,0x37b34 # time>
	addw	s9,s2,s9
	addw	s9,a0,s9
	srli	a0,a0,0x20
	addw	s9,s9,a0
	bltu	s7,s8,0x2e7fe # auxsort+0x34>
	j	0x2e9ba # auxsort+0x1f0>
	mv	a1,s6
	mv	a0,s1
	jal	ra,0x21bdc # luaL_error>
	j	0x2e912 # auxsort+0x148>
	addw	s0,s8,s7
	srliw	s0,s0,0x1
	j	0x2e86c # auxsort+0xa2>
	li	a1,-3
	mv	a0,s1
	jal	ra,0x1110c # lua_settop>
	j	0x2e844 # auxsort+0x7a>
	li	a1,-2
	mv	a0,s1
	jal	ra,0x1110c # lua_settop>
	mv	a2,s4
	li	a1,1
	mv	a0,s1
	jal	ra,0x12108 # lua_geti>
	li	a2,-2
	li	a1,-1
	mv	a0,s1
	jal	ra,0x2e68e # sort_comp>
	beqz	a0,0x2ea60 # auxsort+0x296>
	mv	a0,s1
	mv	a2,s0
	li	a1,1
	jal	ra,0x12536 # lua_seti>
	mv	a2,s4
	li	a1,1
	mv	a0,s1
	jal	ra,0x12536 # lua_seti>
	j	0x2e8a6 # auxsort+0xdc>
	mv	a2,s8
	mv	a3,s9
	mv	a1,s0
	mv	a0,s1
	jal	ra,0x2e7ca # auxsort>
	mv	s3,s2
	mv	s8,s4
	j	0x2e9aa # auxsort+0x1e0>
	li	a1,-3
	mv	a0,s1
	jal	ra,0x1110c # lua_settop>
	j	0x2e8a6 # auxsort+0xdc>

sort:
	addi	sp,sp,-32
	li	a1,1
	sd	s0,16(sp)
	sd	ra,24(sp)
	sd	s1,8(sp)
	mv	s0,a0
	jal	ra,0x1144a # lua_type>
	li	a5,5
	beq	a0,a5,0x2ea8a # sort+0x20>
	li	a2,7
	li	a1,1
	mv	a0,s0
	jal	ra,0x2e706 # checktab.part.0>
	li	a1,1
	mv	a0,s0
	jal	ra,0x226ec # luaL_len>
	li	a5,1
	mv	s1,a0
	ble	a0,a5,0x2eac8 # sort+0x5e>
	lui	a5,0x80000
	xori	a5,a5,-2
	blt	a5,a0,0x2eae0 # sort+0x76>
	li	a1,2
	mv	a0,s0
	jal	ra,0x1144a # lua_type>
	bgtz	a0,0x2ead4 # sort+0x6a>
	li	a1,2
	mv	a0,s0
	jal	ra,0x1110c # lua_settop>
	li	a3,0
	sext.w	a2,s1
	li	a1,1
	mv	a0,s0
	jal	ra,0x2e7ca # auxsort>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	li	a0,0
	addi	sp,sp,32
	ret
	li	a2,6
	li	a1,2
	mv	a0,s0
	jal	ra,0x220c4 # luaL_checktype>
	j	0x2eab2 # sort+0x48>
	auipc	a2,0x17
	addi	a2,a2,-1696 # 0x45440 # cat.0+0x988>
	li	a1,1
	mv	a0,s0
	jal	ra,0x21c20 # luaL_argerror>
	j	0x2eaa6 # sort+0x3c>

tremove:
	addi	sp,sp,-48
	li	a1,1
	sd	s1,24(sp)
	sd	ra,40(sp)
	sd	s0,32(sp)
	sd	s2,16(sp)
	sd	s3,8(sp)
	mv	s1,a0
	jal	ra,0x1144a # lua_type>
	li	a5,5
	beq	a0,a5,0x2eb16 # tremove+0x24>
	li	a2,7
	li	a1,1
	mv	a0,s1
	jal	ra,0x2e706 # checktab.part.0>
	li	a1,1
	mv	a0,s1
	jal	ra,0x226ec # luaL_len>
	mv	a2,a0
	mv	s3,a0
	li	a1,2
	mv	a0,s1
	jal	ra,0x222c8 # luaL_optinteger>
	mv	s0,a0
	beq	s3,a0,0x2eb82 # tremove+0x90>
	addi	a5,a0,-1
	bltu	s3,a5,0x2eb8e # tremove+0x9c>
	mv	a2,s0
	li	a1,1
	mv	a0,s1
	jal	ra,0x12108 # lua_geti>
	ble	s3,s0,0x2eba0 # tremove+0xae>
	mv	s2,s0
	addi	s0,s0,1
	li	a1,1
	mv	a2,s0
	mv	a0,s1
	jal	ra,0x12108 # lua_geti>
	mv	a2,s2
	li	a1,1
	mv	a0,s1
	jal	ra,0x12536 # lua_seti>
	bne	s0,s3,0x2eb46 # tremove+0x54>
	mv	a0,s1
	jal	ra,0x11e16 # lua_pushnil>
	mv	a0,s1
	mv	a2,s3
	li	a1,1
	jal	ra,0x12536 # lua_seti>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	li	a0,1
	addi	sp,sp,48
	ret
	mv	a2,s3
	li	a1,1
	mv	a0,s1
	jal	ra,0x12108 # lua_geti>
	j	0x2eb62 # tremove+0x70>
	auipc	a2,0x17
	addi	a2,a2,-1622 # 0x45538 # cat.0+0xa80>
	li	a1,1
	mv	a0,s1
	jal	ra,0x21c20 # luaL_argerror>
	j	0x2eb38 # tremove+0x46>
	mv	s3,s0
	j	0x2eb62 # tremove+0x70>

tconcat:
	addi	sp,sp,-1120
	li	a1,1
	sd	s2,1088(sp)
	sd	ra,1112(sp)
	sd	s0,1104(sp)
	sd	s1,1096(sp)
	sd	s3,1080(sp)
	sd	s4,1072(sp)
	mv	s2,a0
	jal	ra,0x1144a # lua_type>
	li	a5,5
	beq	a0,a5,0x2ebd8 # tconcat+0x34>
	li	a2,5
	li	a1,1
	mv	a0,s2
	jal	ra,0x2e706 # checktab.part.0>
	li	a1,1
	mv	a0,s2
	jal	ra,0x226ec # luaL_len>
	mv	s1,a0
	addi	a3,sp,8
	auipc	a2,0x12
	addi	a2,a2,1532 # 0x411e0 # __clzdi2+0x318>
	li	a1,2
	mv	a0,s2
	jal	ra,0x2217c # luaL_optlstring>
	li	a2,1
	li	a1,3
	mv	s4,a0
	mv	a0,s2
	jal	ra,0x222c8 # luaL_optinteger>
	mv	s0,a0
	li	a1,4
	mv	a2,s1
	mv	a0,s2
	jal	ra,0x222c8 # luaL_optinteger>
	addi	s1,sp,16
	mv	s3,a0
	mv	a1,s1
	mv	a0,s2
	jal	ra,0x22348 # luaL_buffinit>
	ble	s3,s0,0x2ec42 # tconcat+0x9e>
	mv	a2,s0
	mv	a1,s1
	mv	a0,s2
	jal	ra,0x2e62c # addfield>
	ld	a2,8(sp)
	addi	s0,s0,1
	mv	a1,s4
	mv	a0,s1
	jal	ra,0x22b22 # luaL_addlstring>
	bne	s3,s0,0x2ec1c # tconcat+0x78>
	mv	a2,s0
	mv	a1,s1
	mv	a0,s2
	jal	ra,0x2e62c # addfield>
	j	0x2ec46 # tconcat+0xa2>
	beq	s0,s3,0x2ec36 # tconcat+0x92>
	mv	a0,s1
	jal	ra,0x222fe # luaL_pushresult>
	ld	ra,1112(sp)
	ld	s0,1104(sp)
	ld	s1,1096(sp)
	ld	s2,1088(sp)
	ld	s3,1080(sp)
	ld	s4,1072(sp)
	li	a0,1
	addi	sp,sp,1120
	ret

tinsert:
	addi	sp,sp,-48
	li	a1,1
	sd	s1,24(sp)
	sd	ra,40(sp)
	sd	s0,32(sp)
	sd	s2,16(sp)
	sd	s3,8(sp)
	mv	s1,a0
	jal	ra,0x1144a # lua_type>
	li	a5,5
	beq	a0,a5,0x2ec90 # tinsert+0x24>
	li	a2,7
	li	a1,1
	mv	a0,s1
	jal	ra,0x2e706 # checktab.part.0>
	li	a1,1
	mv	a0,s1
	jal	ra,0x226ec # luaL_len>
	mv	s0,a0
	mv	a0,s1
	jal	ra,0x110fc # lua_gettop>
	li	a5,2
	addi	s0,s0,1
	beq	a0,a5,0x2ece2 # tinsert+0x76>
	li	a5,3
	bne	a0,a5,0x2ecfc # tinsert+0x90>
	li	a1,2
	mv	a0,s1
	jal	ra,0x22270 # luaL_checkinteger>
	addi	a5,a0,-1
	mv	s3,a0
	bleu	s0,a5,0x2ed16 # tinsert+0xaa>
	ble	s0,s3,0x2ece0 # tinsert+0x74>
	mv	s2,s0
	addi	s0,s0,-1
	li	a1,1
	mv	a2,s0
	mv	a0,s1
	jal	ra,0x12108 # lua_geti>
	mv	a2,s2
	li	a1,1
	mv	a0,s1
	jal	ra,0x12536 # lua_seti>
	blt	s3,s0,0x2ecc4 # tinsert+0x58>
	mv	s0,s3
	mv	a0,s1
	mv	a2,s0
	li	a1,1
	jal	ra,0x12536 # lua_seti>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	li	a0,0
	addi	sp,sp,48
	ret
	ld	s0,32(sp)
	ld	ra,40(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	mv	a0,s1
	ld	s1,24(sp)
	auipc	a1,0x16
	addi	a1,a1,1864 # 0x45450 # cat.0+0x998>
	addi	sp,sp,48
	j	0x21bdc # luaL_error>
	auipc	a2,0x17
	addi	a2,a2,-2014 # 0x45538 # cat.0+0xa80>
	li	a1,2
	mv	a0,s1
	jal	ra,0x21c20 # luaL_argerror>
	j	0x2ecc0 # tinsert+0x54>

tmove:
	addi	sp,sp,-64
	li	a1,2
	sd	ra,56(sp)
	sd	s0,48(sp)
	sd	s1,40(sp)
	sd	s3,24(sp)
	mv	s1,a0
	sd	s4,16(sp)
	sd	s5,8(sp)
	sd	s2,32(sp)
	jal	ra,0x22270 # luaL_checkinteger>
	li	a1,3
	mv	s0,a0
	mv	a0,s1
	jal	ra,0x22270 # luaL_checkinteger>
	li	a1,4
	mv	s3,a0
	mv	a0,s1
	jal	ra,0x22270 # luaL_checkinteger>
	mv	s4,a0
	li	a1,5
	mv	a0,s1
	jal	ra,0x1144a # lua_type>
	li	s5,1
	blez	a0,0x2ed66 # tmove+0x3e>
	li	s5,5
	li	a1,1
	mv	a0,s1
	jal	ra,0x1144a # lua_type>
	li	a5,5
	beq	a0,a5,0x2ed7e # tmove+0x56>
	li	a2,1
	li	a1,1
	mv	a0,s1
	jal	ra,0x2e706 # checktab.part.0>
	mv	a1,s5
	mv	a0,s1
	jal	ra,0x1144a # lua_type>
	li	a5,5
	bne	a0,a5,0x2edea # tmove+0xc2>
	blt	s3,s0,0x2edce # tmove+0xa6>
	blez	s0,0x2ee30 # tmove+0x108>
	li	a5,-1
	sub	s2,s3,s0
	srli	a5,a5,0x1
	sub	a5,a5,s2
	blt	a5,s4,0x2ee4c # tmove+0x124>
	ble	s4,s3,0x2edf6 # tmove+0xce>
	addi	a5,s0,1
	add	s2,s2,a5
	sub	s4,s4,s0
	mv	a2,s0
	li	a1,1
	mv	a0,s1
	jal	ra,0x12108 # lua_geti>
	add	a2,s4,s0
	mv	a1,s5
	addi	s0,s0,1
	mv	a0,s1
	jal	ra,0x12536 # lua_seti>
	bne	s0,s2,0x2edb2 # tmove+0x8a>
	mv	a0,s1
	mv	a1,s5
	jal	ra,0x113c8 # lua_pushvalue>
	ld	ra,56(sp)
	ld	s0,48(sp)
	ld	s1,40(sp)
	ld	s2,32(sp)
	ld	s3,24(sp)
	ld	s4,16(sp)
	ld	s5,8(sp)
	li	a0,1
	addi	sp,sp,64
	ret
	li	a2,2
	mv	a1,s5
	mv	a0,s1
	jal	ra,0x2e706 # checktab.part.0>
	j	0x2ed8c # tmove+0x64>
	ble	s4,s0,0x2eda8 # tmove+0x80>
	li	a5,1
	beq	s5,a5,0x2ee0e # tmove+0xe6>
	li	a3,0
	mv	a2,s5
	li	a1,1
	mv	a0,s1
	jal	ra,0x117ea # lua_compare>
	beqz	a0,0x2eda8 # tmove+0x80>
	li	s3,-1
	add	a2,s0,s2
	li	a1,1
	mv	a0,s1
	jal	ra,0x12108 # lua_geti>
	add	a2,s4,s2
	mv	a1,s5
	addi	s2,s2,-1
	mv	a0,s1
	jal	ra,0x12536 # lua_seti>
	bne	s2,s3,0x2ee10 # tmove+0xe8>
	j	0x2edce # tmove+0xa6>
	li	a5,-3
	srli	a5,a5,0x1
	add	a5,a5,s0
	ble	s3,a5,0x2ed94 # tmove+0x6c>
	auipc	a2,0x16
	addi	a2,a2,1622 # 0x45490 # cat.0+0x9d8>
	li	a1,3
	mv	a0,s1
	jal	ra,0x21c20 # luaL_argerror>
	j	0x2ed94 # tmove+0x6c>
	auipc	a2,0x16
	addi	a2,a2,1580 # 0x45478 # cat.0+0x9c0>
	li	a1,4
	mv	a0,s1
	jal	ra,0x21c20 # luaL_argerror>
	ble	s4,s3,0x2edf6 # tmove+0xce>
	j	0x2eda8 # tmove+0x80>

luaopen_table:
	addi	sp,sp,-16
	auipc	a5,0x12
	fld	fa0,1244(a5) # 0x41340 # __clzdi2+0x478>
	li	a1,136
	sd	ra,8(sp)
	sd	s0,0(sp)
	mv	s0,a0
	jal	ra,0x230e8 # luaL_checkversion_>
	mv	a0,s0
	li	a2,7
	li	a1,0
	jal	ra,0x1228e # lua_createtable>
	mv	a0,s0
	li	a2,0
	auipc	a1,0x1e
	addi	a1,a1,-288 # 0x4cd68 # tab_funcs>
	jal	ra,0x228d8 # luaL_setfuncs>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret

utf8_decode:
	lbu	a5,0(a0)
	li	a4,127
	mv	t1,a0
	sext.w	a6,a5
	bleu	a5,a4,0x2ef4a # utf8_decode+0xac>
	andi	a5,a5,64
	beqz	a5,0x2eef2 # utf8_decode+0x54>
	li	a3,1
	li	a4,0
	li	t4,128
	j	0x2eeca # utf8_decode+0x2c>
	sext.w	a4,a4
	sext.w	a6,a7
	addi	a3,a3,1
	beqz	a0,0x2eef6 # utf8_decode+0x58>
	add	a5,t1,a3
	lbu	a5,0(a5)
	slliw	a7,a6,0x1
	slliw	a4,a4,0x6
	andi	a6,a5,63
	andi	a5,a5,192
	or	a4,a6,a4
	andi	a0,a7,64
	sext.w	t3,a3
	beq	a5,t4,0x2eec0 # utf8_decode+0x22>
	li	a0,0
	ret
	slliw	a5,t3,0x2
	addw	a5,a5,t3
	andi	a7,a7,127
	sllw	a7,a7,a5
	or	a4,a4,a7
	li	a5,5
	sext.w	a6,a4
	blt	a5,t3,0x2eef2 # utf8_decode+0x54>
	bltz	a6,0x2eef2 # utf8_decode+0x54>
	slli	a4,t3,0x2
	auipc	a5,0x16
	addi	a5,a5,1660 # 0x45598 # limits.0>
	add	a5,a5,a4
	lw	a5,0(a5)
	bltu	a6,a5,0x2eef2 # utf8_decode+0x54>
	add	t1,t1,t3
	beqz	a2,0x2ef4a # utf8_decode+0xac>
	lui	a5,0x110
	bleu	a5,a6,0x2eef4 # utf8_decode+0x56>
	lui	a5,0xffff3
	addiw	a5,a5,-2048
	addw	a5,a5,a6
	li	a4,2047
	bleu	a5,a4,0x2eef4 # utf8_decode+0x56>
	beqz	a1,0x2ef50 # utf8_decode+0xb2>
	sw	a6,0(a1)
	addi	a0,t1,1
	ret

iter_codes:
	addi	sp,sp,-32
	li	a1,2
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	mv	s0,a0
	jal	ra,0x119ee # lua_toboolean>
	li	a1,1
	mv	s1,a0
	li	a2,0
	mv	a0,s0
	jal	ra,0x22138 # luaL_checklstring>
	auipc	a1,0x0
	addi	a1,a1,236 # 0x2f05e # iter_auxstrict>
	beqz	s1,0x2ef84 # iter_codes+0x2e>
	auipc	a1,0x0
	addi	a1,a1,230 # 0x2f062 # iter_auxlax>
	li	a2,0
	mv	a0,s0
	jal	ra,0x11f4a # lua_pushcclosure>
	mv	a0,s0
	li	a1,1
	jal	ra,0x113c8 # lua_pushvalue>
	mv	a0,s0
	li	a1,0
	jal	ra,0x11e32 # lua_pushinteger>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	li	a0,3
	addi	sp,sp,32
	ret

iter_aux:
	addi	sp,sp,-64
	sd	s3,24(sp)
	addi	a2,sp,8
	mv	s3,a1
	li	a1,1
	sd	ra,56(sp)
	sd	s1,40(sp)
	sd	s2,32(sp)
	sd	s0,48(sp)
	mv	s2,a0
	jal	ra,0x22138 # luaL_checklstring>
	mv	s1,a0
	li	a2,0
	li	a1,2
	mv	a0,s2
	jal	ra,0x11952 # lua_tointegerx>
	addi	a5,a0,-1
	bltz	a5,0x2f03c # iter_aux+0x94>
	ld	a3,8(sp)
	mv	s0,a0
	li	a0,0
	ble	a3,a5,0x2f02e # iter_aux+0x86>
	add	a5,s1,s0
	lbu	a5,0(a5) # 0xffffffffffff3000 # __BSS_END__+0xfffffffffffa4c78>
	li	a4,128
	andi	a5,a5,192
	bne	a5,a4,0x2f004 # iter_aux+0x5c>
	addi	s0,s0,1
	add	a5,s1,s0
	lbu	a5,0(a5)
	andi	a5,a5,192
	beq	a5,a4,0x2eff2 # iter_aux+0x4a>
	li	a0,0
	ble	a3,s0,0x2f02e # iter_aux+0x86>
	mv	a2,s3
	addi	a1,sp,4
	add	a0,s1,s0
	jal	ra,0x2ee9e # utf8_decode>
	beqz	a0,0x2f042 # iter_aux+0x9a>
	addi	a1,s0,1
	mv	a0,s2
	jal	ra,0x11e32 # lua_pushinteger>
	lwu	a1,4(sp)
	mv	a0,s2
	jal	ra,0x11e32 # lua_pushinteger>
	li	a0,2
	ld	ra,56(sp)
	ld	s0,48(sp)
	ld	s1,40(sp)
	ld	s2,32(sp)
	ld	s3,24(sp)
	addi	sp,sp,64
	ret
	ld	a3,8(sp)
	li	s0,0
	j	0x2f004 # iter_aux+0x5c>
	mv	a0,s2
	auipc	a1,0x16
	addi	a1,a1,1164 # 0x454d0 # cat.0+0xa18>
	jal	ra,0x21bdc # luaL_error>
	ld	ra,56(sp)
	ld	s0,48(sp)
	ld	s1,40(sp)
	ld	s2,32(sp)
	ld	s3,24(sp)
	addi	sp,sp,64
	ret

iter_auxstrict:
	li	a1,1
	j	0x2efa8 # iter_aux>

iter_auxlax:
	li	a1,0
	j	0x2efa8 # iter_aux>

byteoffset:
	addi	sp,sp,-64
	addi	a2,sp,8
	li	a1,1
	sd	ra,56(sp)
	sd	s1,40(sp)
	sd	s2,32(sp)
	sd	s3,24(sp)
	mv	s2,a0
	sd	s0,48(sp)
	jal	ra,0x22138 # luaL_checklstring>
	mv	s1,a0
	li	a1,2
	mv	a0,s2
	jal	ra,0x22270 # luaL_checkinteger>
	mv	s3,a0
	li	a2,1
	bgez	a0,0x2f092 # byteoffset+0x2c>
	ld	a2,8(sp)
	addi	a2,a2,1
	li	a1,3
	mv	a0,s2
	jal	ra,0x222c8 # luaL_optinteger>
	ld	a5,8(sp)
	mv	s0,a0
	bgez	a0,0x2f0ca # byteoffset+0x64>
	neg	a4,a0
	bleu	a4,a5,0x2f0c4 # byteoffset+0x5e>
	auipc	a2,0x16
	addi	a2,a2,1166 # 0x45538 # cat.0+0xa80>
	li	a1,3
	mv	a0,s2
	jal	ra,0x21c20 # luaL_argerror>
	beqz	s3,0x2f19a # byteoffset+0x134>
	mv	a5,s1
	li	s0,0
	j	0x2f0dc # byteoffset+0x76>
	add	s0,a5,a0
	addi	s0,s0,1
	blez	s0,0x2f1ae # byteoffset+0x148>
	addi	s0,s0,-1
	blt	a5,s0,0x2f1ae # byteoffset+0x148>
	beqz	s3,0x2f14c # byteoffset+0xe6>
	add	a5,s1,s0
	lbu	a5,0(a5)
	li	a4,128
	andi	a5,a5,192
	beq	a5,a4,0x2f19e # byteoffset+0x138>
	li	a4,128
	bltz	s3,0x2f12a # byteoffset+0xc4>
	addi	s3,s3,-1
	beqz	s3,0x2f16a # byteoffset+0x104>
	ld	a2,8(sp)
	li	a3,128
	ble	a2,s0,0x2f184 # byteoffset+0x11e>
	mv	a4,s0
	addi	s0,s0,1
	add	a5,s1,s0
	lbu	a5,0(a5)
	andi	a5,a5,192
	beq	a5,a3,0x2f104 # byteoffset+0x9e>
	addi	s3,s3,-1
	bnez	s3,0x2f100 # byteoffset+0x9a>
	addi	a1,a4,2
	j	0x2f16e # byteoffset+0x108>
	addi	s3,s3,1
	beqz	s3,0x2f16a # byteoffset+0x104>
	bgtz	s0,0x2f13c # byteoffset+0xd6>
	j	0x2f184 # byteoffset+0x11e>
	lbu	a5,0(a5)
	andi	a5,a5,192
	bne	a5,a4,0x2f124 # byteoffset+0xbe>
	addi	s0,s0,-1
	add	a5,s1,s0
	bnez	s0,0x2f130 # byteoffset+0xca>
	addi	s3,s3,1
	bnez	s3,0x2f12a # byteoffset+0xc4>
	j	0x2f16a # byteoffset+0x104>
	li	a4,128
	bgtz	s0,0x2f15a # byteoffset+0xf4>
	j	0x2f16a # byteoffset+0x104>
	addi	s0,s0,-1
	beqz	s0,0x2f19a # byteoffset+0x134>
	add	a5,s1,s0
	lbu	a5,0(a5)
	andi	a5,a5,192
	beq	a5,a4,0x2f156 # byteoffset+0xf0>
	addi	a1,s0,1
	mv	a0,s2
	jal	ra,0x11e32 # lua_pushinteger>
	li	a0,1
	ld	ra,56(sp)
	ld	s0,48(sp)
	ld	s1,40(sp)
	ld	s2,32(sp)
	ld	s3,24(sp)
	addi	sp,sp,64
	ret
	mv	a0,s2
	jal	ra,0x11e16 # lua_pushnil>
	ld	ra,56(sp)
	ld	s0,48(sp)
	ld	s1,40(sp)
	ld	s2,32(sp)
	ld	s3,24(sp)
	li	a0,1
	addi	sp,sp,64
	ret
	li	a1,1
	j	0x2f16e # byteoffset+0x108>
	auipc	a1,0x16
	addi	a1,a1,842 # 0x454e8 # cat.0+0xa30>
	mv	a0,s2
	jal	ra,0x21bdc # luaL_error>
	j	0x2f176 # byteoffset+0x110>
	auipc	a2,0x16
	addi	a2,a2,906 # 0x45538 # cat.0+0xa80>
	li	a1,3
	mv	a0,s2
	jal	ra,0x21c20 # luaL_argerror>
	bnez	s3,0x2f0d8 # byteoffset+0x72>
	j	0x2f14c # byteoffset+0xe6>

utflen:
	addi	sp,sp,-80
	addi	a2,sp,8
	li	a1,1
	sd	ra,72(sp)
	sd	s0,64(sp)
	sd	s1,56(sp)
	sd	s4,32(sp)
	sd	s2,48(sp)
	mv	s4,a0
	sd	s3,40(sp)
	sd	s5,24(sp)
	jal	ra,0x22138 # luaL_checklstring>
	mv	s1,a0
	li	a2,1
	li	a1,2
	mv	a0,s4
	jal	ra,0x222c8 # luaL_optinteger>
	mv	s0,a0
	bgez	a0,0x2f276 # utflen+0xb2>
	ld	a5,8(sp)
	neg	a4,a0
	bleu	a4,a5,0x2f270 # utflen+0xac>
	li	a2,-1
	li	a1,3
	mv	a0,s4
	jal	ra,0x222c8 # luaL_optinteger>
	mv	s5,a0
	bgez	a0,0x2f2d2 # utflen+0x10e>
	ld	a5,8(sp)
	neg	a4,a0
	li	a1,4
	mv	a0,s4
	bltu	a5,a4,0x2f306 # utflen+0x142>
	add	s5,s5,a5
	jal	ra,0x119ee # lua_toboolean>
	mv	s3,a0
	li	s0,0
	auipc	a2,0x16
	addi	a2,a2,782 # 0x45530 # cat.0+0xa78>
	li	a1,2
	mv	a0,s4
	jal	ra,0x21c20 # luaL_argerror>
	ld	a5,8(sp)
	ble	a5,s5,0x2f2f4 # utflen+0x130>
	blt	s5,s0,0x2f2b4 # utflen+0xf0>
	seqz	s3,s3
	li	s2,0
	j	0x2f24e # utflen+0x8a>
	sub	s0,a0,s1
	addi	s2,s2,1
	blt	s5,s0,0x2f2b6 # utflen+0xf2>
	add	a0,s1,s0
	mv	a2,s3
	li	a1,0
	jal	ra,0x2ee9e # utf8_decode>
	bnez	a0,0x2f244 # utflen+0x80>
	mv	a0,s4
	jal	ra,0x11e16 # lua_pushnil>
	mv	a0,s4
	addi	a1,s0,1
	jal	ra,0x11e32 # lua_pushinteger>
	li	a0,2
	j	0x2f2c0 # utflen+0xfc>
	add	s0,a5,a0
	addi	s0,s0,1
	li	a2,-1
	li	a1,3
	mv	a0,s4
	jal	ra,0x222c8 # luaL_optinteger>
	addi	s5,a0,-1
	bgez	a0,0x2f298 # utflen+0xd4>
	ld	a4,8(sp)
	neg	a5,a0
	li	s5,-1
	bltu	a4,a5,0x2f298 # utflen+0xd4>
	add	s5,a4,a0
	li	a1,4
	mv	a0,s4
	jal	ra,0x119ee # lua_toboolean>
	mv	s3,a0
	blez	s0,0x2f222 # utflen+0x5e>
	ld	a5,8(sp)
	addi	s0,s0,-1
	blt	a5,s0,0x2f222 # utflen+0x5e>
	blt	s5,a5,0x2f238 # utflen+0x74>
	j	0x2f2f4 # utflen+0x130>
	li	s2,0
	mv	a0,s4
	mv	a1,s2
	jal	ra,0x11e32 # lua_pushinteger>
	li	a0,1
	ld	ra,72(sp)
	ld	s0,64(sp)
	ld	s1,56(sp)
	ld	s2,48(sp)
	ld	s3,40(sp)
	ld	s4,32(sp)
	ld	s5,24(sp)
	addi	sp,sp,80
	ret
	li	a1,4
	mv	a0,s4
	jal	ra,0x119ee # lua_toboolean>
	mv	s3,a0
	auipc	a2,0x16
	addi	a2,a2,596 # 0x45530 # cat.0+0xa78>
	li	a1,2
	mv	a0,s4
	jal	ra,0x21c20 # luaL_argerror>
	ld	a5,8(sp)
	addi	s5,s5,-1
	li	s0,0
	j	0x2f234 # utflen+0x70>
	auipc	a2,0x16
	addi	a2,a2,540 # 0x45510 # cat.0+0xa58>
	li	a1,3
	mv	a0,s4
	jal	ra,0x21c20 # luaL_argerror>
	j	0x2f238 # utflen+0x74>
	jal	ra,0x119ee # lua_toboolean>
	mv	s3,a0
	li	s5,-1
	li	s0,0
	j	0x2f222 # utflen+0x5e>

codepoint:
	addi	sp,sp,-80
	addi	a2,sp,8
	li	a1,1
	sd	ra,72(sp)
	sd	s0,64(sp)
	sd	s1,56(sp)
	sd	s3,40(sp)
	sd	s2,48(sp)
	mv	s3,a0
	sd	s4,32(sp)
	sd	s5,24(sp)
	jal	ra,0x22138 # luaL_checklstring>
	mv	s0,a0
	li	a2,1
	li	a1,2
	mv	a0,s3
	jal	ra,0x222c8 # luaL_optinteger>
	mv	s1,a0
	bgez	a0,0x2f3ec # codepoint+0xda>
	ld	a0,8(sp)
	neg	a5,s1
	bleu	a5,a0,0x2f3e8 # codepoint+0xd6>
	li	a2,0
	li	a1,3
	mv	a0,s3
	jal	ra,0x222c8 # luaL_optinteger>
	mv	s2,a0
	bgez	a0,0x2f432 # codepoint+0x120>
	ld	a0,8(sp)
	neg	a5,s2
	li	s1,0
	bltu	a0,a5,0x2f466 # codepoint+0x154>
	add	s2,s2,a0
	addi	s2,s2,1
	li	a1,4
	mv	a0,s3
	jal	ra,0x119ee # lua_toboolean>
	mv	s4,a0
	blez	s1,0x2f43e # codepoint+0x12c>
	ld	a5,8(sp)
	blt	a5,s2,0x2f454 # codepoint+0x142>
	blt	s2,s1,0x2f42e # codepoint+0x11c>
	lui	a5,0x80000
	sub	a4,s2,s1
	xori	a5,a5,-2
	blt	a5,a4,0x2f40a # codepoint+0xf8>
	subw	a1,s2,s1
	addi	s1,s1,-1
	auipc	a2,0x16
	addi	a2,a2,-1414 # 0x44e10 # cat.0+0x358>
	addiw	a1,a1,1
	mv	a0,s3
	add	s2,s2,s0
	add	s0,s0,s1
	jal	ra,0x2207c # luaL_checkstack>
	bleu	s2,s0,0x2f42e # codepoint+0x11c>
	seqz	s4,s4
	li	s1,0
	addi	s5,sp,4
	j	0x2f3c8 # codepoint+0xb6>
	lwu	a1,4(sp)
	addiw	s1,s1,1
	jal	ra,0x11e32 # lua_pushinteger>
	bleu	s2,s0,0x2f41a # codepoint+0x108>
	mv	a0,s0
	mv	a2,s4
	mv	a1,s5
	jal	ra,0x2ee9e # utf8_decode>
	mv	s0,a0
	mv	a0,s3
	bnez	s0,0x2f3ba # codepoint+0xa8>
	auipc	a1,0x16
	addi	a1,a1,248 # 0x454d0 # cat.0+0xa18>
	jal	ra,0x21bdc # luaL_error>
	mv	s1,a0
	j	0x2f41a # codepoint+0x108>
	add	s1,s1,a0
	addi	s1,s1,1
	mv	a2,s1
	li	a1,3
	mv	a0,s3
	jal	ra,0x222c8 # luaL_optinteger>
	mv	s2,a0
	bgez	a0,0x2f368 # codepoint+0x56>
	ld	a0,8(sp)
	neg	a5,s2
	bleu	a5,a0,0x2f364 # codepoint+0x52>
	li	s2,0
	j	0x2f368 # codepoint+0x56>
	auipc	a1,0x16
	addi	a1,a1,-1530 # 0x44e10 # cat.0+0x358>
	mv	a0,s3
	jal	ra,0x21bdc # luaL_error>
	mv	s1,a0
	ld	ra,72(sp)
	ld	s0,64(sp)
	ld	s2,48(sp)
	ld	s3,40(sp)
	ld	s4,32(sp)
	ld	s5,24(sp)
	mv	a0,s1
	ld	s1,56(sp)
	addi	sp,sp,80
	ret
	li	s1,0
	j	0x2f41a # codepoint+0x108>
	li	a1,4
	mv	a0,s3
	jal	ra,0x119ee # lua_toboolean>
	mv	s4,a0
	li	s1,0
	auipc	a2,0x16
	addi	a2,a2,274 # 0x45550 # cat.0+0xa98>
	li	a1,2
	mv	a0,s3
	jal	ra,0x21c20 # luaL_argerror>
	ld	a5,8(sp)
	ble	s2,a5,0x2f37c # codepoint+0x6a>
	auipc	a2,0x16
	addi	a2,a2,252 # 0x45550 # cat.0+0xa98>
	li	a1,3
	mv	a0,s3
	jal	ra,0x21c20 # luaL_argerror>
	j	0x2f37c # codepoint+0x6a>
	li	a1,4
	mv	a0,s3
	jal	ra,0x119ee # lua_toboolean>
	mv	s4,a0
	li	s2,0
	j	0x2f43e # codepoint+0x12c>

utfchar:
	addi	sp,sp,-1136
	sd	s2,1104(sp)
	sd	ra,1128(sp)
	sd	s0,1120(sp)
	sd	s1,1112(sp)
	sd	s3,1096(sp)
	sd	s4,1088(sp)
	sd	s5,1080(sp)
	sd	s6,1072(sp)
	sd	s7,1064(sp)
	mv	s2,a0
	jal	ra,0x110fc # lua_gettop>
	li	a5,1
	beq	a0,a5,0x2f534 # utfchar+0xc0>
	mv	s4,sp
	mv	s3,a0
	mv	a1,s4
	mv	a0,s2
	jal	ra,0x22348 # luaL_buffinit>
	blez	s3,0x2f4f6 # utfchar+0x82>
	lui	s5,0x80000
	li	s1,1
	not	s5,s5
	auipc	s7,0x15
	addi	s7,s7,1702 # 0x44b68 # cat.0+0xb0>
	auipc	s6,0x16
	addi	s6,s6,150 # 0x45560 # cat.0+0xaa8>
	mv	a1,s1
	mv	a0,s2
	jal	ra,0x22270 # luaL_checkinteger>
	mv	s0,a0
	bltu	s5,a0,0x2f528 # utfchar+0xb4>
	mv	a2,s0
	mv	a1,s6
	mv	a0,s2
	jal	ra,0x11f0c # lua_pushfstring>
	addiw	s1,s1,1
	mv	a0,s4
	jal	ra,0x22ac4 # luaL_addvalue>
	ble	s1,s3,0x2f4d2 # utfchar+0x5e>
	mv	a0,s4
	jal	ra,0x222fe # luaL_pushresult>
	ld	ra,1128(sp)
	ld	s0,1120(sp)
	ld	s1,1112(sp)
	ld	s2,1104(sp)
	ld	s3,1096(sp)
	ld	s4,1088(sp)
	ld	s5,1080(sp)
	ld	s6,1072(sp)
	ld	s7,1064(sp)
	li	a0,1
	addi	sp,sp,1136
	ret
	mv	a1,s1
	mv	a2,s7
	mv	a0,s2
	jal	ra,0x21c20 # luaL_argerror>
	j	0x2f4e0 # utfchar+0x6c>
	li	a1,1
	mv	a0,s2
	jal	ra,0x22270 # luaL_checkinteger>
	lui	a5,0x80000
	not	a5,a5
	mv	s0,a0
	bltu	a5,a0,0x2f55c # utfchar+0xe8>
	mv	a2,s0
	auipc	a1,0x16
	addi	a1,a1,20 # 0x45560 # cat.0+0xaa8>
	mv	a0,s2
	jal	ra,0x11f0c # lua_pushfstring>
	j	0x2f4fc # utfchar+0x88>
	auipc	a2,0x15
	addi	a2,a2,1548 # 0x44b68 # cat.0+0xb0>
	li	a1,1
	mv	a0,s2
	jal	ra,0x21c20 # luaL_argerror>
	j	0x2f54a # utfchar+0xd6>

luaopen_utf8:
	addi	sp,sp,-16
	auipc	a5,0x12
	fld	fa0,-560(a5) # 0x41340 # __clzdi2+0x478>
	li	a1,136
	sd	ra,8(sp)
	sd	s0,0(sp)
	mv	s0,a0
	jal	ra,0x230e8 # luaL_checkversion_>
	mv	a0,s0
	li	a2,6
	li	a1,0
	jal	ra,0x1228e # lua_createtable>
	mv	a0,s0
	li	a2,0
	auipc	a1,0x1e
	addi	a1,a1,-1964 # 0x4cde8 # funcs>
	jal	ra,0x228d8 # luaL_setfuncs>
	li	a2,14
	auipc	a1,0x16
	addi	a1,a1,14 # 0x455b0 # limits.0+0x18>
	mv	a0,s0
	jal	ra,0x11e42 # lua_pushlstring>
	mv	a0,s0
	auipc	a2,0x16
	addi	a2,a2,-74 # 0x45568 # cat.0+0xab0>
	li	a1,-2
	jal	ra,0x124d2 # lua_setfield>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,1
	addi	sp,sp,16
	ret

isalnum:
	ori	a5,a0,32
	addiw	a5,a5,-97
	li	a4,25
	bleu	a5,a4,0x2f5e2 # isalnum+0x18>
	addiw	a0,a0,-48
	sltiu	a0,a0,10
	ret
	li	a0,1
	ret

__isalnum_l:
	j	0x2f5ca # isalnum>

iscntrl:
	li	a5,31
	bleu	a0,a5,0x2f5fa # iscntrl+0x10>
	addi	a0,a0,-127
	seqz	a0,a0
	ret
	li	a0,1
	ret

__iscntrl_l:
	j	0x2f5ea # iscntrl>

ispunct:
	addiw	a5,a0,-33
	li	a4,93
	bleu	a5,a4,0x2f612 # ispunct+0x10>
	li	a0,0
	ret
	addi	sp,sp,-16
	sd	ra,8(sp)
	jal	ra,0x2f5ca # isalnum>
	ld	ra,8(sp)
	seqz	a0,a0
	addi	sp,sp,16
	ret

__ispunct_l:
	j	0x2f602 # ispunct>

isxdigit:
	addiw	a4,a0,-48
	li	a5,9
	bleu	a4,a5,0x2f640 # isxdigit+0x18>
	ori	a0,a0,32
	addiw	a0,a0,-97
	sltiu	a0,a0,6
	ret
	li	a0,1
	ret

__isxdigit_l:
	j	0x2f628 # isxdigit>

tolower:
	addiw	a4,a0,-65
	li	a5,25
	bleu	a4,a5,0x2f654 # tolower+0xc>
	ret
	ori	a0,a0,32
	ret

__tolower_l:
	j	0x2f648 # tolower>

toupper:
	addiw	a4,a0,-97
	li	a5,25
	bleu	a4,a5,0x2f66a # toupper+0xc>
	ret
	andi	a0,a0,95
	ret

__toupper_l:
	j	0x2f65e # toupper>

_init:
	ret

dummy1:
	ret

__init_libc:
	addi	sp,sp,-384
	sd	s2,352(sp)
	addi	s2,sp,48
	sd	s0,368(sp)
	sd	s1,360(sp)
	mv	s0,a0
	mv	s1,a1
	li	a2,304
	li	a1,0
	mv	a0,s2
	sd	ra,376(sp)
	jal	ra,0x3683a # memset>
	ld	a5,0(s0)
	auipc	a4,0x1e
	ld	a4,-840(a4) # 0x4d350 # _GLOBAL_OFFSET_TABLE_+0x48>
	sd	s0,0(a4)
	beqz	a5,0x2f7e2 # __init_libc+0x16a>
	addi	a3,s0,8
	li	a5,0
	ld	a2,0(a3)
	mv	a4,a5
	addi	a3,a3,8
	addi	a5,a5,1
	bnez	a2,0x2f6ac # __init_libc+0x34>
	addi	a4,a4,2
	slli	a4,a4,0x3
	add	a4,a4,s0
	ld	a5,0(a4)
	addi	s0,gp,-1928 # 0x4d400 # __libc>
	sd	a4,8(s0)
	li	a3,37
	addi	a4,a4,8
	beqz	a5,0x2f7dc # __init_libc+0x164>
	bltu	a3,a5,0x2f6de # __init_libc+0x66>
	ld	a2,0(a4)
	slli	a5,a5,0x3
	addi	a1,sp,352
	add	a5,a5,a1
	sd	a2,-304(a5)
	ld	a5,8(a4)
	addi	a4,a4,16
	bnez	a5,0x2f6ce # __init_libc+0x56>
	ld	a3,176(sp)
	ld	a4,304(sp)
	ld	a5,96(sp)
	sd	a3,-1936(gp) # 0x4d3f8 # __hwcap>
	beqz	a4,0x2f6f4 # __init_libc+0x7c>
	sd	a4,-1944(gp) # 0x4d3f0 # __sysinfo>
	sd	a5,48(s0)
	beqz	s1,0x2f7ba # __init_libc+0x142>
	auipc	a5,0x1e
	ld	a5,-808(a5) # 0x4d3d0 # _GLOBAL_OFFSET_TABLE_+0xc8>
	auipc	a3,0x1e
	ld	a3,-912(a3) # 0x4d370 # _GLOBAL_OFFSET_TABLE_+0x68>
	sd	s1,0(a5)
	sd	s1,0(a3)
	lbu	a5,0(s1)
	addi	a1,s1,1
	li	a4,47
	beqz	a5,0x2f728 # __init_libc+0xb0>
	bne	a5,a4,0x2f720 # __init_libc+0xa8>
	sd	a1,0(a3)
	lbu	a5,0(a1)
	addi	a1,a1,1
	bnez	a5,0x2f71a # __init_libc+0xa2>
	mv	a0,s2
	jal	ra,0x37d88 # __init_tls>
	ld	a0,248(sp)
	jal	ra,0x37ece # __init_ssp>
	ld	a4,136(sp)
	ld	a5,144(sp)
	beq	a4,a5,0x2f7ac # __init_libc+0x134>
	sd	zero,32(sp)
	li	a5,1
	sd	zero,40(sp)
	sw	a5,32(sp)
	li	a5,2
	sw	a5,40(sp)
	addi	a5,sp,24
	sd	zero,24(sp)
	sd	zero,8(sp)
	sd	zero,16(sp)
	li	a7,73
	mv	a0,a5
	li	a1,3
	addi	a2,sp,8
	li	a3,0
	li	a4,8
	ecall
	sext.w	a0,a0
	bltz	a0,0x2f7a6 # __init_libc+0x12e>
	lui	a2,0x8
	auipc	a1,0x16
	addi	a1,a1,-426 # 0x455c0 # limits.0+0x28>
	addi	a2,a2,2
	lhu	a4,6(a5)
	andi	a4,a4,32
	beqz	a4,0x2f78e # __init_libc+0x116>
	li	a7,56
	li	a0,-100
	ecall
	bltz	a0,0x2f7a6 # __init_libc+0x12e>
	addi	a5,a5,8
	bne	s2,a5,0x2f774 # __init_libc+0xfc>
	li	a5,1
	sb	a5,2(s0)
	ld	ra,376(sp)
	ld	s0,368(sp)
	ld	s1,360(sp)
	ld	s2,352(sp)
	addi	sp,sp,384
	ret
	sb	zero,0(zero) # 0x0 # exit-0x10120>
	ebreak
	ld	a4,152(sp)
	ld	a5,160(sp)
	bne	a4,a5,0x2f73c # __init_libc+0xc4>
	ld	a5,232(sp)
	bnez	a5,0x2f73c # __init_libc+0xc4>
	j	0x2f79a # __init_libc+0x122>
	ld	a1,296(sp)
	bnez	a1,0x2f7e6 # __init_libc+0x16e>
	auipc	a5,0x12
	addi	a5,a5,-1502 # 0x411e0 # __clzdi2+0x318>
	auipc	a4,0x1e
	ld	a4,-1014(a4) # 0x4d3d0 # _GLOBAL_OFFSET_TABLE_+0xc8>
	sd	a5,0(a4)
	auipc	a4,0x1e
	ld	a4,-1120(a4) # 0x4d370 # _GLOBAL_OFFSET_TABLE_+0x68>
	sd	a5,0(a4)
	j	0x2f728 # __init_libc+0xb0>
	sd	zero,-1936(gp) # 0x4d3f8 # __hwcap>
	j	0x2f6f4 # __init_libc+0x7c>
	li	a4,8
	j	0x2f6ba # __init_libc+0x42>
	mv	s1,a1
	j	0x2f6f8 # __init_libc+0x80>

__libc_start_init:
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	s1,8(sp)
	auipc	s0,0x1e
	ld	s0,-1064(s0) # 0x4d3c8 # _GLOBAL_OFFSET_TABLE_+0xc0>
	auipc	s1,0x1e
	ld	s1,-1120(s1) # 0x4d398 # _GLOBAL_OFFSET_TABLE_+0x90>
	auipc	t1,0x1e
	ld	t1,-1192(t1) # 0x4d358 # _GLOBAL_OFFSET_TABLE_+0x50>
	sd	ra,24(sp)
	jalr	t1
	bleu	s1,s0,0x2f81a # __libc_start_init+0x30>
	ld	a5,0(s0)
	addi	s0,s0,8
	jalr	a5
	bltu	s0,s1,0x2f810 # __libc_start_init+0x26>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret

libc_start_main_stage2:
	addi	sp,sp,-48
	sd	s0,32(sp)
	addi	s0,a1,1
	slli	s0,s0,0x3
	sd	ra,40(sp)
	sd	s1,24(sp)
	sd	s2,16(sp)
	mv	s1,a1
	mv	s2,a2
	sd	s3,8(sp)
	add	s0,s0,a2
	mv	s3,a0
	jal	ra,0x2f7ea # __libc_start_init>
	mv	a2,s0
	mv	a1,s2
	mv	a0,s1
	jalr	s3
	jal	ra,0x10120 # exit>

__libc_start_main:
	addi	sp,sp,-32
	sd	s1,8(sp)
	mv	s1,a1
	addi	a5,s1,1
	ld	a1,0(a2)
	slli	a5,a5,0x3
	sd	s2,0(sp)
	mv	s2,a0
	add	a0,a2,a5
	sd	s0,16(sp)
	sd	ra,24(sp)
	mv	s0,a2
	jal	ra,0x2f678 # __init_libc>
	mv	a2,s0
	auipc	a5,0x0
	addi	a5,a5,-76 # 0x2f824 # libc_start_main_stage2>
	ld	s0,16(sp)
	ld	ra,24(sp)
	mv	a1,s1
	mv	a0,s2
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	jr	a5

getenv:
	addi	sp,sp,-48
	li	a1,61
	sd	s1,24(sp)
	sd	s2,16(sp)
	mv	s1,a0
	sd	ra,40(sp)
	sd	s0,32(sp)
	sd	s3,8(sp)
	jal	ra,0x3692c # __strchrnul>
	sub	s2,a0,s1
	beq	a0,s1,0x2f8de # getenv+0x56>
	lbu	a5,0(a0)
	bnez	a5,0x2f8de # getenv+0x56>
	auipc	a5,0x1e
	ld	a5,-1372(a5) # 0x4d350 # _GLOBAL_OFFSET_TABLE_+0x48>
	ld	s0,0(a5)
	beqz	s0,0x2f8de # getenv+0x56>
	ld	a1,0(s0)
	beqz	a1,0x2f8de # getenv+0x56>
	li	s3,61
	mv	a2,s2
	mv	a0,s1
	jal	ra,0x36a58 # strncmp>
	bnez	a0,0x2f8d8 # getenv+0x50>
	ld	a0,0(s0)
	add	a5,a0,s2
	lbu	a5,0(a5)
	beq	a5,s3,0x2f8ee # getenv+0x66>
	ld	a1,8(s0)
	addi	s0,s0,8
	bnez	a1,0x2f8c0 # getenv+0x38>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	li	a0,0
	addi	sp,sp,48
	ret
	ld	ra,40(sp)
	ld	s0,32(sp)
	addi	s2,s2,1
	ld	s1,24(sp)
	ld	s3,8(sp)
	add	a0,a0,s2
	ld	s2,16(sp)
	addi	sp,sp,48
	ret

__errno_location:
	mv	a0,tp
	addi	a0,a0,-164
	ret

__strerror_l:
	li	a5,131
	bltu	a5,a0,0x2f92e # __strerror_l+0x26>
	auipc	a5,0x16
	addi	a5,a5,-832 # 0x455d0 # errmsgidx>
	slli	a0,a0,0x1
	add	a0,a0,a5
	lhu	a5,0(a0)
	ld	a1,40(a1)
	auipc	a0,0x16
	addi	a0,a0,-586 # 0x456d8 # errmsgstr>
	add	a0,a0,a5
	j	0x2f9e6 # __lctrans>
	ld	a1,40(a1)
	auipc	a0,0x16
	addi	a0,a0,-600 # 0x456d8 # errmsgstr>
	j	0x2f9e6 # __lctrans>

strerror:
	mv	a5,tp
	ld	a1,-48(a5)
	j	0x2f908 # __strerror_l>

abort:
	auipc	a5,0x1e
	ld	a5,-1572(a5) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	ld	a5,0(a5)
	addi	sp,sp,-64
	li	a0,6
	sd	ra,56(sp)
	sd	a5,40(sp)
	jal	ra,0x331e8 # raise>
	li	a0,0
	jal	ra,0x331a6 # __block_all_sigs>
	addi	a0,gp,-1952 # 0x4d3e8 # __abort_lock>
	jal	ra,0x36ffe # __lock>
	li	a7,134
	sd	zero,8(sp)
	sd	zero,16(sp)
	sd	zero,24(sp)
	sd	zero,32(sp)
	li	a0,6
	addi	a1,sp,8
	li	a2,0
	li	a3,8
	ecall
	mv	a5,tp
	li	a7,130
	lw	a0,-168(a5)
	li	a1,6
	ecall
	li	a5,32
	sd	a5,0(sp)
	li	a7,135
	li	a0,1
	mv	a1,sp
	ecall
	sb	zero,0(zero) # 0x0 # exit-0x10120>
	ebreak

__funcs_on_exit:
	ret

__libc_exit_fini:
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	ra,24(sp)
	auipc	s0,0x1e
	ld	s0,-1642(s0) # 0x4d348 # _GLOBAL_OFFSET_TABLE_+0x40>
	auipc	s1,0x1e
	ld	s1,-1594(s1) # 0x4d380 # _GLOBAL_OFFSET_TABLE_+0x78>
	bleu	s0,s1,0x2f9d2 # __libc_exit_fini+0x28>
	ld	a5,-8(s0)
	addi	s0,s0,-8
	jalr	a5
	bltu	s1,s0,0x2f9c6 # __libc_exit_fini+0x1c>
	ld	s0,16(sp)
	ld	ra,24(sp)
	ld	s1,8(sp)
	auipc	t1,0x1e
	ld	t1,-1592(t1) # 0x4d3a0 # _GLOBAL_OFFSET_TABLE_+0x98>
	addi	sp,sp,32
	jr	t1

dummy:
	ret

__lctrans:
	j	0x395f2 # __lctrans_impl>

__lctrans_cur:
	mv	a5,tp
	ld	a5,-48(a5)
	ld	a1,40(a5)
	j	0x395f2 # __lctrans_impl>

localeconv:
	auipc	a0,0x1d
	addi	a0,a0,1122 # 0x4ce58 # posix_lconv>
	ret

setlocale:
	addi	sp,sp,-176
	sd	s3,136(sp)
	auipc	s3,0x1e
	ld	s3,-1764(s3) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	ld	a5,0(s3)
	sd	s1,152(sp)
	sd	s4,128(sp)
	sd	ra,168(sp)
	sd	s0,160(sp)
	sd	s2,144(sp)
	sd	s5,120(sp)
	sd	s6,112(sp)
	sd	s7,104(sp)
	sd	s8,96(sp)
	sd	s9,88(sp)
	sd	a5,72(sp)
	li	s4,6
	li	s1,0
	bltu	s4,a0,0x2fa72 # setlocale+0x72>
	mv	s0,a0
	addi	a0,gp,1792 # 0x4e288 # __locale_lock>
	mv	s2,a1
	jal	ra,0x36ffe # __lock>
	beq	s0,s4,0x2fa98 # setlocale+0x98>
	beqz	s2,0x2fb68 # setlocale+0x168>
	mv	a1,s2
	mv	a0,s0
	jal	ra,0x3961c # __get_locale>
	li	a5,-1
	beq	a0,a5,0x2fa6a # setlocale+0x6a>
	addi	s0,s0,6
	slli	s0,s0,0x3
	addi	a5,gp,-1928 # 0x4d400 # __libc>
	add	s0,s0,a5
	sd	a0,8(s0)
	auipc	s1,0x12
	addi	s1,s1,-1380 # 0x414f8 # lua_ident+0x160>
	beqz	a0,0x2fa6a # setlocale+0x6a>
	addi	s1,a0,16
	addi	a0,gp,1792 # 0x4e288 # __locale_lock>
	jal	ra,0x370d4 # __unlock>
	ld	a4,72(sp)
	ld	a5,0(s3)
	bne	a4,a5,0x2fbb8 # setlocale+0x1b8>
	ld	ra,168(sp)
	ld	s0,160(sp)
	ld	s2,144(sp)
	ld	s3,136(sp)
	ld	s4,128(sp)
	ld	s5,120(sp)
	ld	s6,112(sp)
	ld	s7,104(sp)
	ld	s8,96(sp)
	ld	s9,88(sp)
	mv	a0,s1
	ld	s1,152(sp)
	addi	sp,sp,176
	ret
	addi	s9,gp,-1928 # 0x4d400 # __libc>
	beqz	s2,0x2fb10 # setlocale+0x110>
	auipc	a5,0x16
	ld	a5,856(a5) # 0x45df8 # errmsgstr+0x720>
	sd	a5,48(sp)
	sd	zero,56(sp)
	sd	zero,64(sp)
	mv	s4,sp
	li	s1,0
	addi	s5,sp,48
	li	s7,23
	li	s6,-1
	li	s8,6
	li	a1,59
	mv	a0,s2
	jal	ra,0x3692c # __strchrnul>
	sub	s9,a0,s2
	mv	s0,a0
	ble	s9,s7,0x2fb76 # setlocale+0x176>
	mv	a1,s5
	mv	a0,s1
	jal	ra,0x3961c # __get_locale>
	beq	a0,s6,0x2fbac # setlocale+0x1ac>
	sd	a0,0(s4)
	addiw	s1,s1,1
	addi	s4,s4,8
	bne	s1,s8,0x2fabc # setlocale+0xbc>
	ld	a5,0(sp)
	addi	s9,gp,-1928 # 0x4d400 # __libc>
	sd	a5,56(s9)
	ld	a5,8(sp)
	sd	a5,64(s9)
	ld	a5,16(sp)
	sd	a5,72(s9)
	ld	a5,24(sp)
	sd	a5,80(s9)
	ld	a5,32(sp)
	sd	a5,88(s9)
	ld	a5,40(sp)
	sd	a5,96(s9)
	addi	s4,gp,-1928 # 0x4d400 # __libc>
	addi	s7,gp,-1880 # 0x4d430 # __libc+0x30>
	li	s8,0
	addi	s2,gp,-1808 # 0x4d478 # buf>
	auipc	s6,0x12
	addi	s6,s6,-1574 # 0x414f8 # lua_ident+0x160>
	li	s5,59
	j	0x2fb58 # setlocale+0x158>
	mv	s1,s6
	beqz	a5,0x2fb34 # setlocale+0x134>
	addi	s1,a5,16
	mv	a0,s1
	jal	ra,0x369fa # strlen>
	mv	s0,a0
	mv	a2,s0
	mv	a0,s2
	mv	a1,s1
	jal	ra,0x3632a # memcpy>
	add	a5,s2,s0
	sb	s5,0(a5)
	addi	s0,s0,1
	addi	s4,s4,8
	add	s2,s2,s0
	beq	s7,s4,0x2fb94 # setlocale+0x194>
	ld	a5,56(s4)
	ld	a4,56(s9)
	bne	a4,a5,0x2fb2c # setlocale+0x12c>
	addiw	s8,s8,1
	j	0x2fb2c # setlocale+0x12c>
	addi	s0,s0,6
	slli	s0,s0,0x3
	addi	a5,gp,-1928 # 0x4d400 # __libc>
	add	s0,s0,a5
	ld	a0,8(s0)
	j	0x2fa5c # setlocale+0x5c>
	mv	a2,s9
	mv	a1,s2
	mv	a0,s5
	jal	ra,0x3632a # memcpy>
	addi	a5,sp,80
	add	s9,s9,a5
	sb	zero,-32(s9)
	lbu	a5,0(s0)
	beqz	a5,0x2fad0 # setlocale+0xd0>
	addi	s2,s0,1
	j	0x2fad0 # setlocale+0xd0>
	addi	a0,gp,1792 # 0x4e288 # __locale_lock>
	sb	zero,-1(s2)
	jal	ra,0x370d4 # __unlock>
	li	a5,6
	beq	s8,a5,0x2fa72 # setlocale+0x72>
	addi	s1,gp,-1808 # 0x4d478 # buf>
	j	0x2fa72 # setlocale+0x72>
	addi	a0,gp,1792 # 0x4e288 # __locale_lock>
	jal	ra,0x370d4 # __unlock>
	li	s1,0
	j	0x2fa72 # setlocale+0x72>
	jal	ra,0x37f18 # __stack_chk_fail>

__strcoll_l:
	j	0x369dc # strcmp>

strcoll:
	mv	a5,tp
	ld	a2,-48(a5)
	j	0x2fbbc # __strcoll_l>

free:
	j	0x2ff98 # __libc_free>

get_meta:
	andi	a5,a0,15
	bnez	a5,0x2fbe8 # get_meta+0x1c>
	lbu	a5,-3(a0)
	lbu	a3,-4(a0)
	lhu	a2,-2(a0)
	andi	a1,a5,31
	mv	a4,a1
	beqz	a3,0x2fbf8 # get_meta+0x2c>
	beqz	a2,0x2fbee # get_meta+0x22>
	sb	zero,0(zero) # 0x0 # exit-0x10120>
	ebreak
	lw	a2,-8(a0)
	lui	a5,0x10
	blt	a2,a5,0x2fbe8 # get_meta+0x1c>
	slliw	a5,a2,0x4
	sub	a5,a0,a5
	ld	a0,-16(a5) # 0xfff0 # exit-0x130>
	addi	a5,a5,-16
	ld	a3,16(a0)
	bne	a3,a5,0x2fbe8 # get_meta+0x1c>
	ld	a5,32(a0)
	andi	a3,a5,31
	blt	a3,a4,0x2fbe8 # get_meta+0x1c>
	lw	a3,24(a0)
	srlw	a3,a3,a4
	andi	a3,a3,1
	bnez	a3,0x2fbe8 # get_meta+0x1c>
	lw	a3,28(a0)
	srlw	a3,a3,a4
	andi	a3,a3,1
	bnez	a3,0x2fbe8 # get_meta+0x1c>
	lui	a3,0xfffff
	and	a3,a3,a0
	ld	a6,0(a3) # 0xfffffffffffff000 # __BSS_END__+0xfffffffffffb0c78>
	auipc	a3,0x1e
	ld	a3,-1834(a3) # 0x4d508 # __malloc_context>
	bne	a6,a3,0x2fbe8 # get_meta+0x1c>
	srli	a3,a5,0x6
	andi	a3,a3,63
	li	a6,47
	bltu	a6,a3,0x2fc84 # get_meta+0xb8>
	slli	a3,a3,0x1
	auipc	a6,0x16
	addi	a6,a6,448 # 0x45e10 # __malloc_size_classes>
	add	a3,a3,a6
	lhu	a3,0(a3)
	mulw	a4,a3,a4
	blt	a2,a4,0x2fbe8 # get_meta+0x1c>
	addiw	a4,a1,1
	mulw	a4,a4,a3
	ble	a4,a2,0x2fbe8 # get_meta+0x1c>
	lui	a4,0xfffff
	and	a4,a4,a5
	beqz	a4,0x2fc82 # get_meta+0xb6>
	srli	a5,a5,0xc
	slli	a5,a5,0x8
	addi	a5,a5,-1
	bltu	a5,a2,0x2fbe8 # get_meta+0x1c>
	ret
	lui	a4,0x1
	addi	a4,a4,-64 # 0xfc0 # exit-0xf160>
	and	a3,a5,a4
	beq	a3,a4,0x2fc72 # get_meta+0xa6>
	sb	zero,0(zero) # 0x0 # exit-0x10120>
	ebreak

nontrivial_free:
	lw	a5,28(a0)
	lw	a4,24(a0)
	ld	a3,32(a0)
	addi	sp,sp,-64
	or	a4,a4,a5
	li	a5,1
	sllw	a1,a5,a1
	andi	t1,a3,31
	li	a5,2
	srli	a2,a3,0x6
	sllw	a5,a5,t1
	sd	s0,48(sp)
	andi	t3,a2,63
	mv	s0,a0
	sd	ra,56(sp)
	addw	a0,a1,a4
	sd	s1,40(sp)
	sd	s2,32(sp)
	addiw	a5,a5,-1
	mv	a2,t3
	sext.w	a4,a4
	beq	a0,a5,0x2fd40 # nontrivial_free+0xa8>
	bnez	a4,0x2fd0c # nontrivial_free+0x74>
	li	a5,47
	blt	a5,a2,0x2fcf4 # nontrivial_free+0x5c>
	addi	a2,a2,10
	slli	a2,a2,0x3
	auipc	a5,0x1e
	addi	a5,a5,-2008 # 0x4d508 # __malloc_context>
	add	a5,a5,a2
	ld	a4,0(a5)
	beq	a4,s0,0x2fd0c # nontrivial_free+0x74>
	ld	a3,8(s0)
	beqz	a3,0x2fcfa # nontrivial_free+0x62>
	sb	zero,0(zero) # 0x0 # exit-0x10120>
	ebreak
	ld	a3,0(s0)
	bnez	a3,0x2fcf4 # nontrivial_free+0x5c>
	beqz	a4,0x2fdd0 # nontrivial_free+0x138>
	ld	a5,0(a4)
	sd	a4,8(s0)
	sd	a5,0(s0)
	sd	s0,8(a5)
	ld	a5,8(s0)
	sd	s0,0(a5)
	addi	a2,s0,28
	lw	a5,28(s0)
	sext.w	a5,a5
	or	a3,a1,a5
	lr.w.aqrl	a4,(a2)
	bne	a4,a5,0x2fd26 # nontrivial_free+0x8e>
	sc.w.aqrl	a0,a3,(a2)
	bnez	a0,0x2fd18 # nontrivial_free+0x80>
	sext.w	a4,a4
	bne	a5,a4,0x2fd10 # nontrivial_free+0x78>
	ld	ra,56(sp)
	ld	s0,48(sp)
	sd	zero,0(sp)
	sd	zero,8(sp)
	ld	a0,0(sp)
	ld	a1,8(sp)
	ld	s1,40(sp)
	ld	s2,32(sp)
	addi	sp,sp,64
	ret
	andi	a5,a3,32
	beqz	a5,0x2fcd2 # nontrivial_free+0x3a>
	li	a5,47
	ld	a0,8(s0)
	blt	a5,t3,0x2fea0 # nontrivial_free+0x208>
	lui	a5,0xfffff
	andi	a7,a3,31
	and	a5,a5,a3
	bnez	t1,0x2fe2e # nontrivial_free+0x196>
	beqz	a5,0x2fd7e # nontrivial_free+0xe6>
	slli	t4,t3,0x1
	auipc	a6,0x16
	addi	a6,a6,174 # 0x45e10 # __malloc_size_classes>
	add	a6,a6,t4
	lhu	a6,0(a6)
	srli	a3,a3,0xc
	slli	a3,a3,0xc
	slliw	a6,a6,0x4
	addi	a3,a3,-16
	bleu	a6,a3,0x2fe30 # nontrivial_free+0x198>
	bnez	a0,0x2fdd8 # nontrivial_free+0x140>
	auipc	s1,0x1d
	addi	s1,s1,1928 # 0x4d508 # __malloc_context>
	addi	a4,a2,58 # 0x803a # exit-0x80e6>
	slli	a4,a4,0x3
	add	a4,a4,s1
	ld	a3,0(a4)
	addi	t1,t1,1
	sub	a3,a3,t1
	sd	a3,0(a4)
	ld	s2,16(s0)
	beqz	a5,0x2fe4a # nontrivial_free+0x1b2>
	lbu	a5,912(s1)
	li	a4,255
	beq	a5,a4,0x2ff04 # nontrivial_free+0x26c>
	addiw	a5,a5,1
	sb	a5,912(s1)
	addiw	t3,t3,-7
	li	a5,31
	bltu	a5,t3,0x2fdc8 # nontrivial_free+0x130>
	lbu	a4,912(s1)
	addiw	a2,a2,-7
	add	a5,s1,a2
	sb	a4,848(a5) # 0xfffffffffffff350 # __BSS_END__+0xfffffffffffb0fc8>
	ld	a5,32(s0)
	srli	a5,a5,0xc
	slli	a5,a5,0xc
	j	0x2fe68 # nontrivial_free+0x1d0>
	sd	s0,8(s0)
	sd	s0,0(s0)
	sd	s0,0(a5)
	j	0x2fd0c # nontrivial_free+0x74>
	addi	a2,a2,10
	auipc	s1,0x1d
	addi	s1,s1,1838 # 0x4d508 # __malloc_context>
	slli	a5,a2,0x3
	add	a5,a5,s1
	ld	a3,0(a5)
	beq	s0,a0,0x2ff2c # nontrivial_free+0x294>
	ld	a4,0(s0)
	slli	a5,a2,0x3
	add	a5,a5,s1
	sd	a0,8(a4)
	sd	a4,0(a0)
	ld	a4,0(a5)
	beq	s0,a4,0x2ff1e # nontrivial_free+0x286>
	sd	zero,8(s0)
	sd	zero,0(s0)
	beq	s0,a3,0x2ff40 # nontrivial_free+0x2a8>
	ld	t1,32(s0)
	lui	a5,0xfffff
	li	a4,47
	srli	t3,t1,0x6
	andi	a2,t3,63
	mv	t3,a2
	and	a5,a5,t1
	blt	a4,a2,0x2fd9a # nontrivial_free+0x102>
	andi	t1,t1,31
	j	0x2fd88 # nontrivial_free+0xf0>
	beqz	a5,0x2fd7e # nontrivial_free+0xe6>
	beq	s0,a0,0x2feb2 # nontrivial_free+0x21a>
	beqz	a0,0x2fd80 # nontrivial_free+0xe8>
	addi	a2,a2,10
	auipc	s1,0x1d
	addi	s1,s1,1744 # 0x4d508 # __malloc_context>
	slli	a5,a2,0x3
	add	a5,a5,s1
	ld	a3,0(a5)
	j	0x2fdee # nontrivial_free+0x156>
	mv	a0,s2
	jal	ra,0x2fbcc # get_meta>
	lbu	a1,-3(s2)
	ld	a5,16(s0)
	andi	a1,a1,31
	sd	zero,0(a5) # 0xfffffffffffff000 # __BSS_END__+0xfffffffffffb0c78>
	jal	ra,0x2fc98 # nontrivial_free>
	mv	s2,a0
	mv	a5,a1
	sd	a0,16(sp)
	sd	a1,24(sp)
	sd	zero,0(s0)
	sd	zero,8(s0)
	sd	zero,16(s0)
	ld	a4,16(s1)
	sd	zero,24(s0)
	sd	zero,32(s0)
	beqz	a4,0x2ff38 # nontrivial_free+0x2a0>
	ld	a3,0(a4)
	sd	a4,8(s0)
	sd	a3,0(s0)
	sd	s0,8(a3)
	ld	a4,8(s0)
	sd	s0,0(a4)
	ld	ra,56(sp)
	ld	s0,48(sp)
	sd	s2,0(sp)
	sd	a5,8(sp)
	ld	a0,0(sp)
	ld	a1,8(sp)
	ld	s1,40(sp)
	ld	s2,32(sp)
	addi	sp,sp,64
	ret
	bnez	a0,0x2fcf4 # nontrivial_free+0x5c>
	lui	a5,0xfffff
	and	a5,a5,a3
	auipc	s1,0x1d
	addi	s1,s1,1632 # 0x4d508 # __malloc_context>
	j	0x2fd9a # nontrivial_free+0x102>
	addiw	t3,t3,-7
	li	a5,31
	auipc	s1,0x1d
	addi	s1,s1,1618 # 0x4d508 # __malloc_context>
	bltu	a5,t3,0x2ff22 # nontrivial_free+0x28a>
	addiw	a5,a2,-7
	add	a5,a5,s1
	lbu	a3,880(a5) # 0xfffffffffffff370 # __BSS_END__+0xfffffffffffb0fe8>
	li	a5,99
	bleu	a3,a5,0x2ff22 # nontrivial_free+0x28a>
	addi	a5,a2,58
	slli	a5,a5,0x3
	add	a5,a5,s1
	addiw	a7,a7,1
	ld	a3,0(a5)
	slli	a5,a7,0x3
	add	a5,a5,a7
	bltu	a3,a5,0x2fef0 # nontrivial_free+0x258>
	li	a5,19
	ble	a7,a5,0x2ff22 # nontrivial_free+0x28a>
	bnez	a4,0x2fd0c # nontrivial_free+0x74>
	addi	a2,a2,10
	slli	a5,a2,0x3
	add	s1,s1,a5
	ld	a5,0(s1)
	bne	a0,a5,0x2fcf4 # nontrivial_free+0x5c>
	j	0x2fd0c # nontrivial_free+0x74>
	addi	a5,gp,-816 # 0x4d858 # __malloc_context+0x350>
	addi	a4,gp,-784 # 0x4d878 # __malloc_context+0x370>
	sb	zero,0(a5)
	addi	a5,a5,1
	bne	a4,a5,0x2ff0c # nontrivial_free+0x274>
	li	a5,1
	sb	a5,912(s1)
	j	0x2fdb2 # nontrivial_free+0x11a>
	sd	a0,0(a5)
	j	0x2fe00 # nontrivial_free+0x168>
	addi	a2,a2,10
	slli	a5,a2,0x3
	add	a5,a5,s1
	ld	a3,0(a5)
	slli	a5,a2,0x3
	add	a5,a5,s1
	sd	zero,0(a5)
	j	0x2fe00 # nontrivial_free+0x168>
	sd	s0,8(s0)
	sd	s0,0(s0)
	sd	s0,16(s1)
	j	0x2fe8c # nontrivial_free+0x1f4>
	slli	a2,a2,0x3
	add	a5,s1,a2
	ld	a1,0(a5)
	beqz	a1,0x2fe0c # nontrivial_free+0x174>
	lw	a5,24(a1)
	sext.w	a5,a5
	bnez	a5,0x2fcf4 # nontrivial_free+0x5c>
	ld	a5,16(a1)
	li	a0,2
	addi	a2,a1,28
	ld	a5,8(a5)
	sllw	a0,a0,a5
	addiw	t1,a0,-1
	negw	a0,a0
	lw	a5,28(a1)
	sext.w	a4,a5
	mv	a5,a4
	mv	a6,a4
	and	a4,a4,a0
	lr.w.aqrl	a3,(a2)
	bne	a3,a5,0x2ff86 # nontrivial_free+0x2ee>
	sc.w.aqrl	a7,a4,(a2)
	bnez	a7,0x2ff76 # nontrivial_free+0x2de>
	sext.w	a4,a3
	bne	a5,a4,0x2ff6a # nontrivial_free+0x2d2>
	and	a5,t1,a6
	sext.w	a5,a5
	sw	a5,24(a1)
	j	0x2fe0c # nontrivial_free+0x174>

__libc_free:
	beqz	a0,0x300e0 # __libc_free+0x148>
	addi	sp,sp,-64
	sd	s0,48(sp)
	sd	s1,40(sp)
	sd	s2,32(sp)
	mv	s1,a0
	sd	ra,56(sp)
	sd	s3,24(sp)
	sd	s4,16(sp)
	jal	ra,0x2fbcc # get_meta>
	ld	a2,32(a0)
	lbu	a5,-3(s1)
	mv	s0,a0
	andi	a4,a2,31
	andi	a0,a5,31
	mv	s2,a0
	bnez	a4,0x2fffc # __libc_free+0x64>
	lui	a4,0xfffff
	and	a4,a4,a2
	beqz	a4,0x2fffc # __libc_free+0x64>
	srli	a1,a2,0xc
	slli	a1,a1,0xc
	addi	a1,a1,-16
	mul	a0,a0,a1
	ld	a3,16(s0)
	srli	a4,a5,0x5
	addi	a1,a1,-4
	addi	a5,a3,16
	li	a6,4
	mv	a3,a4
	add	a0,a0,a5
	add	a5,a0,a1
	bleu	a4,a6,0x30026 # __libc_free+0x8e>
	li	a3,5
	beq	a4,a3,0x30018 # __libc_free+0x80>
	sb	zero,0(zero) # 0x0 # exit-0x10120>
	ebreak
	srli	a4,a2,0x5
	andi	a3,a4,126
	auipc	a4,0x16
	addi	a4,a4,-500 # 0x45e10 # __malloc_size_classes>
	add	a4,a4,a3
	lhu	a1,0(a4)
	slliw	a1,a1,0x4
	j	0x2ffd2 # __libc_free+0x3a>
	lwu	a3,-4(a5)
	bleu	a3,a6,0x300e8 # __libc_free+0x150>
	lbu	a4,-5(a5)
	bnez	a4,0x300e2 # __libc_free+0x14a>
	sub	a4,a5,s1
	bleu	a3,a4,0x30034 # __libc_free+0x9c>
	sb	zero,0(zero) # 0x0 # exit-0x10120>
	ebreak
	sub	a3,a5,a3
	lbu	a4,0(a3)
	beqz	a4,0x30044 # __libc_free+0xac>
	sb	zero,0(zero) # 0x0 # exit-0x10120>
	ebreak
	lbu	a4,0(a5)
	beqz	a4,0x30050 # __libc_free+0xb8>
	sb	zero,0(zero) # 0x0 # exit-0x10120>
	ebreak
	li	a4,-1
	sb	a4,-3(s1)
	addi	s3,gp,-1928 # 0x4d400 # __libc>
	ld	a6,48(s3)
	addi	a3,a0,-1
	li	a4,2
	sllw	a4,a4,a2
	sh	zero,-2(s1)
	xor	a5,a5,a3
	li	s1,1
	slli	a3,a6,0x1
	sllw	s1,s1,s2
	addiw	s4,a4,-1
	bltu	a5,a3,0x30086 # __libc_free+0xee>
	ld	a5,32(s0)
	andi	a5,a5,31
	bnez	a5,0x300ee # __libc_free+0x156>
	addi	a2,s0,28
	lw	a4,28(s0)
	lw	a5,24(s0)
	sext.w	a3,a4
	sext.w	a5,a5
	or	a5,a5,a3
	and	a1,s1,a5
	mv	a4,a3
	beqz	a1,0x300a4 # __libc_free+0x10c>
	sb	zero,0(zero) # 0x0 # exit-0x10120>
	ebreak
	beqz	a3,0x3010e # __libc_free+0x176>
	addw	a5,a5,s1
	beq	a5,s4,0x3010e # __libc_free+0x176>
	lbu	a5,3(s3)
	addw	a3,a3,s1
	slliw	a5,a5,0x18
	sraiw	a5,a5,0x18
	beqz	a5,0x30154 # __libc_free+0x1bc>
	lr.w.aqrl	a5,(a2)
	bne	a5,a4,0x300ca # __libc_free+0x132>
	sc.w.aqrl	a1,a3,(a2)
	bnez	a1,0x300bc # __libc_free+0x124>
	sext.w	a5,a5
	bne	a4,a5,0x3008a # __libc_free+0xf2>
	ld	ra,56(sp)
	ld	s0,48(sp)
	ld	s1,40(sp)
	ld	s2,32(sp)
	ld	s3,24(sp)
	ld	s4,16(sp)
	addi	sp,sp,64
	ret
	ret
	sb	zero,0(zero) # 0x0 # exit-0x10120>
	ebreak
	sb	zero,0(zero) # 0x0 # exit-0x10120>
	ebreak
	addi	a4,a6,-1
	neg	a5,a0
	and	a5,a5,a4
	sub	a1,a1,a5
	neg	a6,a6
	and	a1,a1,a6
	beqz	a1,0x30086 # __libc_free+0xee>
	li	a2,8
	add	a0,a0,a5
	jal	ra,0x32dfc # __madvise>
	j	0x30086 # __libc_free+0xee>
	lbu	a5,3(s3)
	slliw	a5,a5,0x18
	sraiw	a5,a5,0x18
	bnez	a5,0x3014a # __libc_free+0x1b2>
	mv	a0,s0
	mv	a1,s2
	jal	ra,0x2fc98 # nontrivial_free>
	mv	a5,a0
	mv	s0,a1
	addi	a0,gp,-736 # 0x4d8a8 # __malloc_lock>
	sd	a5,0(sp)
	jal	ra,0x370d4 # __unlock>
	beqz	s0,0x300d0 # __libc_free+0x138>
	mv	a1,s0
	ld	s0,48(sp)
	ld	a0,0(sp)
	ld	ra,56(sp)
	ld	s1,40(sp)
	ld	s2,32(sp)
	ld	s3,24(sp)
	ld	s4,16(sp)
	addi	sp,sp,64
	j	0x32ed0 # __munmap>
	addi	a0,gp,-736 # 0x4d8a8 # __malloc_lock>
	jal	ra,0x36ffe # __lock>
	j	0x3011c # __libc_free+0x184>
	sw	a3,28(s0)
	j	0x300d0 # __libc_free+0x138>

__malloc_atfork:
	bltz	a0,0x3016c # __malloc_atfork+0x14>
	beqz	a0,0x30164 # __malloc_atfork+0xc>
	sw	zero,-736(gp) # 0x4d8a8 # __malloc_lock>
	ret
	addi	a0,gp,-736 # 0x4d8a8 # __malloc_lock>
	j	0x370d4 # __unlock>
	lb	a5,-1925(gp) # 0x4d403 # __libc+0x3>
	bnez	a5,0x30174 # __malloc_atfork+0x1c>
	ret
	addi	a0,gp,-736 # 0x4d8a8 # __malloc_lock>
	j	0x36ffe # __lock>

__malloc_alloc_meta:
	addi	sp,sp,-80
	sd	s3,40(sp)
	auipc	s3,0x1d
	ld	s3,416(s3) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	ld	a4,0(s3)
	sd	s1,56(sp)
	addi	s1,gp,-1664 # 0x4d508 # __malloc_context>
	lw	a5,8(s1)
	sd	ra,72(sp)
	sd	s0,64(sp)
	sd	s2,48(sp)
	sd	s4,32(sp)
	sd	s5,24(sp)
	sd	a4,8(sp)
	beqz	a5,0x301f0 # __malloc_alloc_meta+0x74>
	ld	s0,16(s1)
	beqz	s0,0x301de # __malloc_alloc_meta+0x62>
	ld	a5,8(s0)
	beq	s0,a5,0x302ee # __malloc_alloc_meta+0x172>
	ld	a4,0(s0)
	sd	a5,8(a4)
	sd	a4,0(a5)
	ld	a4,16(s1)
	beq	s0,a4,0x30326 # __malloc_alloc_meta+0x1aa>
	sd	zero,8(s0)
	sd	zero,0(s0)
	ld	a4,8(sp)
	ld	a5,0(s3)
	bne	a4,a5,0x3037c # __malloc_alloc_meta+0x200>
	ld	ra,72(sp)
	mv	a0,s0
	ld	s0,64(sp)
	ld	s1,56(sp)
	ld	s2,48(sp)
	ld	s3,40(sp)
	ld	s4,32(sp)
	ld	s5,24(sp)
	addi	sp,sp,80
	ret
	ld	a5,32(s1)
	beqz	a5,0x3023e # __malloc_alloc_meta+0xc2>
	ld	s0,24(s1)
	addi	a5,a5,-1
	addi	a4,s0,40
	sd	a5,32(s1)
	sd	a4,24(s1)
	j	0x301b8 # __malloc_alloc_meta+0x3c>
	lui	a3,0x41c65
	mv	s5,sp
	addi	a3,a3,-403 # 0x41c64e6d # __BSS_END__+0x41c16ae5>
	mul	a3,s5,a3
	addi	s2,gp,-1928 # 0x4d400 # __libc>
	ld	a4,8(s2)
	sd	a3,0(sp)
	ld	a5,0(a4)
	beqz	a5,0x30224 # __malloc_alloc_meta+0xa8>
	li	s0,16
	li	s4,25
	beq	a5,s4,0x3022c # __malloc_alloc_meta+0xb0>
	ld	a4,8(s2)
	add	a5,a4,s0
	ld	a5,0(a5)
	addi	s0,s0,16
	bnez	a5,0x30210 # __malloc_alloc_meta+0x94>
	ld	a3,0(sp)
	li	a5,1
	sd	a3,0(s1)
	sw	a5,8(s1)
	j	0x301a2 # __malloc_alloc_meta+0x26>
	add	a4,a4,s0
	ld	a1,-8(a4)
	li	a2,8
	mv	a0,s5
	addi	a1,a1,8
	jal	ra,0x3632a # memcpy>
	j	0x30214 # __malloc_alloc_meta+0x98>
	ld	s4,-1880(gp) # 0x4d430 # __libc+0x30>
	lui	a5,0x1
	bltu	s4,a5,0x3031e # __malloc_alloc_meta+0x1a2>
	ld	a5,40(s1)
	bnez	a5,0x302f4 # __malloc_alloc_meta+0x178>
	ld	a5,920(s1)
	li	a4,-1
	beq	a5,a4,0x30276 # __malloc_alloc_meta+0xfa>
	beqz	a5,0x30330 # __malloc_alloc_meta+0x1b4>
	add	s2,a5,s4
	li	a5,0
	li	a7,214
	mv	a0,s2
	ecall
	beq	s2,a0,0x30354 # __malloc_alloc_meta+0x1d8>
	ld	a5,40(s1)
	li	a4,-1
	sd	a4,920(s1)
	bnez	a5,0x302f4 # __malloc_alloc_meta+0x178>
	ld	a4,48(s1)
	li	s5,2
	li	a5,0
	sll	s5,s5,a4
	mul	a1,s4,s5
	li	a4,-1
	li	a3,34
	li	a2,0
	li	a0,0
	jal	ra,0x32e16 # __mmap>
	li	a5,-1
	beq	a0,a5,0x301c0 # __malloc_alloc_meta+0x44>
	srli	a5,s4,0xc
	addi	s5,s5,-1
	mul	s5,s5,a5
	ld	a4,48(s1)
	add	s2,a0,s4
	addi	a5,s4,-1
	addi	a4,a4,1
	sd	s2,72(s1)
	sd	a4,48(s1)
	and	a5,s2,a5
	sd	s5,40(s1)
	beqz	a5,0x30302 # __malloc_alloc_meta+0x186>
	ld	a4,40(s1)
	lui	a5,0x1
	ld	a3,64(s1)
	addi	a4,a4,-1
	add	a5,a5,s2
	sd	a4,40(s1)
	sd	a5,72(s1)
	beqz	a3,0x3032a # __malloc_alloc_meta+0x1ae>
	sd	s2,8(a3)
	ld	a5,0(s1)
	sd	s2,64(s1)
	addi	s0,s2,24
	sd	a5,0(s2)
	li	a5,101
	sw	a5,16(s2)
	li	a5,100
	j	0x301e6 # __malloc_alloc_meta+0x6a>
	sd	zero,-1648(gp) # 0x4d518 # __malloc_context+0x10>
	j	0x301b8 # __malloc_alloc_meta+0x3c>
	ld	s2,72(s1)
	addi	a5,s4,-1
	and	a5,s2,a5
	bnez	a5,0x302be # __malloc_alloc_meta+0x142>
	li	a2,3
	mv	a1,s4
	mv	a0,s2
	jal	ra,0x32ea0 # __mprotect>
	beqz	a0,0x302be # __malloc_alloc_meta+0x142>
	jal	ra,0x2f900 # __errno_location>
	lw	a4,0(a0)
	li	a5,38
	beq	a4,a5,0x302be # __malloc_alloc_meta+0x142>
	j	0x301c0 # __malloc_alloc_meta+0x44>
	ld	a5,40(s1)
	lui	s4,0x1
	bnez	a5,0x302f4 # __malloc_alloc_meta+0x178>
	j	0x3024c # __malloc_alloc_meta+0xd0>
	sd	a5,16(s1)
	j	0x301b8 # __malloc_alloc_meta+0x3c>
	sd	s2,56(s1)
	j	0x302d2 # __malloc_alloc_meta+0x156>
	li	a7,214
	li	a0,0
	ecall
	neg	a5,a0
	addi	a4,s4,-1 # 0xfff # exit-0xf121>
	and	a5,a5,a4
	add	a5,a5,a0
	slli	s2,s4,0x1
	sd	a5,920(s1)
	add	s2,s2,a5
	li	a5,1
	j	0x3025e # __malloc_alloc_meta+0xe2>
	bnez	a5,0x30366 # __malloc_alloc_meta+0x1ea>
	srli	a5,s4,0xc
	sd	s2,920(s1)
	sd	a5,40(s1)
	sub	s2,s2,s4
	j	0x302be # __malloc_alloc_meta+0x142>
	ld	a0,920(s1)
	li	a5,0
	li	a4,-1
	li	a3,50
	li	a2,0
	mv	a1,s4
	jal	ra,0x32e16 # __mmap>
	j	0x30356 # __malloc_alloc_meta+0x1da>
	jal	ra,0x37f18 # __stack_chk_fail>

alloc_slot:
	addi	sp,sp,-96
	sd	s4,48(sp)
	addi	s4,a0,10
	sd	s3,56(sp)
	slli	a4,s4,0x3
	addi	s3,gp,-1664 # 0x4d508 # __malloc_context>
	add	a4,a4,s3
	ld	a2,0(a4)
	sd	s1,72(sp)
	sd	s5,40(sp)
	sd	ra,88(sp)
	sd	s0,80(sp)
	sd	s2,64(sp)
	sd	s6,32(sp)
	sd	s7,24(sp)
	sd	s8,16(sp)
	sd	s9,8(sp)
	sd	s10,0(sp)
	mv	s1,a0
	mv	s5,a1
	beqz	a2,0x305a8 # alloc_slot+0x228>
	lw	a5,24(a2)
	sext.w	a5,a5
	bnez	a5,0x30474 # alloc_slot+0xf4>
	lw	a5,28(a2)
	ld	a3,8(a2)
	sext.w	a5,a5
	beqz	a5,0x30584 # alloc_slot+0x204>
	sd	a3,0(a4)
	mv	a2,a3
	ld	a3,32(a2)
	lw	a5,28(a2)
	li	a4,2
	sllw	a4,a4,a3
	sext.w	a5,a5
	addiw	a4,a4,-1
	beq	a4,a5,0x309e8 # alloc_slot+0x668>
	ld	a1,16(a2)
	li	a4,2
	ld	a3,8(a1)
	sllw	a4,a4,a3
	addiw	a4,a4,-1
	and	a5,a5,a4
	sext.w	a5,a5
	andi	a3,a3,31
	bnez	a5,0x303fc # alloc_slot+0x7c>
	ld	a0,8(a2)
	beq	a2,a0,0x30a12 # alloc_slot+0x692>
	slli	a5,s4,0x3
	add	a5,a5,s3
	sd	a0,0(a5)
	mv	a2,a0
	lw	a5,24(a2)
	sext.w	a5,a5
	bnez	a5,0x3057e # alloc_slot+0x1fe>
	ld	a5,16(a2)
	li	a7,2
	addi	a6,a2,28
	ld	a5,8(a5)
	sllw	a7,a7,a5
	addiw	a0,a7,-1
	negw	a7,a7
	lw	a5,28(a2)
	sext.w	a4,a5
	mv	a5,a4
	mv	a1,a4
	and	a4,a4,a7
	lr.w.aqrl	a3,(a6)
	bne	a3,a5,0x30438 # alloc_slot+0xb8>
	sc.w.aqrl	t1,a4,(a6)
	bnez	t1,0x30428 # alloc_slot+0xa8>
	sext.w	a4,a3
	bne	a5,a4,0x3041a # alloc_slot+0x9a>
	and	a5,a0,a1
	sext.w	a4,a5
	sw	a4,24(a2)
	mv	a5,a4
	beqz	a4,0x3057e # alloc_slot+0x1fe>
	ld	a4,32(a2)
	li	a1,31
	srli	a4,a4,0x6
	andi	a3,a4,63
	addiw	a3,a3,-7
	andi	a4,a4,63
	bltu	a1,a3,0x30474 # alloc_slot+0xf4>
	addiw	a4,a4,-7
	add	a4,a4,s3
	lbu	a3,880(a4)
	beqz	a3,0x30474 # alloc_slot+0xf4>
	addiw	a3,a3,-1
	sb	a3,880(a4)
	negw	a4,a5
	and	a4,a4,a5
	subw	a5,a5,a4
	sw	a5,24(a2)
	sext.w	a4,a4
	beqz	a4,0x305a8 # alloc_slot+0x228>
	negw	a5,a4
	and	a4,a4,a5
	lui	a5,0x76be
	addiw	a5,a5,1577
	mulw	a4,a4,a5
	auipc	a5,0x16
	addi	a5,a5,-1574 # 0x45e70 # debruijn32.0>
	srliw	a4,a4,0x1b
	add	a4,a4,a5
	lbu	a0,0(a4)
	ld	ra,88(sp)
	ld	s0,80(sp)
	ld	s1,72(sp)
	ld	s2,64(sp)
	ld	s3,56(sp)
	ld	s4,48(sp)
	ld	s5,40(sp)
	ld	s6,32(sp)
	ld	s7,24(sp)
	ld	s8,16(sp)
	ld	s9,8(sp)
	ld	s10,0(sp)
	addi	sp,sp,96
	ret
	sext.w	s5,s5
	mv	a0,s5
	jal	ra,0x30380 # alloc_slot>
	mv	a3,a0
	bltz	a0,0x30aba # alloc_slot+0x73a>
	addi	a5,s5,10 # 0xffffffff8000000a # __BSS_END__+0xffffffff7ffb1c82>
	slli	a5,a5,0x3
	add	a5,a5,s3
	ld	a1,0(a5)
	slli	s5,s5,0x1
	add	s5,s5,s10
	lhu	a2,0(s5)
	ld	a4,32(a1)
	lw	a6,12(s3)
	slliw	a2,a2,0x4
	addiw	a5,a2,-4
	andi	a0,a4,31
	mv	a2,a5
	bnez	a0,0x30502 # alloc_slot+0x182>
	lui	a0,0xfffff
	and	a0,a0,a4
	bnez	a0,0x30a88 # alloc_slot+0x708>
	srli	a4,a4,0x5
	andi	a4,a4,126
	add	a4,a4,s10
	lhu	a4,0(a4)
	slliw	a4,a4,0x4
	mul	a0,a3,a4
	ld	a7,16(a1)
	andi	t1,a6,255
	sub	a5,a4,a5
	addi	a7,a7,16
	addi	a5,a5,-4
	addi	a4,a4,-4
	srli	t3,a5,0x4
	add	a0,a0,a7
	lbu	a6,-3(a0) # 0xffffffffffffeffd # __BSS_END__+0xfffffffffffb0c75>
	add	a4,a4,a0
	beqz	a6,0x30542 # alloc_slot+0x1c2>
	lhu	a6,-2(a0)
	addiw	a6,a6,1
	andi	t1,a6,255
	lbu	a6,-4(a0)
	bnez	a6,0x3057e # alloc_slot+0x1fe>
	bleu	t1,t3,0x30934 # alloc_slot+0x5b4>
	srli	a5,a5,0x5
	or	a5,a5,t3
	srli	t4,a5,0x2
	or	a5,a5,t4
	srli	t4,a5,0x4
	or	a5,a5,t4
	and	a5,a5,t1
	slli	t1,a5,0x20
	srli	t1,t1,0x20
	sext.w	a5,a5
	bltu	t3,t1,0x30a90 # alloc_slot+0x710>
	sext.w	t1,a5
	bleu	a5,t3,0x30934 # alloc_slot+0x5b4>
	sb	zero,0(zero) # 0x0 # exit-0x10120>
	ebreak
	beq	a2,a3,0x30ab0 # alloc_slot+0x730>
	ld	a5,0(a2)
	sd	a3,8(a5)
	sd	a5,0(a3)
	ld	a5,0(a4)
	beq	a2,a5,0x30b08 # alloc_slot+0x788>
	slli	a5,s4,0x3
	sd	zero,8(a2)
	sd	zero,0(a2)
	add	a5,a5,s3
	ld	a2,0(a5)
	bnez	a2,0x303c6 # alloc_slot+0x46>
	auipc	s10,0x16
	addi	s10,s10,-1944 # 0x45e10 # __malloc_size_classes>
	slli	s0,s1,0x1
	add	a5,s10,s0
	lhu	s9,0(a5)
	jal	ra,0x3017c # __malloc_alloc_meta>
	mv	s2,a0
	slliw	s6,s9,0x4
	mv	s9,s6
	beqz	a0,0x30ab6 # alloc_slot+0x736>
	addi	s8,s1,58
	slli	a5,s8,0x3
	add	a5,a5,s3
	li	a4,8
	ld	a3,0(a5)
	ld	a2,-1880(gp) # 0x4d430 # __libc+0x30>
	blt	a4,s1,0x306f6 # alloc_slot+0x376>
	add	s0,s0,s1
	auipc	a5,0x16
	addi	a5,a5,-1868 # 0x45e98 # small_cnt_tab>
	add	a5,a5,s0
	lbu	s0,0(a5)
	slliw	a4,s0,0x2
	bleu	a4,a3,0x3060a # alloc_slot+0x28a>
	lbu	s0,1(a5)
	slliw	a4,s0,0x2
	bleu	a4,a3,0x3060a # alloc_slot+0x28a>
	lbu	s0,2(a5)
	li	a4,1
	srli	a5,a2,0x1
	beq	s0,a4,0x3076c # alloc_slot+0x3ec>
	mul	a1,s6,s0
	mv	s7,s0
	addi	a0,a1,16
	bleu	a0,a5,0x30784 # alloc_slot+0x404>
	addiw	a4,s1,-7
	li	a7,31
	lbu	a5,912(s3)
	li	a6,0
	bltu	a7,a4,0x30660 # alloc_slot+0x2e0>
	add	a4,a4,s3
	lbu	t1,880(a4)
	lbu	t3,848(a4)
	li	a6,99
	sltu	a6,a6,t1
	beqz	t3,0x30660 # alloc_slot+0x2e0>
	subw	a7,a5,t3
	li	t3,9
	blt	t3,a7,0x30660 # alloc_slot+0x2e0>
	li	a7,98
	bltu	a7,t1,0x30b12 # alloc_slot+0x792>
	addiw	t1,t1,1
	sb	t1,880(a4)
	li	a4,255
	beq	a5,a4,0x30752 # alloc_slot+0x3d2>
	addiw	a5,a5,1
	sb	a5,912(s3)
	andi	a5,s1,1
	bnez	a5,0x3068a # alloc_slot+0x30a>
	li	a5,31
	blt	a5,s1,0x3068a # alloc_slot+0x30a>
	addiw	a5,s1,1
	addi	a5,a5,58
	slli	a5,a5,0x3
	add	a5,a5,s3
	ld	a5,0(a5)
	add	a3,a3,a5
	slliw	a5,s0,0x2
	addi	a4,a2,-1
	bleu	a5,a3,0x3081a # alloc_slot+0x49a>
	bnez	a6,0x30a04 # alloc_slot+0x684>
	andi	a5,s1,3
	li	a6,1
	beq	a5,a6,0x30a9e # alloc_slot+0x71e>
	li	a6,2
	beq	a5,a6,0x30af2 # alloc_slot+0x772>
	bnez	a5,0x30afa # alloc_slot+0x77a>
	slli	a5,a2,0x3
	bltu	a5,a1,0x30b0c # alloc_slot+0x78c>
	slli	a5,a2,0x1
	bleu	a1,a5,0x30afa # alloc_slot+0x77a>
	li	a1,5
	li	s0,5
	mul	a1,s6,a1
	li	a5,-16
	sub	a5,a5,a1
	and	a5,a5,a4
	addi	a1,a1,16
	add	a5,a5,a1
	li	s7,-20
	sub	s7,s7,s5
	and	s7,s7,a4
	addi	s5,s5,20
	add	s7,s7,s5
	addiw	s9,s9,16
	bltu	s7,s9,0x306f2 # alloc_slot+0x372>
	slli	a2,a2,0x2
	bltu	s7,a2,0x30aac # alloc_slot+0x72c>
	slli	a4,s0,0x1
	bleu	a4,a3,0x30aac # alloc_slot+0x72c>
	li	s0,1
	j	0x30830 # alloc_slot+0x4b0>
	andi	a4,s1,3
	auipc	a5,0x15
	addi	a5,a5,1942 # 0x45e90 # med_cnt_tab>
	add	a5,a5,a4
	lbu	s0,0(a5)
	andi	a5,s0,1
	sext.w	s0,s0
	bnez	a5,0x30730 # alloc_slot+0x3b0>
	slli	a5,s0,0x2
	bltu	a3,a5,0x30722 # alloc_slot+0x3a2>
	j	0x30730 # alloc_slot+0x3b0>
	slliw	a5,a5,0x2
	bleu	a5,a3,0x30730 # alloc_slot+0x3b0>
	sraiw	a5,s0,0x1
	andi	a4,a5,1
	sext.w	s0,a5
	beqz	a4,0x3071a # alloc_slot+0x39a>
	mul	a5,s0,s6
	lui	a4,0x100
	bltu	a5,a4,0x3060a # alloc_slot+0x28a>
	srai	s0,s0,0x1
	mul	a5,s0,s6
	bltu	a5,a4,0x3060a # alloc_slot+0x28a>
	srai	s0,s0,0x1
	mul	a5,s0,s6
	bleu	a4,a5,0x3073c # alloc_slot+0x3bc>
	j	0x3060a # alloc_slot+0x28a>
	addi	a5,gp,-816 # 0x4d858 # __malloc_context+0x350>
	addi	a4,gp,-784 # 0x4d878 # __malloc_context+0x370>
	sb	zero,0(a5)
	addi	a5,a5,1
	bne	a4,a5,0x3075a # alloc_slot+0x3da>
	li	a5,1
	sb	a5,912(s3)
	j	0x3066e # alloc_slot+0x2ee>
	addiw	a0,s9,16
	bltu	a5,a0,0x30a00 # alloc_slot+0x680>
	slli	a1,s6,0x1
	addi	a0,a1,16
	li	s7,2
	li	s0,2
	bltu	a5,a0,0x30622 # alloc_slot+0x2a2>
	srli	s5,a1,0x4
	li	a5,9
	addi	a1,a1,12
	bleu	s5,a5,0x304c4 # alloc_slot+0x144>
	addi	a3,s5,1
	srliw	a5,a3,0x1
	srliw	a4,a3,0x2
	or	a4,a4,a5
	sext.w	a5,a4
	srliw	a4,a4,0x2
	or	a5,a5,a4
	sext.w	a4,a5
	srliw	a5,a5,0x4
	or	a4,a4,a5
	sext.w	a5,a4
	srliw	a4,a4,0x8
	or	a5,a5,a4
	sext.w	a4,a5
	srliw	a5,a5,0x10
	or	a4,a4,a5
	sext.w	a5,a4
	not	a5,a5
	addiw	a4,a4,1
	and	a5,a5,a4
	lui	a4,0x76be
	addiw	a4,a4,1577
	mulw	a5,a5,a4
	auipc	a4,0x15
	addi	a4,a4,1682 # 0x45e70 # debruijn32.0>
	srliw	a5,a5,0x1b
	add	a5,a5,a4
	lbu	a5,0(a5)
	addiw	a5,a5,-1
	slliw	s5,a5,0x2
	addiw	a4,s5,1
	slli	a4,a4,0x1
	add	a4,a4,s10
	lhu	a4,0(a4)
	bleu	a3,a4,0x30808 # alloc_slot+0x488>
	addiw	s5,s5,2
	slli	a5,s5,0x1
	add	a5,a5,s10
	lhu	a5,0(a5)
	bleu	a3,a5,0x304c6 # alloc_slot+0x146>
	addiw	s5,s5,1
	j	0x304c6 # alloc_slot+0x146>
	li	s7,-16
	sub	s7,s7,a1
	and	s7,s7,a4
	add	s7,s7,a0
	bnez	a6,0x30830 # alloc_slot+0x4b0>
	li	a5,7
	ble	s0,a5,0x30aee # alloc_slot+0x76e>
	li	a5,0
	li	a4,-1
	li	a3,34
	li	a2,3
	mv	a1,s7
	li	a0,0
	jal	ra,0x32e16 # __mmap>
	li	a5,-1
	beq	a0,a5,0x30aba # alloc_slot+0x73a>
	lui	a4,0x1
	addi	a3,a4,-16 # 0xff0 # exit-0xf130>
	divu	s6,a3,s6
	ld	a5,32(s2)
	addi	a4,a4,-1
	srli	s7,s7,0xc
	and	a5,a5,a4
	slli	s7,s7,0xc
	or	a5,a5,s7
	sd	a5,32(s2)
	lw	a3,12(s3)
	addiw	a4,s0,-1
	sext.w	a6,a4
	addiw	a3,a3,1
	sw	a3,12(s3)
	addiw	a3,s6,-1
	blt	a3,s0,0x30884 # alloc_slot+0x504>
	mv	a3,a6
	not	s6,a3
	srai	s6,s6,0x3f
	and	s6,s6,a3
	mv	s7,s0
	slli	s8,s8,0x3
	add	s8,s8,s3
	ld	a1,0(s8)
	li	a2,2
	sllw	a3,a2,s6
	add	a1,a1,s7
	sd	a1,0(s8)
	addiw	a3,a3,-1
	sw	a3,24(s2)
	lw	a5,24(s2)
	lbu	a3,8(a0)
	sllw	a2,a2,a6
	not	a5,a5
	addw	a5,a5,a2
	sw	a5,28(s2)
	lhu	a1,32(s2)
	andi	a3,a3,-32
	andi	s6,s6,31
	andi	a4,a4,31
	andi	a5,s1,63
	lw	a2,24(s2)
	sd	a0,16(s2)
	or	s6,a3,s6
	ori	a4,a4,32
	slli	a5,a5,0x6
	sb	s6,8(a0)
	or	a5,a5,a4
	lui	a4,0xfffff
	and	a4,a4,a1
	ld	a3,8(s2)
	or	a5,a5,a4
	sd	s2,0(a0)
	addiw	a4,a2,-1
	sh	a5,32(s2)
	sw	a4,24(s2)
	bnez	a3,0x3057e # alloc_slot+0x1fe>
	ld	a5,0(s2)
	bnez	a5,0x3057e # alloc_slot+0x1fe>
	slli	s4,s4,0x3
	add	s3,s3,s4
	ld	a5,0(s3)
	beqz	a5,0x309d8 # alloc_slot+0x658>
	ld	a4,0(a5)
	sd	a5,8(s2)
	li	a0,0
	sd	a4,0(s2)
	sd	s2,8(a4) # 0xfffffffffffff008 # __BSS_END__+0xfffffffffffb0c80>
	ld	a5,8(s2)
	sd	s2,0(a5)
	j	0x304a8 # alloc_slot+0x128>
	beqz	t1,0x30952 # alloc_slot+0x5d2>
	slliw	a5,t1,0x4
	li	a7,-32
	sb	a7,-3(a0)
	sh	t1,-2(a0)
	add	a0,a0,a5
	sb	zero,-4(a0)
	ld	a5,16(a1)
	addi	a7,a5,16
	sub	a5,a0,a7
	sub	a1,a4,a0
	srli	a5,a5,0x4
	andi	a3,a3,255
	subw	a2,a1,a2
	sh	a5,-2(a0)
	sb	a3,-3(a0)
	sext.w	a5,a2
	beqz	a5,0x30992 # alloc_slot+0x612>
	negw	a3,a2
	add	a3,a3,a4
	sb	zero,0(a3)
	li	a3,4
	ble	a5,a3,0x30b2c # alloc_slot+0x7ac>
	sw	a2,-4(a4)
	sb	zero,-5(a4)
	lbu	a3,-3(a0)
	li	a6,160
	andi	a3,a3,31
	addw	a3,a3,a6
	sb	a3,-3(a0)
	ld	a5,32(s2)
	addi	a4,a0,12
	addiw	a3,s0,1
	slli	a5,a5,0x34
	srli	a5,a5,0x34
	sd	a5,32(s2)
	lbu	a2,-3(a0)
	li	a5,0
	andi	a2,a2,31
	ori	a2,a2,-64
	sb	a2,-3(a0)
	sb	zero,0(a4)
	addiw	a5,a5,1
	add	a4,a4,s6
	bne	a5,a3,0x309c0 # alloc_slot+0x640>
	addiw	a4,s0,-1
	sext.w	s6,a4
	mv	a6,s6
	j	0x30892 # alloc_slot+0x512>
	sd	s2,8(s2)
	sd	s2,0(s2)
	sd	s2,0(s3)
	li	a0,0
	j	0x304a8 # alloc_slot+0x128>
	andi	a3,a3,32
	beqz	a3,0x303d8 # alloc_slot+0x58>
	ld	a2,8(a2)
	slli	a4,s4,0x3
	add	a4,a4,s3
	lw	a5,28(a2)
	sd	a2,0(a4)
	sext.w	a5,a5
	j	0x303d8 # alloc_slot+0x58>
	mv	a1,s6
	j	0x30622 # alloc_slot+0x2a2>
	li	s7,-16
	sub	s7,s7,a1
	and	s7,s7,a4
	add	s7,s7,a0
	j	0x30830 # alloc_slot+0x4b0>
	ld	t1,32(a0)
	addiw	a2,a3,2
	lui	a7,0x1
	srli	a5,t1,0x5
	andi	a4,a5,126
	auipc	a5,0x15
	addi	a5,a5,1004 # 0x45e10 # __malloc_size_classes>
	add	a5,a5,a4
	lhu	a5,0(a5)
	slliw	a6,a5,0x4
	mulw	a3,a2,a6
	addiw	a4,a3,16
	addw	a5,a6,a4
	addiw	a3,a5,-1
	xor	a4,a4,a3
	sext.w	a4,a4
	ble	a7,a4,0x30a66 # alloc_slot+0x6e6>
	addw	a4,a6,a5
	addiw	a3,a4,-1
	xor	a5,a5,a3
	sext.w	a3,a5
	addiw	a2,a2,1
	sext.w	a5,a4
	blt	a3,a7,0x30a4e # alloc_slot+0x6ce>
	andi	a5,t1,31
	addiw	a4,a5,1
	mv	a5,a4
	blt	a2,a4,0x30a9a # alloc_slot+0x71a>
	lbu	a4,8(a1)
	addiw	a5,a5,-1
	andi	a5,a5,31
	andi	a4,a4,-32
	or	a5,a5,a4
	sb	a5,8(a1)
	mv	a2,a0
	j	0x303fc # alloc_slot+0x7c>
	srli	a4,a4,0xc
	slli	a4,a4,0xc
	addi	a4,a4,-16
	j	0x30512 # alloc_slot+0x192>
	not	t1,t3
	addw	a5,t1,a5
	j	0x30576 # alloc_slot+0x1f6>
	mv	a5,a2
	j	0x30a74 # alloc_slot+0x6f4>
	slli	a5,a2,0x3
	bleu	a1,a5,0x30afa # alloc_slot+0x77a>
	li	a1,2
	li	s0,2
	j	0x306c2 # alloc_slot+0x342>
	mv	s7,a5
	j	0x30830 # alloc_slot+0x4b0>
	sd	zero,0(a4)
	j	0x30594 # alloc_slot+0x214>
	li	a0,-1
	j	0x304a8 # alloc_slot+0x128>
	sd	zero,0(s2)
	sd	zero,8(s2)
	sd	zero,16(s2)
	ld	a5,16(s3)
	sd	zero,24(s2)
	sd	zero,32(s2)
	beqz	a5,0x30b1c # alloc_slot+0x79c>
	ld	a4,0(a5)
	sd	a5,8(s2)
	li	a0,-1
	sd	a4,0(s2)
	sd	s2,8(a4)
	ld	a5,8(s2)
	sd	s2,0(a5)
	j	0x304a8 # alloc_slot+0x128>
	mv	a5,s7
	j	0x306d0 # alloc_slot+0x350>
	slli	a5,a2,0x2
	bltu	a5,a1,0x30b0c # alloc_slot+0x78c>
	li	s7,-16
	sub	s7,s7,a1
	and	s7,s7,a4
	add	s7,s7,a0
	j	0x3082a # alloc_slot+0x4aa>
	sd	a3,0(a4)
	j	0x30594 # alloc_slot+0x214>
	li	a1,3
	li	s0,3
	j	0x306c2 # alloc_slot+0x342>
	li	a7,-106
	sb	a7,880(a4)
	j	0x30660 # alloc_slot+0x2e0>
	sd	s2,8(s2)
	sd	s2,0(s2)
	sd	s2,16(s3)
	li	a0,-1
	j	0x304a8 # alloc_slot+0x128>
	slliw	a2,a2,0x5
	lbu	a3,-3(a0)
	andi	a6,a2,255
	j	0x30992 # alloc_slot+0x612>

__libc_malloc_impl:
	lui	a5,0xffffe
	addi	sp,sp,-48
	addi	a5,a5,-3
	sd	ra,40(sp)
	sd	s0,32(sp)
	sd	s1,24(sp)
	sd	s2,16(sp)
	sd	s3,8(sp)
	sd	s4,0(sp)
	srli	a5,a5,0x1
	bltu	a5,a0,0x30d50 # __libc_malloc_impl+0x216>
	lui	a5,0x20
	addi	a5,a5,-21
	mv	s0,a0
	bleu	a0,a5,0x30c30 # __libc_malloc_impl+0xf6>
	addi	s2,a0,20
	li	a5,0
	li	a4,-1
	li	a3,34
	li	a2,3
	mv	a1,s2
	li	a0,0
	jal	ra,0x32e16 # __mmap>
	li	a5,-1
	mv	s1,a0
	beq	a0,a5,0x30e7c # __libc_malloc_impl+0x342>
	lb	a5,-1925(gp) # 0x4d403 # __libc+0x3>
	bnez	a5,0x30d96 # __libc_malloc_impl+0x25c>
	addi	s4,gp,-1664 # 0x4d508 # __malloc_context>
	lbu	a5,912(s4)
	li	a4,255
	beq	a5,a4,0x30d7c # __libc_malloc_impl+0x242>
	addiw	a5,a5,1
	sb	a5,912(s4)
	jal	ra,0x3017c # __malloc_alloc_meta>
	mv	s3,a0
	beqz	a0,0x30ed2 # __libc_malloc_impl+0x398>
	lui	a3,0x1
	addi	a5,a3,19 # 0x1013 # exit-0xf10d>
	lw	a4,12(s4)
	add	a5,a5,s0
	sd	s1,16(a0)
	srli	a5,a5,0xc
	sd	a0,0(s1)
	slli	a5,a5,0xc
	addi	a3,a3,-32
	addiw	s1,a4,1
	or	a5,a5,a3
	sw	zero,28(a0)
	sw	s1,12(s4)
	sd	a5,32(a0)
	sw	zero,24(a0)
	li	s4,0
	li	s2,0
	addi	a0,gp,-736 # 0x4d8a8 # __malloc_lock>
	jal	ra,0x370d4 # __unlock>
	ld	a5,32(s3)
	andi	a4,a5,31
	bnez	a4,0x30d36 # __libc_malloc_impl+0x1fc>
	lui	a4,0xfffff
	and	a4,a4,a5
	beqz	a4,0x30d36 # __libc_malloc_impl+0x1fc>
	srli	a5,a5,0xc
	slli	a5,a5,0xc
	addi	a5,a5,-16
	mul	a0,a5,s4
	ld	a3,16(s3)
	sub	a4,a5,s0
	addi	a4,a4,-4
	addi	a3,a3,16
	addi	a5,a5,-4
	srli	a2,a4,0x4
	andi	s1,s1,255
	add	a0,a0,a3
	lbu	a1,-3(a0)
	add	a5,a5,a0
	beqz	a1,0x30c22 # __libc_malloc_impl+0xe8>
	lhu	s1,-2(a0)
	addiw	s1,s1,1
	andi	s1,s1,255
	lbu	a1,-4(a0)
	beqz	a1,0x30dcc # __libc_malloc_impl+0x292>
	sb	zero,0(zero) # 0x0 # exit-0x10120>
	ebreak
	addi	s1,a0,3
	srli	s1,s1,0x4
	li	a5,9
	bleu	s1,a5,0x30e78 # __libc_malloc_impl+0x33e>
	addi	a2,s1,1
	srliw	a4,a2,0x1
	srliw	a5,a2,0x2
	or	a5,a5,a4
	sext.w	a4,a5
	srliw	a5,a5,0x2
	or	a4,a4,a5
	sext.w	a5,a4
	srliw	a4,a4,0x4
	or	a5,a5,a4
	sext.w	a4,a5
	srliw	a5,a5,0x8
	or	a4,a4,a5
	sext.w	a5,a4
	not	a5,a5
	addiw	a4,a4,1
	and	a5,a5,a4
	lui	a4,0x76be
	addiw	a4,a4,1577
	mulw	a5,a5,a4
	auipc	a4,0x15
	addi	a4,a4,496 # 0x45e70 # debruijn32.0>
	auipc	a3,0x15
	addi	a3,a3,392 # 0x45e10 # __malloc_size_classes>
	srliw	a5,a5,0x1b
	add	a5,a5,a4
	lbu	a5,0(a5) # 0x20000 # luaV_execute+0x1098>
	addiw	a5,a5,-1
	slliw	s1,a5,0x2
	addiw	a4,s1,1
	slli	a4,a4,0x1
	add	a4,a4,a3
	lhu	a4,0(a4)
	bleu	a2,a4,0x30cb2 # __libc_malloc_impl+0x178>
	addiw	s1,s1,2
	slli	a5,s1,0x1
	add	a3,a3,a5
	lhu	a5,0(a3)
	bltu	a5,a2,0x30d6a # __libc_malloc_impl+0x230>
	lb	a5,-1925(gp) # 0x4d403 # __libc+0x3>
	bnez	a5,0x30d72 # __libc_malloc_impl+0x238>
	addi	a5,s1,10
	addi	s4,gp,-1664 # 0x4d508 # __malloc_context>
	slli	a5,a5,0x3
	add	a5,a5,s4
	ld	s3,0(a5)
	beqz	s3,0x30da0 # __libc_malloc_impl+0x266>
	lw	a5,24(s3)
	sext.w	a3,a5
	negw	a5,a5
	and	a5,a5,a3
	sext.w	a5,a5
	beqz	a5,0x30daa # __libc_malloc_impl+0x270>
	negw	a4,a5
	lui	a2,0x76be
	and	a4,a4,a5
	addiw	a2,a2,1577
	mulw	a4,a4,a2
	subw	a5,a3,a5
	sw	a5,24(s3)
	lw	s1,12(s4)
	srliw	a5,a4,0x1b
	auipc	a4,0x15
	addi	a4,a4,354 # 0x45e70 # debruijn32.0>
	add	a5,a5,a4
	lbu	a0,0(a5)
	sext.w	s2,a0
	mv	s4,a0
	addi	a0,gp,-736 # 0x4d8a8 # __malloc_lock>
	jal	ra,0x370d4 # __unlock>
	ld	a5,32(s3)
	andi	a4,a5,31
	beqz	a4,0x30be6 # __libc_malloc_impl+0xac>
	srli	a5,a5,0x5
	andi	a5,a5,126
	auipc	a4,0x15
	addi	a4,a4,212 # 0x45e10 # __malloc_size_classes>
	add	a5,a5,a4
	lhu	a5,0(a5)
	slliw	a5,a5,0x4
	j	0x30bf4 # __libc_malloc_impl+0xba>
	jal	ra,0x2f900 # __errno_location>
	li	a5,12
	sw	a5,0(a0)
	li	a0,0
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	ld	s4,0(sp)
	addi	sp,sp,48
	ret
	lb	a5,-1925(gp) # 0x4d403 # __libc+0x3>
	addiw	s1,s1,1
	beqz	a5,0x30cc6 # __libc_malloc_impl+0x18c>
	addi	a0,gp,-736 # 0x4d8a8 # __malloc_lock>
	jal	ra,0x36ffe # __lock>
	j	0x30cc6 # __libc_malloc_impl+0x18c>
	addi	a5,gp,-816 # 0x4d858 # __malloc_context+0x350>
	addi	a4,gp,-784 # 0x4d878 # __malloc_context+0x370>
	sb	zero,0(a5)
	addi	a5,a5,1
	bne	a4,a5,0x30d84 # __libc_malloc_impl+0x24a>
	li	a5,1
	sb	a5,912(s4)
	j	0x30b9a # __libc_malloc_impl+0x60>
	addi	a0,gp,-736 # 0x4d8a8 # __malloc_lock>
	jal	ra,0x36ffe # __lock>
	j	0x30b84 # __libc_malloc_impl+0x4a>
	addiw	a5,s1,-4
	li	a4,27
	bleu	a5,a4,0x30e80 # __libc_malloc_impl+0x346>
	mv	a1,s0
	mv	a0,s1
	jal	ra,0x30380 # alloc_slot>
	mv	s2,a0
	bltz	a0,0x30ee6 # __libc_malloc_impl+0x3ac>
	addi	a5,s1,10
	slli	a5,a5,0x3
	add	a5,a5,s4
	lw	s1,12(s4)
	ld	s3,0(a5)
	mv	s4,a0
	j	0x30bd2 # __libc_malloc_impl+0x98>
	bleu	s1,a2,0x30e04 # __libc_malloc_impl+0x2ca>
	srli	a4,a4,0x5
	or	a4,a4,a2
	srli	a6,a4,0x2
	or	a4,a4,a6
	srli	a6,a4,0x4
	or	a4,a4,a6
	and	a4,a4,s1
	slli	a6,a4,0x20
	srli	a6,a6,0x20
	sext.w	a4,a4
	bleu	a6,a2,0x30dfc # __libc_malloc_impl+0x2c2>
	not	a6,a2
	addw	a4,a6,a4
	sext.w	s1,a4
	bltu	a2,a4,0x30c2a # __libc_malloc_impl+0xf0>
	beqz	s1,0x30e20 # __libc_malloc_impl+0x2e6>
	slliw	a3,s1,0x4
	li	a4,-32
	sb	a4,-3(a0)
	sh	s1,-2(a0)
	add	a0,a0,a3
	sb	zero,-4(a0)
	ld	a3,16(s3)
	addi	a3,a3,16
	sub	a3,a0,a3
	sub	a2,a5,a0
	srli	a3,a3,0x4
	andi	a4,s2,255
	subw	s0,a2,s0
	sh	a3,-2(a0)
	sb	a4,-3(a0)
	sext.w	a3,s0
	beqz	a3,0x30e60 # __libc_malloc_impl+0x326>
	negw	a4,s0
	add	a4,a4,a5
	sb	zero,0(a4)
	li	a4,4
	ble	a3,a4,0x30efe # __libc_malloc_impl+0x3c4>
	sw	s0,-4(a5)
	sb	zero,-5(a5)
	lbu	a4,-3(a0)
	li	a1,160
	andi	a4,a4,31
	addw	a4,a4,a1
	sb	a4,-3(a0)
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	ld	s4,0(sp)
	addi	sp,sp,48
	ret
	sext.w	s1,s1
	j	0x30cc0 # __libc_malloc_impl+0x186>
	li	a0,0
	j	0x30d5a # __libc_malloc_impl+0x220>
	li	a5,6
	beq	s1,a5,0x30daa # __libc_malloc_impl+0x270>
	andi	a5,s1,1
	bnez	a5,0x30daa # __libc_malloc_impl+0x270>
	addi	a5,s1,58
	slli	a5,a5,0x3
	add	a5,a5,s4
	ld	a5,0(a5)
	bnez	a5,0x30daa # __libc_malloc_impl+0x270>
	ori	a4,s1,1
	addi	a3,a4,10
	slli	a3,a3,0x3
	add	a3,a3,s4
	addi	a5,a4,58
	ld	s3,0(a3)
	slli	a5,a5,0x3
	add	a5,a5,s4
	ld	a5,0(a5)
	beqz	s3,0x30ef2 # __libc_malloc_impl+0x3b8>
	lw	a3,24(s3)
	sext.w	a3,a3
	bnez	a3,0x30ec8 # __libc_malloc_impl+0x38e>
	lw	a3,28(s3)
	sext.w	a3,a3
	bnez	a3,0x30ec8 # __libc_malloc_impl+0x38e>
	addi	a5,a5,3
	li	a3,12
	bltu	a3,a5,0x30daa # __libc_malloc_impl+0x270>
	mv	s1,a4
	j	0x30cda # __libc_malloc_impl+0x1a0>
	addi	a0,gp,-736 # 0x4d8a8 # __malloc_lock>
	jal	ra,0x370d4 # __unlock>
	mv	a1,s2
	mv	a0,s1
	jal	ra,0x32ed0 # __munmap>
	li	a0,0
	j	0x30d5a # __libc_malloc_impl+0x220>
	addi	a0,gp,-736 # 0x4d8a8 # __malloc_lock>
	jal	ra,0x370d4 # __unlock>
	li	a0,0
	j	0x30d5a # __libc_malloc_impl+0x220>
	addi	a5,a5,3
	li	a3,12
	bltu	a3,a5,0x30daa # __libc_malloc_impl+0x270>
	mv	s1,a4
	j	0x30daa # __libc_malloc_impl+0x270>
	slliw	s0,s0,0x5
	lbu	a4,-3(a0)
	andi	a1,s0,255
	j	0x30e60 # __libc_malloc_impl+0x326>

__malloc_allzerop:
	andi	a5,a0,15
	bnez	a5,0x30f28 # __malloc_allzerop+0x1c>
	lbu	a5,-3(a0)
	lbu	a4,-4(a0)
	lhu	a2,-2(a0)
	andi	a1,a5,31
	mv	a5,a1
	beqz	a4,0x30f38 # __malloc_allzerop+0x2c>
	beqz	a2,0x30f2e # __malloc_allzerop+0x22>
	sb	zero,0(zero) # 0x0 # exit-0x10120>
	ebreak
	lw	a2,-8(a0)
	lui	a4,0x10
	blt	a2,a4,0x30f28 # __malloc_allzerop+0x1c>
	slliw	a4,a2,0x4
	sub	a0,a0,a4
	ld	a4,-16(a0)
	addi	a0,a0,-16
	ld	a3,16(a4)
	bne	a0,a3,0x30f28 # __malloc_allzerop+0x1c>
	ld	a6,32(a4) # 0x10020 # exit-0x100>
	andi	a3,a6,31
	blt	a3,a5,0x30f28 # __malloc_allzerop+0x1c>
	lw	a3,24(a4)
	srlw	a3,a3,a5
	andi	a3,a3,1
	bnez	a3,0x30f28 # __malloc_allzerop+0x1c>
	lw	a3,28(a4)
	srlw	a3,a3,a5
	andi	a3,a3,1
	bnez	a3,0x30f28 # __malloc_allzerop+0x1c>
	lui	a3,0xfffff
	and	a4,a4,a3
	ld	a0,0(a4)
	ld	a4,-1664(gp) # 0x4d508 # __malloc_context>
	bne	a0,a4,0x30f28 # __malloc_allzerop+0x1c>
	srli	a4,a6,0x6
	andi	a4,a4,63
	li	a0,47
	bltu	a0,a4,0x30fea # __malloc_allzerop+0xde>
	slli	a7,a4,0x1
	auipc	a0,0x15
	addi	a0,a0,-380 # 0x45e10 # __malloc_size_classes>
	add	a7,a7,a0
	lhu	a7,0(a7) # 0x1000 # exit-0xf120>
	sext.w	a4,a4
	mulw	a5,a7,a5
	blt	a2,a5,0x30f28 # __malloc_allzerop+0x1c>
	addiw	a1,a1,1
	mulw	a1,a1,a7
	ble	a1,a2,0x30f28 # __malloc_allzerop+0x1c>
	and	a3,a3,a6
	beqz	a3,0x30fc0 # __malloc_allzerop+0xb4>
	srli	a5,a6,0xc
	slli	a5,a5,0x8
	addi	a5,a5,-1
	bltu	a5,a2,0x30f28 # __malloc_allzerop+0x1c>
	slli	a4,a4,0x1
	add	a4,a4,a0
	lhu	a4,0(a4)
	andi	a5,a6,31
	li	a0,0
	slliw	a4,a4,0x4
	bnez	a5,0x3100c # __malloc_allzerop+0x100>
	lui	a5,0xfffff
	and	a5,a6,a5
	beqz	a5,0x3100c # __malloc_allzerop+0x100>
	srli	a0,a6,0xc
	slli	a0,a0,0xc
	addi	a0,a0,-16
	sltu	a0,a0,a4
	ret
	lui	a5,0x1
	addi	a5,a5,-64 # 0xfc0 # exit-0xf160>
	and	a4,a6,a5
	bne	a4,a5,0x30f28 # __malloc_allzerop+0x1c>
	and	a3,a6,a3
	beqz	a3,0x3100a # __malloc_allzerop+0xfe>
	srli	a5,a6,0xc
	slli	a5,a5,0x8
	addi	a5,a5,-1
	bltu	a5,a2,0x30f28 # __malloc_allzerop+0x1c>
	li	a0,1
	ret

realloc:
	j	0x39a92 # __libc_realloc>

R1:
	auipc	a5,0x15
	fld	fa5,-346(a5) # 0x45eb8 # small_cnt_tab+0x20>
	fmul.d	fa5,fa0,fa5
	auipc	a5,0x15
	fld	fa2,-350(a5) # 0x45ec0 # small_cnt_tab+0x28>
	auipc	a5,0x15
	fld	ft3,-350(a5) # 0x45ec8 # small_cnt_tab+0x30>
	auipc	a5,0x15
	fld	fa4,-326(a5) # 0x45ee8 # small_cnt_tab+0x50>
	fmul.d	fa4,fa0,fa4
	auipc	a5,0x15
	fld	fa3,-330(a5) # 0x45ef0 # small_cnt_tab+0x58>
	auipc	a5,0x15
	fld	ft1,-370(a5) # 0x45ed0 # small_cnt_tab+0x38>
	fadd.d	fa5,fa5,fa2
	auipc	a5,0x15
	fld	ft2,-342(a5) # 0x45ef8 # small_cnt_tab+0x60>
	auipc	a5,0x15
	fld	fa1,-382(a5) # 0x45ed8 # small_cnt_tab+0x40>
	auipc	a5,0x15
	fld	ft0,-350(a5) # 0x45f00 # small_cnt_tab+0x68>
	fsub.d	fa4,fa4,fa3
	auipc	a5,0x15
	fld	fa3,-394(a5) # 0x45ee0 # small_cnt_tab+0x48>
	auipc	a5,0x12
	fld	fa2,-714(a5) # 0x42da8 # udatatypename+0x3e0>
	fmul.d	fa5,fa5,fa0
	fmul.d	fa4,fa4,fa0
	fsub.d	fa5,fa5,ft3
	fadd.d	fa4,fa4,ft2
	fmul.d	fa5,fa5,fa0
	fmul.d	fa4,fa4,fa0
	fadd.d	fa5,fa5,ft1
	fsub.d	fa4,fa4,ft0
	fmul.d	fa5,fa5,fa0
	fmul.d	fa4,fa4,fa0
	fsub.d	fa5,fa5,fa1
	fadd.d	fa4,fa4,fa2
	fmul.d	fa5,fa5,fa0
	fadd.d	fa5,fa5,fa3
	fmul.d	fa0,fa5,fa0
	fdiv.d	fa0,fa0,fa4
	ret

acos:
	addi	sp,sp,-48
	sd	s0,32(sp)
	fmv.x.d	s0,fa0
	sd	ra,40(sp)
	sd	s1,24(sp)
	srli	a3,s0,0x20
	slli	a5,a3,0x21
	fsd	fs0,8(sp)
	lui	a4,0x3ff00
	srli	a5,a5,0x21
	bltu	a5,a4,0x310fe # acos+0x42>
	lui	a4,0xc0100
	addw	a5,a5,a4
	or	a5,a5,s0
	sext.w	a5,a5
	bnez	a5,0x311aa # acos+0xee>
	sext.w	a3,a3
	fmv.d.x	fa0,zero
	bltz	a3,0x311c2 # acos+0x106>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	fld	fs0,8(sp)
	addi	sp,sp,48
	ret
	lui	a4,0x3fe00
	bleu	a4,a5,0x3112e # acos+0x72>
	lui	a4,0x3c600
	bltu	a4,a5,0x311e2 # acos+0x126>
	ld	ra,40(sp)
	ld	s0,32(sp)
	auipc	a5,0x15
	fld	fa0,-514(a5) # 0x45f10 # small_cnt_tab+0x78>
	auipc	a5,0x15
	fld	fa5,-530(a5) # 0x45f08 # small_cnt_tab+0x70>
	ld	s1,24(sp)
	fld	fs0,8(sp)
	fadd.d	fa0,fa0,fa5
	addi	sp,sp,48
	ret
	sext.w	a3,a3
	auipc	a5,0x12
	fld	fs0,-904(a5) # 0x42da8 # udatatypename+0x3e0>
	bltz	a3,0x3121a # acos+0x15e>
	fsub.d	fs0,fs0,fa0
	auipc	a5,0x15
	fld	fa0,-544(a5) # 0x45f20 # small_cnt_tab+0x88>
	fmul.d	fs0,fs0,fa0
	fmv.d	fa0,fs0
	jal	ra,0x32a2a # sqrt>
	fmv.d	fa5,fa0
	fmv.d	fa0,fs0
	fmv.x.d	s1,fa5
	srli	s0,s1,0x20
	slli	s0,s0,0x20
	fmv.d.x	fa5,s0
	fmv.d.x	fa3,s0
	fmul.d	fa4,fa5,fa5
	fmv.d.x	fa5,s1
	fadd.d	fa5,fa5,fa3
	fsub.d	fs0,fs0,fa4
	fdiv.d	fs0,fs0,fa5
	jal	ra,0x31012 # R>
	fmv.d.x	fa5,s1
	ld	ra,40(sp)
	ld	s1,24(sp)
	fmul.d	fa0,fa0,fa5
	fmv.d.x	fa5,s0
	ld	s0,32(sp)
	fadd.d	fa0,fa0,fs0
	fld	fs0,8(sp)
	addi	sp,sp,48
	fadd.d	fa0,fa0,fa5
	fadd.d	fa0,fa0,fa0
	ret
	fsub.d	fa0,fa0,fa0
	ld	ra,40(sp)
	ld	s0,32(sp)
	fmv.d.x	fa5,zero
	ld	s1,24(sp)
	fld	fs0,8(sp)
	fdiv.d	fa0,fa5,fa0
	addi	sp,sp,48
	ret
	ld	ra,40(sp)
	ld	s0,32(sp)
	auipc	a5,0x13
	fld	fa0,866(a5) # 0x44528 # mode.0+0x1a8>
	auipc	a5,0x15
	fld	fa5,-710(a5) # 0x45f08 # small_cnt_tab+0x70>
	ld	s1,24(sp)
	fld	fs0,8(sp)
	fadd.d	fa0,fa0,fa5
	addi	sp,sp,48
	ret
	fmul.d	fa0,fa0,fa0
	jal	ra,0x31012 # R>
	fmv.d.x	fa3,s0
	auipc	a5,0x15
	fld	fa4,-726(a5) # 0x45f18 # small_cnt_tab+0x80>
	ld	ra,40(sp)
	fmul.d	fa0,fa0,fa3
	ld	s0,32(sp)
	auipc	a5,0x15
	fld	fa5,-750(a5) # 0x45f10 # small_cnt_tab+0x78>
	ld	s1,24(sp)
	fld	fs0,8(sp)
	addi	sp,sp,48
	fsub.d	fa0,fa4,fa0
	fsub.d	fa0,fa3,fa0
	fsub.d	fa0,fa5,fa0
	ret
	fadd.d	fs0,fa0,fs0
	auipc	a5,0x15
	fld	fa5,-766(a5) # 0x45f20 # small_cnt_tab+0x88>
	fmul.d	fs0,fs0,fa5
	fmv.d	fa0,fs0
	jal	ra,0x32a2a # sqrt>
	fmv.d	fa5,fa0
	fmv.d	fa0,fs0
	fmv.d	fs0,fa5
	jal	ra,0x31012 # R>
	auipc	a5,0x15
	fld	fa4,-810(a5) # 0x45f18 # small_cnt_tab+0x80>
	fmul.d	fa0,fa0,fs0
	auipc	a5,0x15
	fld	fa5,-830(a5) # 0x45f10 # small_cnt_tab+0x78>
	fsub.d	fa0,fa0,fa4
	fadd.d	fa0,fa0,fs0
	fsub.d	fa0,fa5,fa0
	fadd.d	fa0,fa0,fa0
	j	0x310f2 # acos+0x36>

R2:
	auipc	a5,0x15
	fld	fa5,-944(a5) # 0x45eb8 # small_cnt_tab+0x20>
	fmul.d	fa5,fa0,fa5
	auipc	a5,0x15
	fld	fa2,-948(a5) # 0x45ec0 # small_cnt_tab+0x28>
	auipc	a5,0x15
	fld	ft3,-948(a5) # 0x45ec8 # small_cnt_tab+0x30>
	auipc	a5,0x15
	fld	fa4,-924(a5) # 0x45ee8 # small_cnt_tab+0x50>
	fmul.d	fa4,fa0,fa4
	auipc	a5,0x15
	fld	fa3,-928(a5) # 0x45ef0 # small_cnt_tab+0x58>
	auipc	a5,0x15
	fld	ft1,-968(a5) # 0x45ed0 # small_cnt_tab+0x38>
	fadd.d	fa5,fa5,fa2
	auipc	a5,0x15
	fld	ft2,-940(a5) # 0x45ef8 # small_cnt_tab+0x60>
	auipc	a5,0x15
	fld	fa1,-980(a5) # 0x45ed8 # small_cnt_tab+0x40>
	auipc	a5,0x15
	fld	ft0,-948(a5) # 0x45f00 # small_cnt_tab+0x68>
	fsub.d	fa4,fa4,fa3
	auipc	a5,0x15
	fld	fa3,-992(a5) # 0x45ee0 # small_cnt_tab+0x48>
	auipc	a5,0x12
	fld	fa2,-1312(a5) # 0x42da8 # udatatypename+0x3e0>
	fmul.d	fa5,fa5,fa0
	fmul.d	fa4,fa4,fa0
	fsub.d	fa5,fa5,ft3
	fadd.d	fa4,fa4,ft2
	fmul.d	fa5,fa5,fa0
	fmul.d	fa4,fa4,fa0
	fadd.d	fa5,fa5,ft1
	fsub.d	fa4,fa4,ft0
	fmul.d	fa5,fa5,fa0
	fmul.d	fa4,fa4,fa0
	fsub.d	fa5,fa5,fa1
	fadd.d	fa4,fa4,fa2
	fmul.d	fa5,fa5,fa0
	fadd.d	fa5,fa5,fa3
	fmul.d	fa0,fa5,fa0
	fdiv.d	fa0,fa0,fa4
	ret

asin:
	fmv.x.d	a5,fa0
	addi	sp,sp,-48
	sd	s1,24(sp)
	srli	s1,a5,0x20
	sd	s0,32(sp)
	slli	s0,s1,0x21
	sd	ra,40(sp)
	sd	s2,16(sp)
	fsd	fs0,8(sp)
	fsd	fs1,0(sp)
	lui	a4,0x3ff00
	srli	s0,s0,0x21
	bltu	s0,a4,0x3137c # asin+0x6a>
	lui	a4,0xc0100
	addw	s0,s0,a4
	or	s0,s0,a5
	sext.w	s0,s0
	beqz	s0,0x31362 # asin+0x50>
	fsub.d	fs0,fa0,fa0
	fmv.d.x	fa5,zero
	fdiv.d	fs0,fa5,fs0
	ld	ra,40(sp)
	ld	s0,32(sp)
	fmv.d	fa0,fs0
	ld	s1,24(sp)
	ld	s2,16(sp)
	fld	fs0,8(sp)
	fld	fs1,0(sp)
	addi	sp,sp,48
	ret
	auipc	a4,0x15
	fld	fs0,-1106(a4) # 0x45f10 # small_cnt_tab+0x78>
	fmul.d	fs0,fa0,fs0
	auipc	a5,0x15
	fld	fa5,-1126(a5) # 0x45f08 # small_cnt_tab+0x70>
	fadd.d	fs0,fs0,fa5
	j	0x3134e # asin+0x3c>
	lui	a4,0x3fe00
	bleu	a4,s0,0x313a8 # asin+0x96>
	lui	a4,0xfff00
	addw	s0,s0,a4
	lui	a4,0x3e400
	fmv.d	fs0,fa0
	bltu	s0,a4,0x3134e # asin+0x3c>
	fmul.d	fa0,fa0,fa0
	jal	ra,0x31268 # R>
	fmul.d	fa0,fa0,fs0
	fadd.d	fs0,fa0,fs0
	j	0x3134e # asin+0x3c>
	jal	ra,0x32a24 # fabs>
	auipc	a5,0x12
	fld	fa5,-1540(a5) # 0x42da8 # udatatypename+0x3e0>
	fsub.d	fa5,fa5,fa0
	auipc	a5,0x15
	fld	fs1,-1176(a5) # 0x45f20 # small_cnt_tab+0x88>
	fmul.d	fs1,fa5,fs1
	fmv.d	fa0,fs1
	jal	ra,0x32a2a # sqrt>
	fmv.d	fa5,fa0
	fmv.d	fa0,fs1
	fmv.x.d	s2,fa5
	jal	ra,0x31268 # R>
	lui	a5,0x3fef3
	addi	a5,a5,818 # 0x3fef3332 # __BSS_END__+0x3fea4faa>
	bleu	s0,a5,0x31420 # asin+0x10e>
	fmv.d.x	fa5,s2
	fmv.d.x	fa4,s2
	auipc	a5,0x15
	fld	fs0,-1248(a5) # 0x45f10 # small_cnt_tab+0x78>
	fmul.d	fa0,fa5,fa0
	auipc	a5,0x15
	fld	fa5,-1252(a5) # 0x45f18 # small_cnt_tab+0x80>
	fadd.d	fa0,fa0,fa4
	fadd.d	fa0,fa0,fa0
	fsub.d	fa0,fa0,fa5
	fsub.d	fs0,fs0,fa0
	sext.w	s1,s1
	bgez	s1,0x3134e # asin+0x3c>
	fneg.d	fs0,fs0
	j	0x3134e # asin+0x3c>
	srli	a5,s2,0x20
	slli	a5,a5,0x20
	fmv.d.x	fa5,a5
	fmv.d.x	fa4,a5
	fmv.d.x	fa1,a5
	fmul.d	fa2,fa5,fa5
	fmv.d.x	fa5,s2
	fadd.d	fa1,fa1,fa1
	auipc	a5,0x15
	fld	fs0,-1302(a5) # 0x45f28 # small_cnt_tab+0x90>
	fadd.d	fa3,fa5,fa4
	fadd.d	fa5,fa5,fa5
	auipc	a4,0x15
	fld	fa4,-1334(a4) # 0x45f18 # small_cnt_tab+0x80>
	fsub.d	fs1,fs1,fa2
	fmul.d	fa0,fa5,fa0
	fsub.d	fa5,fs0,fa1
	fdiv.d	fs1,fs1,fa3
	fadd.d	fs1,fs1,fs1
	fsub.d	fs1,fa4,fs1
	fsub.d	fs1,fa0,fs1
	fsub.d	fs1,fs1,fa5
	fsub.d	fs0,fs0,fs1
	j	0x31414 # asin+0x102>

atan2:
	fmv.x.d	a5,fa1
	li	a4,-1
	srli	a4,a4,0x1
	li	a2,2047
	and	a0,a4,a5
	slli	a2,a2,0x34
	fmv.x.d	a3,fa0
	bltu	a2,a0,0x314fa # atan2+0x7e>
	and	a4,a4,a3
	bltu	a2,a4,0x314fa # atan2+0x7e>
	srai	a6,a5,0x20
	lui	a4,0xc0100
	sext.w	a1,a5
	addw	a4,a4,a6
	or	a4,a4,a1
	sext.w	a4,a4
	srai	a2,a3,0x20
	sext.w	a0,a3
	beqz	a4,0x3157a # atan2+0xfe>
	addi	sp,sp,-16
	lui	a4,0x80000
	sd	s0,0(sp)
	not	a4,a4
	srliw	s0,a6,0x1e
	srliw	a7,a2,0x1f
	andi	s0,s0,2
	and	a2,a2,a4
	or	s0,s0,a7
	sd	ra,8(sp)
	or	a0,a0,a2
	sext.w	s0,s0
	bnez	a0,0x31508 # atan2+0x8c>
	li	a5,2
	beq	s0,a5,0x3157e # atan2+0x102>
	li	a5,3
	bne	s0,a5,0x314f2 # atan2+0x76>
	auipc	a5,0x15
	fld	fa0,-1466(a5) # 0x45f30 # small_cnt_tab+0x98>
	ld	ra,8(sp)
	ld	s0,0(sp)
	addi	sp,sp,16
	ret
	fmv.d.x	fa5,a5
	fmv.d.x	fa4,a3
	fadd.d	fa0,fa5,fa4
	ret
	and	a6,a6,a4
	or	a1,a1,a6
	beqz	a1,0x3156c # atan2+0xf0>
	lui	a4,0x7ff00
	beq	a6,a4,0x31592 # atan2+0x116>
	lui	a1,0x4000
	addw	a0,a1,a6
	bltu	a0,a2,0x3156c # atan2+0xf0>
	beq	a2,a4,0x3156c # atan2+0xf0>
	andi	a4,s0,2
	beqz	a4,0x315d2 # atan2+0x156>
	addw	a2,a2,a1
	fmv.d.x	fa0,zero
	bltu	a2,a6,0x3154a # atan2+0xce>
	fmv.d.x	fa5,a3
	fdiv.d	fa0,fa5,fa1
	jal	ra,0x32a24 # fabs>
	jal	ra,0x3ad40 # atan>
	li	a5,2
	beq	s0,a5,0x315ea # atan2+0x16e>
	beqz	s0,0x314f2 # atan2+0x76>
	auipc	a5,0x15
	fld	fa5,-1554(a5) # 0x45f40 # small_cnt_tab+0xa8>
	fsub.d	fa0,fa0,fa5
	auipc	a5,0x13
	fld	fa5,-54(a5) # 0x44528 # mode.0+0x1a8>
	fsub.d	fa0,fa0,fa5
	j	0x314f2 # atan2+0x76>
	andi	s0,s0,1
	beqz	s0,0x31588 # atan2+0x10c>
	auipc	a5,0x15
	fld	fa0,-1592(a5) # 0x45f38 # small_cnt_tab+0xa0>
	j	0x314f2 # atan2+0x76>
	j	0x3ad40 # atan>
	auipc	a5,0x13
	fld	fa0,-86(a5) # 0x44528 # mode.0+0x1a8>
	j	0x314f2 # atan2+0x76>
	auipc	a5,0x15
	fld	fa0,-1656(a5) # 0x45f10 # small_cnt_tab+0x78>
	j	0x314f2 # atan2+0x76>
	addiw	s0,s0,-1
	sext.w	a5,s0
	li	a4,2
	beq	a2,a6,0x315ba # atan2+0x13e>
	fmv.d.x	fa0,zero
	bltu	a4,a5,0x314f2 # atan2+0x76>
	slli	s0,s0,0x20
	srli	a5,s0,0x1d
	auipc	a4,0x15
	addi	a4,a4,-1612 # 0x45f60 # CSWTCH.8>
	add	a5,a5,a4
	fld	fa0,0(a5)
	j	0x314f2 # atan2+0x76>
	bltu	a4,a5,0x31604 # atan2+0x188>
	slli	s0,s0,0x20
	srli	a5,s0,0x1d
	auipc	a4,0x15
	addi	a4,a4,-1660 # 0x45f48 # CSWTCH.7>
	add	a5,a5,a4
	fld	fa0,0(a5)
	j	0x314f2 # atan2+0x76>
	fdiv.d	fa0,fa0,fa1
	jal	ra,0x32a24 # fabs>
	jal	ra,0x3ad40 # atan>
	li	a5,1
	bne	s0,a5,0x3154a # atan2+0xce>
	fneg.d	fa0,fa0
	j	0x314f2 # atan2+0x76>
	auipc	a5,0x15
	fld	fa5,-1706(a5) # 0x45f40 # small_cnt_tab+0xa8>
	fsub.d	fa0,fa0,fa5
	auipc	a5,0x13
	fld	fa5,-206(a5) # 0x44528 # mode.0+0x1a8>
	fsub.d	fa0,fa5,fa0
	j	0x314f2 # atan2+0x76>
	auipc	a5,0x15
	fld	fa0,-1756(a5) # 0x45f28 # small_cnt_tab+0x90>
	j	0x314f2 # atan2+0x76>

ceil:
	fmv.x.d	a5,fa0
	li	a3,1074
	srli	a4,a5,0x34
	andi	a4,a4,2047
	blt	a3,a4,0x3166c # ceil+0x5e>
	fmv.d.x	fa5,zero
	feq.d	a3,fa0,fa5
	bnez	a3,0x3166c # ceil+0x5e>
	addi	sp,sp,-16
	auipc	a3,0x15
	fld	fa4,-1710(a3) # 0x45f80 # CSWTCH.8+0x20>
	bltz	a5,0x3167e # ceil+0x70>
	fadd.d	fa5,fa0,fa4
	li	a3,1022
	fsub.d	fa5,fa5,fa4
	fsub.d	fa5,fa5,fa0
	ble	a4,a3,0x31672 # ceil+0x64>
	fmv.d.x	fa4,a5
	fadd.d	fa4,fa4,fa5
	fmv.x.d	a5,fa4
	fmv.d.x	fa4,zero
	flt.d	a4,fa5,fa4
	bnez	a4,0x3169e # ceil+0x90>
	fmv.d.x	fa0,a5
	addi	sp,sp,16
	ret
	fmv.d.x	fa0,a5
	ret
	fsd	fa5,8(sp)
	auipc	a5,0x11
	ld	a5,1844(a5) # 0x42da8 # udatatypename+0x3e0>
	j	0x31664 # ceil+0x56>
	fsub.d	fa5,fa0,fa4
	li	a3,1022
	fadd.d	fa5,fa5,fa4
	fsub.d	fa5,fa5,fa0
	blt	a3,a4,0x3164e # ceil+0x40>
	fsd	fa5,8(sp)
	auipc	a5,0x15
	ld	a5,-1820(a5) # 0x45f78 # CSWTCH.8+0x18>
	j	0x31664 # ceil+0x56>
	fmv.d.x	fa4,a5
	auipc	a4,0x11
	fld	fa5,1798(a4) # 0x42da8 # udatatypename+0x3e0>
	fadd.d	fa5,fa4,fa5
	fmv.x.d	a5,fa5
	j	0x31664 # ceil+0x56>

cos:
	addi	sp,sp,-48
	sd	s0,32(sp)
	auipc	s0,0x1c
	ld	s0,-920(s0) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	ld	a4,0(s0)
	fmv.x.d	a5,fa0
	lui	a3,0x3fe92
	sd	a4,24(sp)
	slli	a4,a5,0x1
	sd	ra,40(sp)
	srli	a4,a4,0x21
	addi	a3,a3,507 # 0x3fe921fb # __BSS_END__+0x3fe43e73>
	bltu	a3,a4,0x3170e # cos+0x5a>
	lui	a3,0x3e46a
	addi	a3,a3,157 # 0x3e46a09d # __BSS_END__+0x3e41bd15>
	bltu	a3,a4,0x3173e # cos+0x8a>
	auipc	a4,0x15
	fld	fa5,-1888(a4) # 0x45f88 # CSWTCH.8+0x28>
	fadd.d	fa5,fa0,fa5
	auipc	a5,0x11
	fld	fa0,1716(a5) # 0x42da8 # udatatypename+0x3e0>
	fsd	fa5,0(sp)
	ld	a4,24(sp)
	ld	a5,0(s0)
	bne	a4,a5,0x31774 # cos+0xc0>
	ld	ra,40(sp)
	ld	s0,32(sp)
	addi	sp,sp,48
	ret
	lui	a3,0x7ff00
	bltu	a4,a3,0x3171c # cos+0x68>
	fsub.d	fa0,fa0,fa0
	j	0x316fe # cos+0x4a>
	addi	a0,sp,8
	jal	ra,0x39f80 # __rem_pio2>
	andi	a0,a0,3
	li	a5,1
	beq	a0,a5,0x31764 # cos+0xb0>
	li	a5,2
	fld	fa1,16(sp)
	fld	fa0,8(sp)
	beq	a0,a5,0x31754 # cos+0xa0>
	beqz	a0,0x3175e # cos+0xaa>
	li	a0,1
	jal	ra,0x3aa94 # __sin>
	j	0x316fe # cos+0x4a>
	ld	a4,24(sp)
	ld	a5,0(s0)
	bne	a4,a5,0x31774 # cos+0xc0>
	ld	s0,32(sp)
	ld	ra,40(sp)
	fmv.d.x	fa1,zero
	addi	sp,sp,48
	j	0x39e16 # __cos>
	jal	ra,0x39e16 # __cos>
	fneg.d	fa0,fa0
	j	0x316fe # cos+0x4a>
	jal	ra,0x39e16 # __cos>
	j	0x316fe # cos+0x4a>
	fld	fa1,16(sp)
	fld	fa0,8(sp)
	li	a0,1
	jal	ra,0x3aa94 # __sin>
	fneg.d	fa0,fa0
	j	0x316fe # cos+0x4a>
	jal	ra,0x37f18 # __stack_chk_fail>

cosh:
	fmv.x.d	a5,fa0
	addi	sp,sp,-32
	lui	a4,0x3fe63
	slli	a5,a5,0x1
	srli	a3,a5,0x21
	sd	ra,24(sp)
	addi	a4,a4,-447 # 0x3fe62e41 # __BSS_END__+0x3fe14ab9>
	srli	a5,a5,0x1
	bltu	a4,a3,0x317bc # cosh+0x44>
	lui	a4,0x3e500
	bleu	a4,a3,0x31802 # cosh+0x8a>
	fmv.d.x	fa4,a5
	auipc	a4,0x14
	fld	fa5,2024(a4) # 0x45f88 # CSWTCH.8+0x28>
	ld	ra,24(sp)
	fadd.d	fa5,fa5,fa4
	auipc	a5,0x11
	fld	fa0,1530(a5) # 0x42da8 # udatatypename+0x3e0>
	fsd	fa5,8(sp)
	addi	sp,sp,32
	ret
	lui	a4,0x40863
	addi	a4,a4,-447 # 0x40862e41 # __BSS_END__+0x40814ab9>
	fmv.d.x	fa0,a5
	bleu	a3,a4,0x317dc # cosh+0x64>
	ld	ra,24(sp)
	auipc	a5,0x11
	fld	fa1,1498(a5) # 0x42da8 # udatatypename+0x3e0>
	addi	sp,sp,32
	j	0x39eb4 # __expo2>
	jal	ra,0x3182c # exp>
	auipc	a5,0x11
	fld	fa5,1480(a5) # 0x42da8 # udatatypename+0x3e0>
	fdiv.d	fa5,fa5,fa0
	ld	ra,24(sp)
	auipc	a5,0x14
	fld	fa4,1842(a5) # 0x45f20 # small_cnt_tab+0x88>
	addi	sp,sp,32
	fadd.d	fa0,fa5,fa0
	fmul.d	fa0,fa0,fa4
	ret
	fmv.d.x	fa0,a5
	jal	ra,0x319de # expm1>
	auipc	a5,0x11
	fld	fa4,1438(a5) # 0x42da8 # udatatypename+0x3e0>
	fadd.d	fa5,fa0,fa4
	fmul.d	fa0,fa0,fa0
	ld	ra,24(sp)
	addi	sp,sp,32
	fadd.d	fa5,fa5,fa5
	fdiv.d	fa0,fa0,fa5
	fadd.d	fa0,fa0,fa4
	ret

exp:
	fmv.x.d	a2,fa0
	li	a4,62
	srli	a0,a2,0x34
	andi	a0,a0,2047
	addiw	a5,a0,-969
	bltu	a4,a5,0x318e8 # exp+0xbc>
	auipc	a5,0x14
	addi	a5,a5,1884 # 0x45fa0 # __exp_data>
	fld	fa5,0(a5)
	fmv.d.x	fa2,a2
	fld	fa4,8(a5)
	fld	fa3,16(a5)
	fmul.d	fa5,fa2,fa5
	fld	ft0,24(a5)
	fld	fa0,40(a5)
	fld	fa2,56(a5)
	fld	ft2,32(a5)
	fld	ft1,48(a5)
	fadd.d	fa5,fa5,fa4
	fsub.d	fa1,fa5,fa4
	fmv.x.d	a3,fa5
	fmv.d.x	fa5,a2
	andi	a4,a3,127
	slli	a4,a4,0x1
	addi	a1,a4,14
	fmul.d	fa4,fa1,fa3
	fmul.d	fa1,fa1,ft0
	slli	a1,a1,0x3
	add	a1,a1,a5
	ld	a1,0(a1)
	addi	a4,a4,15
	slli	a4,a4,0x3
	fadd.d	fa4,fa4,fa5
	add	a5,a5,a4
	ld	a4,0(a5)
	slli	a5,a3,0x2d
	add	a5,a5,a4
	fadd.d	fa4,fa4,fa1
	fmul.d	fa0,fa4,fa0
	fmul.d	fa3,fa4,fa4
	fmul.d	fa5,fa4,fa2
	fmv.d.x	fa2,a1
	fadd.d	fa4,fa4,fa2
	fadd.d	fa0,fa0,ft2
	fmul.d	fa2,fa3,fa3
	fadd.d	fa5,fa5,ft1
	fmul.d	fa0,fa0,fa3
	fmul.d	fa5,fa5,fa2
	fadd.d	fa0,fa0,fa4
	fadd.d	fa0,fa0,fa5
	beqz	a0,0x3190e # exp+0xe2>
	fmv.d.x	fa5,a5
	fmul.d	fa0,fa0,fa5
	fadd.d	fa0,fa0,fa5
	ret
	bltz	a5,0x3199c # exp+0x170>
	li	a5,1032
	bleu	a0,a5,0x3194a # exp+0x11e>
	li	a5,-1
	slli	a5,a5,0x34
	beq	a2,a5,0x319d8 # exp+0x1ac>
	li	a5,2047
	beq	a0,a5,0x3199c # exp+0x170>
	li	a0,0
	bltz	a2,0x319d4 # exp+0x1a8>
	j	0x39f54 # __math_oflow>
	slli	a4,a3,0x20
	bgez	a4,0x319ae # exp+0x182>
	li	a4,511
	slli	a4,a4,0x35
	add	a5,a5,a4
	fmv.d.x	fa5,a5
	fmv.d.x	fa4,a5
	auipc	a4,0x11
	fld	fa2,1154(a4) # 0x42da8 # udatatypename+0x3e0>
	fmul.d	fa5,fa0,fa5
	fadd.d	fa3,fa5,fa4
	flt.d	a4,fa3,fa2
	bnez	a4,0x3194e # exp+0x122>
	auipc	a5,0x14
	fld	fa0,1628(a5) # 0x45f98 # CSWTCH.8+0x38>
	fmul.d	fa0,fa3,fa0
	ret
	li	a0,0
	j	0x31844 # exp+0x18>
	fadd.d	fa1,fa3,fa2
	fsub.d	ft0,fa4,fa3
	fmv.d.x	fa0,zero
	addi	sp,sp,-16
	fsub.d	fa4,fa2,fa1
	fadd.d	fa5,ft0,fa5
	fadd.d	fa4,fa4,fa3
	fadd.d	fa5,fa4,fa5
	fadd.d	fa5,fa5,fa1
	fsub.d	fa5,fa5,fa2
	feq.d	a5,fa5,fa0
	bnez	a5,0x31986 # exp+0x15a>
	auipc	a5,0x14
	fld	fa0,1566(a5) # 0x45f98 # CSWTCH.8+0x38>
	fmul.d	fa0,fa5,fa0
	auipc	a5,0x14
	fld	fa4,1554(a5) # 0x45f98 # CSWTCH.8+0x38>
	fsd	fa4,0(sp)
	fld	fa5,0(sp)
	fmul.d	fa5,fa5,fa4
	fsd	fa5,8(sp)
	addi	sp,sp,16
	ret
	fmv.d.x	fa5,a2
	auipc	a5,0x11
	fld	fa0,1032(a5) # 0x42da8 # udatatypename+0x3e0>
	fadd.d	fa0,fa5,fa0
	ret
	li	a4,-1009
	slli	a4,a4,0x34
	add	a5,a5,a4
	fmv.d.x	fa5,a5
	fmv.d.x	fa4,a5
	fmul.d	fa0,fa0,fa5
	auipc	a4,0x14
	fld	fa5,1486(a4) # 0x45f90 # CSWTCH.8+0x30>
	fadd.d	fa0,fa0,fa4
	fmul.d	fa0,fa0,fa5
	ret
	j	0x39f5e # __math_uflow>
	fmv.d.x	fa0,zero
	ret

expm1:
	fmv.x.d	a5,fa0
	lui	a3,0x40437
	addi	a3,a3,-1927 # 0x40436879 # __BSS_END__+0x403e84f1>
	srai	a2,a5,0x20
	slli	a4,a2,0x21
	srli	a4,a4,0x21
	srli	a1,a5,0x3f
	bleu	a4,a3,0x31a6a # expm1+0x8c>
	slli	a3,a5,0x1
	li	a4,2047
	srli	a3,a3,0x1
	slli	a4,a4,0x34
	bltu	a4,a3,0x31a68 # expm1+0x8a>
	bnez	a1,0x31bfe # expm1+0x220>
	auipc	a4,0x15
	fld	fa5,-480(a4) # 0x46830 # __exp_data+0x890>
	flt.d	a4,fa5,fa0
	bnez	a4,0x31bde # expm1+0x200>
	auipc	a4,0x15
	fld	fa4,-472(a4) # 0x46848 # __exp_data+0x8a8>
	fmul.d	fa4,fa0,fa4
	auipc	a4,0x14
	fld	ft2,1268(a4) # 0x45f20 # small_cnt_tab+0x88>
	fmv.d	fa5,ft2
	fadd.d	fa5,fa5,fa4
	auipc	a4,0x15
	fld	fa2,-508(a4) # 0x46840 # __exp_data+0x8a0>
	auipc	a4,0x15
	fld	fa4,-548(a4) # 0x46820 # __exp_data+0x880>
	fcvt.w.d	a4,fa5,rtz
	fcvt.d.w	fa5,a4
	sext.w	a4,a4
	fmul.d	fa2,fa5,fa2
	fmul.d	fa5,fa5,fa4
	fmv.d.x	fa4,a5
	fsub.d	fa2,fa4,fa2
	j	0x31ba4 # expm1+0x1c6>
	ret
	lui	a3,0x3fd63
	addi	a3,a3,-446 # 0x3fd62e42 # __BSS_END__+0x3fd14aba>
	bltu	a3,a4,0x31b78 # expm1+0x19a>
	lui	a3,0x3c900
	bltu	a4,a3,0x31c08 # expm1+0x22a>
	li	a4,0
	auipc	a3,0x14
	fld	ft2,1184(a3) # 0x45f20 # small_cnt_tab+0x88>
	fmv.d.x	fa3,a5
	fmv.d.x	fa1,a5
	auipc	a3,0x15
	fld	fa4,-576(a3) # 0x46850 # __exp_data+0x8b0>
	fmul.d	fa3,fa3,ft2
	auipc	a3,0x15
	fld	ft5,-580(a3) # 0x46858 # __exp_data+0x8b8>
	auipc	a3,0x15
	fld	ft4,-580(a3) # 0x46860 # __exp_data+0x8c0>
	auipc	a3,0x15
	fld	ft3,-580(a3) # 0x46868 # __exp_data+0x8c8>
	auipc	a3,0x15
	fld	fa5,-580(a3) # 0x46870 # __exp_data+0x8d0>
	auipc	a3,0x11
	fld	ft1,748(a3) # 0x42da8 # udatatypename+0x3e0>
	auipc	a3,0x15
	fld	ft0,-580(a3) # 0x46880 # __exp_data+0x8e0>
	fmul.d	fa0,fa1,fa3
	auipc	a3,0x15
	fld	fa1,-600(a3) # 0x46878 # __exp_data+0x8d8>
	fmul.d	fa4,fa0,fa4
	fadd.d	fa4,fa4,ft5
	fmul.d	fa4,fa4,fa0
	fsub.d	fa4,fa4,ft4
	fmul.d	fa4,fa4,fa0
	fadd.d	fa4,fa4,ft3
	fmul.d	fa4,fa4,fa0
	fsub.d	fa4,fa4,fa5
	fmul.d	fa4,fa4,fa0
	fadd.d	fa5,fa4,ft1
	fmv.d.x	fa4,a5
	fmul.d	fa3,fa3,fa5
	fsub.d	fa3,fa1,fa3
	fmul.d	fa4,fa4,fa3
	fsub.d	fa5,fa5,fa3
	fsub.d	fa4,ft0,fa4
	fdiv.d	fa5,fa5,fa4
	fmul.d	fa5,fa5,fa0
	beqz	a4,0x31bec # expm1+0x20e>
	fsub.d	fa5,fa5,fa2
	fmv.d.x	fa4,a5
	li	a3,-1
	fmul.d	fa5,fa5,fa4
	fsub.d	fa5,fa5,fa2
	fsub.d	fa5,fa5,fa0
	beq	a4,a3,0x31c58 # expm1+0x27a>
	li	a3,1
	beq	a4,a3,0x31bb6 # expm1+0x1d8>
	addiw	a3,a4,1023
	li	a2,56
	slli	a3,a3,0x34
	bltu	a2,a4,0x31c66 # expm1+0x288>
	li	a2,1023
	subw	a2,a2,a4
	li	a1,19
	slli	a2,a2,0x34
	blt	a1,a4,0x31c84 # expm1+0x2a6>
	fsub.d	fa0,fa4,fa5
	fmv.d.x	fa5,a2
	fsub.d	ft1,ft1,fa5
	fmv.d.x	fa5,a3
	fadd.d	fa0,fa0,ft1
	fmul.d	fa0,fa0,fa5
	ret
	lui	a3,0x3ff0a
	addi	a3,a3,689 # 0x3ff0a2b1 # __BSS_END__+0x3febbf29>
	bltu	a3,a4,0x31c38 # expm1+0x25a>
	auipc	a4,0x15
	fld	fa2,-836(a4) # 0x46840 # __exp_data+0x8a0>
	bnez	a1,0x31c20 # expm1+0x242>
	fsub.d	fa2,fa0,fa2
	li	a4,1
	auipc	a5,0x15
	fld	fa5,-884(a5) # 0x46820 # __exp_data+0x880>
	auipc	a5,0x14
	fld	ft2,900(a5) # 0x45f20 # small_cnt_tab+0x88>
	fsub.d	fa4,fa2,fa5
	fsub.d	fa2,fa2,fa4
	fmv.x.d	a5,fa4
	fsub.d	fa2,fa2,fa5
	j	0x31a88 # expm1+0xaa>
	fmv.d.x	fa3,a5
	auipc	a4,0x15
	fld	fa4,-818(a4) # 0x46888 # __exp_data+0x8e8>
	flt.d	a4,fa3,fa4
	beqz	a4,0x31ca2 # expm1+0x2c4>
	fadd.d	fa0,fa3,ft2
	auipc	a5,0x15
	fld	fa4,-828(a5) # 0x46890 # __exp_data+0x8f0>
	fsub.d	fa0,fa5,fa0
	fmul.d	fa0,fa0,fa4
	ret
	auipc	a5,0x15
	fld	fa5,-934(a5) # 0x46838 # __exp_data+0x898>
	fmul.d	fa0,fa0,fa5
	ret
	fmv.d.x	fa4,a5
	fmul.d	fa5,fa4,fa5
	fsub.d	fa0,fa5,fa0
	fsub.d	fa0,fa4,fa0
	ret
	auipc	a5,0x15
	fld	fa0,-982(a5) # 0x46828 # __exp_data+0x888>
	ret
	lui	a4,0x7ff00
	and	a2,a2,a4
	bnez	a2,0x31a68 # expm1+0x8a>
	fcvt.s.d	fa5,fa0
	addi	sp,sp,-16
	fsw	fa5,12(sp)
	addi	sp,sp,16
	ret
	fadd.d	fa2,fa0,fa2
	li	a4,-1
	auipc	a5,0x15
	fld	fa5,-1038(a5) # 0x46818 # __exp_data+0x878>
	auipc	a5,0x14
	fld	ft2,754(a5) # 0x45f20 # small_cnt_tab+0x88>
	j	0x31ba4 # expm1+0x1c6>
	auipc	a4,0x15
	fld	fa4,-1008(a4) # 0x46848 # __exp_data+0x8a8>
	fmul.d	fa4,fa0,fa4
	beqz	a1,0x31cc2 # expm1+0x2e4>
	auipc	a4,0x15
	fld	fa5,-1078(a4) # 0x46810 # __exp_data+0x870>
	auipc	a4,0x14
	fld	ft2,722(a4) # 0x45f20 # small_cnt_tab+0x88>
	j	0x31a38 # expm1+0x5a>
	fsub.d	fa0,fa4,fa5
	fmul.d	fa0,fa0,ft2
	fsub.d	fa0,fa0,ft2
	ret
	fsub.d	fa0,fa4,fa5
	li	a5,1024
	fadd.d	fa0,fa0,ft1
	beq	a4,a5,0x31cb0 # expm1+0x2d2>
	fmv.d.x	fa5,a3
	fmul.d	fa0,fa0,fa5
	fsub.d	fa0,fa0,ft1
	ret
	fmv.d.x	fa4,a2
	fadd.d	fa5,fa5,fa4
	fmv.d.x	fa4,a5
	fsub.d	fa0,fa4,fa5
	fmv.d.x	fa5,a3
	fadd.d	fa0,fa0,ft1
	fmul.d	fa0,fa0,fa5
	ret
	fsub.d	fa0,fa3,fa5
	fadd.d	fa0,fa0,fa0
	fadd.d	fa0,fa0,ft1
	ret
	fadd.d	fa5,fa0,fa0
	auipc	a5,0x15
	fld	fa0,-1148(a5) # 0x46838 # __exp_data+0x898>
	fmul.d	fa0,fa5,fa0
	j	0x31c7e # expm1+0x2a0>
	auipc	a4,0x14
	fld	ft2,606(a4) # 0x45f20 # small_cnt_tab+0x88>
	fmv.d	fa5,ft2
	j	0x31a38 # expm1+0x5a>

floor:
	fmv.x.d	a5,fa0
	li	a3,1074
	srli	a4,a5,0x34
	andi	a4,a4,2047
	blt	a3,a4,0x31d2e # floor+0x5e>
	fmv.d.x	fa5,zero
	feq.d	a3,fa0,fa5
	bnez	a3,0x31d2e # floor+0x5e>
	addi	sp,sp,-16
	auipc	a3,0x14
	fld	fa4,656(a3) # 0x45f80 # CSWTCH.8+0x20>
	bltz	a5,0x31d58 # floor+0x88>
	fadd.d	fa5,fa0,fa4
	li	a3,1022
	fsub.d	fa5,fa5,fa4
	fsub.d	fa5,fa5,fa0
	ble	a4,a3,0x31d50 # floor+0x80>
	fmv.d.x	fa4,a5
	fadd.d	fa4,fa4,fa5
	fmv.x.d	a5,fa4
	fmv.d.x	fa4,zero
	flt.d	a4,fa4,fa5
	bnez	a4,0x31d34 # floor+0x64>
	fmv.d.x	fa0,a5
	addi	sp,sp,16
	ret
	fmv.d.x	fa0,a5
	ret
	fmv.d.x	fa4,a5
	auipc	a4,0x11
	fld	fa5,112(a4) # 0x42da8 # udatatypename+0x3e0>
	fsub.d	fa5,fa4,fa5
	addi	sp,sp,16
	fmv.x.d	a5,fa5
	fmv.d.x	fa0,a5
	ret
	li	a5,0
	fsd	fa5,8(sp)
	j	0x31d26 # floor+0x56>
	fsub.d	fa5,fa0,fa4
	li	a3,1022
	fadd.d	fa5,fa5,fa4
	fsub.d	fa5,fa5,fa0
	blt	a3,a4,0x31d10 # floor+0x40>
	fsd	fa5,8(sp)
	auipc	a5,0x15
	ld	a5,-1350(a5) # 0x46828 # __exp_data+0x888>
	j	0x31d26 # floor+0x56>

fmod:
	fmv.x.d	a5,fa1
	fmv.x.d	a7,fa0
	slli	a3,a5,0x1
	beqz	a3,0x31e48 # fmod+0xd0>
	li	a0,-1
	srli	a4,a0,0x1
	li	a1,2047
	and	a4,a4,a5
	slli	a2,a1,0x34
	bltu	a2,a4,0x31e48 # fmod+0xd0>
	srli	a2,a7,0x34
	andi	a2,a2,2047
	beq	a2,a1,0x31e48 # fmod+0xd0>
	slli	a1,a7,0x1
	bleu	a1,a3,0x31e62 # fmod+0xea>
	bnez	a2,0x31e8e # fmod+0x116>
	slli	a4,a7,0xc
	bltz	a4,0x31dc8 # fmod+0x50>
	slli	a4,a4,0x1
	addiw	a2,a2,-1
	bgez	a4,0x31db8 # fmod+0x40>
	li	a4,1
	subw	a4,a4,a2
	sll	a1,a7,a4
	srli	a4,a5,0x34
	andi	a6,a4,2047
	bnez	a6,0x31e80 # fmod+0x108>
	slli	a4,a5,0xc
	bltz	a4,0x31dee # fmod+0x76>
	slli	a4,a4,0x1
	addiw	a6,a6,-1
	bgez	a4,0x31ddc # fmod+0x64>
	li	a3,1
	subw	a3,a3,a6
	sll	a3,a5,a3
	blt	a6,a2,0x31dfe # fmod+0x86>
	j	0x31eaa # fmod+0x132>
	beqz	a0,0x31e6a # fmod+0xf2>
	slli	a1,a0,0x1
	beq	a2,a6,0x31e12 # fmod+0x9a>
	sub	a0,a1,a3
	addiw	a2,a2,-1
	bgez	a0,0x31df4 # fmod+0x7c>
	mv	a0,a1
	slli	a1,a0,0x1
	bne	a2,a6,0x31dfe # fmod+0x86>
	sub	a3,a1,a3
	bltz	a3,0x31e1e # fmod+0xa6>
	beqz	a3,0x31e6a # fmod+0xf2>
	mv	a1,a3
	srli	a5,a1,0x34
	bnez	a5,0x31e2e # fmod+0xb6>
	slli	a1,a1,0x1
	srli	a5,a1,0x34
	addiw	a6,a6,-1
	beqz	a5,0x31e24 # fmod+0xac>
	blez	a6,0x31e9e # fmod+0x126>
	li	a4,-1
	slli	a4,a4,0x34
	add	a4,a4,a1
	slli	a6,a6,0x34
	or	a4,a6,a4
	srli	a5,a7,0x3f
	slli	a5,a5,0x3f
	or	a5,a5,a4
	j	0x31e5c # fmod+0xe4>
	fmv.d.x	fa5,a7
	fmv.d.x	fa4,a5
	fmul.d	fa0,fa5,fa4
	fdiv.d	fa5,fa0,fa0
	fmv.x.d	a5,fa5
	fmv.d.x	fa0,a5
	ret
	fmv.x.d	a5,fa0
	bne	a3,a1,0x31e5c # fmod+0xe4>
	fmv.d.x	fa4,a7
	fmv.d.x	fa5,zero
	fmul.d	fa5,fa4,fa5
	fmv.x.d	a5,fa5
	fmv.d.x	fa0,a5
	ret
	slli	a3,a5,0xc
	li	a4,1
	srli	a3,a3,0xc
	slli	a4,a4,0x34
	or	a3,a3,a4
	j	0x31dee # fmod+0x76>
	srli	a1,a0,0xc
	li	a4,1
	and	a1,a1,a7
	slli	a4,a4,0x34
	or	a1,a1,a4
	j	0x31dc8 # fmod+0x50>
	li	a4,1
	subw	a4,a4,a6
	srl	a4,a1,a4
	j	0x31e3e # fmod+0xc6>
	mv	a6,a2
	j	0x31e12 # fmod+0x9a>

frexp:
	fmv.x.d	a5,fa0
	addi	sp,sp,-16
	sd	s0,0(sp)
	srli	a4,a5,0x34
	sd	ra,8(sp)
	andi	a4,a4,2047
	mv	s0,a0
	beqz	a4,0x31ef0 # frexp+0x42>
	li	a3,2047
	beq	a4,a3,0x31ee4 # frexp+0x36>
	li	a3,-2047
	addiw	a4,a4,-1022
	slli	a3,a3,0x34
	addi	a3,a3,-1
	sw	a4,0(a0)
	li	a4,511
	and	a5,a5,a3
	slli	a4,a4,0x35
	or	a5,a5,a4
	ld	ra,8(sp)
	ld	s0,0(sp)
	fmv.d.x	fa0,a5
	addi	sp,sp,16
	ret
	fmv.d.x	fa5,zero
	fmv.d	fa4,fa0
	feq.d	a4,fa0,fa5
	beqz	a4,0x31f0e # frexp+0x60>
	ld	ra,8(sp)
	ld	s0,0(sp)
	sw	zero,0(a0)
	fmv.d.x	fa0,a5
	addi	sp,sp,16
	ret
	auipc	a4,0x15
	fld	fa0,-1654(a4) # 0x46898 # __exp_data+0x8f8>
	fmul.d	fa0,fa4,fa0
	jal	ra,0x31eae # frexp>
	lw	a4,0(s0)
	ld	ra,8(sp)
	fmv.x.d	a5,fa0
	addiw	a4,a4,-64
	sw	a4,0(s0)
	ld	s0,0(sp)
	fmv.d.x	fa0,a5
	addi	sp,sp,16
	ret

ldexp:
	j	0x32a30 # scalbn>

log:
	fmv.x.d	a5,fa0
	lui	a3,0xfe009
	li	a2,777
	slli	a3,a3,0x25
	slli	a2,a2,0x28
	add	a3,a3,a5
	mv	a4,a5
	srli	a1,a5,0x30
	bltu	a3,a2,0x3200e # log+0xd4>
	lui	a2,0x8
	addiw	a3,a1,-16
	addi	a0,a2,-33 # 0x7fdf # exit-0x8141>
	bltu	a0,a3,0x320e6 # log+0x1ac>
	lui	a5,0xfe00d
	slli	a5,a5,0x25
	add	a5,a5,a4
	auipc	a2,0x15
	addi	a2,a2,-468 # 0x46d98 # __log_data>
	srai	a3,a5,0x34
	fcvt.d.w	fa1,a3
	fld	fa4,0(a2)
	srli	a3,a5,0x2d
	andi	a3,a3,127
	fmul.d	fa4,fa1,fa4
	addi	a3,a3,9
	srli	a5,a5,0x34
	slli	a3,a3,0x4
	slli	a5,a5,0x34
	add	a3,a3,a2
	sub	a5,a4,a5
	fld	fa0,0(a3)
	fld	fa5,8(a3)
	fmv.d.x	fa2,a5
	auipc	a4,0x15
	fld	fa3,-1912(a4) # 0x46828 # __exp_data+0x888>
	fadd.d	fa4,fa4,fa5
	fmadd.d	fa3,fa2,fa0,fa3
	fld	fa5,48(a2)
	fld	ft2,40(a2)
	fld	fa2,32(a2)
	fld	ft0,8(a2)
	fld	ft3,24(a2)
	fadd.d	ft1,fa3,fa4
	fmul.d	fa5,fa3,fa5
	fmul.d	fa0,fa3,fa3
	fmul.d	fa2,fa3,fa2
	fmul.d	fa1,fa1,ft0
	fld	ft0,16(a2)
	fsub.d	fa4,fa4,ft1
	fadd.d	fa5,fa5,ft2
	fmul.d	ft0,fa0,ft0
	fmul.d	ft2,fa3,fa0
	fadd.d	fa2,fa2,ft3
	fadd.d	fa4,fa4,fa3
	fmul.d	fa0,fa5,fa0
	fadd.d	fa4,fa4,fa1
	fadd.d	fa0,fa0,fa2
	fadd.d	fa4,fa4,ft0
	fmul.d	fa0,fa0,ft2
	fadd.d	fa0,fa0,fa4
	fadd.d	fa0,fa0,ft1
	ret
	li	a3,1023
	slli	a3,a3,0x34
	beq	a5,a3,0x3212c # log+0x1f2>
	auipc	a4,0x11
	fld	fa5,-624(a4) # 0x42da8 # udatatypename+0x3e0>
	fsub.d	fa5,fa0,fa5
	auipc	a5,0x15
	addi	a5,a5,-652 # 0x46d98 # __log_data>
	fld	fa4,120(a5)
	auipc	a4,0x15
	fld	ft2,-1934(a4) # 0x468a0 # __exp_data+0x900>
	fld	ft5,112(a5)
	fld	ft3,128(a5)
	fld	fa2,136(a5)
	fmul.d	ft0,fa5,fa5
	fmul.d	ft2,fa5,ft2
	fmul.d	fa4,fa5,fa4
	fld	fa1,96(a5)
	fld	ft6,88(a5)
	fld	fa0,104(a5)
	fmul.d	fa1,fa5,fa1
	fmul.d	ft1,fa5,ft0
	fmul.d	ft4,ft0,ft3
	fadd.d	fa3,fa5,ft2
	fadd.d	fa4,fa4,ft5
	fmul.d	fa0,ft0,fa0
	fld	ft5,56(a5)
	fadd.d	fa1,fa1,ft6
	fmul.d	ft3,ft1,fa2
	fld	fa2,72(a5)
	fsub.d	fa3,fa3,ft2
	fadd.d	fa4,fa4,ft4
	fmul.d	fa2,fa5,fa2
	fld	ft4,64(a5)
	fadd.d	fa1,fa1,fa0
	fld	fa0,80(a5)
	fmul.d	ft2,fa3,fa3
	fadd.d	fa4,fa4,ft3
	fmul.d	ft0,ft0,fa0
	fadd.d	fa2,fa2,ft4
	fsub.d	fa0,fa5,fa3
	fadd.d	fa3,fa5,fa3
	fmul.d	ft2,ft2,ft5
	fmul.d	fa4,fa4,ft1
	fadd.d	fa2,fa2,ft0
	fmul.d	fa0,fa0,ft5
	fadd.d	fa4,fa4,fa1
	fadd.d	fa1,fa5,ft2
	fmul.d	fa0,fa0,fa3
	fmul.d	fa4,fa4,ft1
	fsub.d	fa5,fa5,fa1
	fadd.d	fa4,fa4,fa2
	fadd.d	fa5,fa5,ft2
	fmul.d	fa4,fa4,ft1
	fadd.d	fa0,fa0,fa5
	fadd.d	fa0,fa0,fa4
	fadd.d	fa0,fa1,fa0
	ret
	slli	a3,a5,0x1
	beqz	a3,0x32124 # log+0x1ea>
	li	a3,2047
	slli	a3,a3,0x34
	beq	a5,a3,0x3212a # log+0x1f0>
	srli	a4,a1,0xf
	bnez	a4,0x3211c # log+0x1e2>
	addi	a2,a2,-16
	and	a1,a1,a2
	beq	a1,a2,0x3211c # log+0x1e2>
	auipc	a4,0x14
	fld	fa5,-388(a4) # 0x45f80 # CSWTCH.8+0x20>
	fmul.d	fa5,fa0,fa5
	li	a4,-13
	slli	a4,a4,0x36
	fmv.x.d	a5,fa5
	add	a4,a4,a5
	j	0x31f64 # log+0x2a>
	fmv.d.x	fa0,a5
	j	0x39f4a # __math_invalid>
	li	a0,1
	j	0x39f16 # __math_divzero>
	ret
	fmv.d.x	fa0,zero
	ret

log10:
	fmv.x.d	a3,fa0
	lui	a2,0xfff00
	lui	a1,0x7ff00
	srai	a4,a3,0x20
	addw	a2,a2,a4
	mv	a5,a3
	bltu	a2,a1,0x322b8 # log10+0x186>
	slli	a5,a3,0x1
	beqz	a5,0x32304 # log10+0x1d2>
	bltz	a4,0x3232a # log10+0x1f8>
	auipc	a5,0x14
	fld	fa5,1874(a5) # 0x468a8 # __exp_data+0x908>
	fmul.d	fa5,fa0,fa5
	auipc	a4,0x14
	fld	ft3,1870(a4) # 0x468b0 # __exp_data+0x910>
	auipc	a4,0x14
	fld	fa0,1870(a4) # 0x468b8 # __exp_data+0x918>
	lui	a3,0x96
	addiw	a3,a3,-158
	fmv.x.d	a5,fa5
	srli	a4,a5,0x20
	addw	a4,a4,a3
	srliw	a3,a4,0x14
	addiw	a3,a3,-1077
	fcvt.d.w	fa2,a3
	slli	a4,a4,0x2c
	lui	a3,0x3fe6a
	fmul.d	ft3,fa2,ft3
	fmul.d	fa0,fa2,fa0
	srli	a4,a4,0x2c
	addiw	a3,a3,158
	addw	a4,a4,a3
	slli	a4,a4,0x20
	slli	a5,a5,0x20
	srli	a5,a5,0x20
	or	a5,a5,a4
	fmv.d.x	fa5,a5
	auipc	a4,0x11
	fld	fa3,-1034(a4) # 0x42da8 # udatatypename+0x3e0>
	auipc	a5,0x14
	fld	ft1,-666(a5) # 0x45f20 # small_cnt_tab+0x88>
	fsub.d	fa3,fa5,fa3
	auipc	a5,0x10
	fld	ft0,-254(a5) # 0x420c8 # log_2.0+0x178>
	auipc	a5,0x14
	fld	ft5,1834(a5) # 0x468f8 # __exp_data+0x958>
	auipc	a5,0x14
	fld	fa4,1770(a5) # 0x468c0 # __exp_data+0x920>
	auipc	a5,0x14
	fld	ft10,1770(a5) # 0x468c8 # __exp_data+0x928>
	auipc	a5,0x14
	fld	fa1,1786(a5) # 0x468e0 # __exp_data+0x940>
	auipc	a5,0x14
	fld	ft8,1762(a5) # 0x468d0 # __exp_data+0x930>
	fmul.d	ft1,fa3,ft1
	fadd.d	ft0,fa3,ft0
	auipc	a5,0x14
	fld	ft9,1770(a5) # 0x468e8 # __exp_data+0x948>
	auipc	a5,0x14
	fld	fa6,1746(a5) # 0x468d8 # __exp_data+0x938>
	auipc	a5,0x14
	fld	fa7,1762(a5) # 0x468f0 # __exp_data+0x950>
	auipc	a5,0x14
	fld	ft7,1770(a5) # 0x46900 # __exp_data+0x960>
	fmul.d	ft1,ft1,fa3
	fdiv.d	ft0,fa3,ft0
	fsub.d	fa5,fa3,ft1
	fmv.x.d	a4,fa5
	srli	a4,a4,0x20
	slli	a4,a4,0x20
	fmv.d.x	fa5,a4
	fmul.d	ft6,ft5,fa5
	fsub.d	fa3,fa3,fa5
	fmul.d	fa5,ft0,ft0
	fadd.d	ft4,ft6,fa0
	fsub.d	fa3,fa3,ft1
	fmul.d	ft2,fa5,fa5
	fsub.d	fa0,fa0,ft4
	fmul.d	fa4,ft2,fa4
	fmul.d	fa1,ft2,fa1
	fadd.d	fa0,fa0,ft6
	fadd.d	fa4,fa4,ft10
	fadd.d	fa1,fa1,ft9
	fmul.d	fa4,fa4,ft2
	fmul.d	fa1,fa1,ft2
	fadd.d	fa4,fa4,ft8
	fadd.d	fa1,fa1,fa7
	fmul.d	fa4,fa4,ft2
	fmul.d	fa1,fa1,ft2
	fadd.d	fa4,fa4,fa6
	fmul.d	fa5,fa4,fa5
	fmv.d.x	fa4,a4
	fadd.d	fa5,fa5,fa1
	fadd.d	fa5,fa5,ft1
	fmul.d	fa5,fa5,ft0
	fadd.d	fa5,fa5,fa3
	fadd.d	fa2,fa5,fa4
	fmul.d	fa5,fa5,ft5
	fmul.d	fa2,fa2,ft7
	fadd.d	fa2,fa2,ft3
	fadd.d	fa5,fa2,fa5
	fadd.d	fa0,fa0,fa5
	fadd.d	fa0,fa0,ft4
	ret
	bleu	a1,a4,0x322b6 # log10+0x184>
	lui	a2,0x3ff00
	beq	a4,a2,0x32316 # log10+0x1e4>
	lui	a3,0x96
	addiw	a3,a3,-158
	addw	a4,a4,a3
	srliw	a3,a4,0x14
	addiw	a3,a3,-1023
	fcvt.d.w	fa2,a3
	slli	a4,a4,0x2c
	lui	a3,0x3fe6a
	addiw	a3,a3,158
	srli	a4,a4,0x2c
	addw	a4,a4,a3
	auipc	a3,0x14
	fld	ft3,1480(a3) # 0x468b0 # __exp_data+0x910>
	auipc	a3,0x14
	fld	fa0,1480(a3) # 0x468b8 # __exp_data+0x918>
	fmul.d	ft3,fa2,ft3
	fmul.d	fa0,fa2,fa0
	slli	a4,a4,0x20
	j	0x321a8 # log10+0x76>
	fmul.d	fa5,fa0,fa0
	auipc	a5,0x14
	fld	fa0,1312(a5) # 0x46828 # __exp_data+0x888>
	fdiv.d	fa0,fa0,fa5
	ret
	slli	a3,a3,0x20
	fmv.d.x	fa0,zero
	beqz	a3,0x322b6 # log10+0x184>
	li	a4,1023
	fmv.d	ft3,fa0
	slli	a4,a4,0x34
	j	0x321a8 # log10+0x76>
	fsub.d	fa5,fa0,fa0
	fmv.d.x	fa0,zero
	fdiv.d	fa0,fa5,fa0
	ret

log2:
	fmv.x.d	a5,fa0
	lui	a4,0xc0116
	addi	a3,a4,-1199 # 0xffffffffc0115b51 # __BSS_END__+0xffffffffc00c77c9>
	slli	a3,a3,0x20
	lui	a2,0x10855
	add	a3,a3,a5
	slli	a2,a2,0x15
	mv	a4,a5
	srli	a1,a5,0x30
	bltu	a3,a2,0x32420 # log2+0xe8>
	lui	a2,0x8
	addiw	a3,a1,-16
	addi	a0,a2,-33 # 0x7fdf # exit-0x8141>
	bltu	a0,a3,0x324dc # log2+0x1a4>
	lui	a1,0xfe00d
	slli	a1,a1,0x25
	add	a1,a1,a4
	srli	a3,a1,0x2e
	andi	a3,a3,63
	srli	a5,a1,0x34
	addi	a3,a3,9
	auipc	a2,0x14
	addi	a2,a2,1420 # 0x46908 # __log2_data>
	slli	a3,a3,0x4
	slli	a5,a5,0x34
	add	a3,a3,a2
	sub	a5,a4,a5
	fld	fa0,0(a3)
	fmv.d.x	fa5,a5
	auipc	a4,0x14
	fld	fa4,1172(a4) # 0x46828 # __exp_data+0x888>
	srai	a1,a1,0x34
	fmadd.d	fa4,fa5,fa0,fa4
	fld	fa5,40(a2)
	fld	ft1,0(a2)
	fld	ft3,8(a3)
	fld	fa0,32(a2)
	fcvt.d.w	fa3,a1
	fld	fa1,24(a2)
	fmul.d	fa5,fa4,fa5
	fld	fa2,56(a2)
	fmul.d	ft2,ft1,fa4
	fmul.d	ft0,fa4,fa4
	fmul.d	fa2,fa4,fa2
	fadd.d	fa3,fa3,ft3
	fmul.d	fa1,fa4,fa1
	fadd.d	fa5,fa5,fa0
	fld	ft5,16(a2)
	fld	fa0,48(a2)
	fmul.d	ft4,ft0,ft0
	fmsub.d	ft1,fa4,ft1,ft2
	fadd.d	ft3,ft2,fa3
	fadd.d	fa1,fa1,ft5
	fmul.d	fa5,fa5,ft0
	fadd.d	fa0,fa2,fa0
	fld	fa2,8(a2)
	fsub.d	fa3,fa3,ft3
	fmul.d	fa4,fa4,fa2
	fadd.d	fa5,fa5,fa1
	fmul.d	fa0,fa0,ft4
	fadd.d	fa3,fa3,ft2
	fadd.d	fa4,fa4,ft1
	fadd.d	fa0,fa5,fa0
	fadd.d	fa4,fa3,fa4
	fmul.d	fa0,fa0,ft0
	fadd.d	fa0,fa0,fa4
	fadd.d	fa0,fa0,ft3
	ret
	li	a3,1023
	slli	a3,a3,0x34
	beq	a5,a3,0x32522 # log2+0x1ea>
	auipc	a4,0x11
	fld	fa5,-1666(a4) # 0x42da8 # udatatypename+0x3e0>
	fsub.d	fa5,fa0,fa5
	auipc	a4,0x14
	addi	a4,a4,1234 # 0x46908 # __log2_data>
	fld	fa3,72(a4)
	fld	fa4,136(a4)
	fld	ft3,64(a4)
	fld	ft0,128(a4)
	fld	fa1,120(a4)
	fmul.d	fa2,fa5,fa3
	fmul.d	fa0,fa5,fa4
	fld	fa3,104(a4)
	fmul.d	ft1,fa5,fa5
	fmul.d	ft2,fa5,fa1
	fmul.d	fa3,fa5,fa3
	fld	ft5,0(a4)
	fadd.d	fa2,fa2,ft3
	fadd.d	fa0,fa0,ft0
	fld	ft3,112(a4)
	fld	ft0,96(a4)
	fld	fa1,88(a4)
	fmul.d	fa4,ft5,fa5
	fadd.d	ft2,ft2,ft3
	fmul.d	fa2,fa2,ft1
	fmul.d	fa0,fa0,ft1
	fadd.d	fa3,fa3,ft0
	fmul.d	ft0,fa5,fa1
	fld	ft6,80(a4)
	fmul.d	ft4,ft1,ft1
	fld	fa1,8(a4)
	fadd.d	ft3,fa4,fa2
	fadd.d	fa0,fa0,ft2
	fmul.d	fa3,fa3,ft1
	fadd.d	ft0,ft0,ft6
	fmul.d	fa1,fa5,fa1
	fmsub.d	fa5,fa5,ft5,fa4
	fsub.d	fa4,fa4,ft3
	fmul.d	fa0,fa0,ft4
	fadd.d	fa3,fa3,ft0
	fadd.d	fa1,fa1,fa5
	fadd.d	fa5,fa4,fa2
	fadd.d	fa0,fa0,fa3
	fadd.d	fa5,fa5,fa1
	fmul.d	fa0,fa0,ft4
	fadd.d	fa0,fa0,fa5
	fadd.d	fa0,fa0,ft3
	ret
	slli	a3,a5,0x1
	beqz	a3,0x3251a # log2+0x1e2>
	li	a3,2047
	slli	a3,a3,0x34
	beq	a5,a3,0x32520 # log2+0x1e8>
	srli	a4,a1,0xf
	bnez	a4,0x32512 # log2+0x1da>
	addi	a2,a2,-16
	and	a1,a1,a2
	beq	a1,a2,0x32512 # log2+0x1da>
	auipc	a4,0x14
	fld	fa5,-1402(a4) # 0x45f80 # CSWTCH.8+0x20>
	fmul.d	fa5,fa0,fa5
	li	a4,-13
	slli	a4,a4,0x36
	fmv.x.d	a5,fa5
	add	a4,a4,a5
	j	0x32366 # log2+0x2e>
	fmv.d.x	fa0,a5
	j	0x39f4a # __math_invalid>
	li	a0,1
	j	0x39f16 # __math_divzero>
	ret
	fmv.d.x	fa0,zero
	ret

pow:
	fmv.x.d	a5,fa0
	fmv.x.d	a3,fa1
	addi	sp,sp,-80
	srli	a2,a5,0x34
	srli	t1,a3,0x34
	sd	ra,72(sp)
	sd	s0,64(sp)
	sd	s1,56(sp)
	fsd	fs0,40(sp)
	fsd	fs1,32(sp)
	li	a1,2045
	addiw	a0,a2,-1
	mv	a7,a5
	mv	t3,a3
	mv	a6,t1
	bltu	a1,a0,0x32742 # pow+0x21a>
	andi	a4,t1,2047
	addiw	a4,a4,-958
	li	a1,127
	li	a0,0
	bltu	a1,a4,0x32742 # pow+0x21a>
	lui	a4,0xc0197
	addi	a4,a4,-1365 # 0xffffffffc0196aab # __BSS_END__+0xffffffffc0148723>
	slli	a4,a4,0x20
	add	a4,a4,a7
	srli	a1,a4,0x2d
	andi	a1,a1,127
	srai	a5,a4,0x34
	addi	a6,a1,2 # 0xfffffffffe00d002 # __BSS_END__+0xfffffffffdfbec7a>
	srli	a4,a4,0x34
	auipc	a2,0x15
	addi	a2,a2,162 # 0x47628 # __pow_log_data>
	slli	a4,a4,0x34
	slli	a6,a6,0x5
	fcvt.d.w	fa1,a5
	add	a6,a6,a2
	sub	a5,a7,a4
	fmv.d.x	fa5,a5
	fld	fa0,0(a2)
	fld	fa2,8(a6)
	auipc	a4,0x14
	fld	fs0,642(a4) # 0x46828 # __exp_data+0x888>
	fmul.d	fa0,fa1,fa0
	fmadd.d	fa2,fa5,fa2,fs0
	slli	a5,a1,0x5
	add	a5,a5,a2
	fld	fa5,88(a5)
	fld	ft1,16(a2)
	fld	fa3,64(a2)
	fadd.d	fa0,fa0,fa5
	fmul.d	ft1,fa2,ft1
	fmul.d	fa3,fa2,fa3
	fld	ft4,56(a2)
	fld	fa5,48(a2)
	fld	ft2,8(a2)
	fld	ft3,40(a2)
	fadd.d	ft0,fa2,fa0
	fmul.d	fa4,fa2,ft1
	fmul.d	fa5,fa2,fa5
	fadd.d	fa3,fa3,ft4
	fmul.d	fa1,fa1,ft2
	fld	ft4,96(a5)
	fld	ft2,32(a2)
	fsub.d	fa0,fa0,ft0
	fmsub.d	ft1,ft1,fa2,fa4
	fadd.d	ft3,fa5,ft3
	fmul.d	fa3,fa3,fa4
	fadd.d	fa5,ft0,fa4
	fadd.d	fa1,fa1,ft4
	fmul.d	ft2,fa2,ft2
	fadd.d	fa0,fa0,fa2
	fld	ft4,24(a2)
	fmul.d	fa2,fa2,fa4
	fadd.d	fa3,fa3,ft3
	fsub.d	ft0,ft0,fa5
	li	a4,62
	fadd.d	ft2,ft2,ft4
	fadd.d	fa1,fa1,fa0
	fadd.d	ft0,ft0,fa4
	fmul.d	fa4,fa3,fa4
	fmv.d.x	fa3,a3
	fadd.d	fa1,fa1,ft1
	fadd.d	fa4,fa4,ft2
	fadd.d	fa1,ft0,fa1
	fmul.d	fa4,fa4,fa2
	fadd.d	fa4,fa4,fa1
	fadd.d	fa1,fa5,fa4
	fsub.d	fa5,fa5,fa1
	fmul.d	fa3,fa3,fa1
	fadd.d	fa5,fa5,fa4
	fmv.d.x	fa4,a3
	fmv.x.d	a5,fa3
	fmsub.d	fa4,fa4,fa1,fa3
	fmv.d.x	fa3,a3
	srli	a1,a5,0x34
	andi	a1,a1,2047
	fmul.d	fa1,fa5,fa3
	addiw	a2,a1,-969
	fadd.d	fa1,fa1,fa4
	bltu	a4,a2,0x327a0 # pow+0x278>
	auipc	a4,0x14
	addi	a4,a4,-1774 # 0x45fa0 # __exp_data>
	fld	fa5,0(a4)
	fmv.d.x	fa4,a5
	fld	ft0,8(a4)
	fld	fa2,16(a4)
	fmul.d	ft1,fa4,fa5
	fld	fa4,24(a4)
	fld	fa5,40(a4)
	fld	fa0,32(a4)
	fld	fa3,56(a4)
	fld	ft2,48(a4)
	fadd.d	fs1,ft1,ft0
	fsub.d	ft0,fs1,ft0
	fmv.x.d	a2,fs1
	fmv.d.x	fs1,a5
	andi	a3,a2,127
	slli	a3,a3,0x1
	addi	a6,a3,14
	fmul.d	fa2,ft0,fa2
	fmul.d	fa4,ft0,fa4
	slli	a6,a6,0x3
	add	a6,a6,a4
	ld	a6,0(a6)
	addi	a3,a3,15
	slli	a3,a3,0x3
	fadd.d	fa2,fa2,fs1
	add	a4,a4,a3
	ld	a4,0(a4)
	add	a0,a0,a2
	slli	a0,a0,0x2d
	add	a0,a0,a4
	fadd.d	fa4,fa2,fa4
	fadd.d	fa4,fa1,fa4
	fmv.d.x	fa1,a6
	fmul.d	fa5,fa4,fa5
	fmul.d	fa2,fa4,fa4
	fmul.d	fa3,fa4,fa3
	fadd.d	fa4,fa4,fa1
	fadd.d	fa0,fa5,fa0
	fmul.d	fa5,fa2,fa2
	fadd.d	fa3,fa3,ft2
	fmul.d	fa0,fa0,fa2
	fmul.d	fa3,fa3,fa5
	fadd.d	fa0,fa0,fa4
	fadd.d	fa0,fa0,fa3
	beqz	a1,0x327c0 # pow+0x298>
	fmv.d.x	fa5,a0
	fmul.d	fa0,fa0,fa5
	fadd.d	fa0,fa0,fa5
	ld	ra,72(sp)
	ld	s0,64(sp)
	ld	s1,56(sp)
	fld	fs0,40(sp)
	fld	fs1,32(sp)
	addi	sp,sp,80
	ret
	li	a1,-1
	slli	a4,a3,0x1
	slli	t4,a1,0x35
	addi	t5,a4,-1
	addi	a0,t4,-2 # 0xfffffe # __BSS_END__+0xfb1c76>
	bltu	a0,t5,0x328fc # pow+0x3d4>
	slli	a4,a5,0x1
	addi	a4,a4,-1
	bltu	a0,a4,0x32942 # pow+0x41a>
	li	a0,0
	bltz	a7,0x32812 # pow+0x2ea>
	andi	a4,a6,2047
	addiw	t1,a4,-958
	li	a1,127
	bleu	t1,a1,0x327ee # pow+0x2c6>
	li	a5,1023
	slli	a5,a5,0x34
	beq	a7,a5,0x328d8 # pow+0x3b0>
	li	a2,957
	bltu	a2,a4,0x32898 # pow+0x370>
	bleu	a7,a5,0x32a04 # pow+0x4dc>
	fmv.d.x	fa5,a3
	auipc	a5,0x10
	fld	fa0,1558(a5) # 0x42da8 # udatatypename+0x3e0>
	fadd.d	fa0,fa5,fa0
	j	0x32734 # pow+0x20c>
	bltz	a2,0x328e2 # pow+0x3ba>
	li	a4,1032
	bleu	a1,a4,0x32894 # pow+0x36c>
	bltz	a5,0x328b4 # pow+0x38c>
	ld	s0,64(sp)
	ld	ra,72(sp)
	ld	s1,56(sp)
	fld	fs0,40(sp)
	fld	fs1,32(sp)
	addi	sp,sp,80
	j	0x39f54 # __math_oflow>
	slli	a5,a2,0x20
	bltz	a5,0x32852 # pow+0x32a>
	li	a5,-1009
	slli	a5,a5,0x34
	add	a0,a0,a5
	fmv.d.x	fa5,a0
	fmv.d.x	fa4,a0
	fmul.d	fa0,fa0,fa5
	auipc	a5,0x13
	fld	fa5,1972(a5) # 0x45f90 # CSWTCH.8+0x30>
	fadd.d	fa0,fa0,fa4
	fmul.d	fa0,fa0,fa5
	j	0x32734 # pow+0x20c>
	bnez	a2,0x32568 # pow+0x40>
	fmv.d.x	fa4,a5
	auipc	a4,0x13
	fld	fa5,1930(a4) # 0x45f80 # CSWTCH.8+0x20>
	li	a7,-13
	fmul.d	fa5,fa4,fa5
	slli	a7,a7,0x36
	fmv.x.d	a5,fa5
	slli	a5,a5,0x1
	srli	a5,a5,0x1
	add	a7,a7,a5
	j	0x32568 # pow+0x40>
	andi	t1,t1,2047
	li	a4,1022
	ble	t1,a4,0x328c4 # pow+0x39c>
	li	a4,1075
	blt	a4,t1,0x32844 # pow+0x31c>
	li	a0,1075
	subw	t1,a0,t1
	sll	a4,a1,t1
	not	a4,a4
	and	a4,a4,a3
	bnez	a4,0x328c4 # pow+0x39c>
	srl	t1,a3,t1
	andi	a0,t1,1
	slli	a0,a0,0x12
	slli	a7,a5,0x1
	srli	a7,a7,0x1
	andi	a2,a2,2047
	j	0x32768 # pow+0x240>
	li	s1,511
	slli	s1,s1,0x35
	add	s1,s1,a0
	fmv.d.x	fa5,s1
	fmul.d	fs1,fa0,fa5
	fadd.d	fa5,fs1,fa5
	fmv.d	fa0,fa5
	fmv.x.d	s0,fa5
	jal	ra,0x32a24 # fabs>
	auipc	a5,0x10
	fld	fa5,1334(a5) # 0x42da8 # udatatypename+0x3e0>
	flt.d	a5,fa0,fa5
	bnez	a5,0x32998 # pow+0x470>
	fmv.d.x	fa5,s0
	auipc	a5,0x13
	fld	fa0,1810(a5) # 0x45f98 # CSWTCH.8+0x38>
	fmul.d	fa0,fa5,fa0
	j	0x32734 # pow+0x20c>
	li	a1,0
	j	0x3268e # pow+0x166>
	li	a4,2047
	sltu	a4,a4,a6
	addi	a5,a5,1
	xori	a4,a4,1
	sltu	a7,a7,a5
	andi	a5,a4,255
	li	a0,0
	bne	a7,a5,0x327b0 # pow+0x288>
	ld	s0,64(sp)
	ld	ra,72(sp)
	ld	s1,56(sp)
	fld	fs0,40(sp)
	fld	fs1,32(sp)
	addi	sp,sp,80
	j	0x39f5e # __math_uflow>
	ld	s0,64(sp)
	ld	ra,72(sp)
	ld	s1,56(sp)
	fld	fs0,40(sp)
	fld	fs1,32(sp)
	fmv.d.x	fa0,a5
	addi	sp,sp,80
	j	0x39f4a # __math_invalid>
	auipc	a5,0x10
	fld	fa0,1232(a5) # 0x42da8 # udatatypename+0x3e0>
	j	0x32734 # pow+0x20c>
	fmv.d.x	fa5,a5
	auipc	a4,0x10
	fld	fa0,1218(a4) # 0x42da8 # udatatypename+0x3e0>
	fadd.d	fa0,fa5,fa0
	beqz	a0,0x32734 # pow+0x20c>
	fneg.d	fa0,fa0
	j	0x32734 # pow+0x20c>
	beqz	a4,0x328d8 # pow+0x3b0>
	li	a1,1023
	slli	a2,a1,0x34
	beq	a7,a2,0x328d8 # pow+0x3b0>
	slli	a2,a5,0x1
	bltu	t4,a2,0x32a16 # pow+0x4ee>
	bne	a4,t4,0x32a16 # pow+0x4ee>
	slli	a5,a1,0x35
	beq	a2,a5,0x328d8 # pow+0x3b0>
	sltu	a5,a2,a5
	xori	a5,a5,1
	not	a4,a3
	andi	a5,a5,255
	srli	a4,a4,0x3f
	fmv.d.x	fa0,zero
	bne	a5,a4,0x32734 # pow+0x20c>
	fmv.d.x	fa5,a3
	fmul.d	fa0,fa5,fa5
	j	0x32734 # pow+0x20c>
	fmv.d.x	fa5,a5
	fmul.d	fa0,fa5,fa5
	bltz	a7,0x32964 # pow+0x43c>
	bgez	t3,0x32734 # pow+0x20c>
	auipc	a5,0x10
	fld	fa5,1110(a5) # 0x42da8 # udatatypename+0x3e0>
	fdiv.d	fa5,fa5,fa0
	fsd	fa5,8(sp)
	fld	fa0,8(sp)
	j	0x32734 # pow+0x20c>
	andi	t1,t1,2047
	addiw	a4,t1,-1023
	li	a5,52
	bltu	a5,a4,0x3294e # pow+0x426>
	li	a5,1075
	subw	t1,a5,t1
	sll	a5,a1,t1
	not	a5,a5
	and	a5,a5,a3
	bnez	a5,0x3294e # pow+0x426>
	srl	t1,a3,t1
	andi	a5,t1,1
	beqz	a5,0x3294e # pow+0x426>
	fneg.d	fa0,fa0
	j	0x3294e # pow+0x426>
	fmv.d.x	fa4,zero
	fmv.d.x	fa3,s0
	flt.d	a5,fa3,fa4
	bnez	a5,0x329aa # pow+0x482>
	fmv.d	fs0,fa5
	fmv.d.x	fa5,s0
	fmv.d.x	fa3,s0
	fadd.d	fa4,fa5,fs0
	fmv.d.x	fa5,s1
	fsub.d	fa0,fa5,fa3
	fsub.d	fa5,fs0,fa4
	fadd.d	fa0,fa0,fs1
	fadd.d	fa5,fa5,fa3
	fadd.d	fa5,fa5,fa0
	fadd.d	fa5,fa5,fa4
	fsub.d	fa5,fa5,fs0
	fmv.x.d	s0,fa5
	fmv.d.x	fa5,zero
	fmv.d.x	fa4,s0
	feq.d	a5,fa4,fa5
	beqz	a5,0x329f0 # pow+0x4c8>
	srli	a0,s1,0x3f
	slli	s0,a0,0x3f
	auipc	a5,0x13
	fld	fa4,1448(a5) # 0x45f98 # CSWTCH.8+0x38>
	fsd	fa4,16(sp)
	fld	fa5,16(sp)
	fmul.d	fa5,fa5,fa4
	fsd	fa5,24(sp)
	j	0x32882 # pow+0x35a>
	fmv.d.x	fa5,a3
	auipc	a5,0x10
	fld	fa0,928(a5) # 0x42da8 # udatatypename+0x3e0>
	fsub.d	fa0,fa0,fa5
	j	0x32734 # pow+0x20c>
	fmv.d.x	fa5,a5
	fmv.d.x	fa4,a3
	fadd.d	fa0,fa5,fa4
	j	0x32734 # pow+0x20c>

fabs:
	fabs.d	fa0,fa0
	ret

sqrt:
	fsqrt.d	fa0,fa0
	ret

scalbn:
	li	a5,1023
	ble	a0,a5,0x32a6a # scalbn+0x3a>
	auipc	a4,0x14
	fld	fa5,-512(a4) # 0x46838 # __exp_data+0x898>
	li	a4,2046
	fmul.d	fa0,fa0,fa5
	ble	a0,a4,0x32a5e # scalbn+0x2e>
	addiw	a4,a0,-2046
	fmul.d	fa0,fa0,fa5
	mv	a0,a4
	blt	a5,a4,0x32a9e # scalbn+0x6e>
	addiw	a0,a0,1023
	slli	a0,a0,0x34
	fmv.d.x	fa5,a0
	fmul.d	fa0,fa0,fa5
	ret
	li	a5,-1022
	ble	a5,a0,0x32a5a # scalbn+0x2a>
	auipc	a4,0x16
	fld	fa5,-1026(a4) # 0x48670 # __pow_log_data+0x1048>
	addiw	a4,a0,969
	fmul.d	fa0,fa0,fa5
	ble	a5,a4,0x32aa8 # scalbn+0x78>
	addiw	a4,a0,1938
	fmul.d	fa0,fa0,fa5
	mv	a0,a4
	ble	a5,a4,0x32a5a # scalbn+0x2a>
	li	a0,-1022
	addiw	a0,a0,1023
	j	0x32a5e # scalbn+0x2e>
	li	a0,1023
	addiw	a0,a0,1023
	j	0x32a5e # scalbn+0x2e>
	addiw	a0,a0,1992
	slli	a0,a0,0x34
	fmv.d.x	fa5,a0
	fmul.d	fa0,fa0,fa5
	ret

sin:
	addi	sp,sp,-48
	fmv.x.d	a5,fa0
	sd	s0,32(sp)
	auipc	s0,0x1b
	ld	s0,-1952(s0) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	ld	a4,0(s0)
	srai	a2,a5,0x20
	lui	a3,0x3fe92
	sd	a4,24(sp)
	slli	a4,a2,0x21
	sd	ra,40(sp)
	srli	a4,a4,0x21
	addi	a3,a3,507 # 0x3fe921fb # __BSS_END__+0x3fe43e73>
	bltu	a3,a4,0x32b08 # sin+0x50>
	lui	a3,0x3e500
	bleu	a3,a4,0x32b56 # sin+0x9e>
	lui	a4,0x7ff00
	and	a2,a2,a4
	beqz	a2,0x32b48 # sin+0x90>
	auipc	a4,0x13
	fld	fa5,1172(a4) # 0x45f88 # CSWTCH.8+0x28>
	fadd.d	fa5,fa0,fa5
	fmv.d.x	fa0,a5
	fsd	fa5,0(sp)
	j	0x32b14 # sin+0x5c>
	lui	a3,0x7ff00
	bltu	a4,a3,0x32b24 # sin+0x6c>
	fsub.d	fa0,fa0,fa0
	ld	a4,24(sp)
	ld	a5,0(s0)
	bne	a4,a5,0x32b8c # sin+0xd4>
	ld	ra,40(sp)
	ld	s0,32(sp)
	addi	sp,sp,48
	ret
	addi	a0,sp,8
	jal	ra,0x39f80 # __rem_pio2>
	andi	a0,a0,3
	li	a5,1
	beq	a0,a5,0x32b82 # sin+0xca>
	li	a5,2
	fld	fa1,16(sp)
	fld	fa0,8(sp)
	beq	a0,a5,0x32b6e # sin+0xb6>
	beqz	a0,0x32b7a # sin+0xc2>
	jal	ra,0x39e16 # __cos>
	fneg.d	fa0,fa0
	j	0x32b14 # sin+0x5c>
	auipc	a4,0x13
	fld	fa5,960(a4) # 0x45f08 # small_cnt_tab+0x70>
	fmul.d	fa5,fa0,fa5
	j	0x32b00 # sin+0x48>
	ld	a4,24(sp)
	ld	a5,0(s0)
	bne	a4,a5,0x32b8c # sin+0xd4>
	ld	s0,32(sp)
	ld	ra,40(sp)
	fmv.d.x	fa1,zero
	li	a0,0
	addi	sp,sp,48
	j	0x3aa94 # __sin>
	li	a0,1
	jal	ra,0x3aa94 # __sin>
	fneg.d	fa0,fa0
	j	0x32b14 # sin+0x5c>
	li	a0,1
	jal	ra,0x3aa94 # __sin>
	j	0x32b14 # sin+0x5c>
	fld	fa1,16(sp)
	fld	fa0,8(sp)
	jal	ra,0x39e16 # __cos>
	j	0x32b14 # sin+0x5c>
	jal	ra,0x37f18 # __stack_chk_fail>

sinh:
	addi	sp,sp,-48
	sd	s0,32(sp)
	fmv.x.d	s0,fa0
	sd	ra,40(sp)
	sd	s1,24(sp)
	sd	s2,16(sp)
	fsd	fs0,8(sp)
	bltz	s0,0x32c0c # sinh+0x7c>
	auipc	a5,0x13
	fld	fs0,892(a5) # 0x45f20 # small_cnt_tab+0x88>
	slli	a5,s0,0x1
	lui	a4,0x40863
	srli	s1,a5,0x21
	addi	a4,a4,-447 # 0x40862e41 # __BSS_END__+0x40814ab9>
	srli	a5,a5,0x1
	bltu	a4,s1,0x32bf4 # sinh+0x64>
	fmv.d.x	fa0,a5
	sext.w	s2,s1
	jal	ra,0x319de # expm1>
	lui	a5,0x3ff00
	fmv.d	fa4,fa0
	bleu	a5,s1,0x32c16 # sinh+0x86>
	lui	a5,0x3e500
	fmv.d.x	fa0,s0
	bleu	a5,s2,0x32c3c # sinh+0xac>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	fld	fs0,8(sp)
	addi	sp,sp,48
	ret
	fadd.d	fa1,fs0,fs0
	ld	s0,32(sp)
	ld	ra,40(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	fld	fs0,8(sp)
	fmv.d.x	fa0,a5
	addi	sp,sp,48
	j	0x39eb4 # __expo2>
	auipc	a5,0x14
	fld	fs0,-1020(a5) # 0x46810 # __exp_data+0x870>
	j	0x32bac # sinh+0x1c>
	auipc	a5,0x10
	fld	fa5,402(a5) # 0x42da8 # udatatypename+0x3e0>
	fadd.d	fa5,fa0,fa5
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	fdiv.d	fa5,fa0,fa5
	fadd.d	fa0,fa5,fa0
	fmul.d	fa0,fa0,fs0
	fld	fs0,8(sp)
	addi	sp,sp,48
	ret
	auipc	a5,0x10
	fld	fa3,364(a5) # 0x42da8 # udatatypename+0x3e0>
	fmul.d	fa5,fa4,fa4
	fadd.d	fa3,fa4,fa3
	fadd.d	fa4,fa4,fa4
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	fdiv.d	fa5,fa5,fa3
	fsub.d	fa0,fa4,fa5
	fmul.d	fa0,fa0,fs0
	fld	fs0,8(sp)
	addi	sp,sp,48
	ret

tan:
	addi	sp,sp,-48
	fmv.x.d	a5,fa0
	sd	s0,32(sp)
	auipc	s0,0x1a
	ld	s0,1710(s0) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	ld	a4,0(s0)
	srai	a2,a5,0x20
	lui	a3,0x3fe92
	sd	a4,24(sp)
	slli	a4,a2,0x21
	sd	ra,40(sp)
	srli	a4,a4,0x21
	addi	a3,a3,507 # 0x3fe921fb # __BSS_END__+0x3fe43e73>
	bltu	a3,a4,0x32cba # tan+0x50>
	lui	a3,0x3e400
	bleu	a3,a4,0x32cf6 # tan+0x8c>
	lui	a4,0x7ff00
	and	a2,a2,a4
	beqz	a2,0x32ce8 # tan+0x7e>
	auipc	a4,0x13
	fld	fa5,738(a4) # 0x45f88 # CSWTCH.8+0x28>
	fadd.d	fa5,fa0,fa5
	fmv.d.x	fa0,a5
	fsd	fa5,0(sp)
	j	0x32cc6 # tan+0x5c>
	lui	a3,0x7ff00
	bltu	a4,a3,0x32cd6 # tan+0x6c>
	fsub.d	fa0,fa0,fa0
	ld	a4,24(sp)
	ld	a5,0(s0)
	bne	a4,a5,0x32d0e # tan+0xa4>
	ld	ra,40(sp)
	ld	s0,32(sp)
	addi	sp,sp,48
	ret
	addi	a0,sp,8
	jal	ra,0x39f80 # __rem_pio2>
	fld	fa1,16(sp)
	fld	fa0,8(sp)
	andi	a0,a0,1
	jal	ra,0x3ab3a # __tan>
	j	0x32cc6 # tan+0x5c>
	auipc	a4,0x13
	fld	fa5,544(a4) # 0x45f08 # small_cnt_tab+0x70>
	fmul.d	fa5,fa0,fa5
	j	0x32cb2 # tan+0x48>
	ld	a4,24(sp)
	ld	a5,0(s0)
	bne	a4,a5,0x32d0e # tan+0xa4>
	ld	s0,32(sp)
	ld	ra,40(sp)
	fmv.d.x	fa1,zero
	li	a0,0
	addi	sp,sp,48
	j	0x3ab3a # __tan>
	jal	ra,0x37f18 # __stack_chk_fail>

tanh:
	fmv.x.d	a4,fa0
	addi	sp,sp,-32
	lui	a3,0x3fe19
	slli	a5,a4,0x1
	srli	a5,a5,0x1
	sd	s0,16(sp)
	sd	ra,24(sp)
	addi	a3,a3,1002 # 0x3fe193ea # __BSS_END__+0x3fdcb062>
	srli	a2,a5,0x20
	srli	s0,a4,0x3f
	bleu	a2,a3,0x32d64 # tanh+0x52>
	lui	a4,0x40340
	bleu	a2,a4,0x32d86 # tanh+0x74>
	fmv.d.x	fa0,zero
	fmv.d.x	fa4,a5
	auipc	a4,0x10
	fld	fa5,98(a4) # 0x42da8 # udatatypename+0x3e0>
	fdiv.d	fa0,fa0,fa4
	fsub.d	fa0,fa5,fa0
	beqz	s0,0x32d5c # tanh+0x4a>
	fneg.d	fa0,fa0
	ld	ra,24(sp)
	ld	s0,16(sp)
	addi	sp,sp,32
	ret
	lui	a4,0x3fd06
	addi	a4,a4,-1874 # 0x3fd058ae # __BSS_END__+0x3fcb7526>
	bltu	a4,a2,0x32db0 # tanh+0x9e>
	lui	a4,0x100
	bleu	a4,a2,0x32dce # tanh+0xbc>
	fmv.d.x	fa0,a5
	fcvt.s.d	fa5,fa0
	fsw	fa5,12(sp)
	j	0x32d56 # tanh+0x44>
	fmv.d.x	fa5,a5
	fadd.d	fa0,fa5,fa5
	jal	ra,0x319de # expm1>
	auipc	a5,0xf
	fld	fa4,822(a5) # 0x420c8 # log_2.0+0x178>
	fadd.d	fa0,fa0,fa4
	auipc	a5,0x10
	fld	fa5,10(a5) # 0x42da8 # udatatypename+0x3e0>
	fdiv.d	fa0,fa4,fa0
	fsub.d	fa0,fa5,fa0
	j	0x32d56 # tanh+0x44>
	fmv.d.x	fa5,a5
	fadd.d	fa0,fa5,fa5
	jal	ra,0x319de # expm1>
	auipc	a5,0xf
	fld	fa5,780(a5) # 0x420c8 # log_2.0+0x178>
	fadd.d	fa5,fa0,fa5
	fdiv.d	fa0,fa0,fa5
	j	0x32d56 # tanh+0x44>
	fmv.d.x	fa5,a5
	auipc	a4,0x14
	fld	fa0,-1346(a4) # 0x46890 # __exp_data+0x8f0>
	fmul.d	fa0,fa0,fa5
	jal	ra,0x319de # expm1>
	auipc	a5,0xf
	fld	fa4,742(a5) # 0x420c8 # log_2.0+0x178>
	fmv.d	fa5,fa0
	fadd.d	fa0,fa0,fa4
	fneg.d	fa5,fa5
	fdiv.d	fa0,fa5,fa0
	j	0x32d56 # tanh+0x44>

__madvise:
	addi	sp,sp,-16
	sd	ra,8(sp)
	li	a7,233
	ecall
	jal	ra,0x394da # __syscall_ret>
	ld	ra,8(sp)
	sext.w	a0,a0
	addi	sp,sp,16
	ret

__vm_wait:
	ret

__mmap:
	addi	sp,sp,-64
	sd	ra,56(sp)
	sd	s0,48(sp)
	slli	a6,a5,0x34
	bnez	a6,0x32e60 # __mmap+0x4a>
	mv	s0,a0
	li	a0,-3
	srli	a0,a0,0x1
	bltu	a0,a1,0x32e4e # __mmap+0x38>
	andi	a0,a3,16
	bnez	a0,0x32e86 # __mmap+0x70>
	li	a7,222
	mv	a0,s0
	ecall
	li	a5,-1
	beq	a0,a5,0x32e72 # __mmap+0x5c>
	ld	s0,48(sp)
	ld	ra,56(sp)
	addi	sp,sp,64
	j	0x394da # __syscall_ret>
	jal	ra,0x2f900 # __errno_location>
	ld	ra,56(sp)
	ld	s0,48(sp)
	li	a5,12
	sw	a5,0(a0)
	li	a0,-1
	addi	sp,sp,64
	ret
	jal	ra,0x2f900 # __errno_location>
	ld	ra,56(sp)
	ld	s0,48(sp)
	li	a5,22
	sw	a5,0(a0)
	li	a0,-1
	addi	sp,sp,64
	ret
	li	a0,-1
	bnez	s0,0x32e44 # __mmap+0x2e>
	andi	a3,a3,48
	li	a5,32
	bne	a3,a5,0x32e44 # __mmap+0x2e>
	li	a0,-12
	j	0x32e44 # __mmap+0x2e>
	sd	a5,40(sp)
	sd	a4,32(sp)
	sd	a3,24(sp)
	sd	a2,16(sp)
	sd	a1,8(sp)
	jal	ra,0x32e14 # __vm_wait>
	ld	a5,40(sp)
	ld	a4,32(sp)
	ld	a3,24(sp)
	ld	a2,16(sp)
	ld	a1,8(sp)
	j	0x32e34 # __mmap+0x1e>

__mprotect:
	ld	a4,-1880(gp) # 0x4d430 # __libc+0x30>
	addi	a5,a4,-1
	add	a1,a1,a5
	neg	a4,a4
	add	a1,a1,a0
	addi	sp,sp,-16
	and	a0,a0,a4
	and	a1,a1,a4
	sd	ra,8(sp)
	sub	a1,a1,a0
	li	a7,226
	ecall
	jal	ra,0x394da # __syscall_ret>
	ld	ra,8(sp)
	sext.w	a0,a0
	addi	sp,sp,16
	ret

dummy0:
	ret

__munmap:
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	ra,24(sp)
	mv	s1,a0
	mv	s0,a1
	jal	ra,0x32e14 # __vm_wait>
	li	a7,215
	mv	a0,s1
	mv	a1,s0
	ecall
	jal	ra,0x394da # __syscall_ret>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	sext.w	a0,a0
	addi	sp,sp,32
	ret

system:
	addi	sp,sp,-1184
	sd	s3,1144(sp)
	auipc	s3,0x1a
	ld	s3,1052(s3) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	ld	a5,0(s3)
	sd	s2,1152(sp)
	addi	s2,sp,312
	sd	s1,1160(sp)
	li	a2,144
	li	a1,0
	mv	s1,a0
	mv	a0,s2
	sd	ra,1176(sp)
	sd	s7,1112(sp)
	sd	a5,1096(sp)
	sd	s0,1168(sp)
	sd	s4,1136(sp)
	sd	s5,1128(sp)
	sd	s6,1120(sp)
	jal	ra,0x3683a # memset>
	li	a5,-1
	li	s7,1
	sd	s7,304(sp)
	sw	a5,12(sp)
	jal	ra,0x3717a # __pthread_testcancel>
	li	a0,1
	beqz	s1,0x33054 # system+0x158>
	addi	s0,sp,304
	addi	s5,sp,456
	mv	a2,s5
	mv	a1,s0
	li	a0,2
	jal	ra,0x333b2 # __sigaction>
	addi	s4,sp,608
	mv	a2,s4
	mv	a1,s0
	li	a0,3
	jal	ra,0x333b2 # __sigaction>
	li	a1,17
	mv	a0,s2
	jal	ra,0x3345c # sigaddset>
	addi	s6,sp,48
	mv	a1,s2
	mv	a2,s6
	li	a0,0
	jal	ra,0x3349c # sigprocmask>
	addi	s2,sp,176
	mv	a0,s2
	jal	ra,0x33494 # sigemptyset>
	ld	a5,456(sp)
	beq	a5,s7,0x32fa4 # system+0xa8>
	li	a1,2
	mv	a0,s2
	jal	ra,0x3345c # sigaddset>
	ld	a4,608(sp)
	li	a5,1
	beq	a4,a5,0x32fb6 # system+0xba>
	li	a1,3
	mv	a0,s2
	jal	ra,0x3345c # sigaddset>
	addi	s0,sp,760
	mv	a0,s0
	jal	ra,0x3b8d0 # posix_spawnattr_init>
	mv	a1,s6
	mv	a0,s0
	jal	ra,0x3b920 # posix_spawnattr_setsigmask>
	mv	a1,s2
	mv	a0,s0
	jal	ra,0x3b8f6 # posix_spawnattr_setsigdefault>
	li	a1,12
	mv	a0,s0
	jal	ra,0x3b8e6 # posix_spawnattr_setflags>
	auipc	a5,0x1a
	ld	a5,890(a5) # 0x4d350 # _GLOBAL_OFFSET_TABLE_+0x48>
	ld	a5,0(a5)
	auipc	a6,0x15
	addi	a6,a6,1688 # 0x48678 # __pow_log_data+0x1050>
	sd	a6,16(sp)
	addi	a4,sp,16
	auipc	a6,0x15
	addi	a6,a6,1684 # 0x48680 # __pow_log_data+0x1058>
	mv	a3,s0
	li	a2,0
	auipc	a1,0x15
	addi	a1,a1,1680 # 0x48688 # __pow_log_data+0x1060>
	addi	a0,sp,8
	sd	s1,32(sp)
	sd	a6,24(sp)
	sd	zero,40(sp)
	jal	ra,0x3b63e # posix_spawn>
	mv	s1,a0
	mv	a0,s0
	jal	ra,0x3b8cc # posix_spawnattr_destroy>
	bnez	s1,0x3308a # system+0x18e>
	addi	s0,sp,12
	li	s1,4
	j	0x33026 # system+0x12a>
	jal	ra,0x2f900 # __errno_location>
	lw	a5,0(a0)
	bne	a5,s1,0x33034 # system+0x138>
	lw	a0,8(sp)
	li	a2,0
	mv	a1,s0
	jal	ra,0x330b6 # waitpid>
	bltz	a0,0x3301c # system+0x120>
	mv	a1,s5
	li	a2,0
	li	a0,2
	jal	ra,0x333b2 # __sigaction>
	mv	a1,s4
	li	a2,0
	li	a0,3
	jal	ra,0x333b2 # __sigaction>
	li	a2,0
	mv	a1,s6
	li	a0,2
	jal	ra,0x3349c # sigprocmask>
	lw	a0,12(sp)
	ld	a4,1096(sp)
	ld	a5,0(s3)
	bne	a4,a5,0x330b2 # system+0x1b6>
	ld	ra,1176(sp)
	ld	s0,1168(sp)
	ld	s1,1160(sp)
	ld	s2,1152(sp)
	ld	s3,1144(sp)
	ld	s4,1136(sp)
	ld	s5,1128(sp)
	ld	s6,1120(sp)
	ld	s7,1112(sp)
	addi	sp,sp,1184
	ret
	li	a2,0
	mv	a1,s5
	li	a0,2
	jal	ra,0x333b2 # __sigaction>
	li	a2,0
	mv	a1,s4
	li	a0,3
	jal	ra,0x333b2 # __sigaction>
	li	a2,0
	mv	a1,s6
	li	a0,2
	jal	ra,0x3349c # sigprocmask>
	jal	ra,0x2f900 # __errno_location>
	sw	s1,0(a0)
	lw	a0,12(sp)
	j	0x33054 # system+0x158>
	jal	ra,0x37f18 # __stack_chk_fail>

waitpid:
	addi	sp,sp,-16
	mv	a3,a2
	li	a6,0
	mv	a2,a1
	li	a5,0
	mv	a1,a0
	li	a4,0
	li	a0,260
	sd	ra,8(sp)
	jal	ra,0x37146 # __syscall_cp>
	jal	ra,0x394da # __syscall_ret>
	ld	ra,8(sp)
	sext.w	a0,a0
	addi	sp,sp,16
	ret

__longjmp:
	ld	s0,0(a0)
	ld	s1,8(a0)
	ld	s2,16(a0)
	ld	s3,24(a0)
	ld	s4,32(a0)
	ld	s5,40(a0)
	ld	s6,48(a0)
	ld	s7,56(a0)
	ld	s8,64(a0)
	ld	s9,72(a0)
	ld	s10,80(a0)
	ld	s11,88(a0)
	ld	sp,96(a0)
	ld	ra,104(a0)
	fld	fs0,112(a0)
	fld	fs1,120(a0)
	fld	fs2,128(a0)
	fld	fs3,136(a0)
	fld	fs4,144(a0)
	fld	fs5,152(a0)
	fld	fs6,160(a0)
	fld	fs7,168(a0)
	fld	fs8,176(a0)
	fld	fs9,184(a0)
	fld	fs10,192(a0)
	fld	fs11,200(a0)
	seqz	a0,a1
	add	a0,a0,a1
	ret

__setjmp:
	sd	s0,0(a0)
	sd	s1,8(a0)
	sd	s2,16(a0)
	sd	s3,24(a0)
	sd	s4,32(a0)
	sd	s5,40(a0)
	sd	s6,48(a0)
	sd	s7,56(a0)
	sd	s8,64(a0)
	sd	s9,72(a0)
	sd	s10,80(a0)
	sd	s11,88(a0)
	sd	sp,96(a0)
	sd	ra,104(a0)
	fsd	fs0,112(a0)
	fsd	fs1,120(a0)
	fsd	fs2,128(a0)
	fsd	fs3,136(a0)
	fsd	fs4,144(a0)
	fsd	fs5,152(a0)
	fsd	fs6,160(a0)
	fsd	fs7,168(a0)
	fsd	fs8,176(a0)
	fsd	fs9,184(a0)
	fsd	fs10,192(a0)
	fsd	fs11,200(a0)
	li	a0,0
	ret

__block_all_sigs:
	mv	a2,a0
	li	a7,135
	li	a0,0
	auipc	a1,0x15
	addi	a1,a1,1250 # 0x48690 # all_mask>
	li	a3,8
	ecall
	ret

__block_app_sigs:
	mv	a2,a0
	li	a7,135
	li	a0,0
	auipc	a1,0x15
	addi	a1,a1,1234 # 0x48698 # app_mask>
	li	a3,8
	ecall
	ret

__restore_sigs:
	mv	a1,a0
	li	a7,135
	li	a0,2
	li	a2,0
	li	a3,8
	ecall
	ret

raise:
	addi	sp,sp,-176
	sd	s2,144(sp)
	auipc	s2,0x1a
	ld	s2,308(s2) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	ld	a5,0(s2)
	sd	s1,152(sp)
	addi	s1,sp,8
	sd	s0,160(sp)
	mv	s0,a0
	mv	a0,s1
	sd	ra,168(sp)
	sd	a5,136(sp)
	jal	ra,0x331be # __block_app_sigs>
	mv	a5,tp
	li	a7,130
	lw	a0,-168(a5)
	mv	a1,s0
	ecall
	jal	ra,0x394da # __syscall_ret>
	mv	s0,a0
	mv	a0,s1
	jal	ra,0x331d6 # __restore_sigs>
	ld	a4,136(sp)
	ld	a5,0(s2)
	bne	a4,a5,0x33240 # raise+0x58>
	ld	ra,168(sp)
	sext.w	a0,s0
	ld	s0,160(sp)
	ld	s1,152(sp)
	ld	s2,144(sp)
	addi	sp,sp,176
	ret
	jal	ra,0x37f18 # __stack_chk_fail>

__get_handler_set:
	li	a2,8
	addi	a1,gp,-728 # 0x4d8b0 # handler_set>
	j	0x3632a # memcpy>

__libc_sigaction:
	addi	sp,sp,-112
	sd	s2,80(sp)
	auipc	s2,0x1a
	ld	s2,206(s2) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	ld	a4,0(s2)
	sd	s0,96(sp)
	sd	s1,88(sp)
	mv	a5,a1
	sd	ra,104(sp)
	sd	a4,72(sp)
	mv	s1,a0
	mv	s0,a2
	li	a1,0
	beqz	a5,0x332a2 # __libc_sigaction+0x54>
	ld	a2,0(a5)
	li	a4,1
	bltu	a4,a2,0x332e4 # __libc_sigaction+0x96>
	lw	a4,136(a5)
	lui	a3,0x4000
	or	a3,a3,a4
	sd	a3,16(sp)
	sd	a2,8(sp)
	andi	a4,a4,4
	auipc	a3,0x8
	addi	a3,a3,1732 # 0x3b94c # __restore>
	beqz	a4,0x332da # __libc_sigaction+0x8c>
	addi	a1,a5,8
	li	a2,8
	addi	a0,sp,32
	sd	a3,24(sp)
	jal	ra,0x3632a # memcpy>
	addi	a1,sp,8
	li	a2,0
	beqz	s0,0x332a8 # __libc_sigaction+0x5a>
	addi	a2,sp,40
	li	a7,134
	mv	a0,s1
	li	a3,8
	ecall
	sext.w	s1,a0
	beqz	s0,0x332bc # __libc_sigaction+0x6e>
	beqz	s1,0x3336c # __libc_sigaction+0x11e>
	mv	a0,s1
	jal	ra,0x394da # __syscall_ret>
	ld	a4,72(sp)
	ld	a5,0(s2)
	sext.w	a0,a0
	bne	a4,a5,0x333ae # __libc_sigaction+0x160>
	ld	ra,104(sp)
	ld	s0,96(sp)
	ld	s1,88(sp)
	ld	s2,80(sp)
	addi	sp,sp,112
	ret
	auipc	a3,0x8
	addi	a3,a3,1650 # 0x3b94c # __restore>
	j	0x33292 # __libc_sigaction+0x44>
	addiw	a3,a0,-1
	mv	a2,a3
	sll	a2,a4,a2
	srli	a3,a3,0x6
	slli	a4,a3,0x3
	sext.w	a6,a2
	addi	a3,gp,-728 # 0x4d8b0 # handler_set>
	add	a3,a3,a4
	bnez	a6,0x3334c # __libc_sigaction+0xfe>
	srai	a2,a2,0x20
	bnez	a2,0x33388 # __libc_sigaction+0x13a>
	lbu	a4,-1927(gp) # 0x4d401 # __libc+0x1>
	bnez	a4,0x3332e # __libc_sigaction+0xe0>
	addi	a4,gp,-720 # 0x4d8b8 # unmask_done>
	lw	a3,0(a4)
	bnez	a3,0x3332e # __libc_sigaction+0xe0>
	li	a3,3
	slli	a3,a3,0x20
	sd	a3,40(sp)
	li	a7,135
	li	a0,1
	addi	a1,sp,40
	li	a2,0
	li	a3,8
	ecall
	li	a3,1
	sw	a3,0(a4)
	lw	a4,136(a5)
	srli	a3,a4,0x1c
	andi	a3,a3,1
	bnez	a3,0x33384 # __libc_sigaction+0x136>
	fence	rw,rw
	li	a4,1
	sw	a4,-732(gp) # 0x4d8ac # __eintr_valid_flag>
	fence	rw,rw
	ld	a2,0(a5)
	j	0x33278 # __libc_sigaction+0x2a>
	lw	a4,0(a3)
	sext.w	a4,a4
	or	a0,a6,a4
	lr.w.aqrl	a1,(a3)
	bne	a1,a4,0x33364 # __libc_sigaction+0x116>
	sc.w.aqrl	a7,a0,(a3)
	bnez	a7,0x33354 # __libc_sigaction+0x106>
	sext.w	a1,a1
	bne	a4,a1,0x3334c # __libc_sigaction+0xfe>
	j	0x33302 # __libc_sigaction+0xb4>
	ld	a5,40(sp)
	li	a2,8
	addi	a1,sp,64
	sd	a5,0(s0)
	ld	a5,48(sp)
	addi	a0,s0,8
	sw	a5,136(s0)
	jal	ra,0x3632a # memcpy>
	j	0x332bc # __libc_sigaction+0x6e>
	ld	a2,0(a5)
	j	0x3327c # __libc_sigaction+0x2e>
	addi	a6,a3,4
	sext.w	a2,a2
	lw	a4,4(a3)
	sext.w	a4,a4
	or	a0,a2,a4
	lr.w.aqrl	a1,(a6)
	bne	a1,a4,0x333a6 # __libc_sigaction+0x158>
	sc.w.aqrl	a7,a0,(a6)
	bnez	a7,0x33396 # __libc_sigaction+0x148>
	sext.w	a1,a1
	bne	a4,a1,0x3338e # __libc_sigaction+0x140>
	j	0x33306 # __libc_sigaction+0xb8>
	jal	ra,0x37f18 # __stack_chk_fail>

__sigaction:
	addi	sp,sp,-64
	sd	s2,32(sp)
	auipc	s2,0x1a
	ld	s2,-150(s2) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	ld	a4,0(s2)
	sd	ra,56(sp)
	sd	s0,48(sp)
	sd	s1,40(sp)
	sd	s3,24(sp)
	sd	a4,8(sp)
	addiw	a6,a0,-32
	li	a3,2
	bleu	a6,a3,0x3344c # __sigaction+0x9a>
	sext.w	a4,a0
	addiw	a4,a4,-1
	li	a3,63
	bltu	a3,a4,0x3344c # __sigaction+0x9a>
	li	a4,6
	beq	a0,a4,0x33404 # __sigaction+0x52>
	ld	a4,8(sp)
	ld	a5,0(s2)
	bne	a4,a5,0x33458 # __sigaction+0xa6>
	ld	s0,48(sp)
	ld	ra,56(sp)
	ld	s1,40(sp)
	ld	s2,32(sp)
	ld	s3,24(sp)
	addi	sp,sp,64
	j	0x3324e # __libc_sigaction>
	mv	s3,sp
	mv	a0,s3
	mv	s0,a1
	mv	s1,a2
	jal	ra,0x331a6 # __block_all_sigs>
	addi	a0,gp,-1952 # 0x4d3e8 # __abort_lock>
	jal	ra,0x36ffe # __lock>
	mv	a1,s0
	mv	a2,s1
	li	a0,6
	jal	ra,0x3324e # __libc_sigaction>
	mv	s0,a0
	addi	a0,gp,-1952 # 0x4d3e8 # __abort_lock>
	jal	ra,0x370d4 # __unlock>
	mv	a0,s3
	jal	ra,0x331d6 # __restore_sigs>
	ld	a4,8(sp)
	ld	a5,0(s2)
	bne	a4,a5,0x33458 # __sigaction+0xa6>
	ld	ra,56(sp)
	mv	a0,s0
	ld	s0,48(sp)
	ld	s1,40(sp)
	ld	s2,32(sp)
	ld	s3,24(sp)
	addi	sp,sp,64
	ret
	jal	ra,0x2f900 # __errno_location>
	li	a5,22
	sw	a5,0(a0)
	li	s0,-1
	j	0x33432 # __sigaction+0x80>
	jal	ra,0x37f18 # __stack_chk_fail>

sigaddset:
	addiw	a3,a1,-1
	li	a5,63
	bltu	a5,a3,0x33480 # sigaddset+0x24>
	addiw	a1,a1,-32
	li	a5,2
	bleu	a1,a5,0x33480 # sigaddset+0x24>
	ld	a5,0(a0)
	li	a4,1
	sll	a4,a4,a3
	or	a5,a5,a4
	sd	a5,0(a0)
	li	a0,0
	ret
	addi	sp,sp,-16
	sd	ra,8(sp)
	jal	ra,0x2f900 # __errno_location>
	ld	ra,8(sp)
	li	a5,22
	sw	a5,0(a0)
	li	a0,-1
	addi	sp,sp,16
	ret

sigemptyset:
	sd	zero,0(a0)
	li	a0,0
	ret

sigprocmask:
	addi	sp,sp,-16
	sd	s0,0(sp)
	sd	ra,8(sp)
	jal	ra,0x3714a # pthread_sigmask>
	mv	s0,a0
	bnez	a0,0x334b4 # sigprocmask+0x18>
	ld	ra,8(sp)
	mv	a0,s0
	ld	s0,0(sp)
	addi	sp,sp,16
	ret
	jal	ra,0x2f900 # __errno_location>
	sw	s0,0(a0)
	li	s0,-1
	j	0x334aa # sigprocmask+0xe>

clearerr:
	lw	a5,140(a0)
	addi	sp,sp,-16
	sd	s0,0(sp)
	sd	ra,8(sp)
	sext.w	a5,a5
	mv	s0,a0
	bgez	a5,0x334e0 # clearerr+0x22>
	lw	a5,0(a0)
	andi	a5,a5,-49
	sw	a5,0(a0)
	ld	ra,8(sp)
	ld	s0,0(sp)
	addi	sp,sp,16
	ret
	jal	ra,0x3bb48 # __lockfile>
	lw	a5,0(s0)
	andi	a5,a5,-49
	sw	a5,0(s0)
	beqz	a0,0x334d8 # clearerr+0x1a>
	mv	a0,s0
	ld	s0,0(sp)
	ld	ra,8(sp)
	addi	sp,sp,16
	j	0x3bbf8 # __unlockfile>

dummy2:
	ret

fclose:
	lw	a5,140(a0)
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	ra,24(sp)
	sd	s1,8(sp)
	sd	s2,0(sp)
	sext.w	a5,a5
	mv	s0,a0
	bgez	a5,0x33572 # fclose+0x76>
	jal	ra,0x3362a # fflush>
	ld	a5,24(s0)
	mv	s1,a0
	mv	a0,s0
	jalr	a5
	or	s1,s1,a0
	sext.w	s1,s1
	lw	a5,0(s0)
	andi	a5,a5,1
	beqz	a5,0x33536 # fclose+0x3a>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s2,0(sp)
	mv	a0,s1
	ld	s1,8(sp)
	addi	sp,sp,32
	ret
	mv	a0,s0
	jal	ra,0x33e98 # __unlist_locked_file>
	jal	ra,0x34184 # __ofl_lock>
	ld	a5,104(s0)
	beqz	a5,0x33548 # fclose+0x4c>
	ld	a4,112(s0)
	sd	a4,112(a5)
	ld	a4,112(s0)
	beqz	a4,0x3354e # fclose+0x52>
	sd	a5,104(a4)
	ld	a5,0(a0)
	beq	a5,s0,0x33596 # fclose+0x9a>
	jal	ra,0x3419a # __ofl_unlock>
	ld	a0,168(s0)
	jal	ra,0x2fbca # free>
	mv	a0,s0
	jal	ra,0x2fbca # free>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s2,0(sp)
	mv	a0,s1
	ld	s1,8(sp)
	addi	sp,sp,32
	ret
	jal	ra,0x3bb48 # __lockfile>
	mv	s2,a0
	mv	a0,s0
	jal	ra,0x3362a # fflush>
	ld	a5,24(s0)
	mv	s1,a0
	mv	a0,s0
	jalr	a5
	or	s1,s1,a0
	sext.w	s1,s1
	beqz	s2,0x33522 # fclose+0x26>
	mv	a0,s0
	jal	ra,0x3bbf8 # __unlockfile>
	j	0x33522 # fclose+0x26>
	sd	a4,0(a0)
	j	0x33554 # fclose+0x58>

feof:
	lw	a5,140(a0)
	addi	sp,sp,-32
	sd	s1,8(sp)
	sd	ra,24(sp)
	sd	s0,16(sp)
	sext.w	a5,a5
	mv	s1,a0
	bgez	a5,0x335c2 # feof+0x28>
	lw	s0,0(a0)
	sraiw	s0,s0,0x4
	andi	s0,s0,1
	ld	ra,24(sp)
	mv	a0,s0
	ld	s0,16(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret
	jal	ra,0x3bb48 # __lockfile>
	lw	s0,0(s1)
	sraiw	s0,s0,0x4
	andi	s0,s0,1
	beqz	a0,0x335b6 # feof+0x1c>
	mv	a0,s1
	jal	ra,0x3bbf8 # __unlockfile>
	ld	ra,24(sp)
	mv	a0,s0
	ld	s0,16(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret

ferror:
	lw	a5,140(a0)
	addi	sp,sp,-32
	sd	s1,8(sp)
	sd	ra,24(sp)
	sd	s0,16(sp)
	sext.w	a5,a5
	mv	s1,a0
	bgez	a5,0x3360a # ferror+0x28>
	lw	s0,0(a0)
	sraiw	s0,s0,0x5
	andi	s0,s0,1
	ld	ra,24(sp)
	mv	a0,s0
	ld	s0,16(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret
	jal	ra,0x3bb48 # __lockfile>
	lw	s0,0(s1)
	sraiw	s0,s0,0x5
	andi	s0,s0,1
	beqz	a0,0x335fe # ferror+0x1c>
	mv	a0,s1
	jal	ra,0x3bbf8 # __unlockfile>
	ld	ra,24(sp)
	mv	a0,s0
	ld	s0,16(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret

fflush:
	addi	sp,sp,-32
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	s2,0(sp)
	beqz	a0,0x336b0 # fflush+0x86>
	lw	a5,140(a0)
	mv	s0,a0
	li	s1,0
	sext.w	a5,a5
	bgez	a5,0x33692 # fflush+0x68>
	ld	a4,40(s0)
	ld	a5,56(s0)
	beq	a4,a5,0x3365c # fflush+0x32>
	ld	a5,72(s0)
	li	a2,0
	li	a1,0
	mv	a0,s0
	jalr	a5
	ld	a5,40(s0)
	beqz	a5,0x3373e # fflush+0x114>
	ld	a1,8(s0)
	ld	a5,16(s0)
	beq	a1,a5,0x3366e # fflush+0x44>
	ld	a4,80(s0)
	li	a2,1
	sub	a1,a1,a5
	mv	a0,s0
	jalr	a4
	sd	zero,32(s0)
	sd	zero,56(s0)
	sd	zero,40(s0)
	sd	zero,16(s0)
	sd	zero,8(s0)
	bnez	s1,0x3369a # fflush+0x70>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s2,0(sp)
	mv	a0,s1
	ld	s1,8(sp)
	addi	sp,sp,32
	ret
	jal	ra,0x3bb48 # __lockfile>
	mv	s1,a0
	j	0x33644 # fflush+0x1a>
	mv	a0,s0
	jal	ra,0x3bbf8 # __unlockfile>
	ld	ra,24(sp)
	ld	s0,16(sp)
	li	s1,0
	ld	s2,0(sp)
	mv	a0,s1
	ld	s1,8(sp)
	addi	sp,sp,32
	ret
	auipc	a5,0x1a
	addi	a5,a5,-984 # 0x4d2d8 # __stdout_used>
	ld	a4,0(a5)
	li	s1,0
	beqz	a4,0x336c6 # fflush+0x9c>
	ld	a0,0(a5)
	jal	ra,0x3362a # fflush>
	mv	s1,a0
	auipc	a5,0x1a
	addi	a5,a5,-1486 # 0x4d0f8 # __stderr_used>
	ld	a4,0(a5)
	beqz	a4,0x336dc # fflush+0xb2>
	ld	a0,0(a5)
	jal	ra,0x3362a # fflush>
	or	s1,s1,a0
	sext.w	s1,s1
	jal	ra,0x34184 # __ofl_lock>
	ld	s0,0(a0)
	bnez	s0,0x336fa # fflush+0xd0>
	j	0x3372c # fflush+0x102>
	ld	a4,40(s0)
	ld	a5,56(s0)
	beq	a4,a5,0x336f6 # fflush+0xcc>
	jal	ra,0x3362a # fflush>
	or	s1,s1,a0
	sext.w	s1,s1
	ld	s0,112(s0)
	beqz	s0,0x3372c # fflush+0x102>
	lw	a5,140(s0)
	mv	a0,s0
	sext.w	a5,a5
	bltz	a5,0x336e6 # fflush+0xbc>
	jal	ra,0x3bb48 # __lockfile>
	ld	a4,40(s0)
	ld	a5,56(s0)
	mv	s2,a0
	mv	a0,s0
	beq	a4,a5,0x3371e # fflush+0xf4>
	jal	ra,0x3362a # fflush>
	or	s1,s1,a0
	sext.w	s1,s1
	mv	a0,s0
	beqz	s2,0x336f6 # fflush+0xcc>
	jal	ra,0x3bbf8 # __unlockfile>
	ld	s0,112(s0)
	bnez	s0,0x336fa # fflush+0xd0>
	jal	ra,0x3419a # __ofl_unlock>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s2,0(sp)
	mv	a0,s1
	ld	s1,8(sp)
	addi	sp,sp,32
	ret
	bnez	s1,0x33744 # fflush+0x11a>
	li	s1,-1
	j	0x33684 # fflush+0x5a>
	mv	a0,s0
	jal	ra,0x3bbf8 # __unlockfile>
	li	s1,-1
	j	0x33684 # fflush+0x5a>

fgets:
	lw	a5,140(a2)
	addi	sp,sp,-64
	sd	s0,48(sp)
	sd	s1,40(sp)
	sd	s2,32(sp)
	sd	s4,16(sp)
	sd	ra,56(sp)
	sd	s3,24(sp)
	sd	s5,8(sp)
	sext.w	a5,a5
	mv	s0,a2
	mv	s2,a1
	mv	s4,a0
	addiw	s1,a1,-1
	bgez	a5,0x33840 # fgets+0xf2>
	li	a5,1
	li	s5,0
	ble	a1,a5,0x33826 # fgets+0xd8>
	mv	s2,s4
	beqz	s1,0x337ae # fgets+0x60>
	ld	a0,8(s0)
	ld	a2,16(s0)
	beq	a0,a2,0x33816 # fgets+0xc8>
	li	a1,10
	sub	a2,a2,a0
	jal	ra,0x36278 # memchr>
	ld	a1,8(s0)
	beqz	a0,0x337d2 # fgets+0x84>
	sub	s3,a0,a1
	addi	s3,s3,1
	bleu	s3,s1,0x3379e # fgets+0x50>
	mv	s3,s1
	mv	a0,s2
	mv	a2,s3
	jal	ra,0x3632a # memcpy>
	ld	a5,8(s0)
	add	s2,s2,s3
	add	a5,a5,s3
	sd	a5,8(s0)
	li	s3,0
	beqz	s4,0x337ba # fgets+0x6c>
	sb	zero,0(s2)
	mv	s3,s4
	bnez	s5,0x33866 # fgets+0x118>
	ld	ra,56(sp)
	ld	s0,48(sp)
	ld	s1,40(sp)
	ld	s2,32(sp)
	ld	s4,16(sp)
	ld	s5,8(sp)
	mv	a0,s3
	ld	s3,24(sp)
	addi	sp,sp,64
	ret
	ld	a2,16(s0)
	sub	s3,a2,a1
	bleu	s3,s1,0x337de # fgets+0x90>
	mv	s3,s1
	mv	a2,s3
	mv	a0,s2
	jal	ra,0x3632a # memcpy>
	ld	a5,8(s0)
	subw	s1,s1,s3
	add	s2,s2,s3
	add	a2,a5,s3
	sd	a2,8(s0)
	beqz	s1,0x337ae # fgets+0x60>
	ld	a5,16(s0)
	beq	a5,a2,0x33816 # fgets+0xc8>
	addi	a5,a2,1
	sd	a5,8(s0)
	lbu	a0,0(a2)
	sb	a0,0(s2)
	li	a5,10
	addiw	s1,s1,-1
	addi	s2,s2,1
	bne	a0,a5,0x3377c # fgets+0x2e>
	j	0x337ae # fgets+0x60>
	mv	a0,s0
	jal	ra,0x3bf6a # __uflow>
	bltz	a0,0x3386e # fgets+0x120>
	andi	a0,a0,255
	j	0x33806 # fgets+0xb8>
	lw	a5,136(a2)
	addiw	a4,a5,-1
	or	a5,a5,a4
	sw	a5,136(a2)
	li	s3,0
	bnez	s1,0x337be # fgets+0x70>
	sb	zero,0(s4)
	mv	s3,s4
	j	0x337be # fgets+0x70>
	mv	a0,a2
	jal	ra,0x3bb48 # __lockfile>
	li	a5,1
	mv	s5,a0
	blt	a5,s2,0x3377a # fgets+0x2c>
	lw	a5,136(s0)
	addiw	a4,a5,-1
	or	a5,a5,a4
	sw	a5,136(s0)
	beqz	a0,0x33834 # fgets+0xe6>
	mv	a0,s0
	jal	ra,0x3bbf8 # __unlockfile>
	j	0x33834 # fgets+0xe6>
	mv	a0,s0
	jal	ra,0x3bbf8 # __unlockfile>
	j	0x337be # fgets+0x70>
	li	s3,0
	beq	s2,s4,0x337ba # fgets+0x6c>
	lw	a5,0(s0)
	andi	a5,a5,16
	bnez	a5,0x337ae # fgets+0x60>
	beqz	s5,0x337be # fgets+0x70>
	j	0x33866 # fgets+0x118>

flockfile:
	addi	sp,sp,-16
	sd	s0,0(sp)
	sd	ra,8(sp)
	mv	s0,a0
	jal	ra,0x33ec6 # ftrylockfile>
	bnez	a0,0x33896 # flockfile+0x16>
	ld	ra,8(sp)
	ld	s0,0(sp)
	addi	sp,sp,16
	ret
	mv	a0,s0
	jal	ra,0x3bb48 # __lockfile>
	mv	a1,tp
	mv	a0,s0
	ld	s0,0(sp)
	ld	ra,8(sp)
	addi	a1,a1,-200
	addi	sp,sp,16
	j	0x33eb2 # __register_locked_file>

fopen:
	addi	sp,sp,-32
	sd	s1,8(sp)
	sd	s2,0(sp)
	sd	ra,24(sp)
	sd	s0,16(sp)
	mv	s1,a1
	lbu	a1,0(a1)
	mv	s2,a0
	auipc	a0,0x11
	addi	a0,a0,-1550 # 0x442b0 # optsnum.0+0x468>
	jal	ra,0x3690a # strchr>
	beqz	a0,0x33948 # fopen+0x9c>
	mv	a0,s1
	jal	ra,0x3bac0 # __fmodeflags>
	lui	a2,0x8
	or	a2,a2,a0
	mv	s0,a0
	sext.w	a2,a2
	li	a7,56
	li	a0,-100
	mv	a1,s2
	li	a3,438
	ecall
	jal	ra,0x394da # __syscall_ret>
	sext.w	s2,a0
	bltz	s2,0x33960 # fopen+0xb4>
	srli	s0,s0,0x13
	andi	s0,s0,1
	bnez	s0,0x33918 # fopen+0x6c>
	mv	a1,s1
	mv	a0,s2
	jal	ra,0x3b96e # __fdopen>
	mv	s0,a0
	beqz	a0,0x33930 # fopen+0x84>
	ld	ra,24(sp)
	mv	a0,s0
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret
	li	a7,25
	mv	a0,s2
	li	a1,2
	li	a2,1
	ecall
	mv	a1,s1
	mv	a0,s2
	jal	ra,0x3b96e # __fdopen>
	mv	s0,a0
	bnez	a0,0x3390a # fopen+0x5e>
	li	a7,57
	mv	a0,s2
	ecall
	ld	ra,24(sp)
	mv	a0,s0
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret
	mv	s0,a0
	jal	ra,0x2f900 # __errno_location>
	li	a5,22
	ld	ra,24(sp)
	sw	a5,0(a0)
	mv	a0,s0
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret
	li	s0,0
	ld	ra,24(sp)
	mv	a0,s0
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret

fprintf:
	addi	sp,sp,-80
	sd	s0,16(sp)
	auipc	s0,0x1a
	ld	s0,-1620(s0) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	ld	t3,0(s0)
	addi	t1,sp,32
	sd	a2,32(sp)
	mv	a2,t1
	sd	a4,48(sp)
	sd	a5,56(sp)
	sd	ra,24(sp)
	sd	a3,40(sp)
	sd	a6,64(sp)
	sd	a7,72(sp)
	sd	t3,8(sp)
	sd	t1,0(sp)
	jal	ra,0x35f3a # vfprintf>
	ld	a4,8(sp)
	ld	a5,0(s0)
	bne	a4,a5,0x339ac # fprintf+0x3c>
	ld	ra,24(sp)
	ld	s0,16(sp)
	addi	sp,sp,80
	ret
	jal	ra,0x37f18 # __stack_chk_fail>

locking_putc:
	addi	sp,sp,-32
	lui	a5,0x40000
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	s2,0(sp)
	sd	ra,24(sp)
	mv	s1,a1
	mv	s2,a0
	addi	s0,a1,140
	li	a3,0
	addi	a5,a5,-1
	lr.w.aqrl	a4,(s0)
	bne	a4,a3,0x339d8 # locking_putc+0x28>
	sc.w.aqrl	a2,a5,(s0)
	bnez	a2,0x339ca # locking_putc+0x1a>
	sext.w	a5,a4
	bnez	a5,0x33a38 # locking_putc+0x88>
	lw	a5,144(s1)
	andi	a6,s2,255
	beq	a5,a6,0x33a2c # locking_putc+0x7c>
	ld	a5,40(s1)
	ld	a4,32(s1)
	beq	a5,a4,0x33a2c # locking_putc+0x7c>
	addi	a4,a5,1 # 0x40000001 # __BSS_END__+0x3ffb1c79>
	sd	a4,40(s1)
	sb	s2,0(a5)
	li	a3,0
	lw	a5,140(s1)
	sext.w	a5,a5
	lr.w.aqrl	a4,(s0)
	bne	a4,a5,0x33a12 # locking_putc+0x62>
	sc.w.aqrl	a2,a3,(s0)
	bnez	a2,0x33a04 # locking_putc+0x54>
	sext.w	a4,a4
	bne	a5,a4,0x339fe # locking_putc+0x4e>
	srli	a5,a5,0x1e
	andi	a5,a5,1
	bnez	a5,0x33a40 # locking_putc+0x90>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	mv	a0,a6
	addi	sp,sp,32
	ret
	mv	a1,a6
	mv	a0,s1
	jal	ra,0x3bc42 # __overflow>
	mv	a6,a0
	j	0x339fc # locking_putc+0x4c>
	mv	a0,a1
	jal	ra,0x3bb48 # __lockfile>
	j	0x339de # locking_putc+0x2e>
	li	a7,98
	mv	a0,s0
	li	a1,129
	li	a2,1
	ecall
	li	a5,-38
	bne	a0,a5,0x33a1e # locking_putc+0x6e>
	mv	a0,s0
	li	a1,1
	ecall
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	mv	a0,a6
	addi	sp,sp,32
	ret

fputc:
	lw	a5,140(a1)
	mv	a4,a1
	sext.w	a5,a5
	bltz	a5,0x33a94 # fputc+0x26>
	beqz	a5,0x33a8e # fputc+0x20>
	mv	a3,tp
	lw	a2,-168(a3)
	lui	a3,0xc0000
	addi	a3,a3,-1
	and	a5,a5,a3
	beq	a2,a5,0x33a94 # fputc+0x26>
	mv	a1,a4
	j	0x339b0 # locking_putc>
	lw	a5,144(a4)
	andi	a1,a0,255
	beq	a5,a1,0x33ab6 # fputc+0x48>
	ld	a5,40(a4)
	ld	a3,32(a4)
	beq	a5,a3,0x33ab6 # fputc+0x48>
	addi	a3,a5,1
	sd	a3,40(a4)
	sb	a0,0(a5)
	mv	a0,a1
	ret
	mv	a0,a4
	j	0x3bc42 # __overflow>

fputs:
	addi	sp,sp,-32
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	s2,0(sp)
	mv	s1,a0
	mv	s2,a1
	jal	ra,0x369fa # strlen>
	mv	s0,a0
	mv	a3,s2
	mv	a2,a0
	li	a1,1
	mv	a0,s1
	jal	ra,0x34010 # fwrite>
	ld	ra,24(sp)
	sub	a0,a0,s0
	ld	s0,16(sp)
	snez	a0,a0
	ld	s1,8(sp)
	ld	s2,0(sp)
	neg	a0,a0
	addi	sp,sp,32
	ret

fread:
	lw	a5,140(a3) # 0xffffffffc000008c # __BSS_END__+0xffffffffbffb1d04>
	addi	sp,sp,-80
	snez	a4,a1
	sd	s1,56(sp)
	sd	s2,48(sp)
	sd	s3,40(sp)
	sd	s5,24(sp)
	sd	s6,16(sp)
	sd	s7,8(sp)
	neg	a4,a4
	sd	ra,72(sp)
	sd	s0,64(sp)
	sd	s4,32(sp)
	sext.w	a5,a5
	mul	s7,a1,a2
	mv	s1,a3
	mv	s5,a1
	mv	s2,a0
	and	s3,a2,a4
	li	s6,0
	bltz	a5,0x33b30 # fread+0x3e>
	mv	a0,a3
	jal	ra,0x3bb48 # __lockfile>
	mv	s6,a0
	lw	a5,136(s1)
	ld	a1,8(s1)
	ld	s4,16(s1)
	addiw	a4,a5,-1
	or	a5,a5,a4
	sw	a5,136(s1)
	mv	s0,s7
	beq	a1,s4,0x33b66 # fread+0x74>
	sub	s4,s4,a1
	bltu	s7,s4,0x33bb4 # fread+0xc2>
	mv	a0,s2
	mv	a2,s4
	jal	ra,0x3632a # memcpy>
	ld	a5,8(s1)
	add	s2,s2,s4
	sub	s0,s7,s4
	add	a5,a5,s4
	sd	a5,8(s1)
	beqz	s0,0x33b84 # fread+0x92>
	mv	a0,s1
	jal	ra,0x3bed0 # __toread>
	mv	a5,a0
	mv	a2,s0
	mv	a1,s2
	mv	a0,s1
	bnez	a5,0x33b90 # fread+0x9e>
	ld	a5,64(s1)
	jalr	a5
	beqz	a0,0x33b90 # fread+0x9e>
	sub	s0,s0,a0
	add	s2,s2,a0
	bnez	s0,0x33b68 # fread+0x76>
	beqz	s6,0x33b9c # fread+0xaa>
	mv	a0,s1
	jal	ra,0x3bbf8 # __unlockfile>
	j	0x33b9c # fread+0xaa>
	bnez	s6,0x33bb8 # fread+0xc6>
	sub	s3,s7,s0
	divu	s3,s3,s5
	ld	ra,72(sp)
	ld	s0,64(sp)
	ld	s1,56(sp)
	ld	s2,48(sp)
	ld	s4,32(sp)
	ld	s5,24(sp)
	ld	s6,16(sp)
	ld	s7,8(sp)
	mv	a0,s3
	ld	s3,40(sp)
	addi	sp,sp,80
	ret
	mv	s4,s7
	j	0x33b52 # fread+0x60>
	mv	a0,s1
	jal	ra,0x3bbf8 # __unlockfile>
	j	0x33b94 # fread+0xa2>

freopen:
	addi	sp,sp,-48
	sd	s1,24(sp)
	mv	s1,a0
	mv	a0,a1
	sd	s0,32(sp)
	sd	s2,16(sp)
	sd	s3,8(sp)
	sd	s4,0(sp)
	mv	s0,a2
	sd	ra,40(sp)
	mv	s2,a1
	jal	ra,0x3bac0 # __fmodeflags>
	lw	a5,140(s0)
	mv	s4,a0
	li	s3,0
	sext.w	a5,a5
	bltz	a5,0x33bf0 # freopen+0x30>
	mv	a0,s0
	jal	ra,0x3bb48 # __lockfile>
	mv	s3,a0
	mv	a0,s0
	jal	ra,0x3362a # fflush>
	beqz	s1,0x33c46 # freopen+0x86>
	mv	a0,s1
	mv	a1,s2
	jal	ra,0x338ac # fopen>
	mv	s1,a0
	beqz	a0,0x33c7a # freopen+0xba>
	lw	a0,120(a0)
	lw	a1,120(s0)
	bne	a0,a1,0x33c8c # freopen+0xcc>
	li	a5,-1
	sw	a5,120(s1)
	lw	a5,0(s0)
	lw	a0,0(s1)
	ld	a1,64(s1)
	ld	a2,72(s1)
	ld	a3,80(s1)
	ld	a4,24(s1)
	andi	a5,a5,1
	or	a5,a5,a0
	sw	a5,0(s0)
	sd	a1,64(s0)
	sd	a2,72(s0)
	sd	a3,80(s0)
	sd	a4,24(s0)
	mv	a0,s1
	jal	ra,0x334fc # fclose>
	bnez	s3,0x33c84 # freopen+0xc4>
	ld	ra,40(sp)
	mv	a0,s0
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	ld	s4,0(sp)
	addi	sp,sp,48
	ret
	srli	a5,s4,0x13
	andi	a5,a5,1
	lw	a0,120(s0)
	beqz	a5,0x33c5c # freopen+0x9c>
	li	a7,25
	li	a1,2
	li	a2,1
	ecall
	lw	a0,120(s0)
	lui	a2,0xfff80
	addi	a2,a2,-193 # 0xfffffffffff7ff3f # __BSS_END__+0xfffffffffff31bb7>
	and	a2,s4,a2
	sext.w	a2,a2
	li	a7,25
	li	a1,4
	ecall
	jal	ra,0x394da # __syscall_ret>
	bgez	a0,0x33c30 # freopen+0x70>
	mv	a0,s0
	jal	ra,0x334fc # fclose>
	li	s0,0
	j	0x33c34 # freopen+0x74>
	mv	a0,s0
	jal	ra,0x3bbf8 # __unlockfile>
	j	0x33c34 # freopen+0x74>
	lui	a2,0x80
	and	a2,s4,a2
	jal	ra,0x37ba2 # __dup3>
	bgez	a0,0x33c10 # freopen+0x50>
	mv	a0,s1
	jal	ra,0x334fc # fclose>
	j	0x33c7a # freopen+0xba>

__fseeko_unlocked:
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	s2,0(sp)
	sd	ra,24(sp)
	li	a5,1
	mv	s1,a2
	mv	s0,a0
	mv	s2,a1
	beq	a2,a5,0x33d06 # __fseeko_unlocked+0x62>
	ld	a4,40(s0)
	ld	a5,56(s0)
	beq	a4,a5,0x33cd0 # __fseeko_unlocked+0x2c>
	ld	a5,72(s0)
	li	a2,0
	li	a1,0
	mv	a0,s0
	jalr	a5
	ld	a5,40(s0)
	beqz	a5,0x33d14 # __fseeko_unlocked+0x70>
	ld	a5,80(s0)
	sd	zero,32(s0)
	sd	zero,56(s0)
	sd	zero,40(s0)
	mv	a2,s1
	mv	a1,s2
	mv	a0,s0
	jalr	a5
	bltz	a0,0x33d14 # __fseeko_unlocked+0x70>
	lw	a5,0(s0)
	sd	zero,16(s0)
	sd	zero,8(s0)
	andi	a5,a5,-17
	sw	a5,0(s0)
	li	a0,0
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret
	ld	a5,16(a0)
	beqz	a5,0x33cba # __fseeko_unlocked+0x16>
	ld	a4,8(a0)
	sub	a5,a5,a4
	sub	s2,a1,a5
	j	0x33cba # __fseeko_unlocked+0x16>
	li	a0,-1
	j	0x33cfa # __fseeko_unlocked+0x56>

__fseeko:
	lw	a5,140(a0)
	sext.w	a5,a5
	bgez	a5,0x33d26 # __fseeko+0xe>
	j	0x33ca4 # __fseeko_unlocked>
	addi	sp,sp,-32
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	s2,0(sp)
	mv	s1,a1
	mv	s2,a2
	mv	s0,a0
	jal	ra,0x3bb48 # __lockfile>
	mv	a5,a0
	mv	a2,s2
	mv	a1,s1
	mv	a0,s0
	mv	s2,a5
	jal	ra,0x33ca4 # __fseeko_unlocked>
	mv	s1,a0
	beqz	s2,0x33d54 # __fseeko+0x3c>
	mv	a0,s0
	jal	ra,0x3bbf8 # __unlockfile>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s2,0(sp)
	mv	a0,s1
	ld	s1,8(sp)
	addi	sp,sp,32
	ret

fseek:
	lw	a5,140(a0)
	sext.w	a5,a5
	bgez	a5,0x33d70 # fseek+0xe>
	j	0x33ca4 # __fseeko_unlocked>
	addi	sp,sp,-32
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	s2,0(sp)
	mv	s1,a1
	mv	s2,a2
	mv	s0,a0
	jal	ra,0x3bb48 # __lockfile>
	mv	a5,a0
	mv	a2,s2
	mv	a1,s1
	mv	a0,s0
	mv	s2,a5
	jal	ra,0x33ca4 # __fseeko_unlocked>
	mv	s1,a0
	beqz	s2,0x33d9e # fseek+0x3c>
	mv	a0,s0
	jal	ra,0x3bbf8 # __unlockfile>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s2,0(sp)
	mv	a0,s1
	ld	s1,8(sp)
	addi	sp,sp,32
	ret

__ftello_unlocked:
	lw	a5,0(a0)
	addi	sp,sp,-16
	sd	s0,0(sp)
	sd	ra,8(sp)
	andi	a5,a5,128
	ld	a4,80(a0)
	mv	s0,a0
	li	a2,1
	beqz	a5,0x33dcc # __ftello_unlocked+0x20>
	ld	a2,40(a0)
	ld	a5,56(a0)
	sub	a2,a2,a5
	snez	a2,a2
	addi	a2,a2,1
	li	a1,0
	mv	a0,s0
	jalr	a4
	bltz	a0,0x33de0 # __ftello_unlocked+0x34>
	ld	a4,16(s0)
	beqz	a4,0x33de8 # __ftello_unlocked+0x3c>
	ld	a5,8(s0)
	sub	a5,a5,a4
	add	a0,a0,a5
	ld	ra,8(sp)
	ld	s0,0(sp)
	addi	sp,sp,16
	ret
	ld	a4,56(s0)
	beqz	a4,0x33de0 # __ftello_unlocked+0x34>
	ld	a5,40(s0)
	ld	ra,8(sp)
	ld	s0,0(sp)
	sub	a5,a5,a4
	add	a0,a0,a5
	addi	sp,sp,16
	ret

__ftello:
	lw	a5,140(a0)
	sext.w	a5,a5
	bgez	a5,0x33e08 # __ftello+0xe>
	j	0x33dac # __ftello_unlocked>
	addi	sp,sp,-32
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	s2,0(sp)
	mv	s0,a0
	jal	ra,0x3bb48 # __lockfile>
	mv	s2,a0
	mv	a0,s0
	jal	ra,0x33dac # __ftello_unlocked>
	mv	s1,a0
	beqz	s2,0x33e2c # __ftello+0x32>
	mv	a0,s0
	jal	ra,0x3bbf8 # __unlockfile>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s2,0(sp)
	mv	a0,s1
	ld	s1,8(sp)
	addi	sp,sp,32
	ret

ftell:
	lw	a5,140(a0)
	sext.w	a5,a5
	bgez	a5,0x33e48 # ftell+0xe>
	j	0x33dac # __ftello_unlocked>
	addi	sp,sp,-32
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	s2,0(sp)
	mv	s0,a0
	jal	ra,0x3bb48 # __lockfile>
	mv	s2,a0
	mv	a0,s0
	jal	ra,0x33dac # __ftello_unlocked>
	mv	s1,a0
	beqz	s2,0x33e6c # ftell+0x32>
	mv	a0,s0
	jal	ra,0x3bbf8 # __unlockfile>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s2,0(sp)
	mv	a0,s1
	ld	s1,8(sp)
	addi	sp,sp,32
	ret

__do_orphaned_stdio_locks:
	mv	a5,tp
	ld	a5,-24(a5)
	beqz	a5,0x33e96 # __do_orphaned_stdio_locks+0x1c>
	lui	a4,0x40000
	fence	rw,rw
	sw	a4,140(a5)
	fence	rw,rw
	ld	a5,216(a5)
	bnez	a5,0x33e86 # __do_orphaned_stdio_locks+0xc>
	ret

__unlist_locked_file:
	ld	a5,128(a0)
	beqz	a5,0x33eb0 # __unlist_locked_file+0x18>
	ld	a5,216(a0)
	ld	a4,208(a0)
	beqz	a5,0x33ea4 # __unlist_locked_file+0xc>
	sd	a4,208(a5)
	beqz	a4,0x33eaa # __unlist_locked_file+0x12>
	sd	a5,216(a4)
	ret
	mv	a4,tp
	sd	a5,-24(a4) # 0x3fffffe8 # __BSS_END__+0x3ffb1c60>
	ret

__register_locked_file:
	ld	a5,176(a1)
	li	a4,1
	sd	a4,128(a0)
	sd	zero,208(a0)
	sd	a5,216(a0)
	beqz	a5,0x33ec2 # __register_locked_file+0x10>
	sd	a0,208(a5)
	sd	a0,176(a1)
	ret

ftrylockfile:
	mv	a5,a0
	mv	a3,tp
	lw	a2,140(a0)
	lw	a1,-168(a3)
	lui	a4,0xc0000
	sext.w	a2,a2
	addi	a4,a4,-1
	and	a4,a4,a2
	addi	a3,a3,-200
	beq	a4,a1,0x33f1e # ftrylockfile+0x58>
	bltz	a2,0x33f18 # ftrylockfile+0x52>
	bnez	a2,0x33f30 # ftrylockfile+0x6a>
	addi	a4,a5,140
	li	a2,0
	lr.w.aqrl	a0,(a4)
	bne	a0,a2,0x33f00 # ftrylockfile+0x3a>
	sc.w.aqrl	a6,a1,(a4)
	bnez	a6,0x33ef0 # ftrylockfile+0x2a>
	sext.w	a0,a0
	bnez	a0,0x33f30 # ftrylockfile+0x6a>
	ld	a4,176(a3)
	li	a2,1
	sd	a2,128(a5)
	sd	zero,208(a5)
	sd	a4,216(a5)
	beqz	a4,0x33f14 # ftrylockfile+0x4e>
	sd	a5,208(a4)
	sd	a5,176(a3)
	ret
	sw	zero,140(a0)
	j	0x33eea # ftrylockfile+0x24>
	ld	a4,128(a0)
	li	a3,-1
	srli	a3,a3,0x1
	beq	a4,a3,0x33f30 # ftrylockfile+0x6a>
	addi	a4,a4,1
	sd	a4,128(a0)
	li	a0,0
	ret
	li	a0,-1
	ret

funlockfile:
	ld	a5,128(a0)
	addi	sp,sp,-16
	sd	s0,0(sp)
	sd	ra,8(sp)
	li	a4,1
	mv	s0,a0
	beq	a5,a4,0x33f50 # funlockfile+0x1c>
	ld	ra,8(sp)
	ld	s0,0(sp)
	addi	a5,a5,-1
	sd	a5,128(a0)
	addi	sp,sp,16
	ret
	jal	ra,0x33e98 # __unlist_locked_file>
	mv	a0,s0
	sd	zero,128(s0)
	ld	s0,0(sp)
	ld	ra,8(sp)
	addi	sp,sp,16
	j	0x3bbf8 # __unlockfile>

__fwritex:
	ld	a5,32(a2)
	addi	sp,sp,-48
	sd	s1,24(sp)
	sd	s2,16(sp)
	sd	s3,8(sp)
	sd	ra,40(sp)
	sd	s0,32(sp)
	mv	s2,a2
	mv	s1,a0
	mv	s3,a1
	beqz	a5,0x33ffe # __fwritex+0x9a>
	ld	a0,40(s2)
	sub	a5,a5,a0
	bltu	a5,s3,0x33fca # __fwritex+0x66>
	lw	a5,144(s2)
	mv	s0,s3
	li	a3,10
	bgez	a5,0x33fbc # __fwritex+0x58>
	mv	a2,s0
	mv	a1,s1
	jal	ra,0x3632a # memcpy>
	ld	a5,40(s2)
	mv	a0,s3
	add	s0,s0,a5
	sd	s0,40(s2)
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	addi	sp,sp,48
	ret
	lbu	a4,0(a4) # 0xffffffffc0000000 # __BSS_END__+0xffffffffbffb1c78>
	beq	a4,a3,0x33fe2 # __fwritex+0x7e>
	mv	s0,a5
	addi	a5,s0,-1
	add	a4,s1,a5
	bnez	s0,0x33fb2 # __fwritex+0x4e>
	mv	s0,s3
	j	0x33f90 # __fwritex+0x2c>
	ld	s0,32(sp)
	ld	a5,72(s2)
	ld	ra,40(sp)
	mv	a2,s3
	mv	a1,s1
	ld	s3,8(sp)
	ld	s1,24(sp)
	mv	a0,s2
	ld	s2,16(sp)
	addi	sp,sp,48
	jr	a5
	ld	a5,72(s2)
	mv	a2,s0
	mv	a1,s1
	mv	a0,s2
	jalr	a5
	bltu	a0,s0,0x33fa4 # __fwritex+0x40>
	add	s1,s1,s0
	ld	a0,40(s2)
	sub	s0,s3,s0
	j	0x33f90 # __fwritex+0x2c>
	mv	a0,a2
	jal	ra,0x3bf2e # __towrite>
	bnez	a0,0x3400c # __fwritex+0xa8>
	ld	a5,32(s2)
	j	0x33f7a # __fwritex+0x16>
	li	a0,0
	j	0x33fa4 # __fwritex+0x40>

fwrite:
	lw	a5,140(a3)
	addi	sp,sp,-64
	snez	a4,a1
	sd	s0,48(sp)
	sd	s1,40(sp)
	sd	s2,32(sp)
	sd	s4,16(sp)
	neg	a4,a4
	sd	ra,56(sp)
	sd	s3,24(sp)
	sd	s5,8(sp)
	sext.w	a5,a5
	mul	s4,a1,a2
	mv	s1,a3
	mv	s2,a1
	and	s0,a2,a4
	bgez	a5,0x34064 # fwrite+0x54>
	mv	a2,a3
	mv	a1,s4
	jal	ra,0x33f64 # __fwritex>
	mv	s3,a0
	mv	a0,s0
	beq	s4,s3,0x34052 # fwrite+0x42>
	divu	a0,s3,s2
	ld	ra,56(sp)
	ld	s0,48(sp)
	ld	s1,40(sp)
	ld	s2,32(sp)
	ld	s3,24(sp)
	ld	s4,16(sp)
	ld	s5,8(sp)
	addi	sp,sp,64
	ret
	mv	s3,a0
	mv	a0,a3
	jal	ra,0x3bb48 # __lockfile>
	mv	s5,a0
	mv	a2,s1
	mv	a0,s3
	mv	a1,s4
	jal	ra,0x33f64 # __fwritex>
	mv	s3,a0
	beqz	s5,0x34048 # fwrite+0x38>
	mv	a0,s1
	jal	ra,0x3bbf8 # __unlockfile>
	j	0x34048 # fwrite+0x38>

locking_getc:
	addi	sp,sp,-32
	lui	a5,0x40000
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	ra,24(sp)
	mv	s1,a0
	addi	s0,a0,140
	li	a3,0
	addi	a5,a5,-1
	lr.w.aqrl	a4,(s0)
	bne	a4,a3,0x340aa # locking_getc+0x24>
	sc.w.aqrl	a2,a5,(s0)
	bnez	a2,0x3409c # locking_getc+0x16>
	sext.w	a5,a4
	bnez	a5,0x340f0 # locking_getc+0x6a>
	ld	a5,8(s1)
	ld	a4,16(s1)
	beq	a5,a4,0x340fc # locking_getc+0x76>
	addi	a4,a5,1 # 0x40000001 # __BSS_END__+0x3ffb1c79>
	sd	a4,8(s1)
	lbu	a6,0(a5)
	li	a3,0
	lw	a5,140(s1)
	sext.w	a5,a5
	lr.w.aqrl	a4,(s0)
	bne	a4,a5,0x340d8 # locking_getc+0x52>
	sc.w.aqrl	a2,a3,(s0)
	bnez	a2,0x340ca # locking_getc+0x44>
	sext.w	a4,a4
	bne	a5,a4,0x340c4 # locking_getc+0x3e>
	srli	a5,a5,0x1e
	andi	a5,a5,1
	bnez	a5,0x34106 # locking_getc+0x80>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	mv	a0,a6
	addi	sp,sp,32
	ret
	jal	ra,0x3bb48 # __lockfile>
	ld	a5,8(s1)
	ld	a4,16(s1)
	bne	a5,a4,0x340b8 # locking_getc+0x32>
	mv	a0,s1
	jal	ra,0x3bf6a # __uflow>
	mv	a6,a0
	j	0x340c2 # locking_getc+0x3c>
	li	a7,98
	mv	a0,s0
	li	a1,129
	li	a2,1
	ecall
	li	a5,-38
	bne	a0,a5,0x340e4 # locking_getc+0x5e>
	mv	a0,s0
	li	a1,1
	ecall
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	mv	a0,a6
	addi	sp,sp,32
	ret

getc:
	lw	a5,140(a0)
	sext.w	a5,a5
	bltz	a5,0x34154 # getc+0x22>
	beqz	a5,0x34150 # getc+0x1e>
	mv	a4,tp
	lw	a3,-168(a4)
	lui	a4,0xc0000
	addi	a4,a4,-1
	and	a5,a5,a4
	beq	a3,a5,0x34154 # getc+0x22>
	j	0x34086 # locking_getc>
	ld	a5,8(a0)
	ld	a4,16(a0)
	beq	a5,a4,0x34168 # getc+0x36>
	addi	a4,a5,1
	sd	a4,8(a0)
	lbu	a0,0(a5)
	ret
	j	0x3bf6a # __uflow>

getc_unlocked:
	ld	a4,8(a0)
	ld	a3,16(a0)
	beq	a4,a3,0x34180 # getc_unlocked+0x14>
	addi	a3,a4,1 # 0xffffffffc0000001 # __BSS_END__+0xffffffffbffb1c79>
	sd	a3,8(a0)
	lbu	a0,0(a4)
	ret
	j	0x3bf6a # __uflow>

__ofl_lock:
	addi	sp,sp,-16
	addi	a0,gp,-696 # 0x4d8d0 # ofl_lock>
	sd	ra,8(sp)
	jal	ra,0x36ffe # __lock>
	ld	ra,8(sp)
	addi	a0,gp,-704 # 0x4d8c8 # ofl_head>
	addi	sp,sp,16
	ret

__ofl_unlock:
	addi	a0,gp,-696 # 0x4d8d0 # ofl_lock>
	j	0x370d4 # __unlock>

pclose:
	addi	sp,sp,-48
	sd	s1,24(sp)
	auipc	s1,0x19
	ld	s1,378(s1) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	ld	a5,0(s1)
	sd	s0,32(sp)
	sd	ra,40(sp)
	sd	a5,8(sp)
	lw	s0,124(a0)
	jal	ra,0x334fc # fclose>
	addi	a1,sp,4
	li	a5,-4
	li	a7,260
	mv	a0,s0
	li	a2,0
	li	a3,0
	ecall
	sext.w	a0,a0
	beq	a0,a5,0x341c0 # pclose+0x1e>
	bltz	a0,0x341ec # pclose+0x4a>
	lw	a0,4(sp)
	ld	a4,8(sp)
	ld	a5,0(s1)
	bne	a4,a5,0x341f4 # pclose+0x52>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	addi	sp,sp,48
	ret
	jal	ra,0x394da # __syscall_ret>
	sext.w	a0,a0
	j	0x341da # pclose+0x38>
	jal	ra,0x37f18 # __stack_chk_fail>

popen:
	addi	sp,sp,-224
	sd	s5,168(sp)
	auipc	s5,0x19
	ld	s5,292(s5) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	ld	a4,0(s5)
	sd	s1,200(sp)
	sd	s4,176(sp)
	sd	ra,216(sp)
	sd	s0,208(sp)
	sd	s2,192(sp)
	sd	s3,184(sp)
	sd	s6,160(sp)
	sd	s7,152(sp)
	sd	s8,144(sp)
	lbu	a5,0(a1)
	sd	a4,136(sp)
	li	a4,114
	mv	s1,a1
	mv	s4,a0
	beq	a5,a4,0x3433e # popen+0x146>
	li	a4,119
	li	s2,1
	bne	a5,a4,0x34332 # popen+0x13a>
	lui	a1,0x80
	addi	a0,sp,16
	jal	ra,0x37c14 # pipe2>
	mv	s3,a0
	li	s0,0
	bnez	a0,0x3430e # popen+0x116>
	slli	s8,s2,0x2
	addi	a5,sp,144
	add	a5,a5,s8
	lw	a0,-128(a5)
	mv	a1,s1
	jal	ra,0x3b96e # __fdopen>
	mv	s0,a0
	beqz	a0,0x3439a # popen+0x1a2>
	lw	a5,140(a0)
	sext.w	a5,a5
	bltz	a5,0x3426e # popen+0x76>
	jal	ra,0x3bb48 # __lockfile>
	mv	s3,a0
	xori	s2,s2,1
	slli	s7,s2,0x2
	addi	a5,sp,144
	add	s6,a5,s7
	lw	a0,-128(s6)
	beq	a0,s2,0x34346 # popen+0x14e>
	addi	s6,sp,56
	mv	a0,s6
	jal	ra,0x3b8c4 # posix_spawn_file_actions_init>
	bnez	a0,0x342ea # popen+0xf2>
	addi	a5,sp,144
	add	a5,a5,s7
	lw	a1,-128(a5)
	mv	a2,s2
	mv	a0,s6
	jal	ra,0x3b858 # posix_spawn_file_actions_adddup2>
	bnez	a0,0x34342 # popen+0x14a>
	auipc	a5,0x19
	ld	a5,174(a5) # 0x4d350 # _GLOBAL_OFFSET_TABLE_+0x48>
	ld	a5,0(a5)
	auipc	a6,0x14
	addi	a6,a6,972 # 0x48678 # __pow_log_data+0x1050>
	sd	a6,24(sp)
	addi	a4,sp,24
	auipc	a6,0x14
	addi	a6,a6,968 # 0x48680 # __pow_log_data+0x1058>
	li	a3,0
	mv	a2,s6
	auipc	a1,0x14
	addi	a1,a1,964 # 0x48688 # __pow_log_data+0x1060>
	addi	a0,sp,12
	sd	a6,32(sp)
	sd	s4,40(sp)
	sd	zero,48(sp)
	jal	ra,0x3b63e # posix_spawn>
	mv	s2,a0
	beqz	a0,0x34368 # popen+0x170>
	mv	a0,s6
	jal	ra,0x3b8a6 # posix_spawn_file_actions_destroy>
	jal	ra,0x2f900 # __errno_location>
	mv	s1,a0
	j	0x342f2 # popen+0xfa>
	jal	ra,0x2f900 # __errno_location>
	mv	s1,a0
	li	s2,12
	mv	a0,s0
	jal	ra,0x334fc # fclose>
	addi	a5,sp,144
	add	a5,a5,s7
	li	a7,57
	lw	a0,-128(a5)
	ecall
	li	s0,0
	sw	s2,0(s1)
	ld	a4,136(sp)
	ld	a5,0(s5)
	bne	a4,a5,0x343ca # popen+0x1d2>
	ld	ra,216(sp)
	mv	a0,s0
	ld	s0,208(sp)
	ld	s1,200(sp)
	ld	s2,192(sp)
	ld	s3,184(sp)
	ld	s4,176(sp)
	ld	s5,168(sp)
	ld	s6,160(sp)
	ld	s7,152(sp)
	ld	s8,144(sp)
	addi	sp,sp,224
	ret
	jal	ra,0x2f900 # __errno_location>
	li	a5,22
	sw	a5,0(a0)
	li	s0,0
	j	0x3430e # popen+0x116>
	li	s2,0
	j	0x34236 # popen+0x3e>
	li	s2,12
	j	0x342dc # popen+0xe4>
	li	a2,0
	li	a1,1030
	jal	ra,0x37f34 # fcntl>
	mv	a5,a0
	bltz	a0,0x343ac # popen+0x1b4>
	lw	a0,-128(s6)
	li	a7,57
	ecall
	sw	a5,-128(s6)
	j	0x34284 # popen+0x8c>
	mv	a0,s6
	jal	ra,0x3b8a6 # posix_spawn_file_actions_destroy>
	lw	a5,12(sp)
	li	a1,101
	mv	a0,s1
	sw	a5,124(s0)
	jal	ra,0x3690a # strchr>
	beqz	a0,0x343b8 # popen+0x1c0>
	addi	a5,sp,144
	add	a5,a5,s7
	lw	a0,-128(a5)
	li	a7,57
	ecall
	beqz	s3,0x3430e # popen+0x116>
	mv	a0,s0
	jal	ra,0x3bbf8 # __unlockfile>
	j	0x3430e # popen+0x116>
	lw	a0,16(sp)
	li	a7,57
	ecall
	lw	a0,20(sp)
	ecall
	j	0x3430e # popen+0x116>
	jal	ra,0x2f900 # __errno_location>
	lw	s2,0(a0)
	mv	s1,a0
	j	0x342f2 # popen+0xfa>
	addi	a5,sp,144
	add	s8,s8,a5
	lw	a0,-128(s8)
	li	a2,0
	li	a1,2
	jal	ra,0x37f34 # fcntl>
	j	0x3437e # popen+0x186>
	jal	ra,0x37f18 # __stack_chk_fail>

remove:
	addi	sp,sp,-16
	mv	a1,a0
	sd	ra,8(sp)
	li	a7,35
	li	a0,-100
	li	a2,0
	ecall
	li	a5,-21
	sext.w	a0,a0
	bne	a0,a5,0x343f8 # remove+0x2a>
	li	a0,-100
	li	a2,512
	ecall
	sext.w	a0,a0
	jal	ra,0x394da # __syscall_ret>
	ld	ra,8(sp)
	sext.w	a0,a0
	addi	sp,sp,16
	ret

rename:
	addi	sp,sp,-16
	sd	ra,8(sp)
	mv	a3,a1
	li	a7,276
	mv	a1,a0
	li	a2,-100
	li	a0,-100
	li	a4,0
	ecall
	jal	ra,0x394da # __syscall_ret>
	ld	ra,8(sp)
	sext.w	a0,a0
	addi	sp,sp,16
	ret

setvbuf:
	li	a4,-1
	sw	a4,144(a0)
	li	a4,2
	mv	a5,a0
	beq	a2,a4,0x34476 # setvbuf+0x4c>
	li	a4,1
	bltu	a4,a2,0x34486 # setvbuf+0x5c>
	beqz	a1,0x3444e # setvbuf+0x24>
	li	a4,7
	bleu	a3,a4,0x3444e # setvbuf+0x24>
	addi	a1,a1,8
	addi	a3,a3,-8
	sd	a1,88(a0)
	sd	a3,96(a0)
	li	a4,1
	beq	a2,a4,0x34460 # setvbuf+0x36>
	lw	a4,0(a5)
	li	a0,0
	ori	a4,a4,64
	sw	a4,0(a5)
	ret
	ld	a4,96(a5)
	beqz	a4,0x34454 # setvbuf+0x2a>
	li	a4,10
	sw	a4,144(a5)
	lw	a4,0(a5)
	li	a0,0
	ori	a4,a4,64
	sw	a4,0(a5)
	ret
	lw	a4,0(a5)
	sd	zero,96(a0)
	li	a0,0
	ori	a4,a4,64
	sw	a4,0(a5)
	ret
	li	a0,-1
	ret

snprintf:
	addi	sp,sp,-80
	sd	s0,16(sp)
	auipc	s0,0x19
	ld	s0,-366(s0) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	ld	t3,0(s0)
	addi	t1,sp,40
	sd	a3,40(sp)
	mv	a3,t1
	sd	a4,48(sp)
	sd	a5,56(sp)
	sd	ra,24(sp)
	sd	a6,64(sp)
	sd	a7,72(sp)
	sd	t3,8(sp)
	sd	t1,0(sp)
	jal	ra,0x36112 # vsnprintf>
	ld	a4,8(sp)
	ld	a5,0(s0)
	bne	a4,a5,0x344c4 # snprintf+0x3a>
	ld	ra,24(sp)
	ld	s0,16(sp)
	addi	sp,sp,80
	ret
	jal	ra,0x37f18 # __stack_chk_fail>

tmpfile:
	addi	sp,sp,-96
	auipc	a5,0x14
	addi	a5,a5,478 # 0x486a8 # app_mask+0x10>
	sd	s5,40(sp)
	auipc	s5,0x19
	ld	s5,-436(s5) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	ld	a3,0(a5)
	ld	a4,8(a5)
	ld	a2,0(s5)
	lw	a5,16(a5)
	sd	s2,64(sp)
	lui	s2,0x8
	sd	s1,72(sp)
	sd	s3,56(sp)
	sd	s4,48(sp)
	sd	ra,88(sp)
	sd	s0,80(sp)
	sd	a2,24(sp)
	sd	a3,0(sp)
	sd	a4,8(sp)
	sw	a5,16(sp)
	mv	s3,sp
	li	s1,100
	addi	s4,sp,13
	addi	s2,s2,194 # 0x80c2 # exit-0x805e>
	j	0x34510 # tmpfile+0x48>
	addiw	s1,s1,-1
	beqz	s1,0x34582 # tmpfile+0xba>
	mv	a0,s4
	jal	ra,0x36f84 # __randname>
	li	a7,56
	li	a0,-100
	mv	a1,s3
	mv	a2,s2
	li	a3,384
	ecall
	jal	ra,0x394da # __syscall_ret>
	sext.w	s0,a0
	bltz	s0,0x3450c # tmpfile+0x44>
	li	a7,35
	li	a0,-100
	mv	a1,s3
	li	a2,0
	ecall
	auipc	a1,0x14
	addi	a1,a1,346 # 0x486a0 # app_mask+0x8>
	mv	a0,s0
	jal	ra,0x3b96e # __fdopen>
	mv	a5,a0
	beqz	a0,0x34576 # tmpfile+0xae>
	ld	a3,24(sp)
	ld	a4,0(s5)
	bne	a3,a4,0x34586 # tmpfile+0xbe>
	ld	ra,88(sp)
	ld	s0,80(sp)
	ld	s1,72(sp)
	ld	s2,64(sp)
	ld	s3,56(sp)
	ld	s4,48(sp)
	ld	s5,40(sp)
	mv	a0,a5
	addi	sp,sp,96
	ret
	li	a7,57
	mv	a0,s0
	ecall
	j	0x34558 # tmpfile+0x90>
	li	a5,0
	j	0x34558 # tmpfile+0x90>
	jal	ra,0x37f18 # __stack_chk_fail>

ungetc:
	li	a5,-1
	beq	a0,a5,0x34606 # ungetc+0x7c>
	lw	a5,140(a1)
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	s2,0(sp)
	sd	ra,24(sp)
	sext.w	a5,a5
	mv	s1,a0
	mv	s0,a1
	li	s2,0
	bltz	a5,0x345b2 # ungetc+0x28>
	mv	a0,a1
	jal	ra,0x3bb48 # __lockfile>
	mv	s2,a0
	ld	a5,8(s0)
	beqz	a5,0x345ea # ungetc+0x60>
	ld	a4,88(s0)
	addi	a4,a4,-8
	bleu	a5,a4,0x345f4 # ungetc+0x6a>
	addi	a4,a5,-1
	sd	a4,8(s0)
	sb	s1,-1(a5)
	lw	a5,0(s0)
	andi	a5,a5,-17
	sw	a5,0(s0)
	bnez	s2,0x345e2 # ungetc+0x58>
	andi	a0,s1,255
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret
	mv	a0,s0
	jal	ra,0x3bbf8 # __unlockfile>
	j	0x345d2 # ungetc+0x48>
	mv	a0,s0
	jal	ra,0x3bed0 # __toread>
	ld	a5,8(s0)
	bnez	a5,0x345b6 # ungetc+0x2c>
	bnez	s2,0x345fc # ungetc+0x72>
	li	a0,-1
	j	0x345d6 # ungetc+0x4c>
	mv	a0,s0
	jal	ra,0x3bbf8 # __unlockfile>
	li	a0,-1
	j	0x345d6 # ungetc+0x4c>
	li	a0,-1
	ret

pop_arg:
	addiw	a1,a1,-9
	sext.w	a4,a1
	li	a5,17
	bltu	a5,a4,0x346d2 # pop_arg+0xc8>
	slli	a1,a1,0x20
	srli	a1,a1,0x20
	auipc	a4,0x14
	addi	a4,a4,162 # 0x486bc # app_mask+0x24>
	slli	a1,a1,0x2
	add	a1,a1,a4
	lw	a5,0(a1)
	addi	sp,sp,-16
	sd	s0,0(sp)
	add	a5,a5,a4
	sd	ra,8(sp)
	mv	s0,a0
	jr	a5
	ld	a5,0(a2)
	ld	a4,0(a5)
	addi	a5,a5,8
	sd	a5,0(a2)
	sd	a4,0(a0)
	ld	ra,8(sp)
	ld	s0,0(sp)
	addi	sp,sp,16
	ret
	ld	a5,0(a2)
	ld	ra,8(sp)
	ld	s0,0(sp)
	addi	a4,a5,8
	sd	a4,0(a2)
	ld	a5,0(a5)
	sd	a5,0(a0)
	addi	sp,sp,16
	ret
	ld	a5,0(a2)
	lbu	a4,0(a5)
	addi	a5,a5,8
	sd	a5,0(a2)
	sd	a4,0(a0)
	j	0x3463e # pop_arg+0x34>
	ld	a5,0(a2)
	lh	a4,0(a5)
	addi	a5,a5,8
	sd	a5,0(a2)
	sd	a4,0(a0)
	j	0x3463e # pop_arg+0x34>
	ld	a5,0(a2)
	lhu	a4,0(a5)
	addi	a5,a5,8
	sd	a5,0(a2)
	sd	a4,0(a0)
	j	0x3463e # pop_arg+0x34>
	ld	a5,0(a2)
	lb	a4,0(a5)
	addi	a5,a5,8
	sd	a5,0(a2)
	sd	a4,0(a0)
	j	0x3463e # pop_arg+0x34>
	ld	a5,0(a2)
	addi	a5,a5,15
	andi	a5,a5,-16
	ld	a3,0(a5)
	ld	a4,8(a5)
	addi	a5,a5,16
	sd	a5,0(a2)
	sd	a3,0(a0)
	sd	a4,8(a0)
	j	0x3463e # pop_arg+0x34>
	ld	a5,0(a2)
	fld	fa0,0(a5)
	addi	a5,a5,8
	sd	a5,0(a2)
	jal	ra,0x40874 # __extenddftf2>
	sd	a0,0(s0)
	sd	a1,8(s0)
	j	0x3463e # pop_arg+0x34>
	ld	a5,0(a2)
	lw	a4,0(a5)
	addi	a5,a5,8
	sd	a5,0(a2)
	sd	a4,0(a0)
	j	0x3463e # pop_arg+0x34>
	ld	a5,0(a2)
	lwu	a4,0(a5)
	addi	a5,a5,8
	sd	a5,0(a2)
	sd	a4,0(a0)
	j	0x3463e # pop_arg+0x34>
	ret

pad.part.0:
	addi	sp,sp,-336
	sd	s4,288(sp)
	auipc	s4,0x19
	ld	s4,-952(s4) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	ld	a5,0(s4)
	sd	s0,320(sp)
	sd	s1,312(sp)
	subw	s0,a2,a3
	sd	s2,304(sp)
	sd	a5,264(sp)
	sd	ra,328(sp)
	sd	s3,296(sp)
	sd	s5,280(sp)
	li	a5,256
	mv	s1,a0
	mv	s2,s0
	li	a2,256
	blt	a5,s0,0x34708 # pad.part.0+0x34>
	mv	a2,s0
	addi	s5,sp,8
	mv	a0,s5
	jal	ra,0x3683a # memset>
	li	a5,255
	ble	s0,a5,0x3477e # pad.part.0+0xaa>
	lw	a5,0(s1)
	li	s3,255
	andi	a4,a5,32
	j	0x34730 # pad.part.0+0x5c>
	addiw	s0,s0,-256
	mv	s2,s0
	bleu	s0,s3,0x34754 # pad.part.0+0x80>
	sext.w	a5,a4
	bnez	a4,0x34726 # pad.part.0+0x52>
	mv	a2,s1
	li	a1,256
	mv	a0,s5
	jal	ra,0x33f64 # __fwritex>
	lw	a5,0(s1)
	addiw	s0,s0,-256
	mv	s2,s0
	andi	a4,a5,32
	mv	a5,a4
	bltu	s3,s0,0x34730 # pad.part.0+0x5c>
	beqz	a5,0x34772 # pad.part.0+0x9e>
	ld	a4,264(sp)
	ld	a5,0(s4)
	bne	a4,a5,0x34786 # pad.part.0+0xb2>
	ld	ra,328(sp)
	ld	s0,320(sp)
	ld	s1,312(sp)
	ld	s2,304(sp)
	ld	s3,296(sp)
	ld	s4,288(sp)
	ld	s5,280(sp)
	addi	sp,sp,336
	ret
	mv	a2,s1
	mv	a1,s2
	mv	a0,s5
	jal	ra,0x33f64 # __fwritex>
	j	0x34756 # pad.part.0+0x82>
	lw	a5,0(s1)
	andi	a5,a5,32
	j	0x34754 # pad.part.0+0x80>
	jal	ra,0x37f18 # __stack_chk_fail>

fmt_fp:
	addi	sp,sp,-128
	lui	t0,0xffffe
	sd	s0,112(sp)
	addi	t0,t0,688 # 0xffffffffffffe2b0 # __BSS_END__+0xfffffffffffaff28>
	auipc	s0,0x19
	ld	s0,-1140(s0) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	sd	s1,104(sp)
	sd	s2,96(sp)
	sd	s4,80(sp)
	sd	s8,48(sp)
	sd	ra,120(sp)
	sd	s3,88(sp)
	sd	s5,72(sp)
	sd	s6,64(sp)
	sd	s7,56(sp)
	sd	s9,40(sp)
	sd	s10,32(sp)
	sd	s11,24(sp)
	ld	a7,0(s0)
	add	sp,sp,t0
	mv	s0,a4
	lui	a4,0x2
	sd	a3,0(sp)
	sd	a5,8(sp)
	addi	a3,sp,80
	addi	a5,a4,-760 # 0x1d08 # exit-0xe418>
	add	a5,a5,a3
	sd	a7,0(a5)
	addi	a5,a4,-752
	mv	s1,a2
	add	a5,a5,a3
	lui	a2,0xffffe
	mv	s8,a1
	mv	s2,a0
	add	a2,a2,a5
	mv	a0,a1
	mv	a1,s1
	mv	s4,a6
	sw	zero,756(a2) # 0xffffffffffffe2f4 # __BSS_END__+0xfffffffffffaff6c>
	jal	ra,0x3aa8e # __signbitl>
	beqz	a0,0x34d1a # fmt_fp+0x590>
	li	a5,-1
	slli	a5,a5,0x3f
	xor	s1,s1,a5
	auipc	a5,0x14
	addi	a5,a5,-238 # 0x48708 # app_mask+0x70>
	li	s7,1
	sd	a5,16(sp)
	mv	a0,s8
	mv	a1,s1
	jal	ra,0x39eea # __fpclassifyl>
	li	a5,1
	ble	a0,a5,0x34d42 # fmt_fp+0x5b8>
	lui	s6,0x2
	addi	a4,sp,80
	lui	s10,0xffffe
	addi	a5,s6,-752 # 0x1d10 # exit-0xe410>
	add	a5,a5,a4
	addi	a2,s10,756 # 0xffffffffffffe2f4 # __BSS_END__+0xfffffffffffaff6c>
	add	a2,a2,a5
	mv	a0,s8
	mv	a1,s1
	jal	ra,0x3b182 # frexpl>
	mv	a2,a0
	mv	a3,a1
	jal	ra,0x3e0b8 # __addtf3>
	li	a2,0
	li	a3,0
	mv	s9,a0
	mv	s8,a1
	jal	ra,0x3f2cc # __eqtf2>
	mv	s3,s9
	mv	s5,s8
	bnez	a0,0x34e14 # fmt_fp+0x68a>
	addi	a5,s6,-752
	addi	a4,sp,80
	add	a5,a5,a4
	add	s10,s10,a5
	ori	s1,s4,32
	li	a3,97
	lw	s11,756(s10)
	beq	s1,a3,0x34e38 # fmt_fp+0x6ae>
	bgez	s0,0x34866 # fmt_fp+0xdc>
	li	s0,6
	li	a2,0
	li	a3,0
	mv	a0,s9
	mv	a1,s8
	jal	ra,0x3f2cc # __eqtf2>
	bnez	a0,0x35112 # fmt_fp+0x988>
	lui	a5,0x2
	addi	a4,a5,-1272 # 0x1b08 # exit-0xe618>
	addi	a3,sp,80
	add	s8,a3,a4
	bgez	s11,0x34894 # fmt_fp+0x10a>
	lui	s8,0xffffe
	addi	a5,a5,-752
	addi	s8,s8,760 # 0xffffffffffffe2f8 # __BSS_END__+0xfffffffffffaff70>
	add	a5,a5,a3
	add	s8,s8,a5
	auipc	a3,0x14
	addi	a3,a3,44 # 0x488c0 # app_mask+0x228>
	ld	s10,0(a3)
	ld	s9,8(a3)
	mv	s6,s8
	mv	a1,s5
	mv	a0,s3
	jal	ra,0x40670 # __fixunstfsi>
	sw	a0,0(s6)
	sext.w	a0,a0
	jal	ra,0x4074e # __floatunsitf>
	mv	a2,a0
	mv	a3,a1
	mv	a0,s3
	mv	a1,s5
	jal	ra,0x3fb62 # __subtf3>
	mv	a2,s10
	mv	a3,s9
	jal	ra,0x3f4ca # __multf3>
	li	a2,0
	li	a3,0
	mv	s3,a0
	mv	s5,a1
	jal	ra,0x3f2cc # __eqtf2>
	addi	s6,s6,4
	bnez	a0,0x348a6 # fmt_fp+0x11c>
	mv	s10,s8
	blez	s11,0x34956 # fmt_fp+0x1cc>
	lui	a2,0x3b9ad
	li	a0,29
	addi	a2,a2,-1536 # 0x3b9aca00 # __BSS_END__+0x3b95e678>
	sext.w	a1,s11
	ble	s11,a0,0x348f6 # fmt_fp+0x16c>
	li	a1,29
	addi	a4,s6,-4
	bltu	a4,s10,0x3492a # fmt_fp+0x1a0>
	li	a3,0
	lwu	a5,0(a4)
	slli	a3,a3,0x20
	srli	a3,a3,0x20
	sll	a5,a5,a1
	add	a5,a5,a3
	remu	a3,a5,a2
	addi	a4,a4,-4
	divu	a5,a5,a2
	sw	a3,4(a4)
	sext.w	a3,a5
	bleu	s10,a4,0x34900 # fmt_fp+0x176>
	beqz	a3,0x3492a # fmt_fp+0x1a0>
	sw	a3,-4(s10)
	addi	s10,s10,-4
	bltu	s10,s6,0x34936 # fmt_fp+0x1ac>
	j	0x3493c # fmt_fp+0x1b2>
	addi	s6,s6,-4
	bleu	s6,s10,0x3493c # fmt_fp+0x1b2>
	lw	a5,-4(s6)
	beqz	a5,0x34930 # fmt_fp+0x1a6>
	subw	s11,s11,a1
	bgtz	s11,0x348ec # fmt_fp+0x162>
	lui	a4,0x2
	addi	a4,a4,-752 # 0x1d10 # exit-0xe410>
	addi	a3,sp,80
	lui	a5,0xffffe
	add	a4,a4,a3
	add	a5,a5,a4
	sw	s11,756(a5) # 0xffffffffffffe2f4 # __BSS_END__+0xfffffffffffaff6c>
	beqz	s11,0x349f6 # fmt_fp+0x26c>
	addiw	t1,s0,45
	li	a5,9
	divuw	t1,t1,a5
	lui	t3,0x3b9ad
	li	t5,-9
	li	t6,1
	addiw	t3,t3,-1536
	li	t4,102
	addiw	t1,t1,1
	slli	t1,t1,0x20
	srli	t1,t1,0x20
	slli	t0,t1,0x2
	ble	t5,s11,0x350c0 # fmt_fp+0x936>
	lw	a3,0(s10)
	addiw	s11,s11,9
	li	a2,9
	bleu	s6,s10,0x350ce # fmt_fp+0x944>
	sllw	a1,t6,a2
	addiw	a1,a1,-1
	sraw	a0,t3,a2
	mv	a5,s10
	li	a4,0
	j	0x349a2 # fmt_fp+0x218>
	lw	a3,0(a5)
	srlw	t2,a3,a2
	addw	a4,t2,a4
	sw	a4,0(a5)
	and	a4,a1,a3
	addi	a5,a5,4
	mulw	a4,a4,a0
	bltu	a5,s6,0x349a0 # fmt_fp+0x216>
	lw	a5,0(s10)
	bnez	a5,0x349c2 # fmt_fp+0x238>
	addi	s10,s10,4
	beqz	a4,0x349ca # fmt_fp+0x240>
	sw	a4,0(s6)
	addi	s6,s6,4
	mv	a4,s10
	bne	s1,t4,0x349d2 # fmt_fp+0x248>
	mv	a4,s8
	sub	a5,s6,a4
	srai	a5,a5,0x2
	ble	a5,t1,0x349e0 # fmt_fp+0x256>
	add	s6,a4,t0
	bnez	s11,0x34980 # fmt_fp+0x1f6>
	lui	a4,0x2
	addi	a4,a4,-752 # 0x1d10 # exit-0xe410>
	addi	a3,sp,80
	lui	a5,0xffffe
	add	a4,a4,a3
	add	a5,a5,a4
	sw	zero,756(a5) # 0xffffffffffffe2f4 # __BSS_END__+0xfffffffffffaff6c>
	bltu	s10,s6,0x350d6 # fmt_fp+0x94c>
	mv	a4,s0
	li	a7,0
	li	a5,103
	bne	s1,a5,0x34a0c # fmt_fp+0x282>
	snez	a5,s0
	subw	a4,a4,a5
	sub	a5,s6,s8
	srai	a5,a5,0x2
	addi	a5,a5,-1
	slli	a3,a5,0x3
	add	a5,a5,a3
	ble	a5,a4,0x34af4 # fmt_fp+0x36a>
	lui	a5,0x24
	addw	a5,a5,a4
	li	a4,9
	divw	a3,a5,a4
	li	a2,9
	remw	a4,a5,a4
	slli	a5,a3,0x2
	lui	a3,0xffff0
	addi	a3,a3,4
	add	a5,a5,a3
	add	a5,a5,s8
	addiw	a4,a4,1
	beq	a4,a2,0x35628 # fmt_fp+0xe9e>
	li	a2,10
	li	a1,9
	slliw	a3,a2,0x2
	addw	a3,a3,a2
	addiw	a4,a4,1
	slliw	a2,a3,0x1
	bne	a4,a1,0x34a46 # fmt_fp+0x2bc>
	sext.w	t1,a2
	lw	s9,0(a5) # 0x24000 # discharge2reg+0x64>
	remuw	a1,s9,t1
	mv	t4,a1
	bnez	a1,0x35454 # fmt_fp+0xcca>
	addi	a4,a5,4
	beq	s6,a4,0x355dc # fmt_fp+0xe52>
	divuw	a4,s9,t1
	andi	a4,a4,1
	bnez	a4,0x3557c # fmt_fp+0xdf2>
	lui	a4,0x3b9ad
	addi	a4,a4,-1536 # 0x3b9aca00 # __BSS_END__+0x3b95e678>
	beq	a2,a4,0x355ce # fmt_fp+0xe44>
	auipc	a4,0x14
	addi	a4,a4,-550 # 0x48860 # app_mask+0x1c8>
	auipc	a3,0x14
	addi	a3,a3,-526 # 0x48880 # app_mask+0x1e8>
	ld	t3,0(a4)
	ld	a2,0(a3)
	ld	a4,8(a4)
	ld	a3,8(a3)
	beqz	s7,0x34aba # fmt_fp+0x330>
	ld	a1,16(sp)
	lbu	a0,0(a1)
	li	a1,45
	bne	a0,a1,0x34aba # fmt_fp+0x330>
	li	a1,-1
	slli	a1,a1,0x3f
	xor	a4,a4,a1
	xor	a3,a3,a1
	mv	a0,t3
	mv	a1,a4
	sd	t1,56(sp)
	sd	a5,40(sp)
	sd	a7,64(sp)
	sd	t3,32(sp)
	sd	a4,24(sp)
	subw	s9,s9,t4
	jal	ra,0x3e0b8 # __addtf3>
	ld	t3,32(sp)
	ld	a4,24(sp)
	mv	a2,t3
	mv	a3,a4
	jal	ra,0x3f2cc # __eqtf2>
	ld	a5,40(sp)
	ld	t1,56(sp)
	bnez	a0,0x35488 # fmt_fp+0xcfe>
	ld	a7,64(sp)
	sw	s9,0(a5)
	addi	a2,a5,4
	bleu	s6,a2,0x34af4 # fmt_fp+0x36a>
	mv	s6,a2
	bltu	s10,s6,0x34b00 # fmt_fp+0x376>
	j	0x34b06 # fmt_fp+0x37c>
	addi	s6,s6,-4
	bleu	s6,s10,0x34b06 # fmt_fp+0x37c>
	lw	a5,-4(s6)
	beqz	a5,0x34afa # fmt_fp+0x370>
	li	a5,103
	beq	s1,a5,0x3515c # fmt_fp+0x9d2>
	bnez	s0,0x351d4 # fmt_fp+0xa4a>
	ld	a5,8(sp)
	lui	t1,0x80000
	not	t1,t1
	sraiw	a0,a5,0x3
	andi	a0,a0,1
	li	a5,1
	addw	s1,a0,a5
	ori	s9,s4,32
	li	a5,102
	mv	a0,s1
	subw	t1,t1,s1
	beq	s9,a5,0x35204 # fmt_fp+0xa7a>
	sraiw	a5,a7,0x1f
	xor	a4,a7,a5
	subw	a4,a4,a5
	lui	a5,0x2
	addi	a5,a5,-804 # 0x1cdc # exit-0xe444>
	beqz	a7,0x355fa # fmt_fp+0xe70>
	addi	a3,sp,80
	add	s1,a3,a5
	mv	a5,s1
	li	a2,10
	li	t3,9
	remu	a3,a4,a2
	addi	a5,a5,-1
	mv	a1,a4
	addiw	a3,a3,48
	sb	a3,0(a5)
	divu	a4,a4,a2
	bltu	t3,a1,0x34b5a # fmt_fp+0x3d0>
	sub	a4,s1,a5
	li	a3,1
	blt	a3,a4,0x34b90 # fmt_fp+0x406>
	li	a2,48
	li	a3,1
	addi	a5,a5,-1
	sub	a4,s1,a5
	sb	a2,0(a5)
	ble	a4,a3,0x34b82 # fmt_fp+0x3f8>
	srai	a7,a7,0x3f
	andi	a7,a7,2
	addi	a4,a5,-2
	addi	a7,a7,43
	sd	a4,48(sp)
	sb	a7,-1(a5)
	sb	s4,-2(a5)
	sub	s1,s1,a4
	blt	t1,s1,0x35616 # fmt_fp+0xe8c>
	addw	s1,s1,a0
	lui	a5,0x80000
	bnez	s7,0x352a4 # fmt_fp+0xb1a>
	not	a5,a5
	sext.w	a5,a5
	blt	a5,s1,0x35616 # fmt_fp+0xe8c>
	ld	a3,8(sp)
	addw	s4,s1,s7
	lui	a5,0x12
	sext.w	a4,a3
	sw	s4,32(sp)
	and	a5,a5,a3
	sd	a4,8(sp)
	bnez	a5,0x34bec # fmt_fp+0x462>
	ld	a5,0(sp)
	ble	a5,s4,0x34bec # fmt_fp+0x462>
	mv	a3,s4
	mv	a2,a5
	li	a1,32
	mv	a0,s2
	jal	ra,0x346d4 # pad.part.0>
	lw	a5,0(s2)
	andi	a5,a5,32
	beqz	a5,0x35440 # fmt_fp+0xcb6>
	ld	a4,8(sp)
	lui	a5,0x10
	xor	a5,a5,a4
	lui	a4,0x12
	and	a5,a5,a4
	bnez	a5,0x34c18 # fmt_fp+0x48e>
	ld	a5,0(sp)
	ble	a5,s4,0x34c18 # fmt_fp+0x48e>
	mv	a3,s4
	mv	a2,a5
	li	a1,48
	mv	a0,s2
	jal	ra,0x346d4 # pad.part.0>
	li	a5,102
	beq	s9,a5,0x352cc # fmt_fp+0xb42>
	bltu	s10,s6,0x34c28 # fmt_fp+0x49e>
	addi	s6,s10,4
	bltz	s0,0x34cc4 # fmt_fp+0x53a>
	lui	a5,0x2
	addi	a4,a5,-791 # 0x1ce9 # exit-0xe437>
	addi	a3,sp,80
	addi	a5,a5,-800
	add	s7,a3,a5
	ld	a5,8(sp)
	mv	t3,s10
	add	s3,a3,a4
	andi	a5,a5,8
	li	s11,10
	li	s1,9
	sd	a5,40(sp)
	li	s8,48
	lw	a1,0(s2)
	lwu	a5,0(t3) # 0x3b9ad000 # __BSS_END__+0x3b95ec78>
	sext.w	t5,s0
	andi	a1,a1,32
	mv	a0,s3
	beqz	a5,0x3522c # fmt_fp+0xaa2>
	remu	a4,a5,s11
	mv	s9,a0
	mv	a2,a5
	addi	a0,a0,-1
	addiw	a4,a4,48
	sb	a4,-1(s9)
	divu	a5,a5,s11
	bltu	s1,a2,0x34c66 # fmt_fp+0x4dc>
	beq	a0,s3,0x3522c # fmt_fp+0xaa2>
	beq	s10,t3,0x35248 # fmt_fp+0xabe>
	sub	s5,s3,a0
	mv	s9,a0
	bleu	a0,s7,0x34cb2 # fmt_fp+0x528>
	mv	a5,a0
	addi	a5,a5,-1
	sb	s8,0(a5)
	bltu	s7,a5,0x34c94 # fmt_fp+0x50a>
	addi	a5,a0,-1
	li	s9,-1
	bltu	a5,s7,0x34cac # fmt_fp+0x522>
	sub	s9,s7,a0
	add	s9,s9,a0
	sub	s5,s3,s9
	beqz	a1,0x35212 # fmt_fp+0xa88>
	addi	t3,t3,4
	subw	s0,t5,s5
	bleu	s6,t3,0x34cc4 # fmt_fp+0x53a>
	bgez	s0,0x34c50 # fmt_fp+0x4c6>
	addiw	a2,s0,18
	li	a5,18
	ble	a2,a5,0x34cda # fmt_fp+0x550>
	li	a3,18
	li	a1,48
	mv	a0,s2
	jal	ra,0x346d4 # pad.part.0>
	lw	a5,0(s2)
	andi	a5,a5,32
	beqz	a5,0x35500 # fmt_fp+0xd76>
	ld	a4,8(sp)
	lui	a5,0x2
	xor	s3,a4,a5
	lui	a5,0x12
	and	a5,s3,a5
	bnez	a5,0x34d0a # fmt_fp+0x580>
	ld	a5,0(sp)
	ble	a5,s4,0x34d0a # fmt_fp+0x580>
	mv	a3,s4
	mv	a2,a5
	li	a1,32
	mv	a0,s2
	jal	ra,0x346d4 # pad.part.0>
	ld	a5,0(sp)
	lw	s1,32(sp)
	ble	a5,s4,0x34d14 # fmt_fp+0x58a>
	mv	s1,a5
	sext.w	a0,s1
	j	0x34dd4 # fmt_fp+0x64a>
	ld	a4,8(sp)
	srli	a5,a4,0xb
	andi	a5,a5,1
	sext.w	a4,a4
	beqz	a5,0x350ac # fmt_fp+0x922>
	auipc	a5,0x14
	addi	a5,a5,-1565 # 0x4870b # app_mask+0x73>
	mv	a0,s8
	mv	a1,s1
	sd	a5,16(sp)
	jal	ra,0x39eea # __fpclassifyl>
	li	a5,1
	li	s7,1
	blt	a5,a0,0x34810 # fmt_fp+0x86>
	andi	s4,s4,32
	auipc	s9,0x14
	addi	s9,s9,-1574 # 0x48720 # app_mask+0x88>
	bnez	s4,0x34d5a # fmt_fp+0x5d0>
	auipc	s9,0x14
	addi	s9,s9,-1578 # 0x48728 # app_mask+0x90>
	mv	a2,s8
	mv	a3,s1
	mv	a0,s8
	mv	a1,s1
	jal	ra,0x3f2cc # __eqtf2>
	beqz	a0,0x34d74 # fmt_fp+0x5ea>
	auipc	s9,0x14
	addi	s9,s9,-1592 # 0x48730 # app_mask+0x98>
	beqz	s4,0x35152 # fmt_fp+0x9c8>
	ld	a4,8(sp)
	lui	a5,0xffff0
	addi	a5,a5,-1
	and	a5,a5,a4
	lui	a4,0x12
	addiw	s1,s7,3
	and	a5,a5,a4
	mv	s0,s1
	bnez	a5,0x34d9c # fmt_fp+0x612>
	ld	a5,0(sp)
	ble	a5,s1,0x34d9c # fmt_fp+0x612>
	mv	a3,s1
	mv	a2,a5
	li	a1,32
	mv	a0,s2
	jal	ra,0x346d4 # pad.part.0>
	lw	a5,0(s2)
	andi	a5,a5,32
	beqz	a5,0x352aa # fmt_fp+0xb20>
	ld	a4,8(sp)
	lui	a5,0x2
	xor	a5,a5,a4
	lui	a4,0x12
	and	a5,a5,a4
	bnez	a5,0x34dc8 # fmt_fp+0x63e>
	ld	a5,0(sp)
	ble	a5,s1,0x34dc8 # fmt_fp+0x63e>
	mv	a3,s1
	mv	a2,a5
	li	a1,32
	mv	a0,s2
	jal	ra,0x346d4 # pad.part.0>
	ld	a5,0(sp)
	ble	a5,s1,0x34dd0 # fmt_fp+0x646>
	mv	s0,a5
	sext.w	a0,s0
	lui	a5,0x2
	addi	a4,sp,80
	addi	a5,a5,-760 # 0x1d08 # exit-0xe418>
	add	a5,a5,a4
	ld	a4,0(a5)
	auipc	a5,0x18
	ld	a5,1344(a5) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	ld	a5,0(a5)
	bne	a4,a5,0x35636 # fmt_fp+0xeac>
	lui	t0,0x2
	addi	t0,t0,-688 # 0x1d50 # exit-0xe3d0>
	add	sp,sp,t0
	ld	ra,120(sp)
	ld	s0,112(sp)
	ld	s1,104(sp)
	ld	s2,96(sp)
	ld	s3,88(sp)
	ld	s4,80(sp)
	ld	s5,72(sp)
	ld	s6,64(sp)
	ld	s7,56(sp)
	ld	s8,48(sp)
	ld	s9,40(sp)
	ld	s10,32(sp)
	ld	s11,24(sp)
	addi	sp,sp,128
	ret
	lui	a5,0x2
	addi	a5,a5,-752 # 0x1d10 # exit-0xe410>
	addi	a4,sp,80
	add	a5,a5,a4
	add	s10,s10,a5
	lw	a3,756(s10)
	ori	s1,s4,32
	addiw	s11,a3,-1
	sw	s11,756(s10)
	li	a3,97
	bne	s1,a3,0x34860 # fmt_fp+0xd6>
	andi	a3,s4,32
	sd	a3,24(sp)
	beqz	a3,0x34e46 # fmt_fp+0x6bc>
	ld	a5,16(sp)
	addi	a5,a5,9
	sd	a5,16(sp)
	addiw	a5,s7,2
	sext.w	a4,s0
	sw	a5,56(sp)
	sd	a4,72(sp)
	li	a3,26
	sd	a5,40(sp)
	bltu	a3,a4,0x34eb2 # fmt_fp+0x728>
	auipc	a5,0x14
	addi	a5,a5,-1546 # 0x48850 # app_mask+0x1b8>
	ld	s5,0(a5)
	ld	s3,8(a5)
	li	a5,26
	subw	s6,a5,s0
	mv	s7,s5
	mv	s10,s3
	li	s1,-1
	mv	a0,s5
	mv	a1,s3
	mv	a2,s7
	mv	a3,s10
	jal	ra,0x3f4ca # __multf3>
	addiw	s6,s6,-1
	mv	s5,a0
	mv	s3,a1
	bne	s6,s1,0x34e76 # fmt_fp+0x6ec>
	ld	a5,16(sp)
	li	a4,45
	lbu	a1,0(a5)
	beq	a1,a4,0x355ac # fmt_fp+0xe22>
	mv	a2,s5
	mv	a3,s3
	mv	a0,s9
	mv	a1,s8
	jal	ra,0x3e0b8 # __addtf3>
	mv	a2,s5
	mv	a3,s3
	jal	ra,0x3fb62 # __subtf3>
	mv	s3,a0
	mv	s5,a1
	lui	a5,0x2
	sraiw	a2,s11,0x1f
	addi	a5,a5,-804 # 0x1cdc # exit-0xe444>
	addi	a4,sp,80
	xor	a3,s11,a2
	add	s1,a4,a5
	subw	a3,a3,a2
	mv	a1,s1
	li	a0,10
	li	t1,9
	beqz	s11,0x35536 # fmt_fp+0xdac>
	remu	a2,a3,a0
	addi	a1,a1,-1
	mv	a6,a3
	addiw	a2,a2,48
	sb	a2,0(a1)
	divu	a3,a3,a0
	bltu	t1,a6,0x34ed2 # fmt_fp+0x748>
	beq	a1,s1,0x35536 # fmt_fp+0xdac>
	auipc	a5,0x14
	addi	a5,a5,-1694 # 0x48850 # app_mask+0x1b8>
	ld	s10,0(a5)
	ld	s9,8(a5)
	lui	a5,0x2
	addi	a5,a5,-800 # 0x1ce0 # exit-0xe440>
	addi	a4,sp,80
	srai	a7,s11,0x3f
	add	s11,a4,a5
	addi	a5,a1,-2
	sd	a5,48(sp)
	ld	a5,8(sp)
	andi	a7,a7,2
	addiw	s4,s4,15
	addi	a7,a7,43
	andi	a5,a5,8
	sb	s4,-2(a1)
	lb	s7,24(sp)
	sb	a7,-1(a1)
	mv	s4,s11
	auipc	s8,0x14
	addi	s8,s8,-1168 # 0x48aa0 # xdigits>
	sd	a5,64(sp)
	j	0x34f4c # fmt_fp+0x7c2>
	li	a2,0
	li	a3,0
	mv	a0,a7
	mv	a1,a6
	mv	s4,s6
	jal	ra,0x3f2cc # __eqtf2>
	beqz	a0,0x34fc2 # fmt_fp+0x838>
	mv	a1,s5
	mv	a0,s3
	jal	ra,0x405cc # __fixtfsi>
	sext.w	a0,a0
	add	a3,s8,a0
	lbu	a3,0(a3)
	addi	s6,s4,1
	or	a3,s7,a3
	sb	a3,0(s4)
	jal	ra,0x406ee # __floatsitf>
	mv	a2,a0
	mv	a3,a1
	mv	a0,s3
	mv	a1,s5
	jal	ra,0x3fb62 # __subtf3>
	mv	a3,s9
	mv	a2,s10
	jal	ra,0x3f4ca # __multf3>
	sub	a3,s6,s11
	li	a5,1
	mv	a7,a0
	mv	a6,a1
	mv	s3,a0
	mv	s5,a1
	bne	a3,a5,0x34f3c # fmt_fp+0x7b2>
	li	a2,0
	li	a3,0
	sd	a1,32(sp)
	sd	a0,24(sp)
	jal	ra,0x3f2cc # __eqtf2>
	mv	a7,s3
	mv	a6,s5
	bnez	a0,0x34faa # fmt_fp+0x820>
	blez	s0,0x35436 # fmt_fp+0xcac>
	li	a5,46
	sb	a5,1(s4)
	li	a2,0
	li	a3,0
	mv	a0,a7
	mv	a1,a6
	addi	s4,s4,2
	jal	ra,0x3f2cc # __eqtf2>
	bnez	a0,0x34f4c # fmt_fp+0x7c2>
	ld	a5,48(sp)
	ld	a4,40(sp)
	sub	s8,s1,a5
	lui	a5,0x80000
	xori	a5,a5,-3
	sub	a5,a5,s8
	sub	a5,a5,a4
	blt	a5,s0,0x35616 # fmt_fp+0xe8c>
	sub	s4,s4,s11
	sext.w	a4,s8
	sext.w	a5,s4
	addw	s7,s4,s8
	beqz	s0,0x34ff6 # fmt_fp+0x86c>
	addi	a3,s4,-1
	ble	a3,s0,0x3556e # fmt_fp+0xde4>
	li	s0,0
	lw	a5,56(sp)
	ld	a4,8(sp)
	addw	s1,s7,a5
	lui	a5,0x12
	and	a5,a5,a4
	mv	s7,s1
	sext.w	s3,a4
	bnez	a5,0x35020 # fmt_fp+0x896>
	ld	a5,0(sp)
	ble	a5,s1,0x35020 # fmt_fp+0x896>
	mv	a3,s1
	mv	a2,a5
	li	a1,32
	mv	a0,s2
	jal	ra,0x346d4 # pad.part.0>
	lw	a5,0(s2)
	andi	a5,a5,32
	beqz	a5,0x3551c # fmt_fp+0xd92>
	lui	a5,0x10
	xor	a5,s3,a5
	lui	a4,0x12
	and	a5,a5,a4
	bnez	a5,0x35058 # fmt_fp+0x8ce>
	ld	a5,0(sp)
	ble	a5,s1,0x3504c # fmt_fp+0x8c2>
	mv	a3,s1
	mv	a2,a5
	li	a1,48
	mv	a0,s2
	jal	ra,0x346d4 # pad.part.0>
	lw	a5,0(s2)
	andi	a5,a5,32
	beqz	a5,0x35294 # fmt_fp+0xb0a>
	blez	s0,0x3507e # fmt_fp+0x8f4>
	li	a3,0
	mv	a2,s0
	li	a1,48
	mv	a0,s2
	jal	ra,0x346d4 # pad.part.0>
	lw	a5,0(s2)
	andi	a5,a5,32
	bnez	a5,0x3507e # fmt_fp+0x8f4>
	ld	a0,48(sp)
	mv	a2,s2
	mv	a1,s8
	jal	ra,0x33f64 # __fwritex>
	lui	a5,0x2
	xor	a5,s3,a5
	lui	a4,0x12
	and	a5,a5,a4
	bnez	a5,0x3509e # fmt_fp+0x914>
	ld	a5,0(sp)
	ble	a5,s1,0x3509e # fmt_fp+0x914>
	mv	a3,s1
	mv	a2,a5
	li	a1,32
	mv	a0,s2
	jal	ra,0x346d4 # pad.part.0>
	ld	a5,0(sp)
	ble	a5,s1,0x350a6 # fmt_fp+0x91c>
	mv	s7,a5
	sext.w	a0,s7
	j	0x34dd4 # fmt_fp+0x64a>
	andi	a4,a4,1
	beqz	a4,0x35142 # fmt_fp+0x9b8>
	auipc	a5,0x13
	addi	a5,a5,1630 # 0x4870e # app_mask+0x76>
	li	s7,1
	sd	a5,16(sp)
	j	0x34802 # fmt_fp+0x78>
	negw	a2,s11
	lw	a3,0(s10)
	li	s11,0
	bltu	s10,s6,0x34990 # fmt_fp+0x206>
	bnez	a3,0x349ca # fmt_fp+0x240>
	addi	s10,s10,4
	j	0x349ca # fmt_fp+0x240>
	sub	a5,s8,s10
	lw	a2,0(s10)
	srai	a5,a5,0x2
	slliw	a4,a5,0x3
	addi	a3,s1,-102
	li	a1,9
	addw	a7,a4,a5
	snez	a3,a3
	li	a5,10
	bleu	a2,a1,0x3561c # fmt_fp+0xe92>
	slliw	a4,a5,0x2
	addw	a5,a5,a4
	slliw	a5,a5,0x1
	addiw	a7,a7,1
	bleu	a5,a2,0x350f8 # fmt_fp+0x96e>
	mulw	a5,a7,a3
	subw	a4,s0,a5
	j	0x349fe # fmt_fp+0x274>
	auipc	a5,0x13
	addi	a5,a5,1950 # 0x488b0 # app_mask+0x218>
	ld	a3,8(a5)
	ld	a2,0(a5)
	mv	a0,s9
	mv	a1,s8
	jal	ra,0x3f4ca # __multf3>
	lui	a5,0x2
	addi	a5,a5,-752 # 0x1d10 # exit-0xe410>
	addi	a4,sp,80
	lui	a3,0xffffe
	add	a5,a5,a4
	addiw	s11,s11,-28
	add	a3,a3,a5
	mv	s3,a0
	mv	s5,a1
	sw	s11,756(a3) # 0xffffffffffffe2f4 # __BSS_END__+0xfffffffffffaff6c>
	j	0x34876 # fmt_fp+0xec>
	auipc	a5,0x13
	addi	a5,a5,1479 # 0x48709 # app_mask+0x71>
	mv	s7,a0
	sd	a5,16(sp)
	j	0x34802 # fmt_fp+0x78>
	auipc	s9,0x13
	addi	s9,s9,1510 # 0x48738 # app_mask+0xa0>
	j	0x34d74 # fmt_fp+0x5ea>
	bnez	s0,0x35160 # fmt_fp+0x9d6>
	li	s0,1
	ble	s0,a7,0x3516a # fmt_fp+0x9e0>
	li	a5,-4
	ble	a5,a7,0x35588 # fmt_fp+0xdfe>
	addiw	s4,s4,-2
	addiw	s0,s0,-1
	ld	a5,8(sp)
	andi	a5,a5,8
	bnez	a5,0x34b0e # fmt_fp+0x384>
	li	a4,9
	bleu	s6,s10,0x351a0 # fmt_fp+0xa16>
	lw	a1,-4(s6)
	beqz	a1,0x351a0 # fmt_fp+0xa16>
	li	a5,10
	remuw	a5,a1,a5
	li	a4,0
	bnez	a5,0x351a0 # fmt_fp+0xa16>
	li	a3,10
	slliw	a5,a3,0x2
	addw	a5,a5,a3
	slliw	a3,a5,0x1
	remuw	a2,a1,a3
	addiw	a4,a4,1
	beqz	a2,0x3518e # fmt_fp+0xa04>
	sub	a5,s6,s8
	srai	a5,a5,0x2
	addi	a3,a5,-1
	slli	a5,a3,0x3
	ori	a2,s4,32
	li	a1,102
	add	a5,a5,a3
	beq	a2,a1,0x351be # fmt_fp+0xa34>
	add	a5,a5,a7
	sub	a5,a5,a4
	not	a4,a5
	srai	a4,a4,0x3f
	and	a5,a5,a4
	blt	s0,a5,0x35592 # fmt_fp+0xe08>
	sext.w	s0,a5
	beqz	s0,0x34b12 # fmt_fp+0x388>
	lui	a5,0x80000
	xori	a5,a5,-3
	blt	a5,s0,0x35616 # fmt_fp+0xe8c>
	addiw	a5,s0,1
	li	a0,1
	lui	t1,0x80000
	addw	s1,a0,a5
	not	t1,t1
	ori	s9,s4,32
	li	a5,102
	mv	a0,s1
	subw	t1,t1,s1
	bne	s9,a5,0x34b3a # fmt_fp+0x3b0>
	blt	t1,a7,0x35616 # fmt_fp+0xe8c>
	blez	a7,0x34bb2 # fmt_fp+0x428>
	addw	s1,s1,a7
	j	0x34bb2 # fmt_fp+0x428>
	mv	a1,s0
	ble	s0,s5,0x3521a # fmt_fp+0xa90>
	mv	a1,s5
	mv	a2,s2
	mv	a0,s9
	sd	t5,24(sp)
	sd	t3,16(sp)
	jal	ra,0x33f64 # __fwritex>
	ld	t5,24(sp)
	ld	t3,16(sp)
	j	0x34cb6 # fmt_fp+0x52c>
	lui	a4,0x2
	addi	a3,sp,80
	addi	a5,a4,-792 # 0x1ce8 # exit-0xe438>
	add	a5,a5,a3
	sb	s8,0(a5) # 0xffffffff80000000 # __BSS_END__+0xffffffff7ffb1c78>
	addi	a5,a4,-792
	add	a0,a3,a5
	mv	s9,s3
	bne	s10,t3,0x34c92 # fmt_fp+0x508>
	sub	s5,s3,s9
	bnez	a1,0x34cb6 # fmt_fp+0x52c>
	li	a1,1
	mv	a2,s2
	sd	t5,24(sp)
	sd	t3,16(sp)
	jal	ra,0x33f64 # __fwritex>
	ld	a5,40(sp)
	ld	t5,24(sp)
	lw	a1,0(s2)
	ld	t3,16(sp)
	or	a4,a5,t5
	andi	a1,a1,32
	beqz	a4,0x34cb2 # fmt_fp+0x528>
	bnez	a1,0x34cb6 # fmt_fp+0x52c>
	li	a1,1
	mv	a2,s2
	auipc	a0,0xe
	addi	a0,a0,-1226 # 0x42db0 # udatatypename+0x3e8>
	jal	ra,0x33f64 # __fwritex>
	lw	a1,0(s2)
	ld	t5,24(sp)
	ld	t3,16(sp)
	andi	a1,a1,32
	j	0x34cb2 # fmt_fp+0x528>
	mv	a2,s2
	mv	a1,s4
	mv	a0,s11
	jal	ra,0x33f64 # __fwritex>
	bgtz	s0,0x3505c # fmt_fp+0x8d2>
	j	0x3506a # fmt_fp+0x8e0>
	xori	a5,a5,-2
	j	0x34bbe # fmt_fp+0x434>
	ld	a0,16(sp)
	mv	a2,s2
	mv	a1,s7
	jal	ra,0x33f64 # __fwritex>
	lw	a5,0(s2)
	andi	a5,a5,32
	bnez	a5,0x34da8 # fmt_fp+0x61e>
	mv	a2,s2
	li	a1,3
	mv	a0,s9
	jal	ra,0x33f64 # __fwritex>
	j	0x34da8 # fmt_fp+0x61e>
	mv	s9,s8
	bleu	s8,s10,0x352d4 # fmt_fp+0xb4a>
	mv	s9,s10
	bltu	s8,s9,0x3535a # fmt_fp+0xbd0>
	lui	a5,0x2
	addi	a4,a5,-791 # 0x1ce9 # exit-0xe437>
	addi	a3,sp,80
	addi	a5,a5,-800
	mv	t1,s9
	add	s3,a3,a4
	add	s11,a3,a5
	li	s1,48
	li	s7,10
	li	s10,9
	lwu	a5,0(t1) # 0xffffffff80000000 # __BSS_END__+0xffffffff7ffb1c78>
	mv	a0,s3
	beqz	a5,0x3544e # fmt_fp+0xcc4>
	remu	a4,a5,s7
	addi	a0,a0,-1
	mv	a3,a5
	addiw	a4,a4,48
	sb	a4,0(a0)
	divu	a5,a5,s7
	bltu	s10,a3,0x35300 # fmt_fp+0xb76>
	beq	s9,t1,0x353f2 # fmt_fp+0xc68>
	bleu	a0,s11,0x3533c # fmt_fp+0xbb2>
	mv	a5,a0
	addi	a5,a5,-1
	sb	s1,0(a5)
	bltu	s11,a5,0x35322 # fmt_fp+0xb98>
	addi	a5,a0,-1
	li	a4,-1
	bltu	a5,s11,0x3533a # fmt_fp+0xbb0>
	sub	a4,s11,a0
	add	a0,a0,a4
	lw	a5,0(s2)
	sub	a1,s3,a0
	andi	a5,a5,32
	beqz	a5,0x35418 # fmt_fp+0xc8e>
	addi	t1,t1,4
	bleu	t1,s8,0x352f6 # fmt_fp+0xb6c>
	sub	a5,s8,s9
	andi	a5,a5,-4
	addi	a5,a5,4
	add	s9,s9,a5
	ld	a5,8(sp)
	andi	a5,a5,8
	or	a5,a5,s0
	sext.w	a5,a5
	beqz	a5,0x34ce6 # fmt_fp+0x55c>
	lw	a5,0(s2)
	andi	a5,a5,32
	beqz	a5,0x3559a # fmt_fp+0xe10>
	bleu	s6,s9,0x354e6 # fmt_fp+0xd5c>
	lui	a5,0x2
	addi	a4,a5,-800 # 0x1ce0 # exit-0xe440>
	addi	a3,sp,80
	addi	a5,a5,-791
	add	s11,a3,a4
	add	s3,a3,a5
	blez	s0,0x34ce6 # fmt_fp+0x55c>
	li	s10,48
	li	s7,10
	li	s8,9
	lwu	a5,0(s9)
	mv	a0,s3
	beqz	a5,0x353ba # fmt_fp+0xc30>
	addi	a0,a0,-1
	mv	a3,a5
	remu	a4,a5,s7
	addiw	a4,a4,48
	sb	a4,0(a0)
	divu	a5,a5,s7
	bltu	s8,a3,0x3539e # fmt_fp+0xc14>
	bleu	a0,s11,0x353d6 # fmt_fp+0xc4c>
	mv	a5,a0
	addi	a5,a5,-1
	sb	s10,0(a5)
	bltu	s11,a5,0x353bc # fmt_fp+0xc32>
	addi	a5,a0,-1
	li	a4,-1
	bltu	a5,s11,0x353d4 # fmt_fp+0xc4a>
	sub	a4,s11,a0
	add	a0,a0,a4
	lw	a5,0(s2)
	andi	a5,a5,32
	beqz	a5,0x35424 # fmt_fp+0xc9a>
	addi	s9,s9,4
	addiw	a5,s0,-9
	bleu	s6,s9,0x354e8 # fmt_fp+0xd5e>
	blez	a5,0x354e8 # fmt_fp+0xd5e>
	mv	s0,a5
	j	0x35396 # fmt_fp+0xc0c>
	bne	a0,s3,0x3533c # fmt_fp+0xbb2>
	lui	a4,0x2
	addi	a3,sp,80
	addi	a5,a4,-792 # 0x1ce8 # exit-0xe438>
	add	a5,a5,a3
	sb	s1,0(a5)
	addi	a5,a4,-792
	add	a0,a3,a5
	lw	a5,0(s2)
	li	a1,1
	andi	a5,a5,32
	bnez	a5,0x3534a # fmt_fp+0xbc0>
	mv	a2,s2
	sd	t1,16(sp)
	jal	ra,0x33f64 # __fwritex>
	ld	t1,16(sp)
	j	0x3534a # fmt_fp+0xbc0>
	sext.w	a1,s0
	ble	s0,s8,0x3542e # fmt_fp+0xca4>
	li	a1,9
	mv	a2,s2
	jal	ra,0x33f64 # __fwritex>
	j	0x353e0 # fmt_fp+0xc56>
	ld	a5,64(sp)
	bnez	a5,0x34faa # fmt_fp+0x820>
	mv	s4,s6
	j	0x34fc2 # fmt_fp+0x838>
	ld	a0,16(sp)
	mv	a2,s2
	mv	a1,s7
	jal	ra,0x33f64 # __fwritex>
	j	0x34bf8 # fmt_fp+0x46e>
	bne	s9,t1,0x35320 # fmt_fp+0xb96>
	j	0x353f6 # fmt_fp+0xc6c>
	divuw	a4,s9,t1
	andi	a4,a4,1
	beqz	a4,0x35552 # fmt_fp+0xdc8>
	auipc	a4,0x13
	addi	a4,a4,1042 # 0x48870 # app_mask+0x1d8>
	ld	t3,0(a4)
	ld	a4,8(a4)
	srai	a3,a2,0x1
	bltu	a1,a3,0x35606 # fmt_fp+0xe7c>
	beq	a3,a1,0x355e2 # fmt_fp+0xe58>
	auipc	a3,0x13
	addi	a3,a3,1048 # 0x48890 # app_mask+0x1f8>
	ld	a2,0(a3)
	ld	a3,8(a3)
	j	0x34aa0 # fmt_fp+0x316>
	addw	a4,s9,t1
	lui	a1,0x3b9ad
	sw	a4,0(a5)
	addi	a1,a1,-1537 # 0x3b9ac9ff # __BSS_END__+0x3b95e677>
	bleu	a4,a1,0x35630 # fmt_fp+0xea6>
	mv	a2,a5
	sw	zero,0(a5)
	addi	a5,a5,-4
	bleu	s10,a5,0x354ac # fmt_fp+0xd22>
	sw	zero,-4(s10)
	addi	s10,s10,-4
	lw	a4,0(a5)
	addiw	a3,a4,1
	sw	a3,0(a5)
	bltu	a1,a3,0x3549a # fmt_fp+0xd10>
	sub	a5,s8,s10
	lw	a3,0(s10)
	srai	a5,a5,0x2
	slliw	a7,a5,0x3
	li	a4,9
	addw	a7,a7,a5
	bleu	a3,a4,0x34aee # fmt_fp+0x364>
	li	a5,10
	slliw	a4,a5,0x2
	addw	a5,a5,a4
	slliw	a5,a5,0x1
	addiw	a7,a7,1
	bleu	a5,a3,0x354d2 # fmt_fp+0xd48>
	j	0x34aee # fmt_fp+0x364>
	addiw	s0,s0,9
	li	a5,9
	ble	s0,a5,0x34ce6 # fmt_fp+0x55c>
	li	a3,9
	mv	a2,s0
	li	a1,48
	mv	a0,s2
	jal	ra,0x346d4 # pad.part.0>
	j	0x34ce6 # fmt_fp+0x55c>
	lui	a5,0x2
	addi	a5,a5,-804 # 0x1cdc # exit-0xe444>
	addi	a4,sp,80
	add	a1,a4,a5
	ld	a5,48(sp)
	mv	a2,s2
	sub	a1,a1,a5
	mv	a0,a5
	jal	ra,0x33f64 # __fwritex>
	j	0x34ce6 # fmt_fp+0x55c>
	ld	a1,40(sp)
	ld	a0,16(sp)
	mv	a2,s2
	jal	ra,0x33f64 # __fwritex>
	lui	a5,0x10
	xor	a5,s3,a5
	lui	a4,0x12
	and	a5,a5,a4
	beqz	a5,0x35038 # fmt_fp+0x8ae>
	j	0x3504c # fmt_fp+0x8c2>
	lui	a4,0x2
	addi	a2,sp,80
	addi	a5,a4,-805 # 0x1cdb # exit-0xe445>
	add	a5,a5,a2
	li	a3,48
	sb	a3,0(a5) # 0x10000 # exit-0x120>
	addi	a5,a4,-805
	add	a1,a2,a5
	j	0x34eee # fmt_fp+0x764>
	lui	a4,0x3b9ad
	addi	a4,a4,-1536 # 0x3b9aca00 # __BSS_END__+0x3b95e678>
	beq	a2,a4,0x355ce # fmt_fp+0xe44>
	auipc	a4,0x13
	addi	a4,a4,770 # 0x48860 # app_mask+0x1c8>
	ld	t3,0(a4)
	ld	a4,8(a4)
	j	0x3546c # fmt_fp+0xce2>
	ld	a3,72(sp)
	addiw	s0,a3,2
	addw	s7,s0,a4
	subw	s0,s0,a5
	j	0x34ff8 # fmt_fp+0x86e>
	auipc	a4,0x13
	addi	a4,a4,756 # 0x48870 # app_mask+0x1d8>
	j	0x34a8e # fmt_fp+0x304>
	addiw	a5,a7,1
	addiw	s4,s4,-1
	subw	s0,s0,a5
	j	0x3516e # fmt_fp+0x9e4>
	mv	a5,s0
	sext.w	s0,a5
	j	0x351d0 # fmt_fp+0xa46>
	mv	a2,s2
	li	a1,1
	auipc	a0,0xe
	addi	a0,a0,-2030 # 0x42db0 # udatatypename+0x3e8>
	jal	ra,0x33f64 # __fwritex>
	j	0x35372 # fmt_fp+0xbe8>
	slli	s1,s6,0x3f
	mv	a2,s5
	mv	a3,s3
	mv	a0,s9
	xor	a1,s8,s1
	jal	ra,0x3fb62 # __subtf3>
	mv	a2,s5
	mv	a3,s3
	jal	ra,0x3e0b8 # __addtf3>
	mv	s3,a0
	xor	s5,a1,s1
	j	0x34eb2 # fmt_fp+0x728>
	bleu	a5,s10,0x3555e # fmt_fp+0xdd4>
	lw	a4,-4(a5)
	andi	a4,a4,1
	beqz	a4,0x3555e # fmt_fp+0xdd4>
	j	0x3545e # fmt_fp+0xcd4>
	mv	a2,s6
	j	0x34aee # fmt_fp+0x364>
	addi	a3,a5,4
	bne	s6,a3,0x35478 # fmt_fp+0xcee>
	auipc	a3,0x13
	addi	a3,a3,694 # 0x488a0 # app_mask+0x208>
	ld	a2,0(a3)
	ld	a3,8(a3)
	j	0x34aa0 # fmt_fp+0x316>
	addi	a4,sp,80
	add	s1,a4,a5
	mv	a5,s1
	j	0x34b7c # fmt_fp+0x3f2>
	auipc	a3,0x13
	addi	a3,a3,634 # 0x48880 # app_mask+0x1e8>
	ld	a2,0(a3)
	ld	a3,8(a3)
	j	0x34aa0 # fmt_fp+0x316>
	li	a0,-1
	j	0x34dd4 # fmt_fp+0x64a>
	mulw	a5,a7,a3
	subw	a4,s0,a5
	j	0x349fe # fmt_fp+0x274>
	li	t1,10
	li	a2,10
	j	0x34a5a # fmt_fp+0x2d0>
	addi	a2,a5,4
	j	0x354b8 # fmt_fp+0xd2e>
	jal	ra,0x37f18 # __stack_chk_fail>

printf_core:
	auipc	a5,0x18
	ld	a5,-794(a5) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	ld	a5,0(a5)
	addi	sp,sp,-272
	sd	s10,176(sp)
	lui	t3,0x80000
	lui	s10,0x13
	sd	s1,248(sp)
	sd	s5,216(sp)
	sd	s6,208(sp)
	sd	s8,192(sp)
	sd	s11,168(sp)
	sd	ra,264(sp)
	sd	s0,256(sp)
	sd	s2,240(sp)
	sd	s3,232(sp)
	sd	s4,224(sp)
	sd	s7,200(sp)
	sd	s9,184(sp)
	mv	s6,a0
	mv	t5,a1
	sd	a2,8(sp)
	sd	a3,24(sp)
	sd	a4,16(sp)
	sd	a5,152(sp)
	li	s1,0
	li	s5,0
	sd	zero,0(sp)
	not	s8,t3
	addiw	s10,s10,-1911
	auipc	s11,0x13
	addi	s11,s11,592 # 0x488d0 # states>
	lbu	a5,0(t5) # 0xffffffffff000000 # __BSS_END__+0xfffffffffefb1c78>
	addw	s5,s5,s1
	mv	t6,s5
	beqz	a5,0x35ac8 # printf_core+0x48e>
	mv	s1,t5
	li	a4,37
	beq	a5,a4,0x35804 # printf_core+0x1ca>
	lbu	a5,1(s1)
	addi	s1,s1,1
	bnez	a5,0x3569c # printf_core+0x62>
	mv	s0,s1
	sub	s1,s1,t5
	subw	s4,s8,t6
	blt	s4,s1,0x35a66 # printf_core+0x42c>
	sext.w	s1,s1
	beqz	s6,0x356c6 # printf_core+0x8c>
	lw	a5,0(s6)
	andi	a5,a5,32
	beqz	a5,0x35798 # printf_core+0x15e>
	beqz	s1,0x356d0 # printf_core+0x96>
	blt	s4,s1,0x35a66 # printf_core+0x42c>
	mv	t5,s0
	j	0x35688 # printf_core+0x4e>
	lbu	a2,1(s0)
	li	a4,9
	addiw	a3,a2,-48
	sext.w	a5,a2
	bltu	a4,a3,0x356ee # printf_core+0xb4>
	lbu	a3,2(s0)
	li	a4,36
	beq	a3,a4,0x35982 # printf_core+0x348>
	addi	s0,s0,1
	li	t2,-1
	addiw	a5,a5,-32
	li	a3,31
	li	s2,0
	addiw	a4,a2,-32
	li	a0,1
	li	a1,31
	bleu	a5,a3,0x35722 # printf_core+0xe8>
	j	0x3572e # printf_core+0xf4>
	lbu	a2,1(s0)
	sllw	a5,a0,a5
	or	a5,s2,a5
	addiw	a3,a2,-32
	mv	a4,a3
	addi	s0,s0,1
	sext.w	s2,a5
	bltu	a1,a3,0x3572e # printf_core+0xf4>
	srlw	a3,s10,a4
	andi	a3,a3,1
	sext.w	a5,a4
	bnez	a3,0x35706 # printf_core+0xcc>
	li	a5,42
	beq	a2,a5,0x3582a # printf_core+0x1f0>
	lbu	a3,0(s0)
	lui	a1,0xcccd
	li	a5,9
	addiw	a4,a3,-48
	li	s9,0
	addi	a1,a1,-820 # 0xccccccc # __BSS_END__+0xcc7e944>
	li	a0,9
	bltu	a5,a4,0x35ac4 # printf_core+0x48a>
	lbu	a5,1(s0)
	addi	s0,s0,1
	addiw	a2,a5,-48
	bltu	a1,s9,0x3578e # printf_core+0x154>
	slliw	a4,s9,0x2
	addw	s9,a4,s9
	slliw	s9,s9,0x1
	addiw	a4,a3,-48
	subw	a6,s8,s9
	blt	a6,a4,0x3578e # printf_core+0x154>
	addw	s9,a4,s9
	bltu	a0,a2,0x357ae # printf_core+0x174>
	mv	a3,a5
	lbu	a5,1(s0)
	addi	s0,s0,1
	addiw	a2,a5,-48
	bleu	s9,a1,0x3575e # printf_core+0x124>
	bltu	a0,a2,0x35a66 # printf_core+0x42c>
	li	s9,-1
	mv	a3,a5
	j	0x35780 # printf_core+0x146>
	mv	a0,t5
	mv	a2,s6
	mv	a1,s1
	sw	t6,40(sp)
	sd	t5,32(sp)
	jal	ra,0x33f64 # __fwritex>
	lw	t6,40(sp)
	ld	t5,32(sp)
	bnez	s1,0x356c8 # printf_core+0x8e>
	j	0x356d0 # printf_core+0x96>
	bltz	s9,0x35a66 # printf_core+0x42c>
	li	a4,46
	bne	a5,a4,0x3586a # printf_core+0x230>
	lbu	a5,1(s0)
	li	a4,42
	bne	a5,a4,0x3599c # printf_core+0x362>
	lbu	a5,2(s0)
	li	a4,9
	addiw	a3,a5,-48
	bltu	a4,a3,0x357e0 # printf_core+0x1a6>
	lbu	a3,3(s0)
	li	a4,36
	beq	a3,a4,0x35a92 # printf_core+0x458>
	ld	a4,0(sp)
	bnez	a4,0x358a4 # printf_core+0x26a>
	beqz	s6,0x35abc # printf_core+0x482>
	ld	a4,8(sp)
	addi	s0,s0,2
	ld	a5,0(a4)
	lw	s7,0(a5)
	addi	a5,a5,8
	sd	a5,0(a4)
	not	t0,s7
	lbu	a5,0(s0)
	srliw	t0,t0,0x1f
	j	0x3586e # printf_core+0x234>
	lbu	a3,0(s1)
	mv	s0,s1
	li	a4,37
	beq	a3,a5,0x35820 # printf_core+0x1e6>
	j	0x356aa # printf_core+0x70>
	lbu	a5,2(s0)
	addi	s1,s1,1
	addi	s0,s0,2
	bne	a5,a4,0x356aa # printf_core+0x70>
	lbu	a5,1(s0)
	beq	a5,a4,0x35814 # printf_core+0x1da>
	j	0x356aa # printf_core+0x70>
	lbu	a5,1(s0)
	li	a4,9
	addiw	a3,a5,-48
	bleu	a3,a4,0x35954 # printf_core+0x31a>
	ld	a4,0(sp)
	bnez	a4,0x358a4 # printf_core+0x26a>
	addi	s0,s0,1
	li	s9,0
	beqz	s6,0x357b2 # printf_core+0x178>
	ld	a4,8(sp)
	ld	a5,0(a4)
	lw	s9,0(a5)
	addi	a5,a5,8
	sd	a5,0(a4)
	lbu	a5,0(s0)
	bgez	s9,0x357b2 # printf_core+0x178>
	lui	a4,0x2
	or	s2,s2,a4
	li	a4,46
	negw	s9,s9
	beq	a5,a4,0x357ba # printf_core+0x180>
	li	t0,0
	li	s7,-1
	li	s3,0
	li	a3,57
	li	a0,58
	li	a2,7
	j	0x3589c # printf_core+0x262>
	mul	a1,s3,a0
	addi	s0,s0,1
	add	a1,a1,s11
	add	a5,a5,a1
	lbu	a6,0(a5)
	addiw	a5,a6,-1
	sext.w	a1,a6
	bltu	a2,a5,0x358de # printf_core+0x2a4>
	lbu	a5,0(s0)
	mv	s3,a1
	addiw	a5,a5,-65
	bleu	a5,a3,0x3587c # printf_core+0x242>
	jal	ra,0x2f900 # __errno_location>
	li	a5,22
	sw	a5,0(a0)
	li	s5,-1
	auipc	a5,0x18
	ld	a5,-1422(a5) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	ld	a4,152(sp)
	ld	a5,0(a5)
	bne	a4,a5,0x35f36 # printf_core+0x8fc>
	ld	ra,264(sp)
	ld	s0,256(sp)
	ld	s1,248(sp)
	ld	s2,240(sp)
	ld	s3,232(sp)
	ld	s4,224(sp)
	ld	s6,208(sp)
	ld	s7,200(sp)
	ld	s8,192(sp)
	ld	s9,184(sp)
	ld	s10,176(sp)
	ld	s11,168(sp)
	mv	a0,s5
	ld	s5,216(sp)
	addi	sp,sp,272
	ret
	beqz	a1,0x358a4 # printf_core+0x26a>
	li	a5,27
	beq	a1,a5,0x35996 # printf_core+0x35c>
	bltz	t2,0x35a78 # printf_core+0x43e>
	ld	a4,24(sp)
	slli	a5,t2,0x4
	add	a5,a5,a4
	ld	a4,16(sp)
	ld	a3,0(a5)
	ld	a2,8(a5)
	slli	a5,t2,0x2
	add	a5,a5,a4
	sw	a6,0(a5)
	sd	a3,64(sp)
	sd	a2,72(sp)
	beqz	s6,0x356cc # printf_core+0x92>
	lbu	a5,-1(s0)
	sext.w	a6,a5
	beqz	s3,0x3591e # printf_core+0x2e4>
	andi	a5,a5,15
	li	a3,3
	beq	a5,a3,0x359ec # printf_core+0x3b2>
	srli	a5,s2,0xd
	andi	a5,a5,1
	beqz	a5,0x3592e # printf_core+0x2f4>
	lui	a5,0xffff0
	addi	a5,a5,-1
	and	s2,s2,a5
	addiw	a5,a6,-65
	sext.w	a2,a5
	li	a3,55
	bltu	a3,a2,0x35afe # printf_core+0x4c4>
	slli	a5,a5,0x20
	srli	a5,a5,0x20
	auipc	a3,0x13
	addi	a3,a3,-502 # 0x4874c # app_mask+0xb4>
	slli	a5,a5,0x2
	add	a5,a5,a3
	lw	a5,0(a5)
	add	a5,a5,a3
	jr	a5
	lbu	a3,2(s0)
	li	a4,36
	bne	a3,a4,0x35838 # printf_core+0x1fe>
	ld	a4,16(sp)
	slli	a5,a5,0x2
	addi	s0,s0,3
	add	a5,a5,a4
	li	a4,10
	sw	a4,-192(a5) # 0xfffffffffffeff40 # __BSS_END__+0xfffffffffffa1bb8>
	lbu	a5,-2(s0)
	li	a4,1
	sd	a4,0(sp)
	ld	a4,24(sp)
	slli	a5,a5,0x4
	add	a5,a5,a4
	lw	s9,-768(a5)
	j	0x35850 # printf_core+0x216>
	addiw	t2,a2,-48
	lbu	a2,3(s0)
	li	a5,1
	sd	a5,0(sp)
	addi	s0,s0,3
	sext.w	a5,a2
	j	0x356f2 # printf_core+0xb8>
	bltz	t2,0x35906 # printf_core+0x2cc>
	j	0x358a4 # printf_core+0x26a>
	addiw	a2,a5,-48
	li	a4,9
	mv	a3,a2
	addi	s0,s0,1
	li	s7,0
	bltu	a4,a2,0x359e8 # printf_core+0x3ae>
	lui	a2,0xcccd
	addi	a2,a2,-820 # 0xccccccc # __BSS_END__+0xcc7e944>
	li	a1,9
	bltu	a2,s7,0x35a74 # printf_core+0x43a>
	slliw	a5,s7,0x2
	addw	a5,a5,s7
	slliw	a5,a5,0x1
	sext.w	a0,a3
	subw	a6,s8,a5
	li	s7,-1
	blt	a6,a0,0x359d8 # printf_core+0x39e>
	addw	s7,a3,a5
	lbu	a5,1(s0)
	addi	s0,s0,1
	addiw	a0,a5,-48
	mv	a3,a0
	bleu	a0,a1,0x359b6 # printf_core+0x37c>
	li	t0,1
	j	0x3586e # printf_core+0x234>
	andi	a6,a6,223
	j	0x3591e # printf_core+0x2e4>
	ld	a3,64(sp)
	bltz	a3,0x35eec # printf_core+0x8b2>
	srli	a5,s2,0xb
	andi	a5,a5,1
	bnez	a5,0x35efe # printf_core+0x8c4>
	andi	a5,s2,1
	beqz	a5,0x35e56 # printf_core+0x81c>
	li	a6,1
	auipc	a4,0x13
	addi	a4,a4,-714 # 0x48742 # app_mask+0xaa>
	mv	a5,a3
	beqz	a3,0x35e38 # printf_core+0x7fe>
	addi	a2,sp,151
	mv	t5,a2
	li	a1,10
	li	t6,9
	remu	a3,a5,a1
	addi	t5,t5,-1
	mv	a0,a5
	addiw	a3,a3,48
	sb	a3,0(t5)
	divu	a5,a5,a1
	bltu	t6,a0,0x35a24 # printf_core+0x3ea>
	bnez	t0,0x35e42 # printf_core+0x808>
	ld	a3,64(sp)
	sub	a5,a2,t5
	seqz	a3,a3
	add	a3,a3,a5
	ble	s7,a3,0x35a52 # printf_core+0x418>
	mv	a3,s7
	sext.w	s7,a3
	subw	a3,s8,a6
	ble	a5,s7,0x35a62 # printf_core+0x428>
	sext.w	s7,a5
	ble	s7,a3,0x35b2a # printf_core+0x4f0>
	jal	ra,0x2f900 # __errno_location>
	li	a5,75
	sw	a5,0(a0)
	li	s5,-1
	j	0x358ae # printf_core+0x274>
	li	s7,-1
	j	0x359d8 # printf_core+0x39e>
	beqz	s6,0x35ee8 # printf_core+0x8ae>
	ld	a2,8(sp)
	addi	a0,sp,64
	sw	t6,48(sp)
	sd	t5,40(sp)
	sd	t0,32(sp)
	jal	ra,0x3460a # pop_arg>
	ld	t0,32(sp)
	ld	t5,40(sp)
	lw	t6,48(sp)
	j	0x3590a # printf_core+0x2d0>
	ld	a4,16(sp)
	slli	a5,a5,0x2
	ld	a3,24(sp)
	add	a5,a5,a4
	li	a4,10
	sw	a4,-192(a5)
	lbu	a4,2(s0)
	lbu	a5,4(s0)
	addi	s0,s0,4
	slli	a4,a4,0x4
	add	a4,a4,a3
	lw	s7,-768(a4)
	not	t0,s7
	srliw	t0,t0,0x1f
	j	0x3586e # printf_core+0x234>
	li	s7,0
	li	t0,1
	addi	s0,s0,2
	j	0x3586e # printf_core+0x234>
	mv	a5,a3
	j	0x357b2 # printf_core+0x178>
	bnez	s6,0x358ae # printf_core+0x274>
	ld	a5,0(sp)
	beqz	a5,0x35ee8 # printf_core+0x8ae>
	ld	a5,16(sp)
	li	s0,1
	li	s2,10
	addi	s1,a5,4
	ld	a5,24(sp)
	addi	s5,a5,16
	lw	a1,0(s1)
	beqz	a1,0x35f0a # printf_core+0x8d0>
	ld	a2,8(sp)
	mv	a0,s5
	addi	s0,s0,1
	jal	ra,0x3460a # pop_arg>
	addi	s1,s1,4
	addi	s5,s5,16
	bne	s0,s2,0x35ae2 # printf_core+0x4a8>
	li	s5,1
	j	0x358ae # printf_core+0x274>
	addi	a5,sp,151
	sub	a5,a5,t5
	li	a6,0
	auipc	a4,0x13
	addi	a4,a4,-968 # 0x48740 # app_mask+0xa8>
	ble	a5,s7,0x35b2a # printf_core+0x4f0>
	lui	a3,0x80000
	not	a3,a3
	auipc	a4,0x13
	addi	a4,a4,-988 # 0x48740 # app_mask+0xa8>
	sext.w	s7,a5
	j	0x35a62 # printf_core+0x428>
	addw	s3,a6,s7
	sext.w	s1,s9
	ble	s3,s9,0x35b3a # printf_core+0x500>
	sext.w	s1,s3
	blt	s4,s1,0x35a66 # printf_core+0x42c>
	lui	a3,0x12
	and	a3,s2,a3
	bnez	a3,0x35b68 # printf_core+0x52e>
	ble	s1,s3,0x35b68 # printf_core+0x52e>
	mv	a3,s3
	mv	a2,s1
	li	a1,32
	mv	a0,s6
	sd	t5,56(sp)
	sd	a5,48(sp)
	sd	a4,40(sp)
	sd	a6,32(sp)
	jal	ra,0x346d4 # pad.part.0>
	ld	t5,56(sp)
	ld	a5,48(sp)
	ld	a4,40(sp)
	ld	a6,32(sp)
	lw	a3,0(s6)
	andi	a3,a3,32
	beqz	a3,0x35e92 # printf_core+0x858>
	lui	a3,0x10
	xor	a3,s2,a3
	lui	a2,0x12
	and	a3,a3,a2
	bnez	a3,0x35b9a # printf_core+0x560>
	ble	s1,s3,0x35b9a # printf_core+0x560>
	mv	a3,s3
	mv	a2,s1
	li	a1,48
	mv	a0,s6
	sd	t5,40(sp)
	sd	a5,32(sp)
	jal	ra,0x346d4 # pad.part.0>
	ld	t5,40(sp)
	ld	a5,32(sp)
	sext.w	a3,a5
	ble	s7,a3,0x35bb6 # printf_core+0x57c>
	mv	a2,s7
	li	a1,48
	mv	a0,s6
	sd	t5,40(sp)
	sd	a5,32(sp)
	jal	ra,0x346d4 # pad.part.0>
	ld	t5,40(sp)
	ld	a5,32(sp)
	lw	a4,0(s6)
	andi	a4,a4,32
	beqz	a4,0x35e86 # printf_core+0x84c>
	lui	a5,0x2
	xor	a5,s2,a5
	lui	a4,0x12
	and	a5,a5,a4
	bnez	a5,0x356cc # printf_core+0x92>
	ble	s1,s3,0x356cc # printf_core+0x92>
	mv	a3,s3
	mv	a2,s1
	li	a1,32
	mv	a0,s6
	jal	ra,0x346d4 # pad.part.0>
	mv	t5,s0
	j	0x35688 # printf_core+0x4e>
	beqz	t0,0x35bee # printf_core+0x5b4>
	bltz	s7,0x35a66 # printf_core+0x42c>
	ld	a1,64(sp)
	ld	a2,72(sp)
	mv	a5,s2
	mv	a4,s7
	mv	a3,s9
	mv	a0,s6
	jal	ra,0x3478a # fmt_fp>
	mv	s1,a0
	bltz	a0,0x35a66 # printf_core+0x42c>
	ble	s1,s4,0x356cc # printf_core+0x92>
	j	0x35a66 # printf_core+0x42c>
	andi	a1,a6,32
	ld	a5,64(sp)
	mv	a3,a5
	beqz	a5,0x35e2e # printf_core+0x7f4>
	addi	a2,sp,151
	slliw	a1,a1,0x18
	sraiw	a1,a1,0x18
	mv	t5,a2
	auipc	a0,0x13
	addi	a0,a0,-388 # 0x48aa0 # xdigits>
	andi	a3,a5,15
	add	a3,a3,a0
	lbu	a3,0(a3) # 0x10000 # exit-0x120>
	addi	t5,t5,-1
	srli	a5,a5,0x4
	or	a3,a3,a1
	sb	a3,0(t5)
	bnez	a5,0x35c2c # printf_core+0x5f2>
	andi	a5,s2,8
	bnez	a5,0x35ed0 # printf_core+0x896>
	li	a6,0
	auipc	a4,0x13
	addi	a4,a4,-1292 # 0x48740 # app_mask+0xa8>
	j	0x35a3c # printf_core+0x402>
	jal	ra,0x2f900 # __errno_location>
	lw	a0,0(a0)
	jal	ra,0x2f93a # strerror>
	mv	t5,a0
	bltz	s7,0x35ea6 # printf_core+0x86c>
	mv	a0,t5
	mv	a1,s7
	sd	t5,32(sp)
	jal	ra,0x36a96 # strnlen>
	ld	t5,32(sp)
	mv	a4,a0
	add	a5,t5,a0
	lui	a3,0xffff0
	addi	a3,a3,-1
	sext.w	s7,a4
	and	s2,s2,a3
	sub	a5,a5,t5
	j	0x35b06 # printf_core+0x4cc>
	li	a5,7
	bltu	a5,s3,0x356c8 # printf_core+0x8e>
	auipc	a4,0x13
	addi	a4,a4,-1124 # 0x4882c # app_mask+0x194>
	slli	a5,s3,0x2
	add	a5,a5,a4
	lw	a5,0(a5)
	add	a5,a5,a4
	jr	a5
	ld	a5,64(sp)
	mv	t5,s0
	sd	s5,0(a5) # 0x2000 # exit-0xe120>
	j	0x35688 # printf_core+0x4e>
	li	a3,16
	mv	a5,s7
	bleu	a3,s7,0x35cb8 # printf_core+0x67e>
	li	a5,16
	sext.w	s7,a5
	ori	s2,s2,8
	li	a1,32
	li	a6,120
	j	0x35c0e # printf_core+0x5d4>
	ld	t5,64(sp)
	bnez	t5,0x35c62 # printf_core+0x628>
	auipc	t5,0xc
	addi	t5,t5,936 # 0x42078 # log_2.0+0x128>
	j	0x35c62 # printf_core+0x628>
	lw	a1,64(sp)
	addi	s3,sp,80
	sw	zero,84(sp)
	sw	a1,80(sp)
	sd	s3,64(sp)
	li	a4,-1
	li	s7,0
	addi	s1,sp,88
	j	0x35d0e # printf_core+0x6d4>
	mv	a0,s1
	jal	ra,0x3b368 # wctomb>
	addi	s3,s3,4
	bltz	a0,0x35ee4 # printf_core+0x8aa>
	ld	a4,32(sp)
	sub	a3,a4,s7
	bltu	a3,a0,0x35d12 # printf_core+0x6d8>
	add	s7,s7,a0
	bleu	a4,s7,0x35d12 # printf_core+0x6d8>
	lw	a1,0(s3)
	sd	a4,32(sp)
	bnez	a1,0x35cee # printf_core+0x6b4>
	lui	a4,0x80000
	not	a4,a4
	bltu	a4,s7,0x35a66 # printf_core+0x42c>
	lui	a4,0x12
	and	a4,s2,a4
	sext.w	s1,s7
	bnez	a4,0x35d3c # printf_core+0x702>
	ble	s9,s1,0x35d3c # printf_core+0x702>
	mv	a3,s1
	mv	a2,s9
	li	a1,32
	mv	a0,s6
	jal	ra,0x346d4 # pad.part.0>
	addi	a5,sp,88
	sd	a5,40(sp)
	ld	a6,64(sp)
	li	s3,0
	beqz	s7,0x35d6e # printf_core+0x734>
	lw	a1,0(a6)
	sd	a6,32(sp)
	beqz	a1,0x35d6e # printf_core+0x734>
	ld	a0,40(sp)
	jal	ra,0x3b368 # wctomb>
	ld	a6,32(sp)
	add	s3,s3,a0
	addi	a6,a6,4
	bltu	s7,s3,0x35d6e # printf_core+0x734>
	lw	a3,0(s6)
	andi	a3,a3,32
	beqz	a3,0x35d9e # printf_core+0x764>
	bltu	s3,s7,0x35d48 # printf_core+0x70e>
	lui	a5,0x2
	xor	a5,s2,a5
	lui	a4,0x12
	and	a5,a5,a4
	bnez	a5,0x35d8c # printf_core+0x752>
	ble	s9,s1,0x35d8c # printf_core+0x752>
	mv	a3,s1
	mv	a2,s9
	li	a1,32
	mv	a0,s6
	jal	ra,0x346d4 # pad.part.0>
	mv	a5,s9
	ble	s1,s9,0x35d94 # printf_core+0x75a>
	mv	a5,s1
	sext.w	s1,a5
	ble	s1,s4,0x356cc # printf_core+0x92>
	j	0x35a66 # printf_core+0x42c>
	mv	a1,a0
	ld	a0,40(sp)
	mv	a2,s6
	sd	a6,32(sp)
	jal	ra,0x33f64 # __fwritex>
	ld	a6,32(sp)
	j	0x35d6a # printf_core+0x730>
	ld	s3,64(sp)
	mv	a4,s7
	beqz	s7,0x35f22 # printf_core+0x8e8>
	lw	a1,0(s3)
	j	0x35ce8 # printf_core+0x6ae>
	ld	a3,64(sp)
	lui	a5,0xffff0
	addi	a5,a5,-1
	and	s2,s2,a5
	sb	a3,150(sp)
	li	a6,0
	li	s3,1
	li	a5,1
	auipc	a4,0x13
	addi	a4,a4,-1680 # 0x48740 # app_mask+0xa8>
	li	s7,1
	addi	t5,sp,150
	j	0x35b2e # printf_core+0x4f4>
	ld	a3,64(sp)
	addi	a2,sp,151
	mv	t5,a2
	mv	a5,a3
	beqz	a3,0x35dfe # printf_core+0x7c4>
	andi	a1,a5,7
	addi	t5,t5,-1
	addiw	a1,a1,48
	sb	a1,0(t5)
	srli	a5,a5,0x3
	bnez	a5,0x35dec # printf_core+0x7b2>
	andi	a5,s2,8
	beqz	a5,0x35e10 # printf_core+0x7d6>
	sub	a5,a2,t5
	blt	a5,s7,0x35e10 # printf_core+0x7d6>
	addiw	s7,a5,1
	li	a6,0
	auipc	a4,0x13
	addi	a4,a4,-1746 # 0x48740 # app_mask+0xa8>
	bnez	t0,0x35e42 # printf_core+0x808>
	bnez	a3,0x35a42 # printf_core+0x408>
	bnez	s7,0x35a42 # printf_core+0x408>
	mv	s3,a6
	li	a5,0
	mv	t5,a2
	j	0x35b2e # printf_core+0x4f4>
	li	a6,0
	auipc	a4,0x13
	addi	a4,a4,-1776 # 0x48740 # app_mask+0xa8>
	beqz	t0,0x35ec8 # printf_core+0x88e>
	addi	a2,sp,151
	mv	t5,a2
	bltz	s7,0x35a66 # printf_core+0x42c>
	ld	a3,64(sp)
	lui	a5,0xffff0
	addi	a5,a5,-1
	and	s2,s2,a5
	beqz	a3,0x35e22 # printf_core+0x7e8>
	j	0x35a42 # printf_core+0x408>
	ld	a3,64(sp)
	li	a6,0
	auipc	a4,0x13
	addi	a4,a4,-1816 # 0x48740 # app_mask+0xa8>
	j	0x35a14 # printf_core+0x3da>
	ld	a5,64(sp)
	mv	t5,s0
	sw	t6,0(a5) # 0xffffffffffff0000 # __BSS_END__+0xfffffffffffa1c78>
	j	0x35688 # printf_core+0x4e>
	ld	a5,64(sp)
	mv	t5,s0
	sh	s5,0(a5)
	j	0x35688 # printf_core+0x4e>
	ld	a5,64(sp)
	mv	t5,s0
	sb	s5,0(a5)
	j	0x35688 # printf_core+0x4e>
	mv	a2,s6
	mv	a1,a5
	mv	a0,t5
	jal	ra,0x33f64 # __fwritex>
	j	0x35bc2 # printf_core+0x588>
	mv	a2,s6
	mv	a1,a6
	mv	a0,a4
	sd	t5,40(sp)
	sd	a5,32(sp)
	jal	ra,0x33f64 # __fwritex>
	ld	t5,40(sp)
	ld	a5,32(sp)
	j	0x35b74 # printf_core+0x53a>
	lui	a1,0x80000
	mv	a0,t5
	not	a1,a1
	sd	t5,32(sp)
	jal	ra,0x36a96 # strnlen>
	ld	t5,32(sp)
	mv	a4,a0
	add	a5,t5,a0
	lbu	a3,0(a5)
	beqz	a3,0x35c78 # printf_core+0x63e>
	j	0x35a66 # printf_core+0x42c>
	addi	a2,sp,151
	mv	t5,a2
	j	0x35e22 # printf_core+0x7e8>
	srli	a6,a6,0x4
	auipc	a5,0x13
	addi	a5,a5,-1940 # 0x48740 # app_mask+0xa8>
	add	a4,a6,a5
	li	a6,2
	j	0x35a3c # printf_core+0x402>
	li	s5,-1
	j	0x358ae # printf_core+0x274>
	li	s5,0
	j	0x358ae # printf_core+0x274>
	neg	a5,a3
	sd	a5,64(sp)
	li	a6,1
	auipc	a4,0x13
	addi	a4,a4,-1972 # 0x48740 # app_mask+0xa8>
	j	0x35a1a # printf_core+0x3e0>
	li	a6,1
	auipc	a4,0x13
	addi	a4,a4,-1983 # 0x48741 # app_mask+0xa9>
	j	0x35a14 # printf_core+0x3da>
	ld	a4,16(sp)
	slli	a5,s0,0x2
	add	a5,a5,a4
	addi	s6,a4,36
	beq	s6,a5,0x35afa # printf_core+0x4c0>
	lw	a4,4(a5)
	addi	a5,a5,4
	beqz	a4,0x35f16 # printf_core+0x8dc>
	j	0x358a4 # printf_core+0x26a>
	lui	a5,0x12
	and	a5,s2,a5
	bnez	a5,0x35d6e # printf_core+0x734>
	li	s7,0
	bnez	s9,0x35d2e # printf_core+0x6f4>
	li	s1,0
	j	0x35d8c # printf_core+0x752>
	jal	ra,0x37f18 # __stack_chk_fail>

vfprintf:
	addi	sp,sp,-400
	sd	s5,344(sp)
	auipc	s5,0x17
	ld	s5,994(s5) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	ld	a6,0(s5)
	sd	s6,336(sp)
	sd	s8,320(sp)
	sd	s9,312(sp)
	addi	s6,sp,48
	addi	s9,sp,8
	mv	s8,sp
	sd	s0,384(sp)
	mv	a5,a2
	mv	s0,a0
	mv	a4,s9
	mv	a3,s6
	mv	a2,s8
	li	a0,0
	sd	s3,360(sp)
	sd	ra,392(sp)
	sd	s1,376(sp)
	sd	s2,368(sp)
	sd	s4,352(sp)
	sd	s7,328(sp)
	mv	s3,a1
	sd	a6,296(sp)
	sd	zero,8(sp)
	sd	zero,16(sp)
	sd	zero,24(sp)
	sd	zero,32(sp)
	sd	zero,40(sp)
	sd	a5,0(sp)
	jal	ra,0x3563a # printf_core>
	bltz	a0,0x3606e # vfprintf+0x134>
	lw	a5,140(s0)
	li	s4,0
	sext.w	a5,a5
	bltz	a5,0x35fa0 # vfprintf+0x66>
	mv	a0,s0
	jal	ra,0x3bb48 # __lockfile>
	mv	s4,a0
	lw	a5,0(s0)
	lw	a4,136(s0)
	andi	s7,a5,32
	bgtz	a4,0x35fb4 # vfprintf+0x7a>
	andi	a5,a5,-33
	sw	a5,0(s0)
	ld	a5,96(s0)
	beqz	a5,0x36044 # vfprintf+0x10a>
	ld	s2,32(s0)
	beqz	s2,0x36076 # vfprintf+0x13c>
	li	s2,0
	mv	a4,s9
	mv	a3,s6
	mv	a2,s8
	mv	a1,s3
	mv	a0,s0
	jal	ra,0x3563a # printf_core>
	mv	s1,a0
	beqz	s2,0x35ff8 # vfprintf+0xbe>
	ld	a5,72(s0)
	li	a2,0
	li	a1,0
	mv	a0,s0
	jalr	a5
	ld	a5,40(s0)
	beqz	a5,0x3606a # vfprintf+0x130>
	sd	s2,88(s0)
	sd	zero,96(s0)
	sd	zero,32(s0)
	sd	zero,56(s0)
	sd	zero,40(s0)
	lw	a5,0(s0)
	andi	a4,a5,32
	bnez	a4,0x36030 # vfprintf+0xf6>
	or	a5,s7,a5
	sw	a5,0(s0)
	bnez	s4,0x3603c # vfprintf+0x102>
	ld	a4,296(sp)
	ld	a5,0(s5)
	bne	a4,a5,0x36072 # vfprintf+0x138>
	ld	ra,392(sp)
	ld	s0,384(sp)
	ld	s2,368(sp)
	ld	s3,360(sp)
	ld	s4,352(sp)
	ld	s5,344(sp)
	ld	s6,336(sp)
	ld	s7,328(sp)
	ld	s8,320(sp)
	ld	s9,312(sp)
	mv	a0,s1
	ld	s1,376(sp)
	addi	sp,sp,400
	ret
	or	a5,s7,a5
	sw	a5,0(s0)
	li	s1,-1
	beqz	s4,0x3600a # vfprintf+0xd0>
	mv	a0,s0
	jal	ra,0x3bbf8 # __unlockfile>
	j	0x3600a # vfprintf+0xd0>
	li	a5,80
	sd	a5,96(s0)
	addi	a5,sp,216
	ld	s2,88(s0)
	sd	zero,32(s0)
	sd	a5,88(s0)
	sd	zero,56(s0)
	sd	zero,40(s0)
	mv	a0,s0
	jal	ra,0x3bf2e # __towrite>
	li	s1,-1
	bnez	a0,0x35fd2 # vfprintf+0x98>
	j	0x35fc2 # vfprintf+0x88>
	li	s1,-1
	j	0x35fe4 # vfprintf+0xaa>
	li	s1,-1
	j	0x3600a # vfprintf+0xd0>
	jal	ra,0x37f18 # __stack_chk_fail>
	mv	a0,s0
	jal	ra,0x3bf2e # __towrite>
	li	s1,-1
	bnez	a0,0x35ff8 # vfprintf+0xbe>
	j	0x35fc2 # vfprintf+0x88>

sn_write:
	addi	sp,sp,-48
	sd	s3,8(sp)
	ld	s3,152(a0)
	ld	a4,56(a0)
	sd	s1,24(sp)
	ld	s1,40(a0)
	ld	a5,8(s3)
	sd	s0,32(sp)
	sd	s2,16(sp)
	sd	s4,0(sp)
	sd	ra,40(sp)
	sub	s1,s1,a4
	mv	s0,a0
	mv	s4,a1
	mv	s2,a2
	bleu	s1,a5,0x360aa # sn_write+0x28>
	mv	s1,a5
	ld	a0,0(s3)
	bnez	s1,0x360d6 # sn_write+0x54>
	mv	s1,s2
	bleu	s2,a5,0x360b8 # sn_write+0x36>
	mv	s1,a5
	bnez	s1,0x360f4 # sn_write+0x72>
	sb	zero,0(a0)
	ld	a5,88(s0)
	ld	ra,40(sp)
	ld	s1,24(sp)
	sd	a5,56(s0)
	sd	a5,40(s0)
	ld	s0,32(sp)
	ld	s3,8(sp)
	ld	s4,0(sp)
	mv	a0,s2
	ld	s2,16(sp)
	addi	sp,sp,48
	ret
	mv	a2,s1
	mv	a1,a4
	jal	ra,0x3632a # memcpy>
	ld	a0,0(s3)
	ld	a5,8(s3)
	add	a0,a0,s1
	sub	a5,a5,s1
	sd	a0,0(s3)
	sd	a5,8(s3)
	j	0x360b0 # sn_write+0x2e>
	mv	a2,s1
	mv	a1,s4
	jal	ra,0x3632a # memcpy>
	ld	a0,0(s3)
	ld	a5,8(s3)
	add	a0,a0,s1
	sub	a5,a5,s1
	sd	a0,0(s3)
	sd	a5,8(s3)
	j	0x360ba # sn_write+0x38>

vsnprintf:
	addi	sp,sp,-320
	sd	s4,272(sp)
	auipc	s4,0x17
	ld	s4,522(s4) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	ld	a5,0(s4)
	sd	s2,288(sp)
	sd	s3,280(sp)
	sd	ra,312(sp)
	sd	s0,304(sp)
	sd	s1,296(sp)
	sd	a5,264(sp)
	mv	s2,a2
	mv	s3,a3
	bnez	a1,0x36188 # vsnprintf+0x76>
	addi	a5,sp,16
	mv	a0,a5
	li	a2,232
	addi	s0,sp,256
	sd	s0,0(sp)
	sd	zero,8(sp)
	jal	ra,0x3683a # memset>
	li	a4,-1
	auipc	a3,0x0
	addi	a3,a3,-198 # 0x36082 # sn_write>
	sd	a3,88(sp)
	sw	a4,156(sp)
	addi	a3,sp,248
	sw	a4,160(sp)
	mv	a4,sp
	mv	a5,a0
	sd	a3,104(sp)
	sd	a4,168(sp)
	sb	zero,0(s0)
	mv	a2,s3
	mv	a1,s2
	mv	a0,a5
	jal	ra,0x35f3a # vfprintf>
	ld	a4,264(sp)
	ld	a5,0(s4)
	bne	a4,a5,0x361d6 # vsnprintf+0xc4>
	ld	ra,312(sp)
	ld	s0,304(sp)
	ld	s1,296(sp)
	ld	s2,288(sp)
	ld	s3,280(sp)
	ld	s4,272(sp)
	addi	sp,sp,320
	ret
	addi	a5,sp,16
	addi	a4,a1,-1 # 0xffffffff7fffffff # __BSS_END__+0xffffffff7ffb1c77>
	mv	s0,a0
	mv	s1,a1
	mv	a0,a5
	li	a2,232
	li	a1,0
	sd	a4,8(sp)
	sd	s0,0(sp)
	jal	ra,0x3683a # memset>
	li	a4,-1
	auipc	a3,0x0
	addi	a3,a3,-290 # 0x36082 # sn_write>
	sw	a4,156(sp)
	sw	a4,160(sp)
	mv	a4,sp
	sd	a3,88(sp)
	sd	a4,168(sp)
	addi	a3,sp,248
	lui	a4,0x80000
	sd	a3,104(sp)
	not	a4,a4
	mv	a5,a0
	bleu	s1,a4,0x36160 # vsnprintf+0x4e>
	jal	ra,0x2f900 # __errno_location>
	li	a5,75
	sw	a5,0(a0)
	li	a0,-1
	j	0x3616e # vsnprintf+0x5c>
	jal	ra,0x37f18 # __stack_chk_fail>

strtox:
	addi	sp,sp,-288
	sd	s4,240(sp)
	auipc	s4,0x17
	ld	s4,322(s4) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	ld	a5,0(s4)
	sd	s1,264(sp)
	mv	s1,sp
	sd	s0,272(sp)
	sd	s2,256(sp)
	mv	s0,a0
	mv	s2,a1
	mv	a0,s1
	li	a1,0
	sd	a5,232(sp)
	li	a5,-1
	sd	s3,248(sp)
	sd	ra,280(sp)
	mv	s3,a2
	sd	s0,8(sp)
	sd	s0,88(sp)
	sd	a5,16(sp)
	jal	ra,0x3944a # __shlim>
	li	a2,1
	mv	a1,s3
	mv	a0,s1
	jal	ra,0x38c68 # __floatscan>
	beqz	s2,0x3622c # strtox+0x52>
	ld	a4,88(sp)
	ld	a5,8(sp)
	sub	a5,a5,a4
	ld	a4,200(sp)
	add	a5,a5,a4
	add	s0,s0,a5
	sd	s0,0(s2)
	ld	a4,232(sp)
	ld	a5,0(s4)
	bne	a4,a5,0x36246 # strtox+0x6c>
	ld	ra,280(sp)
	ld	s0,272(sp)
	ld	s1,264(sp)
	ld	s2,256(sp)
	ld	s3,248(sp)
	ld	s4,240(sp)
	addi	sp,sp,288
	ret
	jal	ra,0x37f18 # __stack_chk_fail>

strtof:
	addi	sp,sp,-16
	li	a2,0
	sd	ra,8(sp)
	jal	ra,0x361da # strtox>
	jal	ra,0x4096a # __trunctfsf2>
	ld	ra,8(sp)
	addi	sp,sp,16
	ret

strtod:
	addi	sp,sp,-16
	li	a2,1
	sd	ra,8(sp)
	jal	ra,0x361da # strtox>
	jal	ra,0x40c0a # __trunctfdf2>
	ld	ra,8(sp)
	addi	sp,sp,16
	ret

strtold:
	li	a2,2
	j	0x361da # strtox>

memchr:
	andi	a4,a0,7
	mv	a5,a0
	andi	a1,a1,255
	beqz	a4,0x36298 # memchr+0x20>
	beqz	a2,0x362fc # memchr+0x84>
	lbu	a4,0(a5) # 0x12000 # lua_pushlightuserdata+0x8>
	beq	a4,a1,0x362e6 # memchr+0x6e>
	addi	a5,a5,1
	andi	a4,a5,7
	addi	a2,a2,-1
	bnez	a4,0x36284 # memchr+0xc>
	li	a0,0
	beqz	a2,0x362fe # memchr+0x86>
	lbu	a4,0(a5)
	beq	a4,a1,0x362e6 # memchr+0x6e>
	auipc	a0,0x13
	ld	a0,-2036(a0) # 0x48ab0 # xdigits+0x10>
	li	a4,7
	mul	a0,a1,a0
	bleu	a2,a4,0x362e6 # memchr+0x6e>
	auipc	a7,0x13
	ld	a7,-2046(a7) # 0x48ab8 # xdigits+0x18>
	auipc	a6,0x13
	ld	a6,-2046(a6) # 0x48ac0 # xdigits+0x20>
	li	t1,7
	j	0x362d2 # memchr+0x5a>
	addi	a2,a2,-8
	addi	a5,a5,8
	bleu	a2,t1,0x36300 # memchr+0x88>
	ld	a4,0(a5)
	xor	a4,a4,a0
	add	a3,a4,a7
	not	a4,a4
	and	a4,a4,a3
	and	a4,a4,a6
	beqz	a4,0x362ca # memchr+0x52>
	mv	a0,a5
	add	a5,a5,a2
	j	0x362f2 # memchr+0x7a>
	addi	a0,a0,1
	beq	a5,a0,0x362fc # memchr+0x84>
	lbu	a4,0(a0)
	bne	a4,a1,0x362ec # memchr+0x74>
	ret
	li	a0,0
	ret
	li	a0,0
	bnez	a2,0x362e6 # memchr+0x6e>
	ret

memcmp:
	beqz	a2,0x36326 # memcmp+0x20>
	add	a2,a2,a1
	j	0x36310 # memcmp+0xa>
	beq	a1,a2,0x36326 # memcmp+0x20>
	lbu	a5,0(a0)
	lbu	a4,0(a1)
	addi	a0,a0,1
	addi	a1,a1,1
	beq	a5,a4,0x3630c # memcmp+0x6>
	subw	a0,a5,a4
	ret
	li	a0,0
	ret

memcpy:
	andi	a5,a1,3
	beqz	a5,0x3670c # memcpy+0x3e2>
	beqz	a2,0x36550 # memcpy+0x226>
	mv	t3,a0
	j	0x3633e # memcpy+0x14>
	beqz	a2,0x3654e # memcpy+0x224>
	lbu	a4,0(a1)
	addi	a1,a1,1
	andi	a5,a1,3
	sb	a4,0(t3) # 0xffffffff80000000 # __BSS_END__+0xffffffff7ffb1c78>
	addi	a2,a2,-1
	addi	t3,t3,1
	bnez	a5,0x3633a # memcpy+0x10>
	andi	a4,t3,3
	beqz	a4,0x36552 # memcpy+0x228>
	addi	sp,sp,-16
	sd	s0,8(sp)
	sd	s1,0(sp)
	li	a5,31
	bleu	a2,a5,0x36412 # memcpy+0xe8>
	li	a3,2
	lbu	a6,0(a1)
	lw	a5,0(a1)
	beq	a4,a3,0x36670 # memcpy+0x346>
	li	a3,3
	beq	a4,a3,0x365e4 # memcpy+0x2ba>
	addi	a4,a2,-20 # 0x11fec # lua_pushboolean+0x10>
	lbu	a7,1(a1)
	lbu	a3,2(a1)
	andi	t2,a4,-16
	addi	s0,a1,3
	addi	s1,t3,3
	addi	t2,t2,19
	srli	a1,a4,0x4
	sb	a6,0(t3)
	sb	a7,1(t3)
	sb	a3,2(t3)
	add	t2,t2,t3
	mv	t1,s0
	mv	a4,s1
	lw	a7,1(t1)
	lw	a6,5(t1)
	lw	a3,9(t1)
	srliw	t3,a5,0x18
	lw	a5,13(t1)
	slliw	t0,a7,0x8
	slliw	t6,a6,0x8
	slliw	t5,a3,0x8
	srliw	a7,a7,0x18
	srliw	a6,a6,0x18
	srliw	a3,a3,0x18
	slliw	t4,a5,0x8
	or	t3,t3,t0
	or	a7,a7,t6
	or	a6,a6,t5
	or	a3,a3,t4
	sw	t3,0(a4) # 0xffffffff80000000 # __BSS_END__+0xffffffff7ffb1c78>
	sw	a7,4(a4)
	sw	a6,8(a4)
	sw	a3,12(a4)
	addi	a4,a4,16
	addi	t1,t1,16
	bne	t2,a4,0x363a8 # memcpy+0x7e>
	addi	a5,a1,1
	slli	a5,a5,0x4
	slli	a1,a1,0x4
	addi	a2,a2,-19
	sub	a2,a2,a1
	add	t3,s1,a5
	add	a1,s0,a5
	andi	a5,a2,16
	andi	a4,a2,8
	andi	a6,a2,4
	andi	a3,a2,2
	andi	a2,a2,1
	beqz	a5,0x36718 # memcpy+0x3ee>
	lbu	s0,0(a1)
	lbu	a5,14(a1)
	lbu	t2,8(a1)
	sb	s0,0(t3)
	lbu	s0,1(a1)
	lbu	t0,9(a1)
	lbu	t6,10(a1)
	sb	s0,1(t3)
	lbu	s0,2(a1)
	lbu	t5,11(a1)
	lbu	t4,12(a1)
	sb	s0,2(t3)
	lbu	s0,3(a1)
	lbu	t1,13(a1)
	lbu	a7,15(a1)
	sb	s0,3(t3)
	lbu	s0,4(a1)
	sb	a5,14(t3)
	sb	t2,8(t3)
	sb	s0,4(t3)
	lbu	s0,5(a1)
	sb	t0,9(t3)
	sb	t6,10(t3)
	sb	s0,5(t3)
	lbu	s0,6(a1)
	sb	t5,11(t3)
	sb	t4,12(t3)
	sb	s0,6(t3)
	lbu	s0,7(a1)
	sb	t1,13(t3)
	addi	a1,a1,16
	sb	s0,7(t3)
	addi	a5,t3,16
	sb	a7,15(t3)
	beqz	a4,0x36708 # memcpy+0x3de>
	lbu	a4,6(a1)
	lbu	t0,0(a1)
	lbu	t6,1(a1)
	lbu	t5,2(a1)
	lbu	t4,3(a1)
	lbu	t3,4(a1)
	lbu	t1,5(a1)
	lbu	a7,7(a1)
	sb	a4,6(a5)
	sb	t0,0(a5)
	sb	t6,1(a5)
	sb	t5,2(a5)
	sb	t4,3(a5)
	sb	t3,4(a5)
	sb	t1,5(a5)
	addi	a1,a1,8
	addi	a4,a5,8
	sb	a7,7(a5)
	beqz	a6,0x36714 # memcpy+0x3ea>
	lbu	a5,2(a1)
	lbu	t1,0(a1)
	lbu	a7,1(a1)
	lbu	a6,3(a1)
	sb	a5,2(a4)
	sb	t1,0(a4)
	sb	a7,1(a4)
	addi	a1,a1,4
	addi	a5,a4,4
	sb	a6,3(a4)
	beqz	a3,0x36704 # memcpy+0x3da>
	lbu	a4,0(a1)
	lbu	a3,1(a1)
	addi	a1,a1,2
	sb	a4,0(a5)
	sb	a3,1(a5)
	addi	a4,a5,2
	beqz	a2,0x36546 # memcpy+0x21c>
	lbu	a5,0(a1)
	sb	a5,0(a4)
	ld	s0,8(sp)
	ld	s1,0(sp)
	addi	sp,sp,16
	ret
	ret
	ret
	li	a5,15
	bleu	a2,a5,0x36710 # memcpy+0x3e6>
	addi	t4,a2,-16
	andi	t4,t4,-16
	addi	t4,t4,16
	add	t1,t3,t4
	mv	a5,a1
	lw	a7,0(a5)
	lw	a6,4(a5)
	lw	a3,8(a5)
	lw	a4,12(a5)
	sw	a7,0(t3)
	sw	a6,4(t3)
	sw	a3,8(t3)
	sw	a4,12(t3)
	addi	t3,t3,16
	addi	a5,a5,16
	bne	t3,t1,0x36568 # memcpy+0x23e>
	andi	a2,a2,15
	add	a1,a1,t4
	andi	a3,a2,8
	andi	a4,a2,4
	andi	a5,a2,2
	andi	a2,a2,1
	beqz	a3,0x365b2 # memcpy+0x288>
	lw	a6,0(a1)
	lw	a3,4(a1)
	addi	t1,t1,8
	addi	a1,a1,8
	sw	a6,-8(t1)
	sw	a3,-4(t1)
	beqz	a4,0x365be # memcpy+0x294>
	lw	a4,0(a1)
	addi	t1,t1,4
	addi	a1,a1,4
	sw	a4,-4(t1)
	beqz	a5,0x3671c # memcpy+0x3f2>
	lbu	a5,0(a1)
	lbu	a4,1(a1)
	addi	a1,a1,2
	sb	a5,0(t1)
	sb	a4,1(t1)
	addi	a5,t1,2
	beqz	a2,0x36550 # memcpy+0x226>
	lbu	a4,0(a1)
	sb	a4,0(a5)
	ret
	addi	a4,a2,-20
	andi	t2,a4,-16
	addi	s0,a1,1
	addi	s1,t3,1
	addi	t2,t2,17
	srli	a1,a4,0x4
	sb	a6,0(t3)
	add	t2,t2,t3
	mv	t1,s0
	mv	a4,s1
	lw	a7,3(t1)
	lw	a6,7(t1)
	lw	a3,11(t1)
	srliw	t3,a5,0x8
	lw	a5,15(t1)
	slliw	t0,a7,0x18
	slliw	t6,a6,0x18
	slliw	t5,a3,0x18
	srliw	a7,a7,0x8
	srliw	a6,a6,0x8
	srliw	a3,a3,0x8
	slliw	t4,a5,0x18
	or	t3,t3,t0
	or	a7,a7,t6
	or	a6,a6,t5
	or	a3,a3,t4
	sw	t3,0(a4)
	sw	a7,4(a4)
	sw	a6,8(a4)
	sw	a3,12(a4)
	addi	a4,a4,16
	addi	t1,t1,16
	bne	a4,t2,0x36604 # memcpy+0x2da>
	addi	a5,a1,1
	slli	a5,a5,0x4
	slli	a1,a1,0x4
	addi	a2,a2,-17
	sub	a2,a2,a1
	add	t3,s1,a5
	add	a1,s0,a5
	j	0x36412 # memcpy+0xe8>
	addi	a4,a2,-20
	lbu	a3,1(a1)
	andi	t2,a4,-16
	addi	s0,a1,2
	addi	s1,t3,2
	addi	t2,t2,18
	srli	a1,a4,0x4
	sb	a6,0(t3)
	sb	a3,1(t3)
	add	t2,t2,t3
	mv	t1,s0
	mv	a4,s1
	lw	a7,2(t1)
	lw	a6,6(t1)
	lw	a3,10(t1)
	srliw	t3,a5,0x10
	lw	a5,14(t1)
	slliw	t0,a7,0x10
	slliw	t6,a6,0x10
	slliw	t5,a3,0x10
	srliw	a7,a7,0x10
	srliw	a6,a6,0x10
	srliw	a3,a3,0x10
	slliw	t4,a5,0x10
	or	t3,t3,t0
	or	a7,a7,t6
	or	a6,a6,t5
	or	a3,a3,t4
	sw	t3,0(a4)
	sw	a7,4(a4)
	sw	a6,8(a4)
	sw	a3,12(a4)
	addi	a4,a4,16
	addi	t1,t1,16
	bne	t2,a4,0x36698 # memcpy+0x36e>
	addi	a5,a1,1
	slli	a5,a5,0x4
	slli	a1,a1,0x4
	addi	a2,a2,-18
	sub	a2,a2,a1
	add	t3,s1,a5
	add	a1,s0,a5
	j	0x36412 # memcpy+0xe8>
	mv	a4,a5
	j	0x3653c # memcpy+0x212>
	mv	a4,a5
	j	0x364f8 # memcpy+0x1ce>
	mv	t3,a0
	j	0x36352 # memcpy+0x28>
	mv	t1,t3
	j	0x36590 # memcpy+0x266>
	mv	a5,a4
	j	0x36522 # memcpy+0x1f8>
	mv	a5,t3
	j	0x364ae # memcpy+0x184>
	mv	a5,t1
	j	0x365d8 # memcpy+0x2ae>

memmove:
	mv	a3,a0
	mv	a5,a1
	mv	a4,a2
	beq	a0,a1,0x367b2 # memmove+0x92>
	sub	a7,a1,a2
	neg	a6,a2
	sub	a7,a7,a0
	slli	a6,a6,0x1
	bleu	a7,a6,0x36822 # memmove+0x102>
	xor	a2,a1,a0
	andi	a2,a2,7
	bleu	a1,a0,0x367b6 # memmove+0x96>
	bnez	a2,0x3681e # memmove+0xfe>
	andi	a2,a0,7
	beqz	a2,0x36834 # memmove+0x114>
	addi	a0,a4,-1
	mv	a1,a3
	li	a6,-1
	bnez	a4,0x36760 # memmove+0x40>
	j	0x367b2 # memmove+0x92>
	addi	a0,a0,-1
	beq	a0,a6,0x367b2 # memmove+0x92>
	lbu	a2,0(a5)
	addi	a1,a1,1
	andi	a4,a1,7
	sb	a2,-1(a1)
	addi	a5,a5,1
	bnez	a4,0x3675a # memmove+0x3a>
	li	a4,7
	bleu	a0,a4,0x3682a # memmove+0x10a>
	addi	a7,a0,-8
	andi	a7,a7,-8
	addi	a7,a7,8
	add	a2,a1,a7
	mv	a4,a5
	ld	a6,0(a4)
	addi	a1,a1,8
	addi	a4,a4,8
	sd	a6,-8(a1)
	bne	a2,a1,0x36788 # memmove+0x68>
	andi	a4,a0,7
	add	a5,a5,a7
	beqz	a4,0x367b2 # memmove+0x92>
	add	a4,a4,a2
	lbu	a1,0(a5)
	addi	a2,a2,1
	addi	a5,a5,1
	sb	a1,-1(a2)
	bne	a4,a2,0x367a2 # memmove+0x82>
	mv	a0,a3
	ret
	bnez	a2,0x36808 # memmove+0xe8>
	add	a2,a0,a4
	andi	a2,a2,7
	beqz	a2,0x36830 # memmove+0x110>
	addi	a2,a4,-1
	beqz	a4,0x367b2 # memmove+0x92>
	add	a4,a0,a2
	li	a6,-1
	j	0x367d4 # memmove+0xb4>
	addi	a2,a2,-1
	beq	a2,a6,0x367b2 # memmove+0x92>
	add	a1,a5,a2
	lbu	a0,0(a1)
	andi	a1,a4,7
	addi	a4,a4,-1
	sb	a0,1(a4)
	bnez	a1,0x367ce # memmove+0xae>
	li	a4,7
	bleu	a2,a4,0x36826 # memmove+0x106>
	mv	a4,a2
	li	a6,7
	addi	a4,a4,-8
	add	a1,a5,a4
	ld	a0,0(a1)
	add	a1,a3,a4
	sd	a0,0(a1)
	bltu	a6,a4,0x367f2 # memmove+0xd2>
	andi	a4,a2,7
	beqz	a4,0x367b2 # memmove+0x92>
	addi	a4,a4,-1
	add	a2,a5,a4
	lbu	a1,0(a2)
	add	a2,a3,a4
	sb	a1,0(a2)
	j	0x36808 # memmove+0xe8>
	mv	a2,a0
	j	0x3679e # memmove+0x7e>
	j	0x3632a # memcpy>
	mv	a4,a2
	j	0x36808 # memmove+0xe8>
	mv	a2,a1
	mv	a4,a0
	j	0x3679e # memmove+0x7e>
	mv	a2,a4
	j	0x367e8 # memmove+0xc8>
	mv	a1,a0
	mv	a0,a4
	j	0x36772 # memmove+0x52>

memset:
	beqz	a2,0x36908 # memset+0xce>
	andi	a5,a1,255
	sb	a5,0(a0)
	add	a4,a0,a2
	sb	a5,-1(a4)
	li	a3,2
	bleu	a2,a3,0x36908 # memset+0xce>
	sb	a5,1(a0)
	sb	a5,2(a0)
	sb	a5,-2(a4)
	sb	a5,-3(a4)
	li	a3,6
	bleu	a2,a3,0x36908 # memset+0xce>
	sb	a5,3(a0)
	sb	a5,-4(a4)
	li	a3,8
	bleu	a2,a3,0x36908 # memset+0xce>
	andi	a1,a1,255
	slliw	a5,a1,0x8
	neg	a4,a0
	andi	a4,a4,3
	addw	a1,a1,a5
	sub	a2,a2,a4
	slliw	a5,a1,0x10
	addw	a1,a1,a5
	add	a4,a4,a0
	andi	a2,a2,-4
	sw	a1,0(a4)
	add	a5,a4,a2
	sw	a1,-4(a5)
	bleu	a2,a3,0x36908 # memset+0xce>
	sw	a1,4(a4)
	sw	a1,8(a4)
	sw	a1,-12(a5)
	sw	a1,-8(a5)
	li	a3,24
	bleu	a2,a3,0x36908 # memset+0xce>
	andi	a6,a4,4
	sw	a1,12(a4)
	sw	a1,16(a4)
	sw	a1,20(a4)
	sw	a1,24(a4)
	addi	a6,a6,24
	slli	a7,a1,0x20
	srli	a7,a7,0x20
	slli	a3,a1,0x20
	sw	a1,-28(a5)
	sw	a1,-24(a5)
	sw	a1,-20(a5)
	sw	a1,-16(a5)
	sub	a2,a2,a6
	li	a5,31
	add	a4,a4,a6
	or	a3,a3,a7
	bleu	a2,a5,0x36908 # memset+0xce>
	addi	a2,a2,-32
	andi	a5,a2,-32
	addi	a5,a5,32
	add	a5,a5,a4
	sd	a3,0(a4)
	sd	a3,8(a4)
	sd	a3,16(a4)
	sd	a3,24(a4)
	addi	a4,a4,32
	bne	a4,a5,0x368f8 # memset+0xbe>
	ret

strchr:
	addi	sp,sp,-16
	sd	s0,0(sp)
	sd	ra,8(sp)
	mv	s0,a1
	jal	ra,0x3692c # __strchrnul>
	lbu	a5,0(a0)
	andi	s0,s0,255
	beq	a5,s0,0x36924 # strchr+0x1a>
	li	a0,0
	ld	ra,8(sp)
	ld	s0,0(sp)
	addi	sp,sp,16
	ret

__strchrnul:
	addi	sp,sp,-16
	sd	s0,0(sp)
	sd	ra,8(sp)
	andi	a1,a1,255
	mv	s0,a0
	bnez	a1,0x36948 # __strchrnul+0x1c>
	j	0x369cc # __strchrnul+0xa0>
	lbu	a5,0(s0)
	beqz	a5,0x369c2 # __strchrnul+0x96>
	beq	a5,a1,0x369c2 # __strchrnul+0x96>
	addi	s0,s0,1
	andi	a5,s0,7
	bnez	a5,0x3693c # __strchrnul+0x10>
	auipc	a3,0x12
	ld	a3,354(a3) # 0x48ab0 # xdigits+0x10>
	mul	a6,a1,a3
	ld	a5,0(s0)
	auipc	a7,0x12
	ld	a7,356(a7) # 0x48ac0 # xdigits+0x20>
	sub	a4,a5,a3
	not	a2,a5
	and	a4,a4,a2
	xor	a5,a6,a5
	sub	a3,a5,a3
	not	a5,a5
	and	a5,a5,a3
	or	a5,a5,a4
	and	a5,a5,a7
	bnez	a5,0x369b0 # __strchrnul+0x84>
	auipc	a0,0x12
	ld	a0,308(a0) # 0x48ab8 # xdigits+0x18>
	ld	a4,8(s0)
	addi	s0,s0,8
	xor	a3,a4,a6
	add	a5,a4,a0
	add	a2,a3,a0
	not	a4,a4
	not	a3,a3
	and	a5,a5,a4
	and	a3,a3,a2
	or	a5,a5,a3
	and	a5,a5,a7
	beqz	a5,0x3698c # __strchrnul+0x60>
	lbu	a5,0(s0)
	beqz	a5,0x369c2 # __strchrnul+0x96>
	beq	a5,a1,0x369c2 # __strchrnul+0x96>
	lbu	a5,1(s0)
	addi	s0,s0,1
	bnez	a5,0x369b6 # __strchrnul+0x8a>
	ld	ra,8(sp)
	mv	a0,s0
	ld	s0,0(sp)
	addi	sp,sp,16
	ret
	jal	ra,0x369fa # strlen>
	add	s0,s0,a0
	ld	ra,8(sp)
	mv	a0,s0
	ld	s0,0(sp)
	addi	sp,sp,16
	ret

strcmp:
	lbu	a5,0(a0)
	lbu	a4,0(a1)
	bne	a5,a4,0x369f4 # strcmp+0x18>
	addi	a0,a0,1
	addi	a1,a1,1
	bnez	a5,0x369dc # strcmp>
	li	a0,0
	subw	a0,a0,a4
	ret
	sext.w	a0,a5
	j	0x369f0 # strcmp+0x14>

strlen:
	andi	a5,a0,7
	beqz	a5,0x36a18 # strlen+0x1e>
	mv	a5,a0
	j	0x36a0c # strlen+0x12>
	addi	a5,a5,1
	andi	a4,a5,7
	beqz	a4,0x36a1a # strlen+0x20>
	lbu	a4,0(a5)
	bnez	a4,0x36a04 # strlen+0xa>
	sub	a0,a5,a0
	ret
	mv	a5,a0
	ld	a3,0(a5)
	auipc	a1,0x12
	ld	a1,156(a1) # 0x48ab8 # xdigits+0x18>
	auipc	a2,0x12
	ld	a2,156(a2) # 0x48ac0 # xdigits+0x20>
	j	0x36a32 # strlen+0x38>
	ld	a3,8(a5)
	addi	a5,a5,8
	add	a4,a3,a1
	not	a3,a3
	and	a4,a4,a3
	and	a4,a4,a2
	beqz	a4,0x36a2e # strlen+0x34>
	lbu	a4,0(a5)
	beqz	a4,0x36a12 # strlen+0x18>
	lbu	a4,1(a5)
	addi	a5,a5,1
	beqz	a4,0x36a12 # strlen+0x18>
	lbu	a4,1(a5)
	addi	a5,a5,1
	bnez	a4,0x36a46 # strlen+0x4c>
	j	0x36a12 # strlen+0x18>

strncmp:
	beqz	a2,0x36a8c # strncmp+0x34>
	lbu	a5,0(a0)
	lbu	a4,0(a1)
	beqz	a5,0x36a90 # strncmp+0x38>
	addi	a2,a2,-1
	add	a3,a0,a2
	j	0x36a80 # strncmp+0x28>
	beq	a3,a0,0x36a84 # strncmp+0x2c>
	addi	a0,a0,1
	bne	a5,a4,0x36a84 # strncmp+0x2c>
	lbu	a5,0(a0)
	lbu	a4,0(a1)
	beqz	a5,0x36a90 # strncmp+0x38>
	addi	a1,a1,1
	bnez	a4,0x36a6c # strncmp+0x14>
	sext.w	a0,a5
	subw	a0,a0,a4
	ret
	li	a0,0
	ret
	li	a0,0
	subw	a0,a0,a4
	ret

strnlen:
	addi	sp,sp,-32
	sd	s0,16(sp)
	mv	a2,a1
	mv	s0,a1
	li	a1,0
	sd	s1,8(sp)
	sd	ra,24(sp)
	mv	s1,a0
	jal	ra,0x36278 # memchr>
	beqz	a0,0x36ab8 # strnlen+0x22>
	ld	ra,24(sp)
	ld	s0,16(sp)
	sub	a0,a0,s1
	ld	s1,8(sp)
	addi	sp,sp,32
	ret
	ld	ra,24(sp)
	mv	a0,s0
	ld	s0,16(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret

strpbrk:
	addi	sp,sp,-16
	sd	s0,0(sp)
	sd	ra,8(sp)
	mv	s0,a0
	jal	ra,0x3c1b6 # strcspn>
	add	a0,a0,s0
	lbu	a5,0(a0)
	ld	ra,8(sp)
	ld	s0,0(sp)
	snez	a5,a5
	neg	a5,a5
	and	a0,a0,a5
	addi	sp,sp,16
	ret

strspn:
	auipc	t3,0x17
	ld	t3,-1992(t3) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	ld	a5,0(t3)
	lbu	a4,0(a1)
	addi	sp,sp,-64
	sd	ra,56(sp)
	sd	a5,40(sp)
	sd	zero,8(sp)
	sd	zero,16(sp)
	sd	zero,24(sp)
	sd	zero,32(sp)
	mv	a7,a0
	li	a0,0
	beqz	a4,0x36b2c # strspn+0x44>
	lbu	a3,1(a1)
	lbu	a2,0(a7)
	li	t1,1
	bnez	a3,0x36b42 # strspn+0x5a>
	bne	a4,a2,0x36b2c # strspn+0x44>
	mv	a3,a7
	lbu	a5,1(a3)
	addi	a3,a3,1
	beq	a5,a4,0x36b1e # strspn+0x36>
	sub	a0,a3,a7
	ld	a4,40(sp)
	ld	a5,0(t3)
	bne	a4,a5,0x36b90 # strspn+0xa8>
	ld	ra,56(sp)
	addi	sp,sp,64
	ret
	mv	a4,a3
	lbu	a3,1(a1)
	srliw	a5,a4,0x6
	andi	a5,a5,255
	slli	a5,a5,0x3
	addi	a0,sp,48
	add	a5,a5,a0
	ld	a6,-40(a5)
	sll	a4,t1,a4
	addi	a1,a1,1
	or	a4,a4,a6
	sd	a4,-40(a5)
	bnez	a3,0x36b3c # strspn+0x54>
	mv	a3,a7
	li	a0,0
	bnez	a2,0x36b74 # strspn+0x8c>
	j	0x36b2c # strspn+0x44>
	lbu	a2,1(a3)
	addi	a3,a3,1
	beqz	a2,0x36b28 # strspn+0x40>
	srli	a4,a2,0x6
	addi	a5,sp,48
	slli	a4,a4,0x3
	add	a4,a4,a5
	ld	a5,-40(a4)
	srl	a5,a5,a2
	andi	a5,a5,1
	bnez	a5,0x36b6c # strspn+0x84>
	sub	a0,a3,a7
	j	0x36b2c # strspn+0x44>
	jal	ra,0x37f18 # __stack_chk_fail>

twoway_strstr:
	addi	sp,sp,-176
	lui	a3,0x1
	sd	s5,120(sp)
	sd	s7,104(sp)
	sd	s8,96(sp)
	sd	s9,88(sp)
	sd	ra,168(sp)
	sd	s0,160(sp)
	sd	s1,152(sp)
	sd	s2,144(sp)
	sd	s3,136(sp)
	sd	s4,128(sp)
	sd	s6,112(sp)
	sd	s10,80(sp)
	sd	s11,72(sp)
	auipc	s5,0x16
	ld	s5,1902(s5) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	addi	sp,sp,-2032
	addi	a4,a3,-2000 # 0x830 # exit-0xf8f0>
	lbu	a6,0(a1)
	add	a4,a4,sp
	ld	a5,0(s5)
	mv	s8,a1
	lui	a1,0xfffff
	add	a1,a1,a4
	addi	a4,a3,-2008
	add	a4,a4,sp
	sd	a5,0(a4)
	sd	zero,2008(a1) # 0xfffffffffffff7d8 # __BSS_END__+0xfffffffffffb1450>
	sd	zero,2016(a1)
	sd	zero,2024(a1)
	sd	zero,2032(a1)
	mv	s9,a0
	li	s7,0
	mv	a4,a6
	li	t1,1
	bnez	a6,0x36c24 # twoway_strstr+0x90>
	j	0x36e14 # twoway_strstr+0x280>
	srli	a5,a4,0x6
	slli	a5,a5,0x3
	add	a5,a5,a1
	ld	a0,2008(a5)
	addi	s7,s7,1
	add	a7,s8,s7
	sll	a2,t1,a4
	slli	a3,a4,0x3
	lbu	a4,0(a7)
	or	a2,a2,a0
	add	a3,a3,a1
	sd	a2,2008(a5)
	sd	s7,2040(a3)
	beqz	a4,0x36c66 # twoway_strstr+0xd2>
	add	a5,s9,s7
	lbu	a5,0(a5)
	bnez	a5,0x36bf8 # twoway_strstr+0x64>
	li	s0,0
	lui	a5,0x1
	addi	a5,a5,-2008 # 0x828 # exit-0xf8f8>
	add	a5,a5,sp
	ld	a4,0(a5)
	ld	a5,0(s5)
	bne	a4,a5,0x36e1c # twoway_strstr+0x288>
	addi	sp,sp,2032
	ld	ra,168(sp)
	mv	a0,s0
	ld	s1,152(sp)
	ld	s0,160(sp)
	ld	s2,144(sp)
	ld	s3,136(sp)
	ld	s4,128(sp)
	ld	s5,120(sp)
	ld	s6,112(sp)
	ld	s7,104(sp)
	ld	s8,96(sp)
	ld	s9,88(sp)
	ld	s10,80(sp)
	ld	s11,72(sp)
	addi	sp,sp,176
	ret
	beq	s7,t1,0x36e14 # twoway_strstr+0x280>
	mv	a2,a6
	li	s3,1
	li	a3,1
	li	a1,0
	li	s2,-1
	li	a5,1
	j	0x36c96 # twoway_strstr+0x102>
	bleu	a2,a4,0x36d9c # twoway_strstr+0x208>
	sub	s3,a5,s2
	mv	a1,a5
	li	a3,1
	add	a5,a1,a3
	bleu	s7,a5,0x36cb0 # twoway_strstr+0x11c>
	add	a4,s8,s2
	add	a4,a4,a3
	lbu	a2,0(a4)
	add	a4,s8,a5
	lbu	a4,0(a4)
	bne	a4,a2,0x36c78 # twoway_strstr+0xe4>
	beq	a3,s3,0x36db0 # twoway_strstr+0x21c>
	addi	a3,a3,1
	add	a5,a1,a3
	bltu	a5,s7,0x36c8c # twoway_strstr+0xf8>
	li	a0,1
	li	a4,1
	li	a2,0
	li	a1,-1
	li	a5,1
	j	0x36cda # twoway_strstr+0x146>
	bleu	a3,a6,0x36da6 # twoway_strstr+0x212>
	sub	a0,a5,a1
	mv	a2,a5
	li	a4,1
	add	a5,a4,a2
	bleu	s7,a5,0x36cf4 # twoway_strstr+0x160>
	add	a3,s8,a4
	add	a3,a3,a1
	lbu	a6,0(a3)
	add	a3,s8,a5
	lbu	a3,0(a3)
	bne	a3,a6,0x36cbc # twoway_strstr+0x128>
	beq	a4,a0,0x36db6 # twoway_strstr+0x222>
	addi	a4,a4,1
	add	a5,a4,a2
	bltu	a5,s7,0x36cd0 # twoway_strstr+0x13c>
	addi	a5,a1,1
	addi	s1,s2,1
	bleu	a5,s1,0x36d06 # twoway_strstr+0x172>
	mv	s1,a5
	mv	s2,a1
	mv	s3,a0
	mv	a2,s1
	add	a1,s8,s3
	mv	a0,s8
	jal	ra,0x36306 # memcmp>
	sub	s4,s7,s3
	beqz	a0,0x36d2a # twoway_strstr+0x196>
	addi	s3,s7,-1
	sub	s3,s3,s2
	bleu	s2,s3,0x36d26 # twoway_strstr+0x192>
	mv	s3,s2
	addi	s3,s3,1
	li	s4,0
	lui	a5,0x1
	addi	a5,a5,-2000 # 0x830 # exit-0xf8f0>
	lui	s10,0xfffff
	add	a5,a5,sp
	mv	s0,s9
	li	s11,0
	ori	s6,s7,63
	add	s10,s10,a5
	sub	a5,s9,s0
	bltu	a5,s7,0x36d84 # twoway_strstr+0x1f0>
	add	a3,s0,s7
	lbu	a5,-1(a3)
	srli	a4,a5,0x6
	slli	a4,a4,0x3
	add	a4,a4,s10
	ld	a4,2008(a4)
	srl	a4,a4,a5
	andi	a4,a4,1
	beqz	a4,0x36dbc # twoway_strstr+0x228>
	slli	a5,a5,0x3
	add	a5,a5,s10
	ld	a5,2040(a5)
	sub	a4,s7,a5
	beq	s7,a5,0x36dc2 # twoway_strstr+0x22e>
	bleu	a4,s11,0x36d78 # twoway_strstr+0x1e4>
	mv	s11,a4
	add	s0,s0,s11
	sub	a5,s9,s0
	li	s11,0
	bleu	s7,a5,0x36d46 # twoway_strstr+0x1b2>
	mv	a2,s6
	li	a1,0
	mv	a0,s9
	jal	ra,0x36278 # memchr>
	beqz	a0,0x36e10 # twoway_strstr+0x27c>
	sub	a5,a0,s0
	bltu	a5,s7,0x36c2e # twoway_strstr+0x9a>
	mv	s9,a0
	j	0x36d46 # twoway_strstr+0x1b2>
	mv	s2,a1
	li	s3,1
	addi	a1,a1,1
	li	a3,1
	j	0x36c84 # twoway_strstr+0xf0>
	mv	a1,a2
	li	a0,1
	addi	a2,a2,1
	li	a4,1
	j	0x36cc8 # twoway_strstr+0x134>
	add	a1,a1,a3
	li	a3,1
	j	0x36c84 # twoway_strstr+0xf0>
	add	a2,a2,a4
	li	a4,1
	j	0x36cc8 # twoway_strstr+0x134>
	mv	s0,a3
	li	s11,0
	j	0x36d3e # twoway_strstr+0x1aa>
	mv	a5,s11
	bleu	s1,s11,0x36dda # twoway_strstr+0x246>
	mv	a5,s1
	j	0x36dda # twoway_strstr+0x246>
	add	a3,s0,a5
	lbu	a3,0(a3)
	bne	a3,a4,0x36e06 # twoway_strstr+0x272>
	addi	a5,a5,1
	add	a4,s8,a5
	lbu	a4,0(a4)
	bnez	a4,0x36dcc # twoway_strstr+0x238>
	mv	a5,s1
	bleu	a5,s11,0x36c30 # twoway_strstr+0x9c>
	addi	a5,a5,-1
	add	a3,s8,a5
	add	a4,s0,a5
	lbu	a3,0(a3)
	lbu	a4,0(a4)
	beq	a3,a4,0x36de6 # twoway_strstr+0x252>
	add	s0,s0,s3
	mv	s11,s4
	j	0x36d3e # twoway_strstr+0x1aa>
	sub	a5,a5,s2
	add	s0,s0,a5
	li	s11,0
	j	0x36d3e # twoway_strstr+0x1aa>
	add	s9,s9,s6
	j	0x36d46 # twoway_strstr+0x1b2>
	li	s1,0
	li	s2,-1
	li	s3,1
	j	0x36d06 # twoway_strstr+0x172>
	jal	ra,0x37f18 # __stack_chk_fail>

strstr:
	addi	sp,sp,-16
	sd	s0,0(sp)
	sd	ra,8(sp)
	mv	s0,a1
	lbu	a1,0(a1)
	mv	a5,a0
	bnez	a1,0x36e3a # strstr+0x1a>
	ld	ra,8(sp)
	ld	s0,0(sp)
	mv	a0,a5
	addi	sp,sp,16
	ret
	jal	ra,0x3690a # strchr>
	mv	a5,a0
	beqz	a0,0x36e30 # strstr+0x10>
	lbu	a2,1(s0)
	beqz	a2,0x36e30 # strstr+0x10>
	lbu	a4,1(a0)
	beqz	a4,0x36ec4 # strstr+0xa4>
	lbu	a6,2(s0)
	beqz	a6,0x36e7e # strstr+0x5e>
	lbu	a7,2(a0)
	beqz	a7,0x36ec4 # strstr+0xa4>
	lbu	a1,3(s0)
	beqz	a1,0x36f2a # strstr+0x10a>
	lbu	a3,3(a0)
	beqz	a3,0x36ec4 # strstr+0xa4>
	lbu	t1,4(s0)
	beqz	t1,0x36ed0 # strstr+0xb0>
	mv	a1,s0
	ld	s0,0(sp)
	ld	ra,8(sp)
	addi	sp,sp,16
	j	0x36b94 # twoway_strstr>
	lbu	a1,0(s0)
	lbu	a3,0(a0)
	slli	a2,a2,0x8
	slli	a4,a4,0x8
	or	a2,a2,a1
	or	a4,a4,a3
	slliw	a1,a2,0x8
	srli	a3,a2,0x8
	slliw	a2,a4,0x8
	srli	a4,a4,0x8
	or	a4,a4,a2
	or	a3,a3,a1
	slli	a4,a4,0x30
	slli	a3,a3,0x30
	srli	a4,a4,0x30
	srli	a3,a3,0x30
	addi	a2,a0,1
	beq	a4,a3,0x36e30 # strstr+0x10>
	lbu	a1,1(a2)
	slliw	a4,a4,0x8
	mv	a5,a2
	or	a4,a4,a1
	slli	a4,a4,0x30
	addi	a2,a2,1
	srli	a4,a4,0x30
	bnez	a1,0x36eac # strstr+0x8c>
	li	a5,0
	ld	ra,8(sp)
	ld	s0,0(sp)
	mv	a0,a5
	addi	sp,sp,16
	ret
	lbu	t1,0(s0)
	lbu	a0,0(a0)
	slliw	a2,a2,0x10
	slliw	t1,t1,0x18
	slliw	a0,a0,0x18
	or	a3,a3,a0
	or	a1,a1,t1
	slliw	a4,a4,0x10
	or	a4,a4,a3
	or	a2,a2,a1
	slliw	a6,a6,0x8
	slliw	a7,a7,0x8
	or	a2,a2,a6
	or	a4,a4,a7
	sext.w	a2,a2
	sext.w	a4,a4
	addi	a3,a5,3
	bne	a2,a4,0x36f14 # strstr+0xf4>
	j	0x36e30 # strstr+0x10>
	beq	a2,a4,0x36f7c # strstr+0x15c>
	lbu	a1,1(a3)
	slliw	a4,a4,0x8
	mv	a5,a3
	or	a4,a4,a1
	addi	a3,a3,1
	sext.w	a4,a4
	bnez	a1,0x36f10 # strstr+0xf0>
	li	a5,0
	j	0x36ec6 # strstr+0xa6>
	lbu	a0,0(s0)
	lbu	a1,0(a5)
	slliw	a3,a2,0x10
	slliw	a6,a6,0x8
	slliw	a4,a4,0x10
	slliw	a7,a7,0x8
	slliw	a2,a1,0x18
	or	a3,a3,a6
	slliw	a0,a0,0x18
	or	a4,a4,a7
	or	a4,a4,a2
	or	a3,a3,a0
	sext.w	a3,a3
	sext.w	a4,a4
	addi	a2,a5,2
	bne	a3,a4,0x36f68 # strstr+0x148>
	j	0x36e30 # strstr+0x10>
	beq	a3,a4,0x36f80 # strstr+0x160>
	lbu	a1,1(a2)
	mv	a5,a2
	addi	a2,a2,1
	or	a4,a4,a1
	slliw	a4,a4,0x8
	bnez	a1,0x36f64 # strstr+0x144>
	li	a5,0
	j	0x36ec6 # strstr+0xa6>
	addi	a5,a5,-2
	j	0x36e30 # strstr+0x10>
	addi	a5,a5,-1
	j	0x36e30 # strstr+0x10>

__randname:
	addi	sp,sp,-64
	sd	s2,32(sp)
	auipc	s2,0x16
	ld	s2,920(s2) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	ld	a5,0(s2)
	sd	s0,48(sp)
	addi	s0,sp,8
	mv	a1,s0
	sd	s1,40(sp)
	mv	s1,a0
	li	a0,0
	sd	a5,24(sp)
	sd	ra,56(sp)
	jal	ra,0x371ee # __clock_gettime>
	ld	a5,16(sp)
	srli	s0,s0,0x4
	add	s0,s0,s1
	slli	a4,a5,0x10
	add	a4,a4,a5
	mv	a3,s1
	xor	a4,a4,s0
	addi	a1,s1,6
	andi	a5,a4,16
	andi	a2,a4,15
	slliw	a5,a5,0x1
	addiw	a2,a2,65
	addw	a5,a5,a2
	sb	a5,0(a3)
	addi	a3,a3,1
	srli	a4,a4,0x5
	bne	a1,a3,0x36fbc # __randname+0x38>
	ld	a4,24(sp)
	ld	a5,0(s2)
	bne	a4,a5,0x36ff2 # __randname+0x6e>
	ld	ra,56(sp)
	ld	s0,48(sp)
	ld	s2,32(sp)
	mv	a0,s1
	ld	s1,40(sp)
	addi	sp,sp,64
	ret
	jal	ra,0x37f18 # __stack_chk_fail>

mkstemp:
	li	a2,0
	li	a1,0
	j	0x3c264 # __mkostemps>

__lock:
	lb	a2,-1925(gp) # 0x4d403 # __libc+0x3>
	mv	a4,a0
	beqz	a2,0x370c2 # __lock+0xc4>
	lui	a3,0x80000
	li	a1,0
	addi	a3,a3,1
	lr.w.aqrl	a5,(a4)
	bne	a5,a1,0x3701c # __lock+0x1e>
	sc.w.aqrl	a0,a3,(a4)
	bnez	a0,0x3700e # __lock+0x10>
	sext.w	a5,a5
	bltz	a2,0x370c4 # __lock+0xc6>
	beqz	a5,0x370c2 # __lock+0xc4>
	lui	a0,0x80000
	not	a7,a0
	li	a2,10
	addiw	a0,a0,1
	bltz	a5,0x370cc # __lock+0xce>
	addw	a1,a0,a5
	mv	a3,a5
	lr.w.aqrl	a5,(a4)
	bne	a5,a3,0x3704a # __lock+0x4c>
	sc.w.aqrl	a6,a1,(a4)
	bnez	a6,0x3703a # __lock+0x3c>
	sext.w	a5,a5
	addiw	a2,a2,-1
	beq	a3,a5,0x370c2 # __lock+0xc4>
	bnez	a2,0x37030 # __lock+0x32>
	lw	a5,0(a4)
	sext.w	a2,a5
	addiw	a5,a5,1
	lr.w.aqrl	a3,(a4)
	bne	a3,a2,0x3706a # __lock+0x6c>
	sc.w.aqrl	a1,a5,(a4)
	bnez	a1,0x3705c # __lock+0x5e>
	sext.w	a3,a3
	bne	a2,a3,0x37054 # __lock+0x56>
	lui	a6,0x80000
	li	t3,-38
	not	t1,a6
	j	0x37096 # __lock+0x98>
	addw	a1,a6,a3
	lr.w.aqrl	a5,(a4)
	bne	a5,a2,0x37090 # __lock+0x92>
	sc.w.aqrl	a0,a1,(a4)
	bnez	a0,0x37082 # __lock+0x84>
	sext.w	a5,a5
	beq	a3,a5,0x370c2 # __lock+0xc4>
	mv	a3,a5
	mv	a2,a5
	bgez	a5,0x3707e # __lock+0x80>
	li	a7,98
	mv	a0,a4
	li	a1,128
	li	a3,0
	ecall
	bne	a0,t3,0x370ba # __lock+0xbc>
	mv	a0,a4
	li	a1,0
	ecall
	addw	a3,t1,a5
	mv	a2,a3
	j	0x3707e # __lock+0x80>
	ret
	sb	zero,-1925(gp) # 0x4d403 # __libc+0x3>
	bnez	a5,0x37024 # __lock+0x26>
	j	0x370c2 # __lock+0xc4>
	addw	a3,a7,a5
	mv	a1,a5
	j	0x3703a # __lock+0x3c>

__unlock:
	lw	a5,0(a0)
	mv	a4,a0
	sext.w	a5,a5
	bltz	a5,0x370e0 # __unlock+0xc>
	ret
	lui	a1,0x80000
	not	a1,a1
	lw	a5,0(a4)
	sext.w	a3,a5
	addw	a5,a5,a1
	lr.w.aqrl	a2,(a4)
	bne	a2,a3,0x370fe # __unlock+0x2a>
	sc.w.aqrl	a0,a5,(a4)
	bnez	a0,0x370f0 # __unlock+0x1c>
	sext.w	a5,a2
	bne	a3,a5,0x370e8 # __unlock+0x14>
	lui	a5,0x80000
	addi	a5,a5,1
	beq	a3,a5,0x370de # __unlock+0xa>
	li	a7,98
	mv	a0,a4
	li	a1,129
	li	a2,1
	ecall
	li	a5,-38
	bne	a0,a5,0x370de # __unlock+0xa>
	mv	a0,a4
	li	a1,1
	ecall
	ret

__syscall_cp_c:
	mv	a7,a0
	mv	a0,a1
	mv	a1,a2
	mv	a2,a3
	mv	a3,a4
	mv	a4,a5
	mv	a5,a6
	ecall
	ret

__syscall_cp:
	j	0x37132 # __syscall_cp_c>

pthread_sigmask:
	mv	a5,a0
	beqz	a1,0x37156 # pthread_sigmask+0xc>
	li	a4,2
	li	a0,22
	bltu	a4,a5,0x37176 # pthread_sigmask+0x2c>
	li	a7,135
	mv	a0,a5
	li	a3,8
	ecall
	negw	a0,a0
	bnez	a0,0x37176 # pthread_sigmask+0x2c>
	beqz	a2,0x37176 # pthread_sigmask+0x2c>
	ld	a4,0(a2)
	li	a5,-7
	slli	a5,a5,0x1f
	addi	a5,a5,-1
	and	a5,a5,a4
	sd	a5,0(a2)
	ret

__testcancel:
	ret

__pthread_testcancel:
	j	0x37178 # __testcancel>

clock:
	addi	sp,sp,-48
	sd	s0,32(sp)
	auipc	s0,0x16
	ld	s0,414(s0) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	ld	a5,0(s0)
	addi	a1,sp,8
	li	a0,2
	sd	ra,40(sp)
	sd	a5,24(sp)
	jal	ra,0x371ee # __clock_gettime>
	bnez	a0,0x371e6 # clock+0x68>
	ld	a5,8(sp)
	auipc	a4,0x12
	ld	a4,-1748(a4) # 0x48ac8 # xdigits+0x28>
	blt	a4,a5,0x371e6 # clock+0x68>
	ld	a0,16(sp)
	li	a4,1000
	li	a3,-1
	div	a0,a0,a4
	lui	a4,0xfff0c
	addi	a4,a4,-576 # 0xfffffffffff0bdc0 # __BSS_END__+0xffffffffffebda38>
	srli	a3,a3,0x1
	mul	a4,a5,a4
	add	a4,a4,a3
	blt	a4,a0,0x371e6 # clock+0x68>
	lui	a4,0xf4
	addi	a4,a4,576 # 0xf4240 # __BSS_END__+0xa5eb8>
	mul	a5,a5,a4
	add	a0,a0,a5
	ld	a4,24(sp)
	ld	a5,0(s0)
	bne	a4,a5,0x371ea # clock+0x6c>
	ld	ra,40(sp)
	ld	s0,32(sp)
	addi	sp,sp,48
	ret
	li	a0,-1
	j	0x371d6 # clock+0x58>
	jal	ra,0x37f18 # __stack_chk_fail>

__clock_gettime:
	mv	a4,a0
	li	a7,113
	ecall
	li	a3,-38
	sext.w	a0,a0
	bne	a0,a3,0x37206 # __clock_gettime+0x18>
	li	a0,-22
	beqz	a4,0x37216 # __clock_gettime+0x28>
	addi	sp,sp,-16
	sd	ra,8(sp)
	jal	ra,0x394da # __syscall_ret>
	ld	ra,8(sp)
	sext.w	a0,a0
	addi	sp,sp,16
	ret
	mv	a5,a1
	mv	a0,a1
	li	a7,169
	li	a1,0
	ecall
	ld	a3,8(a5)
	li	a4,1000
	li	a0,0
	mulw	a4,a4,a3
	sd	a4,8(a5)
	ret

difftime:
	sub	a0,a0,a1
	fcvt.d.l	fa0,a0
	ret

__gmtime_r:
	ld	a0,0(a0)
	addi	sp,sp,-16
	sd	s0,0(sp)
	sd	ra,8(sp)
	mv	s0,a1
	jal	ra,0x3c410 # __secs_to_tm>
	bltz	a0,0x3726a # __gmtime_r+0x2e>
	auipc	a5,0x13
	addi	a5,a5,-1286 # 0x49d48 # __utc>
	ld	ra,8(sp)
	sw	zero,32(s0)
	sd	zero,40(s0)
	sd	a5,48(s0)
	mv	a0,s0
	ld	s0,0(sp)
	addi	sp,sp,16
	ret
	jal	ra,0x2f900 # __errno_location>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a5,75
	sw	a5,0(a0)
	li	a0,0
	addi	sp,sp,16
	ret

__localtime_r:
	addi	sp,sp,-32
	sd	s1,8(sp)
	mv	s1,a0
	ld	a0,0(a0)
	lui	a5,0x1e285
	slli	a5,a5,0x1b
	sd	ra,24(sp)
	sd	s0,16(sp)
	add	a5,a5,a0
	auipc	a4,0x12
	ld	a4,-1986(a4) # 0x48ad0 # xdigits+0x30>
	bltu	a4,a5,0x372d0 # __localtime_r+0x52>
	mv	s0,a1
	addi	a5,a1,48 # 0xffffffff80000030 # __BSS_END__+0xffffffff7ffb1ca8>
	addi	a3,a1,40
	addi	a2,a1,32
	li	a4,0
	li	a1,0
	jal	ra,0x3d0ac # __secs_to_zone>
	ld	a0,0(s1)
	ld	a5,40(s0)
	mv	a1,s0
	add	a0,a0,a5
	jal	ra,0x3c410 # __secs_to_tm>
	bltz	a0,0x372d0 # __localtime_r+0x52>
	ld	ra,24(sp)
	mv	a0,s0
	ld	s0,16(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret
	jal	ra,0x2f900 # __errno_location>
	li	s0,0
	li	a5,75
	ld	ra,24(sp)
	sw	a5,0(a0)
	mv	a0,s0
	ld	s0,16(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret

mktime:
	addi	sp,sp,-144
	sd	s2,112(sp)
	auipc	s2,0x16
	ld	s2,52(s2) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	ld	a5,0(s2)
	sd	ra,136(sp)
	sd	s0,128(sp)
	sd	s1,120(sp)
	sd	s3,104(sp)
	sd	s4,96(sp)
	sd	s5,88(sp)
	sd	s6,80(sp)
	mv	s0,a0
	sd	a5,72(sp)
	addi	s6,sp,64
	jal	ra,0x3c5f8 # __tm_to_secs>
	addi	s5,sp,8
	addi	s4,sp,56
	addi	s3,sp,48
	mv	a5,s6
	mv	a4,s5
	mv	a3,s4
	mv	a2,s3
	li	a1,1
	mv	s1,a0
	jal	ra,0x3d0ac # __secs_to_zone>
	lw	a5,32(s0)
	bltz	a5,0x3739e # mktime+0xb6>
	lw	a4,48(sp)
	ld	a0,56(sp)
	beq	a4,a5,0x37342 # mktime+0x5a>
	ld	a5,8(sp)
	sub	a5,a5,a0
	sub	s1,s1,a5
	sub	s1,s1,a0
	li	a1,0
	mv	a0,s1
	mv	a5,s6
	mv	a4,s5
	mv	a3,s4
	mv	a2,s3
	jal	ra,0x3d0ac # __secs_to_zone>
	ld	a0,56(sp)
	addi	a1,sp,16
	add	a0,a0,s1
	jal	ra,0x3c410 # __secs_to_tm>
	bltz	a0,0x373a2 # mktime+0xba>
	ld	a5,16(sp)
	sd	a5,0(s0)
	ld	a5,24(sp)
	sd	a5,8(s0)
	ld	a5,32(sp)
	sd	a5,16(s0)
	ld	a5,40(sp)
	sd	a5,24(s0)
	ld	a5,48(sp)
	sd	a5,32(s0)
	ld	a5,56(sp)
	sd	a5,40(s0)
	ld	a5,64(sp)
	sd	a5,48(s0)
	ld	a4,72(sp)
	ld	a5,0(s2)
	bne	a4,a5,0x373b0 # mktime+0xc8>
	ld	ra,136(sp)
	ld	s0,128(sp)
	ld	s2,112(sp)
	ld	s3,104(sp)
	ld	s4,96(sp)
	ld	s5,88(sp)
	ld	s6,80(sp)
	mv	a0,s1
	ld	s1,120(sp)
	addi	sp,sp,144
	ret
	ld	a0,56(sp)
	j	0x37342 # mktime+0x5a>
	jal	ra,0x2f900 # __errno_location>
	li	a5,75
	sw	a5,0(a0)
	li	s1,-1
	j	0x3737e # mktime+0x96>
	jal	ra,0x37f18 # __stack_chk_fail>

week_num.isra.0:
	addiw	a6,a1,6
	subw	a1,a1,a2
	li	a5,7
	addiw	a3,a1,369
	remuw	a3,a3,a5
	addiw	a2,a2,7
	li	a7,2
	mv	a4,a0
	remuw	a6,a6,a5
	subw	a6,a2,a6
	divuw	a0,a6,a5
	bltu	a7,a3,0x373e6 # week_num.isra.0+0x32>
	addiw	a0,a0,1
	li	a5,53
	beq	a0,a5,0x37434 # week_num.isra.0+0x80>
	ret
	li	a3,6
	bltu	a3,a6,0x373dc # week_num.isra.0+0x28>
	addiw	a1,a1,6
	remuw	a1,a1,a5
	li	a5,4
	li	a0,53
	beq	a1,a5,0x373e4 # week_num.isra.0+0x30>
	li	a5,5
	li	a0,52
	bne	a1,a5,0x373e4 # week_num.isra.0+0x30>
	li	a5,400
	remw	a4,a4,a5
	addiw	a4,a4,1899
	andi	a3,a4,3
	bnez	a3,0x373e4 # week_num.isra.0+0x30>
	li	a3,100
	remw	a3,a4,a3
	li	a0,53
	bnez	a3,0x373e4 # week_num.isra.0+0x30>
	remw	a4,a4,a5
	seqz	a0,a4
	addi	a0,a0,52 # 0xffffffff80000034 # __BSS_END__+0xffffffff7ffb1cac>
	ret
	li	a5,7
	addiw	a1,a1,371
	remuw	a1,a1,a5
	li	a5,4
	beq	a1,a5,0x373e4 # week_num.isra.0+0x30>
	li	a5,3
	beq	a1,a5,0x3744e # week_num.isra.0+0x9a>
	li	a0,1
	ret
	lui	a5,0x80000
	xori	a5,a5,-1901
	ble	a4,a5,0x3745e # week_num.isra.0+0xaa>
	addiw	a4,a4,-2000
	andi	a5,a4,3
	addiw	a4,a4,1900
	bnez	a5,0x3744a # week_num.isra.0+0x96>
	li	a5,100
	remw	a5,a4,a5
	bnez	a5,0x373e4 # week_num.isra.0+0x30>
	li	a5,400
	remw	a5,a4,a5
	bnez	a5,0x3744a # week_num.isra.0+0x96>
	ret

__strftime_l:
	auipc	a5,0x16
	ld	a5,-350(a5) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	ld	a5,0(a5)
	addi	sp,sp,-272
	sd	ra,264(sp)
	sd	s0,256(sp)
	sd	s1,248(sp)
	sd	s2,240(sp)
	sd	s3,232(sp)
	sd	s4,224(sp)
	sd	s5,216(sp)
	sd	s6,208(sp)
	sd	s7,200(sp)
	sd	s8,192(sp)
	sd	s9,184(sp)
	sd	s10,176(sp)
	sd	s11,168(sp)
	sd	a5,152(sp)
	sd	a4,8(sp)
	beqz	a1,0x3773e # __strftime_l+0x2c0>
	li	s4,1
	lui	s8,0x400
	addi	a5,s8,25 # 0x400019 # __BSS_END__+0x3b1c91>
	slli	s4,s4,0x32
	sd	a5,16(sp)
	addi	a5,s4,9
	mv	s0,a1
	mv	s1,a0
	mv	s2,a3
	li	s11,0
	addi	s5,sp,40
	addi	s7,sp,32
	addi	s6,sp,48
	sd	a5,24(sp)
	lbu	a5,0(a2)
	add	s9,s1,s11
	beqz	a5,0x37730 # __strftime_l+0x2b2>
	li	a3,37
	addi	a4,a2,1
	beq	a5,a3,0x3753e # __strftime_l+0xc0>
	addi	s11,s11,1
	sb	a5,0(s9)
	mv	a2,a4
	bltu	s11,s0,0x374d4 # __strftime_l+0x56>
	add	s9,s1,s11
	bne	s11,s0,0x37508 # __strftime_l+0x8a>
	addi	a6,s11,-1
	add	s9,s1,a6
	sb	zero,0(s9)
	li	s11,0
	auipc	a5,0x16
	ld	a5,-494(a5) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	ld	a4,152(sp)
	ld	a5,0(a5)
	bne	a4,a5,0x37742 # __strftime_l+0x2c4>
	ld	ra,264(sp)
	ld	s0,256(sp)
	ld	s1,248(sp)
	ld	s2,240(sp)
	ld	s3,232(sp)
	ld	s4,224(sp)
	ld	s5,216(sp)
	ld	s6,208(sp)
	ld	s7,200(sp)
	ld	s8,192(sp)
	ld	s9,184(sp)
	ld	s10,176(sp)
	mv	a0,s11
	ld	s11,168(sp)
	addi	sp,sp,272
	ret
	lbu	s3,1(a2)
	li	a3,50
	addiw	a5,s3,-45
	andi	a5,a5,255
	bltu	a3,a5,0x3760e # __strftime_l+0x190>
	ld	a3,24(sp)
	li	s4,0
	srl	a5,a3,a5
	andi	a3,a5,1
	beqz	a3,0x37576 # __strftime_l+0xf8>
	sext.w	s4,s3
	lbu	s3,2(a2)
	addi	a4,a2,2
	addi	a3,s3,-43
	seqz	a3,a3
	add	a4,a4,a3
	li	a2,10
	mv	a1,s5
	mv	a0,a4
	sd	a4,0(sp)
	jal	ra,0x3c0c4 # strtoul>
	ld	s10,40(sp)
	li	a1,22
	mv	s8,a0
	lbu	a2,0(s10) # 0xfffffffffffff000 # __BSS_END__+0xfffffffffffb0c78>
	addiw	a3,a2,-67
	andi	a3,a3,255
	bltu	a1,a3,0x375f6 # __strftime_l+0x178>
	ld	a5,16(sp)
	ld	a4,0(sp)
	srl	a3,a5,a3
	andi	a3,a3,1
	beqz	a3,0x376f0 # __strftime_l+0x272>
	bnez	a0,0x37612 # __strftime_l+0x194>
	sub	a4,s10,a4
	snez	s8,a4
	li	a4,69
	bne	a2,a4,0x376e6 # __strftime_l+0x268>
	lbu	a2,1(s10)
	addi	s10,s10,1
	ld	a4,8(sp)
	mv	a1,s7
	mv	a5,s4
	mv	a3,s2
	mv	a0,s6
	jal	ra,0x37746 # __strftime_fmt_1>
	mv	a1,a0
	beqz	a0,0x37508 # __strftime_l+0x8a>
	ld	a2,32(sp)
	bnez	s8,0x37628 # __strftime_l+0x1aa>
	sub	a5,s0,s11
	bleu	a2,a5,0x375e2 # __strftime_l+0x164>
	sd	a5,32(sp)
	mv	a2,a5
	mv	a0,s9
	jal	ra,0x3632a # memcpy>
	ld	a5,32(sp)
	addi	a2,s10,1
	add	s11,s11,a5
	bltu	s11,s0,0x374d4 # __strftime_l+0x56>
	j	0x374f8 # __strftime_l+0x7a>
	ld	a4,8(sp)
	mv	a1,s7
	mv	a5,s4
	mv	a3,s2
	mv	a0,s6
	jal	ra,0x37746 # __strftime_fmt_1>
	mv	a1,a0
	beqz	a0,0x37508 # __strftime_l+0x8a>
	ld	a2,32(sp)
	j	0x375d6 # __strftime_l+0x158>
	li	s4,0
	j	0x3756c # __strftime_l+0xee>
	ld	a4,8(sp)
	mv	a1,s7
	mv	a5,s4
	mv	a3,s2
	mv	a0,s6
	jal	ra,0x37746 # __strftime_fmt_1>
	mv	a1,a0
	beqz	a0,0x37508 # __strftime_l+0x8a>
	ld	a2,32(sp)
	lbu	a5,0(a1)
	addiw	a4,a5,-43
	andi	a4,a4,253
	bnez	a4,0x37640 # __strftime_l+0x1c2>
	addi	a2,a2,-1
	sd	a2,32(sp)
	lbu	a5,1(a1)
	addi	a1,a1,1
	li	a4,48
	bne	a5,a4,0x3766e # __strftime_l+0x1f0>
	li	a4,9
	li	a3,48
	j	0x3765e # __strftime_l+0x1e0>
	addi	a2,a2,-1
	addi	a1,a1,1
	sd	a2,32(sp)
	lbu	a5,0(a1)
	bne	a5,a3,0x3766e # __strftime_l+0x1f0>
	lbu	a5,1(a1)
	addiw	a5,a5,-48
	bleu	a5,a4,0x37650 # __strftime_l+0x1d2>
	lbu	a5,0(a1)
	mv	t1,s8
	bleu	a2,s8,0x37676 # __strftime_l+0x1f8>
	mv	t1,a2
	addiw	a5,a5,-48
	li	a4,9
	bltu	a4,a5,0x37736 # __strftime_l+0x2b8>
	li	a4,0
	li	a3,9
	addi	a4,a4,1
	add	a5,a1,a4
	lbu	a5,0(a5)
	addiw	a5,a5,-48
	bleu	a5,a3,0x37684 # __strftime_l+0x206>
	lw	a3,20(s2)
	li	a5,-1900
	ble	a5,a3,0x376f4 # __strftime_l+0x276>
	addi	a3,s11,1
	li	a5,45
	sb	a5,0(s9)
	addi	t1,t1,-1
	add	s9,s1,a3
	bleu	t1,a2,0x3773a # __strftime_l+0x2bc>
	bleu	s0,a3,0x3773a # __strftime_l+0x2bc>
	addi	a5,a3,1 # 0xffffffff80000001 # __BSS_END__+0xffffffff7ffb1c79>
	add	a3,a3,t1
	sub	s11,a3,a2
	add	a4,s1,a5
	li	a3,48
	j	0x376d2 # __strftime_l+0x254>
	addi	a5,a5,1
	sb	a3,-1(a4)
	mv	s9,a4
	beq	a5,s11,0x375d6 # __strftime_l+0x158>
	addi	a4,a4,1
	bne	s0,a5,0x376d0 # __strftime_l+0x252>
	mv	s11,s0
	j	0x375d6 # __strftime_l+0x158>
	li	a4,79
	beq	a2,a4,0x375b8 # __strftime_l+0x13a>
	j	0x375be # __strftime_l+0x140>
	li	s8,0
	j	0x375b0 # __strftime_l+0x132>
	li	a5,43
	mv	a3,s11
	bne	s3,a5,0x376b4 # __strftime_l+0x236>
	ld	a0,40(sp)
	sub	a5,t1,a2
	li	a3,67
	lbu	a0,0(a0)
	add	a4,a4,a5
	li	a5,3
	beq	a0,a3,0x37716 # __strftime_l+0x298>
	li	a5,5
	mv	a3,s11
	bltu	a4,a5,0x376b4 # __strftime_l+0x236>
	addi	a3,s11,1
	li	a5,43
	sb	a5,0(s9)
	addi	t1,t1,-1
	add	s9,s1,a3
	j	0x376b4 # __strftime_l+0x236>
	sb	zero,0(s9)
	j	0x3750e # __strftime_l+0x90>
	li	a4,0
	j	0x37696 # __strftime_l+0x218>
	mv	s11,a3
	j	0x375d6 # __strftime_l+0x158>
	li	s11,0
	j	0x3750e # __strftime_l+0x90>
	jal	ra,0x37f18 # __stack_chk_fail>

__strftime_fmt_1:
	addi	sp,sp,-64
	addiw	a6,a2,-37
	sd	s2,32(sp)
	sd	ra,56(sp)
	mv	s2,a2
	sd	s0,48(sp)
	sd	s1,40(sp)
	sd	s3,24(sp)
	sd	s4,16(sp)
	sext.w	a7,a6
	li	a2,85
	bltu	a2,a7,0x37786 # __strftime_fmt_1+0x40>
	slli	a6,a6,0x20
	srli	a6,a6,0x20
	auipc	a2,0x11
	addi	a2,a2,980 # 0x48b40 # xdigits+0xa0>
	slli	a6,a6,0x2
	add	a6,a6,a2
	mv	s1,a3
	lw	a3,0(a6) # 0xffffffff80000000 # __BSS_END__+0xffffffff7ffb1c78>
	mv	s0,a0
	mv	s3,a1
	add	a3,a3,a2
	jr	a3
	li	s0,0
	ld	ra,56(sp)
	mv	a0,s0
	ld	s0,48(sp)
	ld	s1,40(sp)
	ld	s2,32(sp)
	ld	s3,24(sp)
	ld	s4,16(sp)
	addi	sp,sp,64
	ret
	lw	a5,16(s1)
	li	a3,11
	auipc	s0,0x11
	addi	s0,s0,826 # 0x48ad8 # xdigits+0x38>
	bltu	a3,a5,0x377ba # __strftime_fmt_1+0x74>
	lui	a0,0x20
	addiw	a0,a0,14
	addw	a0,a0,a5
	mv	a1,a4
	jal	ra,0x394fe # __nl_langinfo_l>
	mv	s0,a0
	mv	a0,s0
	jal	ra,0x369fa # strlen>
	sd	a0,0(s3)
	j	0x37788 # __strftime_fmt_1+0x42>
	lw	s4,20(s1)
	lw	a2,28(s1)
	li	a3,2
	addi	a4,s4,1900
	blt	a3,a2,0x37ad4 # __strftime_fmt_1+0x38e>
	lw	a1,24(s1)
	mv	a0,s4
	sd	a5,8(sp)
	sd	a4,0(sp)
	jal	ra,0x373b4 # week_num.isra.0>
	li	a3,1
	ld	a4,0(sp)
	ld	a5,8(sp)
	beq	a0,a3,0x377f0 # __strftime_fmt_1+0xaa>
	addi	a4,s4,1899
	li	a3,103
	beq	s2,a3,0x37b12 # __strftime_fmt_1+0x3cc>
	li	a3,4
	bnez	a5,0x37844 # __strftime_fmt_1+0xfe>
	auipc	a2,0x11
	addi	a2,a2,828 # 0x48b38 # xdigits+0x98>
	li	a1,100
	mv	a0,s0
	jal	ra,0x3448a # snprintf>
	sd	a0,0(s3)
	j	0x37788 # __strftime_fmt_1+0x42>
	lw	a4,12(s1)
	li	a3,2
	bnez	a5,0x37844 # __strftime_fmt_1+0xfe>
	auipc	a2,0x11
	addi	a2,a2,790 # 0x48b30 # xdigits+0x90>
	li	a1,100
	mv	a0,s0
	jal	ra,0x3448a # snprintf>
	sd	a0,0(s3)
	j	0x37788 # __strftime_fmt_1+0x42>
	lw	a4,8(s1)
	beqz	a4,0x37af8 # __strftime_fmt_1+0x3b2>
	li	a3,12
	ble	a4,a3,0x37b22 # __strftime_fmt_1+0x3dc>
	addi	a4,a4,-12
	li	a3,2
	beqz	a5,0x377fc # __strftime_fmt_1+0xb6>
	li	a2,45
	bne	a5,a2,0x37aca # __strftime_fmt_1+0x384>
	mv	a3,a4
	auipc	a2,0xb
	addi	a2,a2,-2022 # 0x42068 # log_2.0+0x118>
	li	a1,100
	mv	a0,s0
	jal	ra,0x3448a # snprintf>
	sd	a0,0(s3)
	j	0x37788 # __strftime_fmt_1+0x42>
	lw	a5,32(s1)
	bltz	a5,0x378e6 # __strftime_fmt_1+0x1a0>
	ld	a5,40(s1)
	lui	a4,0x1
	addi	a4,a4,-496 # 0xe10 # exit-0xf310>
	rem	a3,a5,a4
	auipc	a2,0x11
	addi	a2,a2,688 # 0x48b28 # xdigits+0x88>
	li	a1,100
	div	a5,a5,a4
	li	a4,60
	div	a3,a3,a4
	li	a4,100
	mul	a5,a5,a4
	add	a3,a3,a5
	jal	ra,0x3448a # snprintf>
	sd	a0,0(s3)
	j	0x37788 # __strftime_fmt_1+0x42>
	lw	a4,20(s1)
	li	a3,100
	addi	a4,a4,1900
	rem	a4,a4,a3
	srai	a3,a4,0x3f
	xor	a4,a4,a3
	sub	a4,a4,a3
	li	a3,2
	bnez	a5,0x37844 # __strftime_fmt_1+0xfe>
	j	0x377fc # __strftime_fmt_1+0xb6>
	lw	a4,24(s1)
	li	a3,1
	bnez	a5,0x37844 # __strftime_fmt_1+0xfe>
	j	0x377fc # __strftime_fmt_1+0xb6>
	lw	a5,24(s1)
	li	a3,6
	auipc	s0,0x11
	addi	s0,s0,524 # 0x48ad8 # xdigits+0x38>
	bltu	a3,a5,0x377ba # __strftime_fmt_1+0x74>
	lui	a0,0x20
	addw	a0,a0,a5
	j	0x377b2 # __strftime_fmt_1+0x6c>
	lw	a5,32(s1)
	bgez	a5,0x37b08 # __strftime_fmt_1+0x3c2>
	sd	zero,0(s3)
	auipc	s0,0xa
	addi	s0,s0,-1802 # 0x411e0 # __clzdi2+0x318>
	j	0x37788 # __strftime_fmt_1+0x42>
	lw	a4,20(s1)
	lui	a3,0x2
	addi	a3,a3,1807 # 0x270f # exit-0xda11>
	addi	a4,a4,1900
	ble	a4,a3,0x377f8 # __strftime_fmt_1+0xb2>
	mv	a3,a4
	auipc	a2,0x11
	addi	a2,a2,538 # 0x48b20 # xdigits+0x80>
	li	a1,100
	jal	ra,0x3448a # snprintf>
	sd	a0,0(s3)
	j	0x37788 # __strftime_fmt_1+0x42>
	lui	a0,0x20
	addi	a0,a0,42 # 0x2002a # luaV_execute+0x10c2>
	mv	a1,a4
	sd	a4,0(sp)
	jal	ra,0x394fe # __nl_langinfo_l>
	ld	a4,0(sp)
	mv	a2,a0
	mv	a0,s0
	mv	a3,s1
	li	a1,100
	jal	ra,0x3747e # __strftime_l>
	snez	a5,a0
	neg	a5,a5
	sd	a0,0(s3)
	and	s0,s0,a5
	j	0x37788 # __strftime_fmt_1+0x42>
	lw	a4,24(s1)
	bnez	a4,0x378c2 # __strftime_fmt_1+0x17c>
	li	a4,7
	j	0x378c2 # __strftime_fmt_1+0x17c>
	li	a5,1
	sd	a5,0(a1)
	auipc	s0,0xc
	addi	s0,s0,728 # 0x43c30 # luai_ctype_+0x820>
	j	0x37788 # __strftime_fmt_1+0x42>
	mv	a0,s1
	sd	a5,0(sp)
	jal	ra,0x3c5f8 # __tm_to_secs>
	ld	a4,40(s1)
	ld	a5,0(sp)
	li	a3,1
	sub	a4,a0,a4
	bnez	a5,0x37844 # __strftime_fmt_1+0xfe>
	j	0x377fc # __strftime_fmt_1+0xb6>
	lw	a3,8(s1)
	li	a5,11
	lui	a0,0x20
	blt	a5,a3,0x37b02 # __strftime_fmt_1+0x3bc>
	addi	a0,a0,38 # 0x20026 # luaV_execute+0x10be>
	j	0x377b2 # __strftime_fmt_1+0x6c>
	li	a5,1
	sd	a5,0(a1)
	auipc	s0,0x9
	addi	s0,s0,1728 # 0x41050 # __clzdi2+0x188>
	j	0x37788 # __strftime_fmt_1+0x42>
	lw	a4,16(s1)
	li	a3,2
	addiw	a4,a4,1
	bnez	a5,0x37844 # __strftime_fmt_1+0xfe>
	j	0x377fc # __strftime_fmt_1+0xb6>
	lw	a4,28(s1)
	li	a3,3
	addiw	a4,a4,1
	bnez	a5,0x37844 # __strftime_fmt_1+0xfe>
	j	0x377fc # __strftime_fmt_1+0xb6>
	li	a5,1
	sd	a5,0(a1)
	auipc	s0,0x11
	addi	s0,s0,354 # 0x48b18 # xdigits+0x78>
	j	0x37788 # __strftime_fmt_1+0x42>
	lw	a3,24(s1)
	li	a2,7
	lw	a4,28(s1)
	addiw	a3,a3,6
	remuw	a3,a3,a2
	addiw	a4,a4,7
	subw	a4,a4,a3
	divuw	a4,a4,a2
	li	a3,2
	slli	a4,a4,0x20
	srli	a4,a4,0x20
	bnez	a5,0x37844 # __strftime_fmt_1+0xfe>
	j	0x377fc # __strftime_fmt_1+0xb6>
	lw	a2,28(s1)
	lw	a1,24(s1)
	lw	a0,20(s1)
	sd	a5,0(sp)
	jal	ra,0x373b4 # week_num.isra.0>
	ld	a5,0(sp)
	mv	a4,a0
	li	a3,2
	bnez	a5,0x37844 # __strftime_fmt_1+0xfe>
	j	0x377fc # __strftime_fmt_1+0xb6>
	lw	a4,28(s1)
	lw	a3,24(s1)
	addiw	a4,a4,7
	subw	a4,a4,a3
	li	a3,7
	divuw	a4,a4,a3
	li	a3,2
	slli	a4,a4,0x20
	srli	a4,a4,0x20
	bnez	a5,0x37844 # __strftime_fmt_1+0xfe>
	j	0x377fc # __strftime_fmt_1+0xb6>
	auipc	a2,0x11
	addi	a2,a2,230 # 0x48af8 # xdigits+0x58>
	j	0x37930 # __strftime_fmt_1+0x1ea>
	lw	a4,0(s1)
	li	a3,2
	bnez	a5,0x37844 # __strftime_fmt_1+0xfe>
	j	0x377fc # __strftime_fmt_1+0xb6>
	auipc	a2,0x11
	addi	a2,a2,202 # 0x48af0 # xdigits+0x50>
	j	0x37930 # __strftime_fmt_1+0x1ea>
	lw	a4,4(s1)
	li	a3,2
	bnez	a5,0x37844 # __strftime_fmt_1+0xfe>
	j	0x377fc # __strftime_fmt_1+0xb6>
	lw	a4,8(s1)
	li	a3,2
	bnez	a5,0x37844 # __strftime_fmt_1+0xfe>
	j	0x377fc # __strftime_fmt_1+0xb6>
	lw	a4,20(s1)
	li	a0,100
	li	a3,2
	addi	a4,a4,1900
	div	a4,a4,a0
	bnez	a5,0x37844 # __strftime_fmt_1+0xfe>
	j	0x377fc # __strftime_fmt_1+0xb6>
	lw	a4,12(s1)
	li	a3,2
	bnez	a5,0x37844 # __strftime_fmt_1+0xfe>
	j	0x377fc # __strftime_fmt_1+0xb6>
	lui	a0,0x20
	addi	a0,a0,40 # 0x20028 # luaV_execute+0x10c0>
	j	0x37924 # __strftime_fmt_1+0x1de>
	lw	a5,16(s1)
	li	a3,11
	auipc	s0,0x11
	addi	s0,s0,102 # 0x48ad8 # xdigits+0x38>
	bltu	a3,a5,0x377ba # __strftime_fmt_1+0x74>
	lui	a0,0x20
	addiw	a0,a0,26
	addw	a0,a0,a5
	j	0x377b2 # __strftime_fmt_1+0x6c>
	lw	a5,24(s1)
	li	a3,6
	auipc	s0,0x11
	addi	s0,s0,76 # 0x48ad8 # xdigits+0x38>
	bltu	a3,a5,0x377ba # __strftime_fmt_1+0x74>
	lui	a0,0x20
	addiw	a0,a0,7
	addw	a0,a0,a5
	j	0x377b2 # __strftime_fmt_1+0x6c>
	auipc	a2,0x11
	addi	a2,a2,62 # 0x48ae0 # xdigits+0x40>
	j	0x37930 # __strftime_fmt_1+0x1ea>
	lui	a0,0x20
	addi	a0,a0,41 # 0x20029 # luaV_execute+0x10c1>
	j	0x37924 # __strftime_fmt_1+0x1de>
	lui	a0,0x20
	addi	a0,a0,43 # 0x2002b # luaV_execute+0x10c3>
	j	0x37924 # __strftime_fmt_1+0x1de>
	auipc	a2,0x11
	addi	a2,a2,72 # 0x48b08 # xdigits+0x68>
	j	0x37930 # __strftime_fmt_1+0x1ea>
	li	a2,95
	beq	a5,a2,0x3781a # __strftime_fmt_1+0xd4>
	j	0x377fc # __strftime_fmt_1+0xb6>
	li	a3,360
	ble	a2,a3,0x377f0 # __strftime_fmt_1+0xaa>
	lw	a1,24(s1)
	mv	a0,s4
	sd	a5,8(sp)
	sd	a4,0(sp)
	jal	ra,0x373b4 # week_num.isra.0>
	li	a3,1
	ld	a4,0(sp)
	ld	a5,8(sp)
	bne	a0,a3,0x377f0 # __strftime_fmt_1+0xaa>
	addi	a4,s4,1901
	j	0x377f0 # __strftime_fmt_1+0xaa>
	li	a3,2
	li	a4,12
	bnez	a5,0x37844 # __strftime_fmt_1+0xfe>
	j	0x377fc # __strftime_fmt_1+0xb6>
	addi	a0,a0,39
	j	0x377b2 # __strftime_fmt_1+0x6c>
	mv	a0,s1
	jal	ra,0x3d53a # __tm_to_tzname>
	mv	s0,a0
	j	0x377ba # __strftime_fmt_1+0x74>
	li	a3,100
	rem	a4,a4,a3
	li	a3,2
	bnez	a5,0x37844 # __strftime_fmt_1+0xfe>
	j	0x377fc # __strftime_fmt_1+0xb6>
	li	a3,2
	bnez	a5,0x37844 # __strftime_fmt_1+0xfe>
	j	0x377fc # __strftime_fmt_1+0xb6>

strftime:
	mv	a5,tp
	ld	a4,-48(a5)
	j	0x3747e # __strftime_l>

time:
	addi	sp,sp,-64
	sd	s1,40(sp)
	auipc	s1,0x15
	ld	s1,2024(s1) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	ld	a5,0(s1)
	sd	s0,48(sp)
	addi	a1,sp,8
	mv	s0,a0
	li	a0,0
	sd	ra,56(sp)
	sd	a5,24(sp)
	jal	ra,0x371ee # __clock_gettime>
	ld	a0,8(sp)
	beqz	s0,0x37b58 # time+0x24>
	sd	a0,0(s0)
	ld	a4,24(sp)
	ld	a5,0(s1)
	bne	a4,a5,0x37b6a # time+0x36>
	ld	ra,56(sp)
	ld	s0,48(sp)
	ld	s1,40(sp)
	addi	sp,sp,64
	ret
	jal	ra,0x37f18 # __stack_chk_fail>

__aio_close:
	ret

close:
	addi	sp,sp,-16
	sd	ra,8(sp)
	jal	ra,0x37b6e # __aio_close>
	mv	a1,a0
	li	a5,0
	li	a6,0
	li	a4,0
	li	a3,0
	li	a2,0
	li	a0,57
	jal	ra,0x37146 # __syscall_cp>
	sext.w	a0,a0
	li	a5,-4
	bne	a0,a5,0x37b96 # close+0x26>
	li	a0,0
	jal	ra,0x394da # __syscall_ret>
	ld	ra,8(sp)
	sext.w	a0,a0
	addi	sp,sp,16
	ret

__dup3:
	addi	sp,sp,-16
	sd	ra,8(sp)
	mv	a5,a0
	li	a4,-16
	li	a7,24
	mv	a0,a5
	ecall
	sext.w	a0,a0
	beq	a0,a4,0x37baa # __dup3+0x8>
	jal	ra,0x394da # __syscall_ret>
	ld	ra,8(sp)
	sext.w	a0,a0
	addi	sp,sp,16
	ret

isatty:
	addi	sp,sp,-32
	sd	s0,16(sp)
	auipc	s0,0x15
	ld	s0,1880(s0) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	ld	a5,0(s0)
	lui	a1,0x5
	sd	ra,24(sp)
	addi	a1,a1,1043 # 0x5413 # exit-0xad0d>
	sd	a5,8(sp)
	li	a7,29
	mv	a2,sp
	ecall
	jal	ra,0x394da # __syscall_ret>
	li	a4,1
	beqz	a0,0x37bfe # isatty+0x3a>
	jal	ra,0x2f900 # __errno_location>
	lw	a2,0(a0)
	li	a3,9
	li	a4,0
	beq	a2,a3,0x37bfe # isatty+0x3a>
	li	a3,25
	sw	a3,0(a0)
	ld	a3,8(sp)
	ld	a5,0(s0)
	bne	a3,a5,0x37c10 # isatty+0x4c>
	ld	ra,24(sp)
	ld	s0,16(sp)
	mv	a0,a4
	addi	sp,sp,32
	ret
	jal	ra,0x37f18 # __stack_chk_fail>

pipe2:
	beqz	a1,0x37c92 # pipe2+0x7e>
	addi	sp,sp,-32
	sd	s1,8(sp)
	sd	ra,24(sp)
	sd	s0,16(sp)
	mv	s1,a0
	li	a7,59
	ecall
	li	a5,-38
	sext.w	a0,a0
	beq	a0,a5,0x37c46 # pipe2+0x32>
	jal	ra,0x394da # __syscall_ret>
	sext.w	a5,a0
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	mv	a0,a5
	addi	sp,sp,32
	ret
	mv	a0,s1
	mv	s0,a1
	jal	ra,0x3d6fe # pipe>
	mv	a5,a0
	bnez	a0,0x37c3a # pipe2+0x26>
	srli	a4,s0,0x13
	andi	a4,a4,1
	beqz	a4,0x37c6c # pipe2+0x58>
	li	a7,25
	lw	a0,0(s1)
	li	a1,2
	li	a2,1
	ecall
	lw	a0,4(s1)
	ecall
	lui	a2,0x1
	addi	a2,a2,-2048 # 0x800 # exit-0xf920>
	and	s0,s0,a2
	beqz	s0,0x37c96 # pipe2+0x82>
	lw	a0,0(s1)
	li	a7,25
	li	a1,4
	ecall
	lw	a0,4(s1)
	ecall
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	mv	a0,a5
	addi	sp,sp,32
	ret
	j	0x3d6fe # pipe>
	ld	ra,24(sp)
	ld	s0,16(sp)
	li	a5,0
	ld	s1,8(sp)
	mv	a0,a5
	addi	sp,sp,32
	ret

__init_tp:
	addi	sp,sp,-16
	sd	s0,0(sp)
	sd	ra,8(sp)
	mv	s0,a0
	sd	a0,0(a0)
	addi	a0,a0,200
	jal	ra,0x3c344 # __set_thread_area>
	bltz	a0,0x37cf6 # __init_tp+0x52>
	beqz	a0,0x37cee # __init_tp+0x4a>
	li	a5,2
	sw	a5,40(s0)
	li	a7,96
	addi	a0,gp,1392 # 0x4e0f8 # __thread_list_lock>
	ecall
	addi	a5,s0,120
	addi	a4,gp,-1872 # 0x4d438 # __libc+0x38>
	sd	a5,120(s0)
	ld	a5,-1944(gp) # 0x4d3f0 # __sysinfo>
	sw	a0,32(s0)
	sd	a4,152(s0)
	sd	a5,24(s0)
	sd	s0,8(s0)
	sd	s0,16(s0)
	li	a0,0
	ld	ra,8(sp)
	ld	s0,0(sp)
	addi	sp,sp,16
	ret
	li	a5,1
	sb	a5,-1928(gp) # 0x4d400 # __libc>
	j	0x37cbc # __init_tp+0x18>
	li	a0,-1
	j	0x37ce6 # __init_tp+0x42>

__copy_tls:
	addi	sp,sp,-64
	sd	s5,8(sp)
	addi	s5,gp,-1928 # 0x4d400 # __libc>
	ld	a3,40(s5)
	ld	a5,24(s5)
	sd	s4,16(sp)
	ld	s4,32(s5)
	sd	s0,48(sp)
	li	a4,-200
	ld	s0,16(s5)
	addi	s4,s4,-1
	sub	a4,a4,a0
	addi	a5,a5,-8
	slli	a2,a3,0x3
	sd	s6,0(sp)
	and	s4,s4,a4
	sub	a5,a5,a2
	sd	ra,56(sp)
	sd	s1,40(sp)
	sd	s2,32(sp)
	sd	s3,24(sp)
	add	s4,s4,a0
	add	s6,a0,a5
	beqz	s0,0x37d6a # __copy_tls+0x70>
	lui	s3,0x1
	addi	s2,s4,200
	addi	s1,s6,8
	addi	s3,s3,-2048 # 0x800 # exit-0xf920>
	ld	a5,40(s0)
	addi	s1,s1,8
	ld	a1,8(s0)
	add	a5,a5,s2
	add	a5,a5,s3
	sd	a5,-8(s1)
	ld	a0,40(s0)
	ld	a2,16(s0)
	add	a0,a0,s2
	jal	ra,0x3632a # memcpy>
	ld	s0,0(s0)
	bnez	s0,0x37d4a # __copy_tls+0x50>
	ld	a3,40(s5)
	ld	ra,56(sp)
	ld	s0,48(sp)
	sd	a3,0(s6)
	sd	s6,192(s4)
	ld	s1,40(sp)
	ld	s2,32(sp)
	ld	s3,24(sp)
	ld	s5,8(sp)
	ld	s6,0(sp)
	mv	a0,s4
	ld	s4,16(sp)
	addi	sp,sp,64
	ret

__init_tls:
	ld	a3,40(a0)
	addi	sp,sp,-16
	sd	ra,8(sp)
	sd	s0,0(sp)
	ld	t6,24(a0)
	beqz	a3,0x37ebc # __init_tls+0x134>
	auipc	ra,0x15
	addi	ra,ra,1356 # 0x4d2e4 # __default_stacksize>
	lui	t5,0x6474e
	lw	t1,0(ra)
	ld	a0,32(a0)
	mv	a5,t6
	li	t2,0
	li	a2,0
	li	a6,0
	li	a1,6
	li	a7,2
	auipc	t3,0x15
	ld	t3,1394(t3) # 0x4d328 # _GLOBAL_OFFSET_TABLE_+0x20>
	li	t0,7
	addi	t5,t5,1361 # 0x6474e551 # __BSS_END__+0x647001c9>
	lui	s0,0x800
	j	0x37dda # __init_tls+0x52>
	beq	a4,a7,0x37ea0 # __init_tls+0x118>
	bne	a4,t0,0x37e7e # __init_tls+0xf6>
	mv	a6,a5
	addi	a3,a3,-1
	add	a5,a5,a0
	beqz	a3,0x37dec # __init_tls+0x64>
	lw	a4,0(a5)
	bne	a4,a1,0x37dca # __init_tls+0x42>
	ld	a2,16(a5)
	addi	a3,a3,-1
	add	a5,a5,a0
	sub	a2,t6,a2
	bnez	a3,0x37dda # __init_tls+0x52>
	beqz	t2,0x37df4 # __init_tls+0x6c>
	sw	t1,0(ra)
	beqz	a6,0x37ebc # __init_tls+0x134>
	ld	a1,16(a6)
	ld	a5,32(a6)
	ld	a3,48(a6)
	addi	a4,gp,1736 # 0x4e250 # main_tls>
	addi	a0,gp,-1928 # 0x4d400 # __libc>
	add	a2,a2,a1
	sd	a5,16(a4)
	li	a5,1
	ld	a6,40(a6)
	sd	a2,8(a4)
	sd	a3,32(a4)
	sd	a5,40(a0)
	sd	a4,16(a0)
	add	a5,a6,a2
	addi	a1,a3,-1
	neg	a5,a5
	and	a5,a5,a1
	and	a2,a2,a1
	add	a5,a5,a6
	sd	a5,24(a4)
	sd	a2,40(a4)
	li	a1,7
	bleu	a3,a1,0x37eac # __init_tls+0x124>
	addi	a4,a3,223
	add	a1,a5,a2
	add	a1,a1,a4
	andi	a1,a1,-8
	sd	a3,32(a0)
	sd	a1,24(a0)
	li	a5,336
	addi	a0,gp,1400 # 0x4e100 # builtin_tls>
	bleu	a1,a5,0x37e6a # __init_tls+0xe2>
	li	a7,222
	li	a0,0
	li	a2,3
	li	a3,34
	li	a4,-1
	li	a5,0
	ecall
	jal	ra,0x37cfa # __copy_tls>
	jal	ra,0x37ca4 # __init_tp>
	bltz	a0,0x37eb6 # __init_tls+0x12e>
	ld	ra,8(sp)
	ld	s0,0(sp)
	addi	sp,sp,16
	ret
	bne	a4,t5,0x37dd4 # __init_tls+0x4c>
	ld	a4,40(a5)
	slli	t4,t1,0x20
	srli	t4,t4,0x20
	bleu	a4,t4,0x37dd4 # __init_tls+0x4c>
	bleu	a4,s0,0x37e98 # __init_tls+0x110>
	lui	a4,0x800
	sext.w	t1,a4
	li	t2,1
	j	0x37dd4 # __init_tls+0x4c>
	beqz	t3,0x37dd4 # __init_tls+0x4c>
	ld	a2,16(a5)
	sub	a2,t3,a2
	j	0x37dd4 # __init_tls+0x4c>
	li	a3,8
	sd	a3,32(a4)
	li	a4,231
	j	0x37e3e # __init_tls+0xb6>
	sb	zero,0(zero) # 0x0 # exit-0x10120>
	ebreak
	addi	a4,gp,1736 # 0x4e250 # main_tls>
	ld	a6,24(a4) # 0x800018 # __BSS_END__+0x7b1c90>
	ld	a2,8(a4)
	ld	a3,32(a4)
	addi	a0,gp,-1928 # 0x4d400 # __libc>
	j	0x37e1e # __init_tls+0x96>

__init_ssp:
	beqz	a0,0x37efa # __init_ssp+0x2c>
	addi	sp,sp,-16
	mv	a1,a0
	li	a2,8
	auipc	a0,0x15
	ld	a0,1098(a0) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	sd	ra,8(sp)
	jal	ra,0x3632a # memcpy>
	auipc	a5,0x15
	ld	a5,1084(a5) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	ld	a5,0(a5)
	mv	a4,tp
	ld	ra,8(sp)
	sd	a5,-16(a4)
	addi	sp,sp,16
	ret
	lui	a5,0x41c65
	auipc	a4,0x15
	ld	a4,1058(a4) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	addi	a5,a5,-403 # 0x41c64e6d # __BSS_END__+0x41c16ae5>
	mul	a5,a4,a5
	sd	a5,0(a4)
	mv	a4,tp
	sd	a5,-16(a4)
	ret

__stack_chk_fail:
	sb	zero,0(zero) # 0x0 # exit-0x10120>
	ebreak

_Exit:
	mv	a5,a0
	li	a7,94
	ecall
	li	a7,93
	mv	a0,a5
	ecall
	j	0x37f28 # _Exit+0xa>

fcntl:
	addi	sp,sp,-96
	sd	s0,32(sp)
	auipc	s0,0x15
	ld	s0,1000(s0) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	ld	t3,0(s0)
	sd	a5,72(sp)
	addi	a5,sp,48
	sd	a3,56(sp)
	sd	t3,24(sp)
	sd	a5,8(sp)
	sd	ra,40(sp)
	sd	a2,48(sp)
	sd	a4,64(sp)
	sd	a6,80(sp)
	sd	a7,88(sp)
	li	a5,4
	mv	t1,a1
	mv	t3,a0
	mv	a3,a2
	beq	a1,a5,0x37fd0 # fcntl+0x9c>
	li	a4,7
	beq	a1,a4,0x3801e # fcntl+0xea>
	li	a4,9
	beq	a1,a4,0x37fac # fcntl+0x78>
	li	a4,1030
	bne	a1,a4,0x37fd6 # fcntl+0xa2>
	li	a7,25
	ecall
	li	a4,-22
	sext.w	a5,a0
	bne	a5,a4,0x38006 # fcntl+0xd2>
	mv	a0,t3
	li	a2,0
	ecall
	sext.w	a0,a0
	beq	a0,a5,0x37ff8 # fcntl+0xc4>
	bltz	a0,0x37fa2 # fcntl+0x6e>
	li	a7,57
	ecall
	li	a0,-22
	jal	ra,0x394da # __syscall_ret>
	sext.w	a0,a0
	j	0x37fe8 # fcntl+0xb4>
	li	a7,25
	li	a1,16
	addi	a2,sp,16
	ecall
	li	a5,-22
	sext.w	a0,a0
	beq	a0,a5,0x38036 # fcntl+0x102>
	bnez	a0,0x37fe2 # fcntl+0xae>
	lw	a4,16(sp)
	li	a5,2
	lw	a0,20(sp)
	bne	a4,a5,0x37fe8 # fcntl+0xb4>
	negw	a0,a0
	j	0x37fe8 # fcntl+0xb4>
	lui	a5,0x8
	or	a3,a2,a5
	mv	a0,t3
	mv	a1,t1
	mv	a2,a3
	li	a7,25
	ecall
	jal	ra,0x394da # __syscall_ret>
	sext.w	a0,a0
	ld	a4,24(sp)
	ld	a5,0(s0)
	bne	a4,a5,0x38044 # fcntl+0x110>
	ld	ra,40(sp)
	ld	s0,32(sp)
	addi	sp,sp,96
	ret
	mv	a0,t3
	li	a1,0
	mv	a2,a3
	ecall
	sext.w	a5,a0
	bltz	a5,0x38014 # fcntl+0xe0>
	mv	a0,a5
	li	a1,2
	li	a2,1
	ecall
	mv	a0,a5
	jal	ra,0x394da # __syscall_ret>
	sext.w	a0,a0
	j	0x37fe8 # fcntl+0xb4>
	mv	a1,a0
	li	a6,0
	li	a5,0
	li	a4,0
	li	a2,7
	li	a0,25
	jal	ra,0x37146 # __syscall_cp>
	jal	ra,0x394da # __syscall_ret>
	sext.w	a0,a0
	j	0x37fe8 # fcntl+0xb4>
	mv	a0,t3
	li	a1,9
	mv	a2,a3
	ecall
	sext.w	a0,a0
	j	0x37fe8 # fcntl+0xb4>
	jal	ra,0x37f18 # __stack_chk_fail>

scanexp:
	ld	a5,8(a0)
	ld	a4,184(a0)
	addi	sp,sp,-64
	sd	s0,48(sp)
	sd	s2,32(sp)
	sd	ra,56(sp)
	sd	s1,40(sp)
	sd	s3,24(sp)
	sd	s4,16(sp)
	sd	s5,8(sp)
	mv	s0,a0
	mv	s2,a1
	beq	a5,a4,0x381ac # scanexp+0x164>
	addi	a4,a5,1 # 0x8001 # exit-0x811f>
	sd	a4,8(a0)
	lbu	s3,0(a5)
	addiw	a5,s3,-43
	andi	a5,a5,-3
	sext.w	a5,a5
	beqz	a5,0x3813c # scanexp+0xf4>
	addiw	a5,s3,-48
	li	a4,9
	bltu	a4,a5,0x381ba # scanexp+0x172>
	li	s2,0
	lui	s4,0xcccd
	li	s1,0
	li	s5,9
	addi	s4,s4,-821 # 0xccccccb # __BSS_END__+0xcc7e943>
	j	0x380a4 # scanexp+0x5c>
	sd	a3,8(s0)
	lbu	s3,0(a4)
	addiw	a5,s3,-48
	bltu	s5,a5,0x380d2 # scanexp+0x8a>
	blt	s4,s1,0x380fa # scanexp+0xb2>
	slliw	a5,s1,0x2
	addw	s1,s1,a5
	ld	a4,8(s0)
	ld	a5,184(s0)
	slliw	s1,s1,0x1
	addw	s1,s1,s3
	addi	a3,a4,1
	addiw	s1,s1,-48
	bne	a4,a5,0x38092 # scanexp+0x4a>
	mv	a0,s0
	jal	ra,0x39468 # __shgetc>
	mv	s3,a0
	addiw	a5,s3,-48
	bleu	a5,s5,0x380a0 # scanexp+0x58>
	ld	a5,192(s0)
	bltz	a5,0x380de # scanexp+0x96>
	ld	a5,8(s0)
	addi	a5,a5,-1
	sd	a5,8(s0)
	beqz	s2,0x380e6 # scanexp+0x9e>
	neg	s1,s1
	ld	ra,56(sp)
	ld	s0,48(sp)
	ld	s2,32(sp)
	ld	s3,24(sp)
	ld	s4,16(sp)
	ld	s5,8(sp)
	mv	a0,s1
	ld	s1,40(sp)
	addi	sp,sp,64
	ret
	li	s4,9
	auipc	s5,0x11
	ld	s5,-1108(s5) # 0x48ca8 # xdigits+0x208>
	j	0x38118 # scanexp+0xd0>
	sd	a3,8(s0)
	lbu	s3,0(a4)
	addiw	a5,s3,-48
	bltu	s4,a5,0x380d2 # scanexp+0x8a>
	blt	s5,s1,0x38164 # scanexp+0x11c>
	slli	a5,s1,0x2
	add	s1,s1,a5
	ld	a4,8(s0)
	ld	a5,184(s0)
	slli	s1,s1,0x1
	add	s1,s1,s3
	addi	a3,a4,1
	addi	s1,s1,-48
	bne	a4,a5,0x38106 # scanexp+0xbe>
	mv	a0,s0
	jal	ra,0x39468 # __shgetc>
	mv	s3,a0
	j	0x3810c # scanexp+0xc4>
	ld	a5,8(s0)
	ld	a4,184(s0)
	beq	a5,a4,0x381a4 # scanexp+0x15c>
	addi	a4,a5,1
	sd	a4,8(s0)
	lbu	a0,0(a5)
	addiw	a5,a0,-48
	li	a4,9
	bltu	a4,a5,0x3818a # scanexp+0x142>
	addi	s1,s3,-45
	seqz	s2,s1
	mv	s3,a0
	j	0x38084 # scanexp+0x3c>
	li	s3,9
	j	0x38176 # scanexp+0x12e>
	sd	a3,8(s0)
	lbu	a0,0(a5)
	addiw	a0,a0,-48
	bltu	s3,a0,0x380d2 # scanexp+0x8a>
	ld	a5,8(s0)
	ld	a4,184(s0)
	addi	a3,a5,1
	bne	a5,a4,0x38168 # scanexp+0x120>
	mv	a0,s0
	jal	ra,0x39468 # __shgetc>
	j	0x3816e # scanexp+0x126>
	ld	a5,192(s0)
	beqz	s2,0x381bc # scanexp+0x174>
	bltz	a5,0x381b4 # scanexp+0x16c>
	ld	a5,8(s0)
	addi	a5,a5,-1
	sd	a5,8(s0)
	addi	a5,a5,-1
	li	s1,-1
	sd	a5,8(s0)
	slli	s1,s1,0x3f
	j	0x380e6 # scanexp+0x9e>
	mv	a0,s0
	jal	ra,0x39468 # __shgetc>
	j	0x3814e # scanexp+0x106>
	jal	ra,0x39468 # __shgetc>
	mv	s3,a0
	j	0x3806e # scanexp+0x26>
	li	s1,-1
	slli	s1,s1,0x3f
	j	0x380e6 # scanexp+0x9e>
	ld	a5,192(s0)
	li	s1,-1
	slli	s1,s1,0x3f
	bltz	a5,0x380e6 # scanexp+0x9e>
	ld	a5,8(s0)
	j	0x3819a # scanexp+0x152>

decfloat:
	addi	sp,sp,-208
	sd	s0,192(sp)
	lui	t0,0xffffe
	auipc	s0,0x15
	ld	s0,338(s0) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	ld	a6,0(s0)
	sd	s1,184(sp)
	sd	s4,160(sp)
	sd	ra,200(sp)
	sd	s2,176(sp)
	sd	s3,168(sp)
	sd	s5,152(sp)
	sd	s6,144(sp)
	sd	s7,136(sp)
	sd	s8,128(sp)
	sd	s9,120(sp)
	sd	s10,112(sp)
	sd	s11,104(sp)
	fsd	fs0,88(sp)
	lui	s0,0x2
	add	sp,sp,t0
	addi	s0,s0,8
	addi	s1,sp,64
	add	s0,s0,s1
	sd	a6,0(s0) # 0x2000 # exit-0xe120>
	sd	a2,16(sp)
	li	a6,48
	sd	a3,0(sp)
	sd	a4,8(sp)
	sd	a5,24(sp)
	mv	s4,a0
	bne	a1,a6,0x38a74 # decfloat+0x8ac>
	li	s5,48
	ld	a5,8(s4)
	ld	a4,184(s4)
	beq	a5,a4,0x38450 # decfloat+0x288>
	addi	a4,a5,1
	sd	a4,8(s4)
	lbu	a1,0(a5)
	beq	a1,s5,0x38218 # decfloat+0x50>
	li	s6,1
	li	a5,46
	li	s1,0
	li	s10,0
	beq	a1,a5,0x384d0 # decfloat+0x308>
	lui	a5,0x2
	addi	a5,a5,16
	addi	a4,sp,64
	lui	t1,0xffffe
	add	a5,a5,a4
	add	t1,t1,a5
	lui	s5,0x4
	sw	zero,-8(t1) # 0xffffffffffffdff8 # __BSS_END__+0xfffffffffffafc70>
	li	s11,0
	li	s7,0
	li	s8,0
	li	s2,0
	li	s9,9
	li	a2,46
	li	s3,2044
	addi	s5,s5,2012 # 0x47dc # exit-0xb944>
	mv	s0,t1
	addiw	a4,a1,-48
	mv	a5,a4
	bleu	a4,s9,0x382a4 # decfloat+0xdc>
	bne	a1,a2,0x38300 # decfloat+0x138>
	bnez	s1,0x384b8 # decfloat+0x2f0>
	mv	s10,s7
	li	s1,1
	ld	a4,8(s4)
	ld	a3,184(s4)
	beq	a4,a3,0x382f2 # decfloat+0x12a>
	addi	a3,a4,1
	sd	a3,8(s4)
	lbu	a1,0(a4)
	addiw	a4,a1,-48
	mv	a5,a4
	bltu	s9,a4,0x38276 # decfloat+0xae>
	beq	a1,a2,0x3827a # decfloat+0xb2>
	addi	s7,s7,1
	blt	s3,s8,0x3841e # decfloat+0x256>
	li	a4,48
	beq	a1,a4,0x382ba # decfloat+0xf2>
	sext.w	s11,s7
	addiw	a1,s2,1
	beqz	s2,0x38440 # decfloat+0x278>
	slli	a3,s8,0x2
	add	a3,a3,s0
	lw	a0,-8(a3)
	slliw	a4,a0,0x2
	addw	a4,a4,a0
	slliw	a4,a4,0x1
	addw	a5,a5,a4
	sw	a5,-8(a3)
	bne	a1,s9,0x3845e # decfloat+0x296>
	ld	a4,8(s4)
	ld	a3,184(s4)
	addiw	s8,s8,1
	li	s6,1
	li	s2,0
	bne	a4,a3,0x3828e # decfloat+0xc6>
	mv	a0,s4
	jal	ra,0x39468 # __shgetc>
	mv	a1,a0
	li	a2,46
	j	0x3826c # decfloat+0xa4>
	bnez	s1,0x38304 # decfloat+0x13c>
	mv	s10,s7
	beqz	s6,0x38464 # decfloat+0x29c>
	ori	a5,a1,32
	sext.w	a5,a5
	li	a4,101
	beq	a5,a4,0x385de # decfloat+0x416>
	bltz	a1,0x38322 # decfloat+0x15a>
	ld	a5,192(s4)
	bgez	a5,0x38bd8 # decfloat+0xa10>
	lui	a4,0x2
	addi	a4,a4,16
	addi	a3,sp,64
	lui	a5,0xffffe
	add	a4,a4,a3
	add	a5,a5,a4
	lw	s4,-8(a5) # 0xffffffffffffdff8 # __BSS_END__+0xfffffffffffafc70>
	beqz	s4,0x3852a # decfloat+0x362>
	beq	s7,s10,0x38a18 # decfloat+0x850>
	ld	a0,8(sp)
	jal	ra,0x406ee # __floatsitf>
	ld	a4,0(sp)
	mv	s3,a0
	mv	s5,a1
	srliw	a5,a4,0x1f
	addw	a5,a5,a4
	sraiw	a5,a5,0x1
	negw	a5,a5
	blt	a5,s10,0x38a4c # decfloat+0x884>
	ld	a5,0(sp)
	addiw	a5,a5,-226
	blt	s10,a5,0x38a7a # decfloat+0x8b2>
	beqz	s2,0x383a8 # decfloat+0x1e0>
	li	a5,8
	blt	a5,s2,0x383a6 # decfloat+0x1de>
	lui	a4,0x2
	addi	a3,sp,64
	addi	a4,a4,16
	add	a4,a4,a3
	lui	a5,0xffffe
	slli	a2,s8,0x2
	add	a5,a5,a4
	add	a5,a5,a2
	lw	a5,-8(a5) # 0xffffffffffffdff8 # __BSS_END__+0xfffffffffffafc70>
	li	a3,9
	slliw	a4,a5,0x2
	addw	a5,a5,a4
	addiw	s2,s2,1
	slliw	a5,a5,0x1
	bne	s2,a3,0x38384 # decfloat+0x1bc>
	lui	a3,0x2
	addi	a3,a3,16
	addi	a1,sp,64
	lui	a4,0xffffe
	add	a3,a3,a1
	add	a4,a4,a3
	add	a4,a4,a2
	sw	a5,-8(a4) # 0xffffffffffffdff8 # __BSS_END__+0xfffffffffffafc70>
	addiw	s8,s8,1
	li	a5,8
	sext.w	s9,s10
	blt	a5,s11,0x3853e # decfloat+0x376>
	blt	s9,s11,0x3853e # decfloat+0x376>
	li	a4,17
	blt	a4,s9,0x3853e # decfloat+0x376>
	lui	a2,0x2
	addi	a2,a2,16
	addi	a1,sp,64
	lui	a4,0xffffe
	add	a2,a2,a1
	add	a4,a4,a2
	li	a3,9
	lw	s6,-8(a4) # 0xffffffffffffdff8 # __BSS_END__+0xfffffffffffafc70>
	beq	s9,a3,0x38c52 # decfloat+0xa8a>
	ble	s9,a5,0x38bee # decfloat+0xa26>
	addiw	a5,s9,-9
	slliw	a4,a5,0x2
	subw	a5,a5,a4
	ld	a4,16(sp)
	addw	a5,a5,a4
	li	a4,30
	blt	a4,a5,0x383f2 # decfloat+0x22a>
	srlw	a5,s6,a5
	bnez	a5,0x3853e # decfloat+0x376>
	addiw	a5,s9,-10
	slli	a4,a5,0x2
	auipc	a5,0x11
	addi	a5,a5,-1746 # 0x48d28 # p10s.1>
	add	a5,a5,a4
	lw	a0,0(a5)
	jal	ra,0x406ee # __floatsitf>
	mv	s1,a0
	mv	a0,s6
	mv	s0,a1
	jal	ra,0x4074e # __floatunsitf>
	mv	a2,s3
	mv	a3,s5
	jal	ra,0x3f4ca # __multf3>
	j	0x38a3e # decfloat+0x876>
	li	a5,48
	beq	a1,a5,0x38282 # decfloat+0xba>
	lui	a4,0x2
	addi	a5,a4,-8 # 0x1ff8 # exit-0xe128>
	addi	a3,sp,64
	add	a5,a5,a3
	lw	a5,0(a5)
	addi	a4,a4,-8
	add	a4,a4,a3
	ori	a5,a5,1
	mv	s11,s5
	sw	a5,0(a4)
	j	0x38282 # decfloat+0xba>
	slli	a4,s8,0x2
	add	a4,a4,s0
	sw	a5,-8(a4)
	li	s6,1
	li	s2,1
	j	0x38282 # decfloat+0xba>
	mv	a0,s4
	jal	ra,0x39468 # __shgetc>
	mv	a1,a0
	beq	a1,s5,0x38218 # decfloat+0x50>
	j	0x38234 # decfloat+0x6c>
	mv	s2,a1
	li	s6,1
	j	0x38282 # decfloat+0xba>
	bgez	a1,0x384bc # decfloat+0x2f4>
	jal	ra,0x2f900 # __errno_location>
	li	a5,22
	sw	a5,0(a0)
	li	a1,0
	mv	a0,s4
	jal	ra,0x3944a # __shlim>
	li	a0,0
	li	a1,0
	lui	a5,0x2
	addi	a4,sp,64
	addi	a5,a5,8
	add	a5,a5,a4
	ld	a4,0(a5)
	auipc	a5,0x15
	ld	a5,-358(a5) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	ld	a5,0(a5)
	bne	a4,a5,0x38c64 # decfloat+0xa9c>
	lui	t0,0x2
	add	sp,sp,t0
	ld	ra,200(sp)
	ld	s0,192(sp)
	ld	s1,184(sp)
	ld	s2,176(sp)
	ld	s3,168(sp)
	ld	s4,160(sp)
	ld	s5,152(sp)
	ld	s6,144(sp)
	ld	s7,136(sp)
	ld	s8,128(sp)
	ld	s9,120(sp)
	ld	s10,112(sp)
	ld	s11,104(sp)
	fld	fs0,88(sp)
	addi	sp,sp,208
	ret
	bnez	s6,0x3831a # decfloat+0x152>
	ld	a5,192(s4)
	bltz	a5,0x38468 # decfloat+0x2a0>
	ld	a5,8(s4)
	addi	a5,a5,-1
	sd	a5,8(s4)
	j	0x38468 # decfloat+0x2a0>
	ld	a5,8(s4)
	ld	a4,184(s4)
	beq	a5,a4,0x38adc # decfloat+0x914>
	addi	a4,a5,1
	sd	a4,8(s4)
	lbu	a1,0(a5)
	li	a5,48
	li	s10,0
	li	s5,48
	li	s1,1
	bne	a1,a5,0x38242 # decfloat+0x7a>
	ld	a5,8(s4)
	ld	a4,184(s4)
	addi	s10,s10,-1
	beq	a5,a4,0x3851c # decfloat+0x354>
	addi	a4,a5,1
	sd	a4,8(s4)
	lbu	a1,0(a5)
	beq	a1,s5,0x384f8 # decfloat+0x330>
	li	s1,1
	li	s6,1
	j	0x38242 # decfloat+0x7a>
	mv	a0,s4
	jal	ra,0x39468 # __shgetc>
	mv	a1,a0
	beq	a1,s5,0x384f8 # decfloat+0x330>
	j	0x38516 # decfloat+0x34e>
	ld	a5,8(sp)
	fmv.d.x	fa5,zero
	fcvt.d.w	fa0,a5
	fmul.d	fa0,fa0,fa5
	jal	ra,0x40874 # __extenddftf2>
	j	0x3847c # decfloat+0x2b4>
	lui	a3,0x2
	lui	a5,0xffffe
	addi	a3,a3,16
	addi	a2,sp,64
	slli	a4,s8,0x2
	addi	a5,a5,-8
	add	a3,a3,a2
	add	a5,a5,a3
	addi	a4,a4,-4
	add	a5,a5,a4
	lw	a4,0(a5)
	mv	s7,s8
	addi	a5,a5,-4
	addiw	s8,s8,-1
	beqz	a4,0x38554 # decfloat+0x38c>
	li	a5,9
	remw	s6,s9,a5
	beqz	s6,0x38616 # decfloat+0x44e>
	bgez	s10,0x3856e # decfloat+0x3a6>
	addiw	s6,s6,9
	li	a5,8
	subw	a5,a5,s6
	slli	a5,a5,0x2
	auipc	a4,0x10
	addi	a4,a4,1970 # 0x48d28 # p10s.1>
	add	a5,a5,a4
	lw	a0,0(a5)
	beqz	s7,0x38c28 # decfloat+0xa60>
	lui	a5,0x2
	lui	t1,0x3b9ad
	lui	a3,0xffffe
	addi	a5,a5,16
	addi	a4,sp,64
	addiw	t1,t1,-1536
	addi	a3,a3,-8
	add	a5,a5,a4
	divw	t1,t1,a0
	add	a3,a3,a5
	sext.w	a0,a0
	li	a6,0
	li	a7,0
	li	a2,0
	j	0x385b4 # decfloat+0x3ec>
	sext.w	a2,a1
	addi	a3,a3,4
	beq	s7,a2,0x385f2 # decfloat+0x42a>
	lw	a4,0(a3)
	addiw	a1,a2,1
	divuw	a5,a4,a0
	remuw	a4,a4,a0
	addw	a5,a5,a6
	sw	a5,0(a3)
	mulw	a6,a4,t1
	bne	a2,a7,0x385aa # decfloat+0x3e2>
	addiw	a1,a7,1
	bnez	a5,0x385aa # decfloat+0x3e2>
	andi	a7,a1,2047
	addiw	s9,s9,-9
	j	0x385aa # decfloat+0x3e2>
	ld	a1,24(sp)
	mv	a0,s4
	jal	ra,0x38048 # scanexp>
	li	a5,-1
	slli	a5,a5,0x3f
	beq	a0,a5,0x38bca # decfloat+0xa02>
	add	s10,s10,a0
	j	0x38322 # decfloat+0x15a>
	beqz	a6,0x3860e # decfloat+0x446>
	lui	a3,0x2
	addi	a3,a3,16
	addi	a2,sp,64
	lui	a5,0xffffe
	add	a3,a3,a2
	slli	a4,s7,0x2
	add	a5,a5,a3
	add	a5,a5,a4
	sw	a6,-8(a5) # 0xffffffffffffdff8 # __BSS_END__+0xfffffffffffafc70>
	addiw	s7,s7,1
	subw	s9,s9,s6
	addiw	s9,s9,9
	mv	s6,a7
	lui	a5,0x2
	addi	a5,a5,16
	addi	a4,sp,64
	lui	a0,0xffffe
	add	a5,a5,a4
	lui	t3,0x9e7
	lui	a6,0x3b9ad
	li	s2,0
	li	t1,35
	li	t4,36
	add	a0,a0,a5
	addi	t3,t3,1232 # 0x9e74d0 # __BSS_END__+0x999148>
	addi	a6,a6,-1536 # 0x3b9aca00 # __BSS_END__+0x3b95e678>
	ble	s9,t1,0x38652 # decfloat+0x48a>
	bne	s9,t4,0x3871a # decfloat+0x552>
	slli	a5,s6,0x2
	add	a5,a5,a0
	lw	a5,-8(a5) # 0x1ff8 # exit-0xe128>
	bltu	t3,a5,0x3871a # decfloat+0x552>
	addiw	a7,s7,-1
	addiw	s2,s2,-29
	andi	a3,a7,2047
	li	a2,0
	slli	a1,a3,0x2
	add	a5,a0,a1
	lwu	a5,-8(a5)
	slli	a2,a2,0x20
	srli	a2,a2,0x20
	slli	a5,a5,0x1d
	add	a5,a5,a2
	bleu	a5,a6,0x386b2 # decfloat+0x4ea>
	divu	a2,a5,a6
	add	a1,a1,a0
	remu	a5,a5,a6
	sext.w	a2,a2
	sext.w	a5,a5
	sw	a5,-8(a1)
	andi	a1,a7,2047
	beq	a1,a3,0x386c4 # decfloat+0x4fc>
	beq	a3,s6,0x386dc # decfloat+0x514>
	addiw	a3,a3,-1
	andi	a3,a3,2047
	slli	a1,a3,0x2
	add	a5,a0,a1
	lwu	a5,-8(a5)
	slli	a2,a2,0x20
	srli	a2,a2,0x20
	slli	a5,a5,0x1d
	add	a5,a5,a2
	bltu	a6,a5,0x38676 # decfloat+0x4ae>
	add	a1,a1,a0
	sext.w	a5,a5
	sw	a5,-8(a1)
	andi	a1,a7,2047
	li	a2,0
	bne	a1,a3,0x38690 # decfloat+0x4c8>
	beq	a3,s6,0x386dc # decfloat+0x514>
	addiw	a1,a3,-1
	andi	a1,a1,2047
	bnez	a5,0x386d8 # decfloat+0x510>
	mv	s7,a3
	addiw	a7,a3,-1
	mv	a3,a1
	j	0x3865e # decfloat+0x496>
	beqz	a2,0x3863c # decfloat+0x474>
	addiw	s6,s6,-1
	andi	s6,s6,2047
	addiw	s9,s9,9
	bne	s7,s6,0x3870e # decfloat+0x546>
	addiw	a5,a1,-1
	andi	a5,a5,2047
	slli	a5,a5,0x2
	slli	a7,a1,0x2
	add	a5,a5,a0
	add	a7,a7,a0
	lw	a3,-8(a5)
	lw	a7,-8(a7)
	mv	s7,a1
	or	a3,a3,a7
	sw	a3,-8(a5)
	slli	a5,s6,0x2
	add	a5,a5,a0
	sw	a2,-8(a5)
	j	0x3863c # decfloat+0x474>
	lui	a5,0x2
	addi	a5,a5,16
	addi	a4,sp,64
	lui	a0,0xffffe
	add	a5,a5,a4
	lui	t3,0x3b9ad
	sext.w	s8,s6
	auipc	a6,0x10
	addi	a6,a6,1580 # 0x48d58 # th.0+0x10>
	add	a0,a0,a5
	li	t5,36
	li	t1,45
	li	t4,1
	addiw	t3,t3,-1536
	mv	s4,s8
	auipc	a3,0x10
	addi	a3,a3,1538 # 0x48d48 # th.0>
	mv	a2,s8
	andi	a5,a2,2047
	beq	s7,a5,0x38772 # decfloat+0x5aa>
	slli	a5,a5,0x2
	add	a5,a5,a0
	lw	a1,-8(a5) # 0x1ff8 # exit-0xe128>
	lw	a5,0(a3)
	bltu	a1,a5,0x38772 # decfloat+0x5aa>
	bltu	a5,a1,0x38776 # decfloat+0x5ae>
	addi	a3,a3,4
	addiw	a2,a2,1
	bne	a6,a3,0x38750 # decfloat+0x588>
	beq	s9,t5,0x38812 # decfloat+0x64a>
	li	t6,1
	ble	s9,t1,0x3877e # decfloat+0x5b6>
	li	t6,9
	addw	s2,s2,t6
	beq	s6,s7,0x38744 # decfloat+0x57c>
	sllw	t0,t4,t6
	addiw	t0,t0,-1
	sraw	t2,t3,t6
	mv	a3,s6
	li	s10,0
	j	0x3879e # decfloat+0x5d6>
	andi	a3,a7,2047
	beq	s7,a3,0x387d8 # decfloat+0x610>
	slli	a1,a3,0x2
	add	a1,a1,a0
	lw	a2,-8(a1)
	addiw	a7,a3,1
	srlw	a5,a2,t6
	addw	a5,a5,s10
	and	a2,a2,t0
	sw	a5,-8(a1)
	mulw	s10,a2,t2
	bne	a3,s6,0x38796 # decfloat+0x5ce>
	addiw	a7,s6,1
	bnez	a5,0x38796 # decfloat+0x5ce>
	andi	a3,a7,2047
	andi	s6,a7,2047
	addiw	s9,s9,-9
	bne	s7,a3,0x3879e # decfloat+0x5d6>
	sext.w	s8,s6
	beqz	s10,0x38744 # decfloat+0x57c>
	addiw	a5,s7,1
	andi	a5,a5,2047
	beq	a5,s6,0x387f8 # decfloat+0x630>
	slli	s7,s7,0x2
	add	s7,s7,a0
	sw	s10,-8(s7)
	mv	s7,a5
	j	0x38744 # decfloat+0x57c>
	addiw	a5,s7,-1
	andi	a5,a5,2047
	slli	a5,a5,0x2
	add	a5,a5,a0
	lw	a3,-8(a5)
	ori	a3,a3,1
	sw	a3,-8(a5)
	j	0x38744 # decfloat+0x57c>
	auipc	a5,0x10
	addi	a5,a5,174 # 0x488c0 # app_mask+0x228>
	ld	s11,0(a5)
	ld	s10,8(a5)
	lui	a5,0x2
	addi	a5,a5,16
	addi	a4,sp,64
	lui	s9,0xffffe
	add	a5,a5,a4
	addiw	s8,s8,4
	li	t1,0
	li	a6,0
	add	s9,s9,a5
	andi	s0,s4,2047
	bne	s0,s7,0x3884e # decfloat+0x686>
	addiw	s7,s7,1
	andi	s7,s7,2047
	addiw	a3,s7,-1
	slli	a3,a3,0x2
	add	a3,a3,s9
	sw	zero,-8(a3)
	mv	a0,t1
	mv	a1,a6
	mv	a2,s11
	mv	a3,s10
	jal	ra,0x3f4ca # __multf3>
	slli	a5,s0,0x2
	add	a5,a5,s9
	mv	s1,a0
	lw	a0,-8(a5) # 0x1ff8 # exit-0xe128>
	mv	s0,a1
	addiw	s4,s4,1
	jal	ra,0x4074e # __floatunsitf>
	mv	a2,s1
	mv	a3,s0
	jal	ra,0x3e0b8 # __addtf3>
	mv	t1,a0
	mv	a6,a1
	bne	s8,s4,0x38834 # decfloat+0x66c>
	mv	a2,s3
	mv	a3,s5
	jal	ra,0x3f4ca # __multf3>
	ld	a5,0(sp)
	addiw	s4,s2,113
	mv	t4,a0
	subw	s10,s4,a5
	sext.w	a5,s4
	sd	a5,24(sp)
	ld	a5,16(sp)
	mv	a7,a1
	mv	t3,a0
	mv	t1,a1
	ble	a5,s10,0x38a88 # decfloat+0x8c0>
	bltz	s10,0x38bba # decfloat+0x9f2>
	li	a5,1
	mv	s9,s10
	sd	a5,32(sp)
	li	a5,112
	blt	a5,s9,0x38a8e # decfloat+0x8c6>
	li	a0,225
	li	s5,113
	subw	a0,a0,s9
	subw	s5,s5,s9
	auipc	a5,0xa
	fld	fs0,1250(a5) # 0x42da8 # udatatypename+0x3e0>
	fmv.d	fa0,fs0
	sd	a7,56(sp)
	sd	t4,40(sp)
	jal	ra,0x32a30 # scalbn>
	jal	ra,0x40874 # __extenddftf2>
	ld	t4,40(sp)
	ld	a7,56(sp)
	mv	a2,t4
	mv	a3,a7
	sd	t4,48(sp)
	sd	a7,40(sp)
	jal	ra,0x3af64 # copysignl>
	fmv.d	fa0,fs0
	mv	s8,a0
	mv	a0,s5
	mv	s5,a1
	jal	ra,0x32a30 # scalbn>
	jal	ra,0x40874 # __extenddftf2>
	ld	t4,48(sp)
	ld	a7,40(sp)
	mv	a2,a0
	mv	a3,a1
	mv	a0,t4
	mv	a1,a7
	jal	ra,0x3af8c # fmodl>
	ld	t4,48(sp)
	ld	a7,40(sp)
	mv	a2,a0
	mv	a3,a1
	mv	s4,a0
	mv	s11,a1
	mv	a0,t4
	mv	a1,a7
	jal	ra,0x3fb62 # __subtf3>
	mv	a2,a0
	mv	a3,a1
	mv	a0,s8
	mv	a1,s5
	jal	ra,0x3e0b8 # __addtf3>
	mv	t3,a0
	mv	t1,a1
	addiw	a3,s6,4
	andi	a3,a3,2047
	beq	a3,s7,0x389a0 # decfloat+0x7d8>
	lui	a5,0x2
	addi	a5,a5,16
	addi	a4,sp,64
	lui	a2,0xffffe
	add	a5,a5,a4
	add	a2,a2,a5
	slli	a3,a3,0x2
	add	a3,a3,a2
	lw	a2,-8(a3)
	lui	a3,0x1dcd6
	addi	a1,a3,1279 # 0x1dcd64ff # __BSS_END__+0x1dc88177>
	bltu	a1,a2,0x38ae6 # decfloat+0x91e>
	beqz	a2,0x38b70 # decfloat+0x9a8>
	ld	a5,8(sp)
	sd	t1,48(sp)
	sd	t3,40(sp)
	fcvt.d.w	fa0,a5
	auipc	a5,0x10
	fld	fa5,834(a5) # 0x48cb0 # xdigits+0x210>
	fmul.d	fa0,fa0,fa5
	jal	ra,0x40874 # __extenddftf2>
	mv	a2,a0
	mv	a3,a1
	mv	a0,s4
	mv	a1,s11
	jal	ra,0x3e0b8 # __addtf3>
	ld	t3,40(sp)
	ld	t1,48(sp)
	mv	s4,a0
	mv	s11,a1
	li	a3,113
	subw	a3,a3,s9
	li	a2,1
	blt	a2,a3,0x38b02 # decfloat+0x93a>
	ld	a5,0(sp)
	mv	a2,s4
	mv	a3,s11
	negw	s0,a5
	ld	a5,16(sp)
	mv	a0,t3
	mv	a1,t1
	subw	s3,s0,a5
	jal	ra,0x3e0b8 # __addtf3>
	mv	a2,s8
	mv	a3,s5
	jal	ra,0x3fb62 # __subtf3>
	ld	a5,24(sp)
	addiw	a2,s3,-1
	mv	s1,a0
	slli	a3,a5,0x21
	srli	a3,a3,0x21
	mv	s0,a1
	ble	a2,a3,0x38a98 # decfloat+0x8d0>
	lui	a5,0x2
	addi	a5,a5,8
	addi	a4,sp,64
	add	a5,a5,a4
	ld	a3,0(a5)
	auipc	a5,0x15
	ld	a5,-1726(a5) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	ld	a5,0(a5)
	bne	a3,a5,0x38c64 # decfloat+0xa9c>
	lui	t0,0x2
	add	sp,sp,t0
	ld	ra,200(sp)
	ld	s3,168(sp)
	ld	s4,160(sp)
	ld	s5,152(sp)
	ld	s6,144(sp)
	ld	s7,136(sp)
	ld	s8,128(sp)
	ld	s9,120(sp)
	ld	s10,112(sp)
	ld	s11,104(sp)
	fld	fs0,88(sp)
	mv	a2,s2
	mv	a0,s1
	ld	s2,176(sp)
	ld	s1,184(sp)
	mv	a1,s0
	ld	s0,192(sp)
	addi	sp,sp,208
	j	0x3b224 # scalbnl>
	li	a5,9
	blt	a5,s10,0x3833a # decfloat+0x172>
	ld	a4,16(sp)
	li	a5,30
	blt	a5,a4,0x38a2e # decfloat+0x866>
	srlw	a5,s4,a4
	bnez	a5,0x3833a # decfloat+0x172>
	ld	a0,8(sp)
	jal	ra,0x406ee # __floatsitf>
	mv	s1,a0
	mv	a0,s4
	mv	s0,a1
	jal	ra,0x4074e # __floatunsitf>
	mv	a2,a0
	mv	a3,a1
	mv	a0,s1
	mv	a1,s0
	jal	ra,0x3f4ca # __multf3>
	j	0x3847c # decfloat+0x2b4>
	jal	ra,0x2f900 # __errno_location>
	auipc	s0,0x10
	addi	s0,s0,624 # 0x48cc0 # xdigits+0x220>
	ld	a2,0(s0)
	ld	a3,8(s0)
	li	a5,34
	sw	a5,0(a0)
	mv	a1,s5
	mv	a0,s3
	jal	ra,0x3f4ca # __multf3>
	ld	a2,0(s0)
	ld	a3,8(s0)
	jal	ra,0x3f4ca # __multf3>
	j	0x3847c # decfloat+0x2b4>
	li	s6,0
	j	0x38236 # decfloat+0x6e>
	jal	ra,0x2f900 # __errno_location>
	auipc	s0,0x10
	addi	s0,s0,594 # 0x48cd0 # xdigits+0x230>
	j	0x38a58 # decfloat+0x890>
	ld	s9,16(sp)
	sd	zero,32(sp)
	j	0x388ae # decfloat+0x6e6>
	li	s8,0
	li	s5,0
	li	s4,0
	li	s11,0
	j	0x38934 # decfloat+0x76c>
	jal	ra,0x3af7c # fabsl>
	auipc	a3,0x10
	addi	a3,a3,-572 # 0x48860 # app_mask+0x1c8>
	ld	a2,0(a3)
	ld	a3,8(a3)
	addiw	s3,s3,3
	jal	ra,0x3f35a # __getf2>
	bgez	a0,0x38b46 # decfloat+0x97e>
	addiw	a3,s2,112
	ble	s3,a3,0x38ad0 # decfloat+0x908>
	ld	a5,32(sp)
	beqz	a5,0x389d4 # decfloat+0x80c>
	li	a2,0
	li	a3,0
	mv	a0,s4
	mv	a1,s11
	jal	ra,0x3f2cc # __eqtf2>
	beqz	a0,0x389d4 # decfloat+0x80c>
	jal	ra,0x2f900 # __errno_location>
	li	a5,34
	sw	a5,0(a0)
	j	0x389d4 # decfloat+0x80c>
	mv	a0,s4
	jal	ra,0x39468 # __shgetc>
	mv	a1,a0
	j	0x384e8 # decfloat+0x320>
	addi	a3,a3,1280
	beq	a2,a3,0x38b7e # decfloat+0x9b6>
	ld	a5,8(sp)
	sd	t1,48(sp)
	sd	t3,40(sp)
	fcvt.d.w	fa0,a5
	auipc	a5,0x10
	fld	fa5,448(a5) # 0x48cb8 # xdigits+0x218>
	j	0x38976 # decfloat+0x7ae>
	auipc	a3,0x10
	addi	a3,a3,-610 # 0x488a0 # app_mask+0x208>
	ld	s6,0(a3)
	ld	s1,8(a3)
	mv	a0,s4
	mv	a2,s6
	mv	a3,s1
	mv	a1,s11
	sd	t1,40(sp)
	sd	t3,8(sp)
	jal	ra,0x3af8c # fmodl>
	li	a2,0
	li	a3,0
	jal	ra,0x3f2cc # __eqtf2>
	ld	t3,8(sp)
	ld	t1,40(sp)
	bnez	a0,0x389a0 # decfloat+0x7d8>
	mv	a0,s4
	mv	a1,s11
	mv	a2,s6
	mv	a3,s1
	jal	ra,0x3e0b8 # __addtf3>
	ld	t1,40(sp)
	ld	t3,8(sp)
	mv	s4,a0
	mv	s11,a1
	j	0x389a0 # decfloat+0x7d8>
	auipc	a3,0x10
	addi	a3,a3,-710 # 0x48880 # app_mask+0x1e8>
	ld	a2,0(a3)
	ld	a3,8(a3)
	mv	a0,s1
	mv	a1,s0
	jal	ra,0x3f4ca # __multf3>
	ld	a5,32(sp)
	mv	s1,a0
	mv	s0,a1
	addiw	s2,s2,1
	beqz	a5,0x38be6 # decfloat+0xa1e>
	ld	a5,24(sp)
	beq	s10,s9,0x38be8 # decfloat+0xa20>
	ble	s3,a5,0x38ad0 # decfloat+0x908>
	j	0x38ac0 # decfloat+0x8f8>
	addiw	a3,s6,5
	andi	a3,a3,2047
	bne	a3,s7,0x38964 # decfloat+0x79c>
	j	0x38992 # decfloat+0x7ca>
	ld	a5,8(sp)
	addiw	a3,s6,5
	andi	a3,a3,2047
	sd	t1,40(sp)
	sd	t3,8(sp)
	fcvt.d.w	fa5,a5
	beq	a3,s7,0x38c2c # decfloat+0xa64>
	auipc	a5,0x10
	fld	fa0,292(a5) # 0x48cb8 # xdigits+0x218>
	fmul.d	fa0,fa5,fa0
	jal	ra,0x40874 # __extenddftf2>
	mv	a2,a0
	mv	a3,a1
	mv	a0,s4
	mv	a1,s11
	jal	ra,0x3e0b8 # __addtf3>
	ld	t1,40(sp)
	ld	t3,8(sp)
	mv	s4,a0
	mv	s11,a1
	j	0x38992 # decfloat+0x7ca>
	li	a5,1
	li	s5,113
	li	a0,225
	sd	a5,32(sp)
	li	s9,0
	j	0x388c6 # decfloat+0x6fe>
	ld	a5,24(sp)
	beqz	a5,0x38470 # decfloat+0x2a8>
	ld	a5,192(s4)
	bltz	a5,0x38322 # decfloat+0x15a>
	ld	a5,8(s4)
	addi	a5,a5,-1
	sd	a5,8(s4)
	j	0x38322 # decfloat+0x15a>
	ld	a5,24(sp)
	ble	s3,a5,0x38ad0 # decfloat+0x908>
	j	0x389d4 # decfloat+0x80c>
	mv	a0,s6
	jal	ra,0x4074e # __floatunsitf>
	mv	a2,s3
	mv	a3,s5
	jal	ra,0x3f4ca # __multf3>
	li	a5,8
	subw	a5,a5,s9
	auipc	a4,0x10
	addi	a4,a4,294 # 0x48d28 # p10s.1>
	slli	a5,a5,0x2
	add	a5,a5,a4
	mv	s1,a0
	lw	a0,0(a5)
	mv	s0,a1
	jal	ra,0x406ee # __floatsitf>
	mv	a2,a0
	mv	a3,a1
	mv	a0,s1
	mv	a1,s0
	jal	ra,0x3ead4 # __divtf3>
	j	0x3847c # decfloat+0x2b4>
	li	a7,0
	j	0x3860e # decfloat+0x446>
	auipc	a5,0xd
	fld	fa0,756(a5) # 0x45f20 # small_cnt_tab+0x88>
	fmul.d	fa0,fa5,fa0
	jal	ra,0x40874 # __extenddftf2>
	mv	a2,a0
	mv	a3,a1
	mv	a0,s4
	mv	a1,s11
	jal	ra,0x3e0b8 # __addtf3>
	ld	t3,8(sp)
	ld	t1,40(sp)
	mv	s4,a0
	mv	s11,a1
	j	0x38992 # decfloat+0x7ca>
	mv	a0,s6
	jal	ra,0x4074e # __floatunsitf>
	mv	a2,s3
	mv	a3,s5
	jal	ra,0x3f4ca # __multf3>
	j	0x3847c # decfloat+0x2b4>
	jal	ra,0x37f18 # __stack_chk_fail>

__floatscan:
	li	a5,2
	bltu	a5,a1,0x38d88 # __floatscan+0x120>
	slli	a1,a1,0x20
	srli	a1,a1,0x1e
	auipc	a4,0x10
	addi	a4,a4,150 # 0x48d08 # CSWTCH.39>
	auipc	a5,0x10
	addi	a5,a5,158 # 0x48d18 # CSWTCH.40>
	addi	sp,sp,-160
	add	a4,a4,a1
	add	a1,a1,a5
	sd	s2,128(sp)
	sd	s3,120(sp)
	lw	s2,0(a4)
	lw	s3,0(a1)
	sd	s0,144(sp)
	sd	s1,136(sp)
	sd	s4,112(sp)
	sd	s11,56(sp)
	sd	ra,152(sp)
	sd	s5,104(sp)
	sd	s6,96(sp)
	sd	s7,88(sp)
	sd	s8,80(sp)
	sd	s9,72(sp)
	sd	s10,64(sp)
	fsd	fs0,40(sp)
	mv	s11,a0
	mv	s0,a2
	li	s1,32
	li	s4,4
	ld	a5,8(s11)
	ld	a4,184(s11)
	addi	a3,a5,1
	beq	a5,a4,0x38d98 # __floatscan+0x130>
	sd	a3,8(s11)
	lbu	a1,0(a5)
	addiw	a5,a1,-9
	beq	a1,s1,0x38cb6 # __floatscan+0x4e>
	bleu	a5,s4,0x38cb6 # __floatscan+0x4e>
	li	a5,43
	beq	a1,a5,0x38da2 # __floatscan+0x13a>
	li	a5,45
	li	s1,1
	beq	a1,a5,0x38ea4 # __floatscan+0x23c>
	auipc	s4,0x10
	addi	s4,s4,-84 # 0x48c98 # xdigits+0x1f8>
	lbu	a3,0(s4)
	ori	a5,a1,32
	sext.w	a4,a5
	li	s6,0
	li	s5,7
	bne	a3,a4,0x38d38 # __floatscan+0xd0>
	beq	s6,s5,0x38d54 # __floatscan+0xec>
	ld	a5,8(s11)
	ld	a4,184(s11)
	addi	a3,a5,1
	beq	a5,a4,0x38d8e # __floatscan+0x126>
	sd	a3,8(s11)
	lbu	a1,0(a5)
	lbu	a3,1(s4)
	ori	a5,a1,32
	sext.w	a4,a5
	addi	s4,s4,1
	addi	s6,s6,1
	beq	a3,a4,0x38d08 # __floatscan+0xa0>
	li	a4,3
	bne	s6,a4,0x38dbe # __floatscan+0x156>
	ld	a4,192(s11)
	bltz	a4,0x38d54 # __floatscan+0xec>
	ld	a5,8(s11)
	addi	a5,a5,-1
	sd	a5,8(s11)
	bnez	s0,0x38f68 # __floatscan+0x300>
	fcvt.s.w	fa0,s1
	auipc	a5,0x10
	flw	fa5,-88(a5) # 0x48d00 # xdigits+0x260>
	fmul.s	fa0,fa0,fa5
	jal	ra,0x4079c # __extendsftf2>
	ld	ra,152(sp)
	ld	s0,144(sp)
	ld	s1,136(sp)
	ld	s2,128(sp)
	ld	s3,120(sp)
	ld	s4,112(sp)
	ld	s5,104(sp)
	ld	s6,96(sp)
	ld	s7,88(sp)
	ld	s8,80(sp)
	ld	s9,72(sp)
	ld	s10,64(sp)
	ld	s11,56(sp)
	fld	fs0,40(sp)
	addi	sp,sp,160
	ret
	li	a0,0
	li	a1,0
	ret
	mv	a0,s11
	jal	ra,0x39468 # __shgetc>
	mv	a1,a0
	j	0x38d24 # __floatscan+0xbc>
	mv	a0,s11
	jal	ra,0x39468 # __shgetc>
	mv	a1,a0
	j	0x38cce # __floatscan+0x66>
	li	s1,1
	ld	a5,8(s11)
	ld	a4,184(s11)
	beq	a5,a4,0x38f7e # __floatscan+0x316>
	addi	a4,a5,1
	sd	a4,8(s11)
	lbu	a1,0(a5)
	j	0x38cec # __floatscan+0x84>
	bleu	s6,a4,0x38dee # __floatscan+0x186>
	bnez	s0,0x38f48 # __floatscan+0x2e0>
	ld	a5,192(s11)
	bltz	a5,0x38dd8 # __floatscan+0x170>
	ld	a5,8(s11)
	addi	a5,a5,-1
	sd	a5,8(s11)
	jal	ra,0x2f900 # __errno_location>
	li	a5,22
	sw	a5,0(a0)
	li	a1,0
	mv	a0,s11
	jal	ra,0x3944a # __shlim>
	li	a0,0
	li	a1,0
	j	0x38d68 # __floatscan+0x100>
	auipc	s4,0x10
	addi	s4,s4,-1726 # 0x48730 # app_mask+0x98>
	li	s5,2
	bnez	s6,0x38dc6 # __floatscan+0x15e>
	lbu	a4,0(s4)
	sext.w	a5,a5
	bne	a4,a5,0x38e34 # __floatscan+0x1cc>
	ld	a5,8(s11)
	ld	a4,184(s11)
	beq	s6,s5,0x38ea8 # __floatscan+0x240>
	addi	a3,a5,1
	beq	a5,a4,0x38f88 # __floatscan+0x320>
	sd	a3,8(s11)
	lbu	a1,0(a5)
	lbu	a4,1(s4)
	ori	a5,a1,32
	sext.w	a5,a5
	addi	s4,s4,1
	addi	s6,s6,1
	beq	a4,a5,0x38e06 # __floatscan+0x19e>
	bnez	s6,0x38dc6 # __floatscan+0x15e>
	li	a5,48
	bne	a1,a5,0x38e78 # __floatscan+0x210>
	ld	a5,8(s11)
	ld	a4,184(s11)
	beq	a5,a4,0x38f70 # __floatscan+0x308>
	addi	a4,a5,1
	sd	a4,8(s11)
	lbu	a5,0(a5)
	ori	a5,a5,32
	sext.w	a5,a5
	li	a4,120
	beq	a5,a4,0x38fca # __floatscan+0x362>
	ld	a5,192(s11)
	bltz	a5,0x38e78 # __floatscan+0x210>
	ld	a5,8(s11)
	addi	a5,a5,-1
	sd	a5,8(s11)
	mv	a5,s0
	ld	s0,144(sp)
	ld	ra,152(sp)
	ld	s4,112(sp)
	ld	s5,104(sp)
	ld	s6,96(sp)
	ld	s7,88(sp)
	ld	s8,80(sp)
	ld	s9,72(sp)
	ld	s10,64(sp)
	fld	fs0,40(sp)
	mv	a4,s1
	mv	a3,s3
	ld	s1,136(sp)
	ld	s3,120(sp)
	mv	a2,s2
	mv	a0,s11
	ld	s2,128(sp)
	ld	s11,56(sp)
	addi	sp,sp,160
	j	0x381c8 # decfloat>
	li	s1,-1
	j	0x38da4 # __floatscan+0x13c>
	beq	a5,a4,0x38fba # __floatscan+0x352>
	addi	a4,a5,1
	sd	a4,8(s11)
	lbu	a5,0(a5)
	addi	a5,a5,-40
	snez	a5,a5
	bnez	a5,0x38f9a # __floatscan+0x332>
	li	s1,1
	li	s2,9
	li	s3,25
	li	s4,95
	ld	a5,8(s11)
	ld	a4,184(s11)
	addi	a3,a5,1
	beq	a5,a4,0x38f92 # __floatscan+0x32a>
	sd	a3,8(s11)
	lbu	a0,0(a5)
	andi	a5,a0,-33
	addiw	a4,a0,-48
	addiw	a5,a5,-65
	bleu	a4,s2,0x38f44 # __floatscan+0x2dc>
	bleu	a5,s3,0x38f44 # __floatscan+0x2dc>
	beq	a0,s4,0x38f44 # __floatscan+0x2dc>
	li	a5,41
	beq	a0,a5,0x38f36 # __floatscan+0x2ce>
	ld	a3,192(s11)
	bltz	a3,0x38f16 # __floatscan+0x2ae>
	ld	a5,8(s11)
	addi	a5,a5,-1
	sd	a5,8(s11)
	beqz	s0,0x38dd8 # __floatscan+0x170>
	addi	a5,s1,-1
	li	a2,-1
	beqz	s1,0x38f36 # __floatscan+0x2ce>
	addi	a5,a5,-1
	bltz	a3,0x38f32 # __floatscan+0x2ca>
	ld	a4,8(s11)
	addi	a4,a4,-1
	sd	a4,8(s11)
	bne	a5,a2,0x38f22 # __floatscan+0x2ba>
	auipc	a5,0x10
	addi	a5,a5,-598 # 0x48ce0 # xdigits+0x240>
	ld	a0,0(a5)
	ld	a1,8(a5)
	j	0x38d68 # __floatscan+0x100>
	addi	s1,s1,1
	j	0x38ecc # __floatscan+0x264>
	ld	a4,192(s11)
	bgez	a4,0x38d46 # __floatscan+0xde>
	li	a3,3
	addi	s6,s6,-1
	bltz	a4,0x38f62 # __floatscan+0x2fa>
	ld	a5,8(s11)
	addi	a5,a5,-1
	sd	a5,8(s11)
	bne	s6,a3,0x38f52 # __floatscan+0x2ea>
	j	0x38d54 # __floatscan+0xec>
	li	a5,3
	bne	s6,a5,0x38f50 # __floatscan+0x2e8>
	j	0x38d54 # __floatscan+0xec>
	mv	a0,s11
	sd	a1,8(sp)
	jal	ra,0x39468 # __shgetc>
	ld	a1,8(sp)
	mv	a5,a0
	j	0x38e58 # __floatscan+0x1f0>
	mv	a0,s11
	jal	ra,0x39468 # __shgetc>
	mv	a1,a0
	j	0x38cec # __floatscan+0x84>
	mv	a0,s11
	jal	ra,0x39468 # __shgetc>
	mv	a1,a0
	j	0x38e22 # __floatscan+0x1ba>
	mv	a0,s11
	jal	ra,0x39468 # __shgetc>
	j	0x38ee4 # __floatscan+0x27c>
	ld	a5,192(s11)
	bltz	a5,0x38f36 # __floatscan+0x2ce>
	ld	a5,8(s11)
	auipc	a4,0x10
	addi	a4,a4,-710 # 0x48ce0 # xdigits+0x240>
	ld	a0,0(a4)
	addi	a5,a5,-1
	ld	a1,8(a4)
	sd	a5,8(s11)
	j	0x38d68 # __floatscan+0x100>
	mv	a0,s11
	jal	ra,0x39468 # __shgetc>
	addi	a5,a0,-40 # 0xffffffffffffdfd8 # __BSS_END__+0xfffffffffffafc50>
	snez	a5,a5
	j	0x38ec0 # __floatscan+0x258>
	ld	a5,8(s11)
	ld	a4,184(s11)
	beq	a5,a4,0x3937e # __floatscan+0x716>
	addi	a4,a5,1
	sd	a4,8(s11)
	lbu	a0,0(a5)
	li	a5,48
	li	s4,48
	li	a2,0
	bne	a0,a5,0x3900e # __floatscan+0x3a6>
	ld	a5,8(s11)
	ld	a4,184(s11)
	addi	a3,a5,1
	beq	a5,a4,0x392de # __floatscan+0x676>
	sd	a3,8(s11)
	lbu	a0,0(a5)
	beq	a0,s4,0x38ff0 # __floatscan+0x388>
	li	a2,1
	li	a5,46
	beq	a0,a5,0x39310 # __floatscan+0x6a8>
	sd	zero,8(sp)
	li	s10,0
	auipc	a5,0x10
	addi	a5,a5,-1914 # 0x488a0 # app_mask+0x208>
	ld	s7,0(a5)
	ld	s6,8(a5)
	li	s9,0
	sd	zero,24(sp)
	li	s4,0
	li	s5,0
	li	s8,0
	li	t1,9
	li	t3,46
	addiw	a5,a0,-48
	bleu	a5,t1,0x3907e # __floatscan+0x416>
	ori	a3,a0,32
	addiw	a1,a3,-97
	li	a4,5
	sext.w	a3,a3
	bleu	a1,a4,0x3907e # __floatscan+0x416>
	bne	a0,t3,0x390a6 # __floatscan+0x43e>
	bnez	s10,0x392e6 # __floatscan+0x67e>
	sd	s9,8(sp)
	li	s10,1
	ld	a5,8(s11)
	ld	a3,184(s11)
	beq	a5,a3,0x39292 # __floatscan+0x62a>
	addi	a3,a5,1
	sd	a3,8(s11)
	lbu	a0,0(a5)
	addiw	a5,a0,-48
	bltu	t1,a5,0x39042 # __floatscan+0x3da>
	beq	a0,t3,0x39056 # __floatscan+0x3ee>
	li	a4,57
	ble	a0,a4,0x39092 # __floatscan+0x42a>
	ori	a0,a0,32
	addiw	a5,a0,-87
	li	a4,7
	blt	a4,s9,0x3924a # __floatscan+0x5e2>
	slliw	a7,s8,0x4
	addw	s8,a7,a5
	addi	s9,s9,1
	li	a2,1
	j	0x3905e # __floatscan+0x3f6>
	beqz	a2,0x393ce # __floatscan+0x766>
	bnez	s10,0x390b0 # __floatscan+0x448>
	sd	s9,8(sp)
	li	a5,7
	blt	a5,s9,0x390c2 # __floatscan+0x45a>
	li	a5,8
	addi	s9,s9,1
	slliw	s8,s8,0x4
	bne	s9,a5,0x390b8 # __floatscan+0x450>
	li	a5,112
	beq	a3,a5,0x393b0 # __floatscan+0x748>
	ld	a4,192(s11)
	li	a5,0
	bltz	a4,0x390de # __floatscan+0x476>
	ld	a4,8(s11)
	addi	a4,a4,-1
	sd	a4,8(s11)
	beqz	s8,0x392fe # __floatscan+0x696>
	ld	a4,8(sp)
	addi	s0,a4,-8
	slli	s0,s0,0x2
	add	s0,s0,a5
	negw	a5,s3
	blt	a5,s0,0x39386 # __floatscan+0x71e>
	addiw	a5,s3,-226
	blt	s0,a5,0x393e8 # __floatscan+0x780>
	auipc	a5,0xf
	addi	a5,a5,1924 # 0x48880 # app_mask+0x1e8>
	bltz	s8,0x39156 # __floatscan+0x4ee>
	ld	s7,0(a5)
	ld	s6,8(a5)
	mv	a1,s5
	mv	a2,s7
	mv	a3,s6
	mv	a0,s4
	jal	ra,0x3f35a # __getf2>
	mv	a4,a0
	mv	a1,s5
	mv	a0,s4
	mv	a2,s4
	mv	a3,s5
	slliw	s8,s8,0x1
	bltz	a4,0x39144 # __floatscan+0x4dc>
	auipc	a4,0xf
	addi	a4,a4,1906 # 0x488a0 # app_mask+0x208>
	ld	a2,0(a4)
	ld	a3,8(a4)
	addiw	s8,s8,1
	jal	ra,0x3fb62 # __subtf3>
	mv	a2,a0
	mv	a3,a1
	mv	a0,s4
	mv	a1,s5
	jal	ra,0x3e0b8 # __addtf3>
	mv	s4,a0
	mv	s5,a1
	addi	s0,s0,-1
	bgez	s8,0x39110 # __floatscan+0x4a8>
	addi	a5,s0,32
	sub	a5,a5,s3
	ble	s2,a5,0x3916e # __floatscan+0x506>
	subw	s2,s0,s3
	addiw	s2,s2,32
	bltz	s2,0x39406 # __floatscan+0x79e>
	li	a5,112
	blt	a5,s2,0x393c8 # __floatscan+0x760>
	li	a0,144
	subw	a0,a0,s2
	auipc	a5,0xa
	fld	fa0,-982(a5) # 0x42da8 # udatatypename+0x3e0>
	jal	ra,0x32a30 # scalbn>
	fmv.d	fs0,fa0
	mv	a0,s1
	jal	ra,0x406ee # __floatsitf>
	fmv.d	fa0,fs0
	mv	s6,a0
	mv	s3,a1
	jal	ra,0x40874 # __extenddftf2>
	mv	a2,s6
	mv	a3,s3
	jal	ra,0x3af64 # copysignl>
	li	a5,31
	mv	s6,a0
	mv	s3,a1
	blt	a5,s2,0x391cc # __floatscan+0x564>
	li	a2,0
	li	a3,0
	mv	a0,s4
	mv	a1,s5
	jal	ra,0x3f2cc # __eqtf2>
	beqz	a0,0x391cc # __floatscan+0x564>
	andi	a5,s8,1
	bnez	a5,0x391cc # __floatscan+0x564>
	addiw	s8,s8,1
	li	s4,0
	li	s5,0
	mv	a0,s1
	jal	ra,0x406ee # __floatsitf>
	mv	a2,s4
	mv	a3,s5
	mv	s4,a1
	mv	s5,a0
	jal	ra,0x3f4ca # __multf3>
	mv	s2,a0
	mv	a0,s8
	mv	s1,a1
	jal	ra,0x4074e # __floatunsitf>
	mv	a2,s5
	mv	a3,s4
	jal	ra,0x3f4ca # __multf3>
	mv	a2,s6
	mv	a3,s3
	jal	ra,0x3e0b8 # __addtf3>
	mv	a2,s2
	mv	a3,s1
	jal	ra,0x3e0b8 # __addtf3>
	mv	a2,s6
	mv	a3,s3
	jal	ra,0x3fb62 # __subtf3>
	li	a2,0
	li	a3,0
	mv	s2,a0
	mv	s1,a1
	jal	ra,0x3f2cc # __eqtf2>
	bnez	a0,0x39220 # __floatscan+0x5b8>
	jal	ra,0x2f900 # __errno_location>
	li	a5,34
	sw	a5,0(a0)
	sext.w	a2,s0
	ld	s0,144(sp)
	ld	ra,152(sp)
	ld	s3,120(sp)
	ld	s4,112(sp)
	ld	s5,104(sp)
	ld	s6,96(sp)
	ld	s7,88(sp)
	ld	s8,80(sp)
	ld	s9,72(sp)
	ld	s10,64(sp)
	ld	s11,56(sp)
	fld	fs0,40(sp)
	mv	a0,s2
	mv	a1,s1
	ld	s2,128(sp)
	ld	s1,136(sp)
	addi	sp,sp,160
	j	0x3b224 # scalbnl>
	li	a3,28
	blt	a3,s9,0x392a4 # __floatscan+0x63c>
	sd	a5,16(sp)
	auipc	a5,0x10
	addi	a5,a5,-1378 # 0x48cf0 # xdigits+0x250>
	ld	a2,0(a5)
	ld	a3,8(a5)
	mv	a0,s7
	mv	a1,s6
	jal	ra,0x3f4ca # __multf3>
	ld	a5,16(sp)
	mv	s7,a0
	mv	s6,a1
	mv	a0,a5
	jal	ra,0x406ee # __floatsitf>
	mv	a2,s7
	mv	a3,s6
	jal	ra,0x3f4ca # __multf3>
	mv	a2,a0
	mv	a3,a1
	mv	a0,s4
	mv	a1,s5
	jal	ra,0x3e0b8 # __addtf3>
	mv	s4,a0
	mv	s5,a1
	li	t1,9
	li	t3,46
	j	0x390a0 # __floatscan+0x438>
	mv	a0,s11
	sd	a2,16(sp)
	jal	ra,0x39468 # __shgetc>
	ld	a2,16(sp)
	li	t3,46
	li	t1,9
	j	0x3903a # __floatscan+0x3d2>
	beqz	a5,0x390a0 # __floatscan+0x438>
	ld	a5,24(sp)
	bnez	a5,0x390a0 # __floatscan+0x438>
	auipc	a5,0xf
	addi	a5,a5,1490 # 0x48880 # app_mask+0x1e8>
	ld	a2,0(a5)
	ld	a3,8(a5)
	mv	a0,s7
	mv	a1,s6
	jal	ra,0x3f4ca # __multf3>
	mv	a2,a0
	mv	a3,a1
	mv	a0,s4
	mv	a1,s5
	jal	ra,0x3e0b8 # __addtf3>
	li	a5,1
	mv	s4,a0
	mv	s5,a1
	sd	a5,24(sp)
	li	t3,46
	li	t1,9
	j	0x390a0 # __floatscan+0x438>
	mv	a0,s11
	jal	ra,0x39468 # __shgetc>
	j	0x39008 # __floatscan+0x3a0>
	beqz	a2,0x39368 # __floatscan+0x700>
	li	a5,7
	li	a3,46
	ble	s9,a5,0x390b6 # __floatscan+0x44e>
	j	0x390ca # __floatscan+0x462>
	bnez	s0,0x392fe # __floatscan+0x696>
	li	a1,0
	mv	a0,s11
	jal	ra,0x3944a # __shlim>
	fcvt.d.w	fa0,s1
	fmv.d.x	fa5,zero
	fmul.d	fa0,fa0,fa5
	jal	ra,0x40874 # __extenddftf2>
	j	0x38d68 # __floatscan+0x100>
	ld	a5,8(s11)
	ld	a4,184(s11)
	beq	a5,a4,0x3943e # __floatscan+0x7d6>
	addi	a4,a5,1
	sd	a4,8(s11)
	lbu	a0,0(a5)
	li	a5,48
	sd	zero,8(sp)
	bne	a0,a5,0x3943a # __floatscan+0x7d2>
	li	s4,48
	j	0x3934a # __floatscan+0x6e2>
	sd	a3,8(s11)
	lbu	a0,0(a5)
	ld	a5,8(sp)
	addi	a5,a5,-1
	sd	a5,8(sp)
	bne	a0,s4,0x39362 # __floatscan+0x6fa>
	ld	a5,8(s11)
	ld	a4,184(s11)
	addi	a3,a5,1
	bne	a5,a4,0x39338 # __floatscan+0x6d0>
	mv	a0,s11
	jal	ra,0x39468 # __shgetc>
	j	0x39340 # __floatscan+0x6d8>
	li	a2,1
	li	s10,1
	j	0x3901a # __floatscan+0x3b2>
	ld	a5,192(s11)
	bltz	a5,0x392f4 # __floatscan+0x68c>
	ld	a5,8(s11)
	beqz	s0,0x393fe # __floatscan+0x796>
	addi	a5,a5,-3
	sd	a5,8(s11)
	j	0x392fe # __floatscan+0x696>
	mv	a0,s11
	jal	ra,0x39468 # __shgetc>
	j	0x38fe2 # __floatscan+0x37a>
	jal	ra,0x2f900 # __errno_location>
	li	a5,34
	sw	a5,0(a0)
	auipc	s0,0x10
	addi	s0,s0,-1744 # 0x48cc0 # xdigits+0x220>
	mv	a0,s1
	jal	ra,0x406ee # __floatsitf>
	ld	a2,0(s0)
	ld	a3,8(s0)
	jal	ra,0x3f4ca # __multf3>
	ld	a2,0(s0)
	ld	a3,8(s0)
	jal	ra,0x3f4ca # __multf3>
	j	0x38d68 # __floatscan+0x100>
	mv	a1,s0
	mv	a0,s11
	jal	ra,0x38048 # scanexp>
	li	a4,-1
	slli	a4,a4,0x3f
	mv	a5,a0
	bne	a0,a4,0x390de # __floatscan+0x476>
	bnez	s0,0x390ca # __floatscan+0x462>
	j	0x38de0 # __floatscan+0x178>
	li	s6,0
	li	s3,0
	j	0x391cc # __floatscan+0x564>
	ld	a5,192(s11)
	bltz	a5,0x392f4 # __floatscan+0x68c>
	ld	a5,8(s11)
	beqz	s0,0x393fe # __floatscan+0x796>
	bnez	s10,0x39376 # __floatscan+0x70e>
	addi	a5,a5,-2
	sd	a5,8(s11)
	j	0x392fe # __floatscan+0x696>
	jal	ra,0x2f900 # __errno_location>
	li	a5,34
	sw	a5,0(a0)
	auipc	s0,0x10
	addi	s0,s0,-1826 # 0x48cd0 # xdigits+0x230>
	mv	a0,s1
	j	0x3939a # __floatscan+0x732>
	addi	a5,a5,-1
	sd	a5,8(s11)
	j	0x392f6 # __floatscan+0x68e>
	li	a0,144
	auipc	a5,0xa
	fld	fa0,-1634(a5) # 0x42da8 # udatatypename+0x3e0>
	jal	ra,0x32a30 # scalbn>
	fmv.d	fs0,fa0
	mv	a0,s1
	jal	ra,0x406ee # __floatsitf>
	fmv.d	fa0,fs0
	mv	s3,a0
	mv	s2,a1
	jal	ra,0x40874 # __extenddftf2>
	mv	a2,s3
	mv	a3,s2
	jal	ra,0x3af64 # copysignl>
	mv	s6,a0
	mv	s3,a1
	j	0x391b2 # __floatscan+0x54a>
	li	s10,1
	j	0x3901a # __floatscan+0x3b2>
	mv	a0,s11
	sd	a2,8(sp)
	jal	ra,0x39468 # __shgetc>
	ld	a2,8(sp)
	j	0x39328 # __floatscan+0x6c0>

__shlim:
	ld	a4,8(a0)
	ld	a5,88(a0)
	sd	a1,192(a0)
	sub	a5,a5,a4
	sd	a5,200(a0)
	ld	a5,16(a0)
	beqz	a1,0x39464 # __shlim+0x1a>
	sub	a3,a5,a4
	ble	a3,a1,0x39464 # __shlim+0x1a>
	add	a5,a4,a1
	sd	a5,184(a0)
	ret

__shgetc:
	ld	a3,8(a0)
	ld	a4,88(a0)
	ld	a2,200(a0)
	ld	a5,192(a0)
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	ra,24(sp)
	sub	s1,a3,a4
	mv	s0,a0
	add	s1,s1,a2
	beqz	a5,0x39486 # __shgetc+0x1e>
	ble	a5,s1,0x394ca # __shgetc+0x62>
	mv	a0,s0
	jal	ra,0x3bf6a # __uflow>
	bltz	a0,0x394c6 # __shgetc+0x5e>
	ld	a4,192(s0)
	ld	a2,16(s0)
	ld	a5,8(s0)
	addi	s1,s1,1
	beqz	a4,0x394a8 # __shgetc+0x40>
	sub	a4,a4,s1
	sub	a3,a2,a5
	ble	a3,a4,0x394a8 # __shgetc+0x40>
	add	a2,a5,a4
	ld	a3,88(s0)
	sd	a2,184(s0)
	sub	a4,a3,a5
	add	s1,s1,a4
	sd	s1,200(s0)
	bltu	a3,a5,0x394bc # __shgetc+0x54>
	sb	a0,-1(a5)
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret
	ld	a4,88(s0)
	ld	a3,8(s0)
	sub	a4,a4,a3
	add	s1,s1,a4
	li	a5,-1
	sd	s1,200(s0)
	sd	a3,184(s0)
	sd	a5,192(s0)
	li	a0,-1
	j	0x394bc # __shgetc+0x54>

__syscall_ret:
	addi	sp,sp,-16
	sd	s0,0(sp)
	sd	ra,8(sp)
	lui	a5,0xfffff
	mv	s0,a0
	bltu	a5,a0,0x394f0 # __syscall_ret+0x16>
	ld	ra,8(sp)
	ld	s0,0(sp)
	addi	sp,sp,16
	ret
	jal	ra,0x2f900 # __errno_location>
	negw	s0,s0
	sw	s0,0(a0)
	li	a0,-1
	j	0x394e8 # __syscall_ret+0xe>

__nl_langinfo_l:
	lui	a5,0x10
	addi	a4,a5,-1 # 0xffff # exit-0x121>
	li	a6,14
	srai	a2,a0,0x10
	and	a3,a0,a4
	beq	a0,a6,0x39588 # __nl_langinfo_l+0x8a>
	beq	a3,a4,0x39578 # __nl_langinfo_l+0x7a>
	li	a4,2
	beq	a2,a4,0x3959e # __nl_langinfo_l+0xa0>
	ble	a2,a4,0x39544 # __nl_langinfo_l+0x46>
	li	a4,4
	beq	a2,a4,0x3953a # __nl_langinfo_l+0x3c>
	li	a4,5
	bne	a2,a4,0x3953a # __nl_langinfo_l+0x3c>
	addi	a5,a5,-4
	and	a0,a0,a5
	auipc	a5,0x10
	addi	a5,a5,-1992 # 0x48d68 # c_messages>
	beqz	a0,0x395ae # __nl_langinfo_l+0xb0>
	auipc	a0,0x8
	addi	a0,a0,-858 # 0x411e0 # __clzdi2+0x318>
	ret
	li	a4,1
	bne	a2,a4,0x3953a # __nl_langinfo_l+0x3c>
	addi	a5,a5,-2
	and	a0,a0,a5
	bnez	a0,0x3953a # __nl_langinfo_l+0x3c>
	li	a4,46
	auipc	a5,0x10
	addi	a5,a5,-2004 # 0x48d80 # c_numeric>
	beqz	a3,0x395e4 # __nl_langinfo_l+0xe6>
	beqz	a4,0x39568 # __nl_langinfo_l+0x6a>
	lbu	a4,1(a5)
	addi	a5,a5,1
	bnez	a4,0x39560 # __nl_langinfo_l+0x62>
	addiw	a3,a3,-1
	addi	a0,a5,1
	beqz	a3,0x395ce # __nl_langinfo_l+0xd0>
	lbu	a4,1(a5)
	mv	a5,a0
	j	0x3955e # __nl_langinfo_l+0x60>
	li	a5,5
	auipc	a0,0x8
	addi	a0,a0,-922 # 0x411e0 # __clzdi2+0x318>
	ble	a2,a5,0x395b8 # __nl_langinfo_l+0xba>
	ret
	ld	a5,0(a1)
	auipc	a0,0xf
	addi	a0,a0,2006 # 0x48d60 # th.0+0x18>
	bnez	a5,0x39586 # __nl_langinfo_l+0x88>
	auipc	a0,0xf
	addi	a0,a0,1988 # 0x48d58 # th.0+0x10>
	ret
	li	a5,49
	blt	a5,a3,0x3953a # __nl_langinfo_l+0x3c>
	auipc	a5,0xf
	addi	a5,a5,2018 # 0x48d88 # c_time>
	mv	a0,a5
	beqz	a3,0x395d4 # __nl_langinfo_l+0xd6>
	lbu	a4,0(a5)
	j	0x3955e # __nl_langinfo_l+0x60>
	slli	a2,a2,0x3
	add	a2,a2,a1
	ld	a5,0(a2)
	auipc	a0,0x8
	addi	a0,a0,-198 # 0x414f8 # lua_ident+0x160>
	beqz	a5,0x39586 # __nl_langinfo_l+0x88>
	addi	a0,a5,16
	ret
	li	a5,1
	beq	a2,a5,0x39586 # __nl_langinfo_l+0x88>
	lbu	a5,0(a0)
	beqz	a5,0x39586 # __nl_langinfo_l+0x88>
	slli	a2,a2,0x3
	add	a2,a2,a1
	ld	a1,0(a2)
	j	0x2f9e6 # __lctrans>
	mv	a0,a5
	ret

__nl_langinfo:
	mv	a5,tp
	ld	a1,-48(a5)
	j	0x394fe # __nl_langinfo_l>

__lctrans_impl:
	addi	sp,sp,-16
	sd	s0,0(sp)
	sd	ra,8(sp)
	mv	s0,a0
	beqz	a1,0x39612 # __lctrans_impl+0x20>
	mv	a5,a1
	ld	a0,0(a5)
	ld	a1,8(a1)
	mv	a2,s0
	jal	ra,0x3dc58 # __mo_lookup>
	beqz	a0,0x39612 # __lctrans_impl+0x20>
	ld	ra,8(sp)
	ld	s0,0(sp)
	addi	sp,sp,16
	ret
	ld	ra,8(sp)
	mv	a0,s0
	ld	s0,0(sp)
	addi	sp,sp,16
	ret

__get_locale:
	addi	sp,sp,-400
	sd	s3,360(sp)
	auipc	s3,0x14
	ld	s3,-768(s3) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	sd	s1,376(sp)
	sd	s4,352(sp)
	ld	a5,0(s3)
	sd	ra,392(sp)
	sd	s0,384(sp)
	sd	s2,368(sp)
	sd	s5,344(sp)
	sd	s6,336(sp)
	sd	s7,328(sp)
	sd	s8,320(sp)
	sd	s9,312(sp)
	sd	s10,304(sp)
	sd	s11,296(sp)
	lbu	a2,0(a1)
	sd	a5,280(sp)
	mv	s1,a1
	mv	s4,a0
	beqz	a2,0x397e8 # __get_locale+0x1cc>
	mv	a5,a2
	li	s0,0
	li	a4,47
	li	a3,23
	beq	a5,a4,0x39670 # __get_locale+0x54>
	addi	s0,s0,1
	beq	s0,a3,0x39670 # __get_locale+0x54>
	add	a5,s1,s0
	lbu	a5,0(a5)
	bnez	a5,0x3965c # __get_locale+0x40>
	li	a5,46
	beq	a2,a5,0x39682 # __get_locale+0x66>
	add	a5,s1,s0
	lbu	a5,0(a5)
	beqz	a5,0x396dc # __get_locale+0xc0>
	auipc	s1,0x10
	addi	s1,s1,-1978 # 0x48ec8 # c_time+0x140>
	auipc	a1,0x10
	addi	a1,a1,-1986 # 0x48ec8 # c_time+0x140>
	mv	a0,s1
	jal	ra,0x369dc # strcmp>
	bnez	a0,0x396ee # __get_locale+0xd2>
	bnez	s4,0x396ea # __get_locale+0xce>
	lbu	a4,1(s1)
	li	a5,46
	bne	a4,a5,0x396ea # __get_locale+0xce>
	auipc	s2,0x14
	addi	s2,s2,-1978 # 0x4cef0 # __c_dot_utf8>
	ld	a4,280(sp)
	ld	a5,0(s3)
	bne	a4,a5,0x39874 # __get_locale+0x258>
	ld	ra,392(sp)
	ld	s0,384(sp)
	ld	s1,376(sp)
	ld	s3,360(sp)
	ld	s4,352(sp)
	ld	s5,344(sp)
	ld	s6,336(sp)
	ld	s7,328(sp)
	ld	s8,320(sp)
	ld	s9,312(sp)
	ld	s10,304(sp)
	ld	s11,296(sp)
	mv	a0,s2
	ld	s2,368(sp)
	addi	sp,sp,400
	ret
	li	a5,67
	bne	a2,a5,0x3968a # __get_locale+0x6e>
	lbu	a5,1(s1)
	bnez	a5,0x3968a # __get_locale+0x6e>
	li	s2,0
	j	0x396b2 # __get_locale+0x96>
	auipc	a1,0xf
	addi	a1,a1,2034 # 0x48ee0 # c_time+0x158>
	mv	a0,s1
	jal	ra,0x369dc # strcmp>
	beqz	a0,0x3969a # __get_locale+0x7e>
	addi	s6,gp,1800 # 0x4e290 # loc_head.0>
	ld	s2,0(s6)
	beqz	s2,0x3971e # __get_locale+0x102>
	addi	a1,s2,16
	mv	a0,s1
	jal	ra,0x369dc # strcmp>
	beqz	a0,0x396b2 # __get_locale+0x96>
	ld	s2,40(s2)
	bnez	s2,0x3970a # __get_locale+0xee>
	lbu	a5,-1926(gp) # 0x4d402 # __libc+0x2>
	bnez	a5,0x397ac # __get_locale+0x190>
	auipc	a0,0xf
	addi	a0,a0,1988 # 0x48ee8 # c_time+0x160>
	jal	ra,0x2f888 # getenv>
	mv	s2,a0
	beqz	a0,0x397ac # __get_locale+0x190>
	lbu	a5,0(a0)
	beqz	a5,0x397ac # __get_locale+0x190>
	addi	a5,sp,288
	li	s7,254
	add	a5,a5,s0
	sub	s7,s7,s0
	addi	s5,sp,24
	li	s10,47
	sd	a5,8(sp)
	addi	s8,sp,16
	li	a1,58
	mv	a0,s2
	jal	ra,0x3692c # __strchrnul>
	sub	s9,a0,s2
	mv	s11,a0
	bleu	s7,s9,0x3979c # __get_locale+0x180>
	mv	a2,s9
	mv	a1,s2
	mv	a0,s5
	jal	ra,0x3632a # memcpy>
	addi	a5,sp,288
	add	a4,a5,s9
	addi	a0,s9,1 # 0xffffffffffffe001 # __BSS_END__+0xfffffffffffafc79>
	mv	a1,s1
	mv	a2,s0
	add	a0,a0,s5
	sb	s10,-264(a4)
	jal	ra,0x3632a # memcpy>
	ld	a5,8(sp)
	mv	a1,s8
	mv	a0,s5
	add	a5,a5,s9
	sb	zero,-263(a5)
	jal	ra,0x3c372 # __map_file>
	bnez	a0,0x39850 # __get_locale+0x234>
	lbu	s2,0(s11)
	snez	s2,s2
	add	s2,s2,s11
	lbu	a5,0(s2)
	bnez	a5,0x39754 # __get_locale+0x138>
	li	a0,48
	jal	ra,0x39a8a # __libc_malloc>
	mv	s2,a0
	beqz	a0,0x39848 # __get_locale+0x22c>
	auipc	a5,0x13
	addi	a5,a5,1848 # 0x4cef0 # __c_dot_utf8>
	ld	a4,0(a5)
	ld	a5,8(a5)
	mv	a2,s0
	sd	a4,0(a0)
	sd	a5,8(a0)
	mv	a1,s1
	addi	a0,s2,16
	jal	ra,0x3632a # memcpy>
	ld	a5,0(s6)
	add	s0,s0,s2
	sb	zero,16(s0)
	sd	a5,40(s2)
	sd	s2,0(s6)
	j	0x396b2 # __get_locale+0x96>
	auipc	a0,0xf
	addi	a0,a0,1768 # 0x48ed0 # c_time+0x148>
	jal	ra,0x2f888 # getenv>
	mv	s1,a0
	beqz	a0,0x39800 # __get_locale+0x1e4>
	lbu	a2,0(a0)
	bnez	a2,0x39652 # __get_locale+0x36>
	slli	a5,s4,0x1
	add	a5,a5,s4
	slli	a5,a5,0x2
	auipc	a0,0xf
	addi	a0,a0,1776 # 0x48ef8 # envvars>
	add	a0,a0,a5
	jal	ra,0x2f888 # getenv>
	mv	s1,a0
	beqz	a0,0x39822 # __get_locale+0x206>
	lbu	a2,0(a0)
	bnez	a2,0x39652 # __get_locale+0x36>
	auipc	a0,0xf
	addi	a0,a0,1718 # 0x48ed8 # c_time+0x150>
	jal	ra,0x2f888 # getenv>
	mv	s1,a0
	beqz	a0,0x3983a # __get_locale+0x21e>
	lbu	a2,0(a0)
	bnez	a2,0x39652 # __get_locale+0x36>
	li	a2,67
	auipc	s1,0xf
	addi	s1,s1,1674 # 0x48ec8 # c_time+0x140>
	j	0x39652 # __get_locale+0x36>
	beqz	s4,0x396aa # __get_locale+0x8e>
	li	s2,0
	j	0x396b2 # __get_locale+0x96>
	sd	a0,8(sp)
	li	a0,48
	jal	ra,0x39a8a # __libc_malloc>
	ld	a5,8(sp)
	mv	s2,a0
	beqz	a0,0x3986a # __get_locale+0x24e>
	ld	a4,16(sp)
	mv	a2,s0
	sd	a5,0(a0)
	sd	a4,8(a0)
	j	0x397ca # __get_locale+0x1ae>
	ld	a1,16(sp)
	mv	a0,a5
	jal	ra,0x32ed0 # __munmap>
	j	0x397ac # __get_locale+0x190>
	jal	ra,0x37f18 # __stack_chk_fail>

__simple_malloc:
	addi	sp,sp,-80
	sd	s1,56(sp)
	auipc	s1,0x14
	ld	s1,-1372(s1) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	ld	a5,0(s1)
	sd	ra,72(sp)
	sd	s0,64(sp)
	sd	s2,48(sp)
	sd	s3,40(sp)
	sd	s4,32(sp)
	sd	a5,24(sp)
	bltz	a0,0x39a58 # __simple_malloc+0x1e0>
	mv	s2,a0
	beqz	a0,0x39968 # __simple_malloc+0xf0>
	li	a5,1
	bleu	a0,a5,0x39a82 # __simple_malloc+0x20a>
	li	a4,4
	slli	a5,a5,0x1
	bleu	s2,a5,0x398ac # __simple_malloc+0x34>
	addiw	a4,a4,-1
	bnez	a4,0x398a2 # __simple_malloc+0x2a>
	addi	s0,a5,-1
	addi	a0,gp,1832 # 0x4e2b0 # lock>
	jal	ra,0x36ffe # __lock>
	addi	s3,gp,1816 # 0x4e2a0 # cur.0>
	ld	a4,0(s3)
	addi	s4,gp,1824 # 0x4e2a8 # end.1>
	ld	a2,0(s4)
	neg	a5,a4
	and	a5,a5,s0
	add	a5,a5,a4
	sd	a5,0(s3)
	sub	a4,a2,a5
	bleu	s2,a4,0x39a14 # __simple_malloc+0x19c>
	addi	a6,gp,-1928 # 0x4d400 # __libc>
	ld	a3,48(a6)
	addi	a1,a3,-1
	neg	t1,a3
	beqz	a5,0x3996c # __simple_malloc+0xf4>
	addi	t3,gp,1808 # 0x4e298 # brk.2>
	ld	a4,0(t3) # 0x3b9ad000 # __BSS_END__+0x3b95ec78>
	beq	a2,a4,0x39996 # __simple_malloc+0x11e>
	add	a1,a1,s2
	and	a1,a1,t1
	sub	a4,a1,s2
	srli	a5,a1,0x3
	bleu	a4,a5,0x3992e # __simple_malloc+0xb6>
	addi	a2,gp,1836 # 0x4e2b4 # mmap_step.3>
	lw	a4,0(a2)
	ld	a5,0(s4)
	ld	a6,0(s3)
	srliw	a0,a4,0x1
	sll	a3,a3,a0
	sub	a0,a3,s2
	sub	a5,a5,a6
	bltu	a5,a0,0x39a26 # __simple_malloc+0x1ae>
	li	a5,0
	li	a4,-1
	li	a3,34
	li	a2,3
	li	a0,0
	jal	ra,0x32e16 # __mmap>
	li	a5,-1
	mv	s0,a0
	beq	a0,a5,0x39a64 # __simple_malloc+0x1ec>
	addi	a0,gp,1832 # 0x4e2b0 # lock>
	jal	ra,0x370d4 # __unlock>
	ld	a4,24(sp)
	ld	a5,0(s1)
	bne	a4,a5,0x39a86 # __simple_malloc+0x20e>
	ld	ra,72(sp)
	mv	a0,s0
	ld	s0,64(sp)
	ld	s1,56(sp)
	ld	s2,48(sp)
	ld	s3,40(sp)
	ld	s4,32(sp)
	addi	sp,sp,80
	ret
	li	s2,1
	j	0x3989a # __simple_malloc+0x22>
	li	a7,214
	li	a0,0
	ecall
	ld	a3,48(a6)
	addi	t3,gp,1808 # 0x4e298 # brk.2>
	addi	a4,a3,-1
	neg	a3,a0
	and	a4,a4,a3
	add	a4,a4,a0
	sd	a4,0(t3)
	sd	a4,0(s4)
	sd	a4,0(s3)
	sub	a1,a1,a2
	add	a1,a1,s2
	add	a5,a5,a1
	and	a1,a5,t1
	not	a5,a4
	bleu	a5,a1,0x399f4 # __simple_malloc+0x17c>
	ld	a3,8(a6)
	lui	a2,0x800
	add	a0,a1,a4
	mv	a5,a3
	bltu	a3,a2,0x39a70 # __simple_malloc+0x1f8>
	lui	a2,0xff800
	add	a5,a5,a2
	bleu	a0,a5,0x399c8 # __simple_malloc+0x150>
	bltu	a4,a3,0x399f4 # __simple_malloc+0x17c>
	addi	a3,sp,16
	lui	a2,0x800
	mv	a5,a3
	bltu	a3,a2,0x39a76 # __simple_malloc+0x1fe>
	lui	a2,0xff800
	add	a5,a5,a2
	bleu	a0,a5,0x399e2 # __simple_malloc+0x16a>
	bltu	a4,a3,0x399f4 # __simple_malloc+0x17c>
	li	a7,214
	ecall
	ld	a5,0(t3)
	add	a5,a5,a1
	beq	a0,a5,0x39a02 # __simple_malloc+0x18a>
	ld	a3,48(a6)
	neg	t1,a3
	addi	a1,a3,-1
	j	0x398fa # __simple_malloc+0x82>
	ld	a4,0(s4)
	ld	a5,0(s3)
	add	a1,a1,a4
	sd	a1,0(s4)
	sd	a1,0(t3)
	mv	s0,a5
	add	a5,a5,s2
	addi	a0,gp,1832 # 0x4e2b0 # lock>
	sd	a5,0(s3)
	jal	ra,0x370d4 # __unlock>
	j	0x3994e # __simple_malloc+0xd6>
	bleu	a3,a1,0x39a32 # __simple_malloc+0x1ba>
	li	a5,11
	mv	a1,a3
	bleu	a4,a5,0x39a7c # __simple_malloc+0x204>
	li	a5,0
	li	a4,-1
	li	a3,34
	li	a2,3
	li	a0,0
	sd	a1,8(sp)
	jal	ra,0x32e16 # __mmap>
	li	a5,-1
	ld	a1,8(sp)
	mv	s0,a0
	beq	a0,a5,0x39a64 # __simple_malloc+0x1ec>
	add	a1,a1,s0
	mv	a5,s0
	sd	a1,0(s4)
	j	0x39a16 # __simple_malloc+0x19e>
	jal	ra,0x2f900 # __errno_location>
	li	a5,12
	sw	a5,0(a0)
	li	s0,0
	j	0x3994e # __simple_malloc+0xd6>
	addi	a0,gp,1832 # 0x4e2b0 # lock>
	jal	ra,0x370d4 # __unlock>
	li	s0,0
	j	0x3994e # __simple_malloc+0xd6>
	lui	a5,0x800
	j	0x399ba # __simple_malloc+0x142>
	lui	a5,0x800
	j	0x399d4 # __simple_malloc+0x15c>
	addiw	a4,a4,1
	sw	a4,0(a2)
	j	0x39a32 # __simple_malloc+0x1ba>
	li	s0,0
	j	0x398b0 # __simple_malloc+0x38>
	jal	ra,0x37f18 # __stack_chk_fail>

__libc_malloc:
	j	0x30b3a # __libc_malloc_impl>

malloc:
	j	0x30b3a # __libc_malloc_impl>

__libc_realloc:
	addi	sp,sp,-80
	sd	s1,56(sp)
	sd	ra,72(sp)
	sd	s0,64(sp)
	sd	s2,48(sp)
	sd	s3,40(sp)
	sd	s4,32(sp)
	sd	s5,24(sp)
	sd	s6,16(sp)
	sd	s7,8(sp)
	mv	s1,a1
	beqz	a0,0x39da6 # __libc_realloc+0x314>
	lui	a5,0xffffe
	addi	a5,a5,-3
	srli	a5,a5,0x1
	bltu	a5,a1,0x39cd2 # __libc_realloc+0x240>
	andi	a5,a0,15
	mv	s0,a0
	beqz	a5,0x39ac4 # __libc_realloc+0x32>
	sb	zero,0(zero) # 0x0 # exit-0x10120>
	ebreak
	lbu	a4,-3(a0)
	lbu	a5,-4(a0)
	lhu	a2,-2(a0)
	andi	a6,a4,31
	mv	a3,a6
	beqz	a5,0x39ae4 # __libc_realloc+0x52>
	bnez	a2,0x39abe # __libc_realloc+0x2c>
	lw	a2,-8(a0)
	lui	a5,0x10
	blt	a2,a5,0x39abe # __libc_realloc+0x2c>
	slliw	a5,a2,0x4
	sub	a5,s0,a5
	ld	s3,-16(a5) # 0xfff0 # exit-0x130>
	addi	a5,a5,-16
	ld	a0,16(s3)
	bne	a5,a0,0x39abe # __libc_realloc+0x2c>
	ld	a1,32(s3)
	andi	a5,a1,31
	mv	t1,a5
	blt	a5,a3,0x39abe # __libc_realloc+0x2c>
	lw	a5,24(s3)
	srlw	a5,a5,a3
	andi	a5,a5,1
	bnez	a5,0x39abe # __libc_realloc+0x2c>
	lw	a5,28(s3)
	srlw	a5,a5,a3
	andi	a5,a5,1
	bnez	a5,0x39abe # __libc_realloc+0x2c>
	lui	a5,0xfffff
	and	a5,s3,a5
	ld	a7,0(a5) # 0xfffffffffffff000 # __BSS_END__+0xfffffffffffb0c78>
	auipc	a5,0x14
	ld	a5,-1570(a5) # 0x4d508 # __malloc_context>
	bne	a7,a5,0x39abe # __libc_realloc+0x2c>
	srli	a7,a1,0x6
	andi	a7,a7,63
	li	a5,47
	bltu	a5,a7,0x39cbe # __libc_realloc+0x22c>
	slli	t3,a7,0x1
	auipc	a5,0xc
	addi	a5,a5,710 # 0x45e10 # __malloc_size_classes>
	add	a5,a5,t3
	lhu	t3,0(a5)
	mulw	a5,t3,a3
	blt	a2,a5,0x39abe # __libc_realloc+0x2c>
	addiw	a5,a6,1
	andi	a5,a5,255
	mulw	a5,a5,t3
	ble	a5,a2,0x39abe # __libc_realloc+0x2c>
	lui	a5,0xfffff
	and	a5,a5,a1
	beqz	a5,0x39b8c # __libc_realloc+0xfa>
	srli	a5,a1,0xc
	slli	a3,a5,0x8
	addi	a3,a3,-1
	slli	a5,a5,0xc
	bltu	a3,a2,0x39abe # __libc_realloc+0x2c>
	addi	a5,a5,-16
	beqz	t1,0x39ba2 # __libc_realloc+0x110>
	slli	a3,a7,0x1
	auipc	a5,0xc
	addi	a5,a5,640 # 0x45e10 # __malloc_size_classes>
	add	a5,a5,a3
	lhu	a5,0(a5)
	slliw	a5,a5,0x4
	mul	t1,a6,a5
	addi	s2,a0,16
	addi	a5,a5,-4
	srli	a4,a4,0x5
	li	a3,4
	mv	a2,a4
	add	s2,s2,t1
	add	a5,a5,s2
	bleu	a4,a3,0x39bd0 # __libc_realloc+0x13e>
	li	a2,5
	bne	a4,a2,0x39abe # __libc_realloc+0x2c>
	lwu	a2,-4(a5)
	bleu	a2,a3,0x39abe # __libc_realloc+0x2c>
	lbu	a4,-5(a5)
	bnez	a4,0x39abe # __libc_realloc+0x2c>
	sub	a4,a5,s0
	bltu	a4,a2,0x39abe # __libc_realloc+0x2c>
	sub	s5,a5,a2
	lbu	a3,0(s5)
	bnez	a3,0x39abe # __libc_realloc+0x2c>
	lbu	s7,0(a5)
	bnez	s7,0x39abe # __libc_realloc+0x2c>
	bltu	a4,s1,0x39cf4 # __libc_realloc+0x262>
	lui	a3,0x20
	addi	a3,a3,-21
	bltu	a3,s1,0x39d9c # __libc_realloc+0x30a>
	addi	a3,s1,3
	srli	a3,a3,0x4
	li	a2,9
	bleu	a3,a2,0x39c94 # __libc_realloc+0x202>
	addi	a0,a3,1 # 0x20001 # luaV_execute+0x1099>
	srliw	a1,a0,0x1
	srliw	a2,a0,0x2
	or	a2,a2,a1
	sext.w	a1,a2
	srliw	a2,a2,0x2
	or	a1,a1,a2
	sext.w	a2,a1
	srliw	a1,a1,0x4
	or	a2,a2,a1
	sext.w	a1,a2
	srliw	a2,a2,0x8
	or	a1,a1,a2
	sext.w	a2,a1
	not	a2,a2
	addiw	a1,a1,1
	lui	a3,0x76be
	and	a2,a2,a1
	addiw	a3,a3,1577
	mulw	a2,a2,a3
	auipc	a3,0xf
	addi	a3,a3,758 # 0x48f40 # debruijn32.0>
	auipc	a1,0xc
	addi	a1,a1,446 # 0x45e10 # __malloc_size_classes>
	srliw	a2,a2,0x1b
	add	a2,a2,a3
	lbu	a2,0(a2) # 0xffffffffff800000 # __BSS_END__+0xffffffffff7b1c78>
	addiw	a2,a2,-1
	slliw	a2,a2,0x2
	addiw	a3,a2,1
	slli	t1,a3,0x1
	add	t1,t1,a1
	lhu	t3,0(t1) # 0x3b9ad000 # __BSS_END__+0x3b95ec78>
	sext.w	t1,a2
	bleu	a0,t3,0x39c88 # __libc_realloc+0x1f6>
	addiw	a3,a2,3
	addiw	t1,a2,2
	slli	t1,t1,0x1
	add	a1,a1,t1
	lhu	a2,0(a1)
	bleu	a0,a2,0x39c96 # __libc_realloc+0x204>
	addiw	a3,a3,1
	ble	a7,a3,0x39dc0 # __libc_realloc+0x32e>
	mv	a0,s1
	jal	ra,0x30b3a # __libc_malloc_impl>
	mv	s2,a0
	beqz	a0,0x39cdc # __libc_realloc+0x24a>
	sub	a2,s5,s0
	bleu	a2,s1,0x39cae # __libc_realloc+0x21c>
	mv	a2,s1
	mv	a1,s0
	mv	a0,s2
	jal	ra,0x3632a # memcpy>
	mv	a0,s0
	jal	ra,0x2ff98 # __libc_free>
	j	0x39cdc # __libc_realloc+0x24a>
	lui	a5,0x1
	addi	a5,a5,-64 # 0xfc0 # exit-0xf160>
	and	a3,a1,a5
	beq	a3,a5,0x39b70 # __libc_realloc+0xde>
	sb	zero,0(zero) # 0x0 # exit-0x10120>
	ebreak
	jal	ra,0x2f900 # __errno_location>
	li	a5,12
	sw	a5,0(a0)
	li	s2,0
	ld	ra,72(sp)
	ld	s0,64(sp)
	ld	s1,56(sp)
	ld	s3,40(sp)
	ld	s4,32(sp)
	ld	s5,24(sp)
	ld	s6,16(sp)
	ld	s7,8(sp)
	mv	a0,s2
	ld	s2,48(sp)
	addi	sp,sp,80
	ret
	li	a5,47
	bleu	a7,a5,0x39c9a # __libc_realloc+0x208>
	lui	a5,0x20
	addi	a5,a5,-21
	bleu	s1,a5,0x39c9a # __libc_realloc+0x208>
	lui	a5,0x1
	addi	a4,a5,-64 # 0xfc0 # exit-0xf160>
	and	a3,a1,a4
	bne	a3,a4,0x39abe # __libc_realloc+0x2c>
	addi	a5,a5,19
	sub	s4,s0,s2
	add	s2,s1,a5
	add	s2,s2,s4
	srli	a1,a1,0xc
	lui	s6,0xfffff
	and	s6,s2,s6
	slli	a1,a1,0xc
	beq	a1,s6,0x39d36 # __libc_realloc+0x2a4>
	li	a3,1
	mv	a2,s6
	jal	ra,0x3b2f4 # __mremap>
	li	a5,-1
	beq	a0,a5,0x39c9a # __libc_realloc+0x208>
	ld	a5,32(s3)
	srli	s2,s2,0xc
	addi	s6,s6,-20
	slli	a4,a5,0x34
	srli	a4,a4,0x34
	slli	a5,s2,0xc
	or	a5,a5,a4
	addi	s2,a0,16
	sub	a1,s6,s4
	sd	a5,32(s3)
	add	s6,s6,s2
	sd	a0,16(s3)
	subw	a5,a1,s1
	sb	zero,0(s6) # 0xfffffffffffff000 # __BSS_END__+0xfffffffffffb0c78>
	add	s2,s2,s4
	beqz	a5,0x39d8c # __libc_realloc+0x2fa>
	negw	a4,a5
	add	a4,a4,s6
	sb	zero,0(a4)
	li	a4,4
	ble	a5,a4,0x39df6 # __libc_realloc+0x364>
	sw	a5,-4(s6)
	sb	zero,-5(s6)
	li	s7,160
	lbu	a5,-3(s2)
	andi	a5,a5,31
	addw	s7,a5,s7
	sb	s7,-3(s2)
	j	0x39cdc # __libc_realloc+0x24a>
	li	a5,47
	bltu	a5,a7,0x39d06 # __libc_realloc+0x274>
	j	0x39c9a # __libc_realloc+0x208>
	ld	s0,64(sp)
	ld	ra,72(sp)
	ld	s1,56(sp)
	ld	s2,48(sp)
	ld	s3,40(sp)
	ld	s4,32(sp)
	ld	s5,24(sp)
	ld	s6,16(sp)
	ld	s7,8(sp)
	mv	a0,a1
	addi	sp,sp,80
	j	0x30b3a # __libc_malloc_impl>
	subw	a3,a4,s1
	beqz	a3,0x39dee # __libc_realloc+0x35c>
	negw	a2,a3
	add	a2,a2,a5
	sb	zero,0(a2)
	li	a2,4
	ble	a3,a2,0x39e00 # __libc_realloc+0x36e>
	sw	a3,-4(a5)
	sb	zero,-5(a5)
	lbu	a6,-3(s0)
	andi	a6,a6,31
	addiw	a6,a6,-96
	andi	a6,a6,255
	sb	a6,-3(s0)
	mv	s2,s0
	j	0x39cdc # __libc_realloc+0x24a>
	slliw	s1,a5,0x5
	andi	s7,s1,255
	j	0x39d8c # __libc_realloc+0x2fa>
	lbu	a6,-3(s0)
	slliw	a4,a3,0x5
	andi	a6,a6,31
	addw	a6,a4,a6
	andi	a6,a6,255
	j	0x39dee # __libc_realloc+0x35c>

__cos:
	fmul.d	fa3,fa0,fa0
	auipc	a5,0xf
	fld	fa5,326(a5) # 0x48f60 # debruijn32.0+0x20>
	auipc	a5,0xf
	fld	fa4,342(a5) # 0x48f78 # debruijn32.0+0x38>
	auipc	a5,0xf
	fld	ft5,318(a5) # 0x48f68 # debruijn32.0+0x28>
	auipc	a5,0xf
	fld	ft4,334(a5) # 0x48f80 # debruijn32.0+0x40>
	auipc	a5,0xf
	fld	ft3,310(a5) # 0x48f70 # debruijn32.0+0x30>
	auipc	a5,0xf
	fld	ft2,326(a5) # 0x48f88 # debruijn32.0+0x48>
	fmul.d	fa5,fa3,fa5
	fmul.d	fa4,fa3,fa4
	fmul.d	ft0,fa3,fa3
	fmul.d	fa0,fa0,fa1
	auipc	a5,0xc
	fld	ft1,198(a5) # 0x45f20 # small_cnt_tab+0x88>
	fmul.d	ft1,fa3,ft1
	auipc	a5,0x9
	fld	fa2,-190(a5) # 0x42da8 # udatatypename+0x3e0>
	fadd.d	fa5,fa5,ft5
	fsub.d	fa4,fa4,ft4
	fmul.d	fa1,ft0,ft0
	fsub.d	ft0,fa2,ft1
	fmul.d	fa5,fa5,fa3
	fmul.d	fa4,fa4,fa3
	fsub.d	fa2,fa2,ft0
	fsub.d	fa5,fa5,ft3
	fadd.d	fa4,fa4,ft2
	fsub.d	fa2,fa2,ft1
	fmul.d	fa1,fa5,fa1
	fmul.d	fa4,fa4,fa3
	fadd.d	fa1,fa1,fa4
	fmul.d	fa1,fa1,fa3
	fsub.d	fa1,fa1,fa0
	fadd.d	fa1,fa1,fa2
	fadd.d	fa0,fa1,ft0
	ret

__expo2:
	auipc	a5,0xf
	fld	fa5,220(a5) # 0x48f90 # debruijn32.0+0x50>
	fsub.d	fa0,fa0,fa5
	addi	sp,sp,-32
	fsd	fs0,8(sp)
	fmv.d	fs0,fa1
	sd	ra,24(sp)
	jal	ra,0x3182c # exp>
	auipc	a5,0xf
	fld	fa5,202(a5) # 0x48f98 # debruijn32.0+0x58>
	fmul.d	fs0,fs0,fa5
	ld	ra,24(sp)
	fmul.d	fa0,fs0,fa0
	fld	fs0,8(sp)
	addi	sp,sp,32
	fmul.d	fa0,fa0,fa5
	ret

__fpclassifyl:
	lui	a5,0x8
	srli	a4,a1,0x30
	addi	a5,a5,-1
	slli	a1,a1,0x10
	and	a4,a4,a5
	mv	a3,a0
	srli	a1,a1,0x10
	beqz	a4,0x39f0c # __fpclassifyl+0x22>
	li	a0,4
	beq	a4,a5,0x39f04 # __fpclassifyl+0x1a>
	ret
	or	a1,a1,a3
	seqz	a0,a1
	ret
	or	a1,a1,a0
	snez	a0,a1
	addi	a0,a0,2
	ret

__math_divzero:
	addi	sp,sp,-16
	bnez	a0,0x39f32 # __math_divzero+0x1c>
	auipc	a5,0x9
	fld	fa5,-370(a5) # 0x42da8 # udatatypename+0x3e0>
	fsd	fa5,8(sp)
	fld	fa0,8(sp)
	fmv.d.x	fa5,zero
	addi	sp,sp,16
	fdiv.d	fa0,fa0,fa5
	ret
	auipc	a5,0xd
	fld	fa5,-1802(a5) # 0x46828 # __exp_data+0x888>
	fsd	fa5,8(sp)
	fld	fa0,8(sp)
	fmv.d.x	fa5,zero
	addi	sp,sp,16
	fdiv.d	fa0,fa0,fa5
	ret

__math_invalid:
	fsub.d	fa0,fa0,fa0
	fdiv.d	fa0,fa0,fa0
	ret

__math_oflow:
	auipc	a5,0xf
	fld	fa0,76(a5) # 0x48fa0 # debruijn32.0+0x60>
	j	0x39f68 # __math_xflow>

__math_uflow:
	auipc	a5,0xf
	fld	fa0,74(a5) # 0x48fa8 # debruijn32.0+0x68>
	j	0x39f68 # __math_xflow>

__math_xflow:
	fmv.d	fa5,fa0
	addi	sp,sp,-16
	beqz	a0,0x39f74 # __math_xflow+0xc>
	fneg.d	fa5,fa0
	fsd	fa5,8(sp)
	fld	fa5,8(sp)
	addi	sp,sp,16
	fmul.d	fa0,fa0,fa5
	ret

__rem_pio2:
	addi	sp,sp,-80
	fmv.x.d	a5,fa0
	sd	s1,56(sp)
	auipc	s1,0x13
	ld	s1,920(s1) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	ld	a3,0(s1)
	srai	a4,a5,0x20
	slli	a2,a4,0x21
	sd	a3,40(sp)
	lui	a3,0x400f7
	sd	s0,64(sp)
	sd	s2,48(sp)
	sd	ra,72(sp)
	srli	a2,a2,0x21
	addi	a3,a3,-1414 # 0x400f6a7a # __BSS_END__+0x400a86f2>
	mv	s0,a0
	srli	s2,a5,0x3f
	bltu	a3,a2,0x3a010 # __rem_pio2+0x90>
	slli	a4,a4,0x2c
	lui	a3,0x92
	srli	a4,a4,0x2c
	addi	a3,a3,507 # 0x921fb # __BSS_END__+0x43e73>
	beq	a4,a3,0x3a128 # __rem_pio2+0x1a8>
	lui	a4,0x4002e
	addi	a4,a4,-1668 # 0x4002d97c # __BSS_END__+0x3ffdf5f4>
	bltu	a4,a2,0x3a0e4 # __rem_pio2+0x164>
	auipc	a4,0xf
	fld	fa5,-34(a4) # 0x48fb0 # debruijn32.0+0x70>
	bnez	s2,0x3a2b4 # __rem_pio2+0x334>
	fsub.d	fa5,fa0,fa5
	auipc	a5,0xf
	fld	fa4,-42(a5) # 0x48fb8 # debruijn32.0+0x78>
	li	a0,1
	fsub.d	fa3,fa5,fa4
	fsub.d	fa5,fa5,fa3
	fsd	fa3,0(s0)
	fsub.d	fa5,fa5,fa4
	fsd	fa5,8(s0)
	ld	a4,40(sp)
	ld	a5,0(s1)
	bne	a4,a5,0x3a2dc # __rem_pio2+0x35c>
	ld	ra,72(sp)
	ld	s0,64(sp)
	ld	s1,56(sp)
	ld	s2,48(sp)
	addi	sp,sp,80
	ret
	lui	a4,0x401c4
	addi	a4,a4,1595 # 0x401c463b # __BSS_END__+0x401762b3>
	bltu	a4,a2,0x3a05c # __rem_pio2+0xdc>
	lui	a4,0x40160
	addi	a4,a4,-580 # 0x4015fdbc # __BSS_END__+0x40111a34>
	bltu	a4,a2,0x3a100 # __rem_pio2+0x180>
	lui	a4,0x4012e
	addi	a4,a4,-1668 # 0x4012d97c # __BSS_END__+0x400df5f4>
	beq	a2,a4,0x3a128 # __rem_pio2+0x1a8>
	auipc	a4,0xf
	fld	fa5,-124(a4) # 0x48fb8 # debruijn32.0+0x78>
	auipc	a4,0xd
	fld	fa4,-1988(a4) # 0x46878 # __exp_data+0x8d8>
	fmul.d	fa4,fa5,fa4
	auipc	a4,0xf
	fld	fa5,-120(a4) # 0x48fd0 # debruijn32.0+0x90>
	bnez	s2,0x3a2c4 # __rem_pio2+0x344>
	fsub.d	fa5,fa0,fa5
	li	a0,3
	j	0x39fec # __rem_pio2+0x6c>
	lui	a4,0x41392
	addi	a4,a4,506 # 0x413921fa # __BSS_END__+0x41343e72>
	bleu	a2,a4,0x3a128 # __rem_pio2+0x1a8>
	lui	a4,0x7ff00
	bleu	a4,a2,0x3a22e # __rem_pio2+0x2ae>
	slli	a5,a5,0xc
	li	a4,523
	slli	a4,a4,0x35
	srli	a5,a5,0xc
	or	a5,a5,a4
	fmv.d.x	fa5,a5
	auipc	a3,0xf
	fld	fa4,-96(a3) # 0x49020 # debruijn32.0+0xe0>
	li	a3,3
	fcvt.w.d	a4,fa5,rtz
	fcvt.d.w	fa3,a4
	fsub.d	fa5,fa5,fa3
	fsd	fa3,16(sp)
	fmul.d	fa5,fa5,fa4
	fcvt.w.d	a5,fa5,rtz
	fcvt.d.w	fa3,a5
	sext.w	a5,a5
	fsub.d	fa5,fa5,fa3
	fsd	fa3,24(sp)
	fmul.d	fa5,fa5,fa4
	fmv.d.x	fa4,zero
	feq.d	a4,fa5,fa4
	fsd	fa5,32(sp)
	beqz	a4,0x3a0c4 # __rem_pio2+0x144>
	snez	a5,a5
	addiw	a3,a5,1
	srliw	a2,a2,0x14
	li	a4,1
	addiw	a2,a2,-1046
	mv	a1,sp
	addi	a0,sp,16
	jal	ra,0x3a2e0 # __rem_pio2_large>
	bnez	s2,0x3a242 # __rem_pio2+0x2c2>
	fld	fa5,0(sp)
	fsd	fa5,0(s0)
	fld	fa5,8(sp)
	fsd	fa5,8(s0)
	j	0x39ffc # __rem_pio2+0x7c>
	auipc	a4,0xf
	fld	fa5,-292(a4) # 0x48fc0 # debruijn32.0+0x80>
	bnez	s2,0x3a294 # __rem_pio2+0x314>
	fsub.d	fa5,fa0,fa5
	auipc	a5,0xf
	fld	fa4,-300(a5) # 0x48fc8 # debruijn32.0+0x88>
	li	a0,2
	j	0x39fec # __rem_pio2+0x6c>
	lui	a4,0x40192
	addi	a4,a4,507 # 0x401921fb # __BSS_END__+0x40143e73>
	beq	a2,a4,0x3a128 # __rem_pio2+0x1a8>
	auipc	a4,0xf
	fld	fa5,-308(a4) # 0x48fd8 # debruijn32.0+0x98>
	bnez	s2,0x3a2cc # __rem_pio2+0x34c>
	fsub.d	fa5,fa0,fa5
	auipc	a5,0xf
	fld	fa4,-316(a5) # 0x48fe0 # debruijn32.0+0xa0>
	li	a0,4
	j	0x39fec # __rem_pio2+0x6c>
	fmv.d.x	fa5,a5
	auipc	a4,0xf
	fld	fa4,-324(a4) # 0x48fe8 # debruijn32.0+0xa8>
	auipc	a4,0xf
	fld	fa2,-388(a4) # 0x48fb0 # debruijn32.0+0x70>
	fmul.d	fa4,fa5,fa4
	auipc	a4,0xf
	fld	fa5,-336(a4) # 0x48ff0 # debruijn32.0+0xb0>
	fmv.d.x	ft0,a5
	auipc	a4,0xf
	fld	fa1,-404(a4) # 0x48fb8 # debruijn32.0+0x78>
	auipc	a4,0xf
	fld	fa0,-348(a4) # 0x48ff8 # debruijn32.0+0xb8>
	fadd.d	fa4,fa4,fa5
	fsub.d	fa4,fa4,fa5
	fmul.d	fa5,fa4,fa2
	fmul.d	fa3,fa4,fa1
	fcvt.w.d	a3,fa4,rtz
	sext.w	a0,a3
	fsub.d	fa5,ft0,fa5
	fsub.d	ft0,fa5,fa3
	flt.d	a1,ft0,fa0
	fmv.x.d	a4,ft0
	bnez	a1,0x3a258 # __rem_pio2+0x2d8>
	auipc	a1,0xc
	fld	fa0,-606(a1) # 0x45f28 # small_cnt_tab+0x90>
	flt.d	a1,fa0,ft0
	bnez	a1,0x3a282 # __rem_pio2+0x302>
	srli	a5,a4,0x34
	srliw	a2,a2,0x14
	andi	a5,a5,2047
	subw	a5,a2,a5
	li	a3,16
	ble	a5,a3,0x3a21c # __rem_pio2+0x29c>
	auipc	a5,0xf
	fld	fa1,-426(a5) # 0x49000 # debruijn32.0+0xc0>
	fmul.d	fa1,fa4,fa1
	auipc	a5,0xf
	fld	fa3,-430(a5) # 0x49008 # debruijn32.0+0xc8>
	fmul.d	fa3,fa4,fa3
	li	a3,49
	fsub.d	fa2,fa5,fa1
	fsub.d	fa5,fa5,fa2
	fsub.d	fa5,fa5,fa1
	fsub.d	fa3,fa3,fa5
	fsub.d	fa5,fa2,fa3
	fmv.x.d	a4,fa5
	srli	a5,a4,0x34
	andi	a5,a5,2047
	subw	a2,a2,a5
	ble	a2,a3,0x3a23a # __rem_pio2+0x2ba>
	auipc	a5,0xf
	fld	fa1,-476(a5) # 0x49010 # debruijn32.0+0xd0>
	fmul.d	fa1,fa4,fa1
	auipc	a5,0xf
	fld	fa5,-480(a5) # 0x49018 # debruijn32.0+0xd8>
	fmul.d	fa4,fa4,fa5
	fsub.d	fa5,fa2,fa1
	fsub.d	fa3,fa2,fa5
	fsub.d	fa3,fa3,fa1
	fsub.d	fa3,fa4,fa3
	fsub.d	fa4,fa5,fa3
	fmv.x.d	a4,fa4
	sd	a4,0(s0)
	fmv.d.x	fa4,a4
	fsub.d	fa5,fa5,fa4
	fsub.d	fa5,fa5,fa3
	fsd	fa5,8(s0)
	j	0x39ffc # __rem_pio2+0x7c>
	fsub.d	fa5,fa0,fa0
	li	a0,0
	fsd	fa5,8(s0)
	fsd	fa5,0(s0)
	j	0x39ffc # __rem_pio2+0x7c>
	fmv.d	fa5,fa2
	sd	a4,0(s0)
	j	0x3a21e # __rem_pio2+0x29e>
	fld	fa5,0(sp)
	negw	a0,a0
	fneg.d	fa4,fa5
	fld	fa5,8(sp)
	fsd	fa4,0(s0)
	fneg.d	fa5,fa5
	fsd	fa5,8(s0)
	j	0x39ffc # __rem_pio2+0x7c>
	auipc	a4,0x9
	fld	fa5,-1200(a4) # 0x42da8 # udatatypename+0x3e0>
	fsub.d	fa4,fa4,fa5
	addiw	a0,a3,-1
	fmul.d	fa5,fa4,fa2
	fmv.d.x	fa2,a5
	fmul.d	fa3,fa4,fa1
	fsub.d	fa5,fa2,fa5
	fsub.d	fa2,fa5,fa3
	fmv.x.d	a4,fa2
	j	0x3a194 # __rem_pio2+0x214>
	auipc	a4,0x9
	fld	fa5,-1242(a4) # 0x42da8 # udatatypename+0x3e0>
	fadd.d	fa4,fa4,fa5
	addiw	a0,a3,1
	j	0x3a268 # __rem_pio2+0x2e8>
	fadd.d	fa5,fa0,fa5
	auipc	a5,0xf
	fld	fa4,-720(a5) # 0x48fc8 # debruijn32.0+0x88>
	li	a0,-2
	fadd.d	fa3,fa5,fa4
	fsub.d	fa5,fa5,fa3
	fsd	fa3,0(s0)
	fadd.d	fa5,fa5,fa4
	fsd	fa5,8(s0)
	j	0x39ffc # __rem_pio2+0x7c>
	fadd.d	fa5,fa0,fa5
	auipc	a5,0xf
	fld	fa4,-768(a5) # 0x48fb8 # debruijn32.0+0x78>
	li	a0,-1
	j	0x3a2a2 # __rem_pio2+0x322>
	fadd.d	fa5,fa0,fa5
	li	a0,-3
	j	0x3a2a2 # __rem_pio2+0x322>
	fadd.d	fa5,fa0,fa5
	auipc	a5,0xf
	fld	fa4,-752(a5) # 0x48fe0 # debruijn32.0+0xa0>
	li	a0,-4
	j	0x3a2a2 # __rem_pio2+0x322>
	jal	ra,0x37f18 # __stack_chk_fail>

__rem_pio2_large:
	auipc	a5,0x13
	ld	a5,64(a5) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	ld	a6,0(a5)
	addi	sp,sp,-800
	sd	a4,32(sp)
	auipc	a5,0xf
	addi	a5,a5,-618 # 0x49088 # init_jk>
	slli	a4,a4,0x2
	add	a5,a5,a4
	addiw	a7,a3,-1
	sd	s4,752(sp)
	sd	s10,704(sp)
	sd	s11,696(sp)
	sd	a3,8(sp)
	sd	ra,792(sp)
	sd	s0,784(sp)
	sd	s1,776(sp)
	sd	s2,768(sp)
	sd	s3,760(sp)
	sd	s5,744(sp)
	sd	s6,736(sp)
	sd	s7,728(sp)
	sd	s8,720(sp)
	sd	s9,712(sp)
	fsd	fs0,680(sp)
	fsd	fs1,672(sp)
	fsd	fs2,664(sp)
	fsd	fs3,656(sp)
	fsd	fs4,648(sp)
	fsd	fs5,640(sp)
	fsd	fs6,632(sp)
	sd	a6,616(sp)
	li	a4,-20
	sd	a1,24(sp)
	lw	s10,0(a5)
	mv	a3,a2
	mv	s4,a0
	sext.w	s11,a7
	blt	a2,a4,0x3a9d2 # __rem_pio2_large+0x6f2>
	li	a5,24
	addiw	s2,a2,-3
	divw	s2,s2,a5
	addiw	a5,s2,1
	slliw	s6,a5,0x2
	subw	s6,a5,s6
	slliw	s6,s6,0x3
	addw	s5,s6,a3
	addw	a4,a7,s10
	subw	a6,s2,a7
	sw	s5,44(sp)
	sext.w	a3,a4
	sext.w	a5,a6
	bltz	a3,0x3a3d4 # __rem_pio2_large+0xf4>
	addiw	a0,a4,1
	slli	a3,a5,0x2
	auipc	t1,0xf
	addi	t1,t1,-784 # 0x49098 # ipio2>
	addi	a4,sp,136
	add	a3,a3,t1
	addw	a0,a0,a6
	fmv.d.x	fa5,zero
	bltz	a5,0x3a3c8 # __rem_pio2_large+0xe8>
	lw	a6,0(a3)
	fcvt.d.w	fa5,a6
	fsd	fa5,0(a4)
	addiw	a5,a5,1
	addi	a4,a4,8
	addi	a3,a3,4
	bne	a5,a0,0x3a3b8 # __rem_pio2_large+0xd8>
	bltz	s10,0x3a426 # __rem_pio2_large+0x146>
	ld	a4,8(sp)
	addi	a5,s4,8
	addi	a6,sp,456
	addiw	a3,a4,-1
	slli	a3,a3,0x20
	srli	a3,a3,0x1d
	mv	a0,s11
	addw	t1,s10,a4
	add	a3,a3,a5
	addi	t3,sp,136
	slli	a4,a0,0x3
	fmv.d.x	fa4,zero
	add	a4,a4,t3
	mv	a5,s4
	bltz	s11,0x3a41a # __rem_pio2_large+0x13a>
	fld	fa5,0(a5)
	fld	fa3,0(a4)
	addi	a5,a5,8
	addi	a4,a4,-8
	fmul.d	fa5,fa5,fa3
	fadd.d	fa4,fa4,fa5
	bne	a5,a3,0x3a406 # __rem_pio2_large+0x126>
	fsd	fa4,0(a6)
	addiw	a0,a0,1
	addi	a6,a6,8
	bne	a0,t1,0x3a3f6 # __rem_pio2_large+0x116>
	slli	s3,s10,0x2
	addi	s3,s3,-8
	addi	s7,sp,56
	add	a5,s7,s3
	slli	s9,a7,0x20
	sd	a5,16(sp)
	srli	s9,s9,0x20
	addiw	s1,s10,-1
	auipc	a5,0xf
	fld	fs1,-1034(a5) # 0x49038 # debruijn32.0+0xf8>
	auipc	a5,0xf
	fld	fs0,-1034(a5) # 0x49040 # debruijn32.0+0x100>
	auipc	a5,0x9
	fld	fs2,-1706(a5) # 0x42da8 # udatatypename+0x3e0>
	auipc	a5,0xf
	fld	fs6,-1066(a5) # 0x49030 # debruijn32.0+0xf0>
	auipc	a5,0xf
	fld	fs5,-1090(a5) # 0x49020 # debruijn32.0+0xe0>
	auipc	a5,0xc
	fld	fs3,-1354(a5) # 0x45f20 # small_cnt_tab+0x88>
	slli	s9,s9,0x3
	slli	s1,s1,0x2
	addi	a5,sp,624
	add	s9,s9,s4
	mv	s3,s10
	addi	s0,sp,456
	add	s1,s1,a5
	slli	a5,s3,0x3
	addi	a4,sp,624
	add	a4,a4,a5
	fld	fa0,-168(a4)
	blez	s3,0x3a4d2 # __rem_pio2_large+0x1f2>
	addiw	a7,s3,-1
	slli	a7,a7,0x20
	srli	a7,a7,0x20
	addi	a4,a5,-8
	slli	a7,a7,0x2
	addi	a0,sp,60
	mv	a5,s7
	add	a4,a4,s0
	add	a7,a7,a0
	fmul.d	fa5,fa0,fs6
	fld	fa3,0(a4)
	addi	a5,a5,4
	addi	a4,a4,-8
	fcvt.w.d	a0,fa5,rtz
	fcvt.d.w	fa4,a0
	fmul.d	fa5,fa4,fs5
	fsub.d	fa5,fa0,fa5
	fadd.d	fa0,fa4,fa3
	fcvt.w.d	a0,fa5,rtz
	sw	a0,-4(a5)
	bne	a5,a7,0x3a4a8 # __rem_pio2_large+0x1c8>
	mv	a0,s5
	jal	ra,0x32a30 # scalbn>
	fmv.d	fs4,fa0
	fmul.d	fa0,fa0,fs1
	jal	ra,0x31cd0 # floor>
	fmul.d	fa0,fa0,fs0
	fsub.d	fs4,fs4,fa0
	fcvt.w.d	a4,fs4,rtz
	fcvt.d.w	fa5,a4
	sext.w	s6,a4
	fsub.d	fs4,fs4,fa5
	blez	s5,0x3a608 # __rem_pio2_large+0x328>
	addiw	a5,s3,-1
	slli	a5,a5,0x2
	addi	a3,sp,624
	add	a5,a5,a3
	lw	a7,-568(a5)
	li	a0,24
	subw	a0,a0,s5
	sraw	t3,a7,a0
	sllw	a0,t3,a0
	subw	a7,a7,a0
	li	a0,23
	subw	a0,a0,s5
	sw	a7,-568(a5)
	sraw	s8,a7,a0
	addw	s6,a4,t3
	bgtz	s8,0x3a622 # __rem_pio2_large+0x342>
	fmv.d.x	fa5,zero
	feq.d	a5,fs4,fa5
	beqz	a5,0x3a6ea # __rem_pio2_large+0x40a>
	addiw	t1,s3,-1
	blt	t1,s10,0x3a57e # __rem_pio2_large+0x29e>
	not	a5,s10
	addw	a5,a5,s3
	slli	t4,a5,0x20
	slli	a4,s3,0x2
	srli	t4,t4,0x20
	addi	a0,sp,48
	addi	a5,a4,-4
	slli	t4,t4,0x2
	add	a4,a4,a0
	sub	t4,a4,t4
	add	a5,a5,s7
	li	a4,0
	lw	a0,0(a5)
	addi	a5,a5,-4
	or	a4,a4,a0
	bne	a5,t4,0x3a570 # __rem_pio2_large+0x290>
	bnez	a4,0x3a8b4 # __rem_pio2_large+0x5d4>
	lw	a5,-568(s1)
	bnez	a5,0x3a8aa # __rem_pio2_large+0x5ca>
	ld	a5,16(sp)
	li	t1,1
	lw	a4,0(a5)
	addiw	t1,t1,1
	addi	a5,a5,-4
	beqz	a4,0x3a58a # __rem_pio2_large+0x2aa>
	addiw	t3,s3,1
	mv	a0,t3
	addw	t1,s3,t1
	ld	a4,8(sp)
	addw	a5,s11,t3
	addw	a7,s2,t3
	add	t4,s3,a4
	sub	t4,t4,a5
	slli	a7,a7,0x2
	slli	a5,a5,0x3
	slli	a0,a0,0x3
	slli	t4,t4,0x3
	auipc	a4,0xf
	addi	a4,a4,-1310 # 0x49098 # ipio2>
	addi	a3,sp,136
	add	a7,a7,a4
	add	a3,a3,a5
	add	a0,a0,s0
	addi	t4,t4,-8
	lw	a5,0(a7)
	fmv.d.x	fa4,zero
	fcvt.d.w	fa5,a5
	fsd	fa5,0(a3)
	bltz	s11,0x3a5f6 # __rem_pio2_large+0x316>
	add	a4,t4,a3
	mv	a5,s4
	j	0x3a5e8 # __rem_pio2_large+0x308>
	fld	fa5,0(a4)
	addi	a5,a5,8
	addi	a4,a4,-8
	fld	fa3,0(a5)
	fmul.d	fa5,fa5,fa3
	fadd.d	fa4,fa4,fa5
	bne	a5,s9,0x3a5e2 # __rem_pio2_large+0x302>
	fsd	fa4,0(a0)
	addiw	t3,t3,1
	addi	a7,a7,4
	addi	a3,a3,8
	addi	a0,a0,8
	ble	t3,t1,0x3a5c8 # __rem_pio2_large+0x2e8>
	mv	s3,t1
	j	0x3a480 # __rem_pio2_large+0x1a0>
	bnez	s5,0x3a890 # __rem_pio2_large+0x5b0>
	addiw	a5,s3,-1
	slli	a5,a5,0x2
	addi	a4,sp,624
	add	a5,a5,a4
	lw	a7,-568(a5)
	sraiw	s8,a7,0x17
	blez	s8,0x3a536 # __rem_pio2_large+0x256>
	addiw	s6,s6,1
	blez	s3,0x3a9ee # __rem_pio2_large+0x70e>
	lw	a5,56(sp)
	bnez	a5,0x3a88a # __rem_pio2_large+0x5aa>
	li	a4,1
	beq	s3,a4,0x3a69c # __rem_pio2_large+0x3bc>
	lw	a5,60(sp)
	addi	a0,sp,60
	addiw	t4,a4,1
	bnez	a5,0x3a64e # __rem_pio2_large+0x36e>
	addi	a0,a0,4
	beq	s3,t4,0x3a69c # __rem_pio2_large+0x3bc>
	lw	a5,0(a0)
	mv	a4,t4
	addiw	t4,a4,1
	beqz	a5,0x3a63e # __rem_pio2_large+0x35e>
	slli	a4,a4,0x2
	lui	t1,0x1000
	addi	a3,sp,624
	add	a4,a4,a3
	subw	a5,t1,a5
	sw	a5,-568(a4)
	ble	s3,t4,0x3a69a # __rem_pio2_large+0x3ba>
	addiw	a4,s3,-1
	subw	a4,a4,t4
	slli	a4,a4,0x20
	srli	a4,a4,0x20
	slli	a5,t4,0x2
	add	a4,a4,t4
	add	a0,a3,a5
	slli	a4,a4,0x2
	addi	t4,sp,60
	lw	a0,-568(a0)
	add	a5,a5,s7
	add	a4,a4,t4
	addiw	t1,t1,-1
	j	0x3a68e # __rem_pio2_large+0x3ae>
	lw	a0,0(a5)
	subw	a0,t1,a0
	sw	a0,0(a5)
	addi	a5,a5,4
	bne	a5,a4,0x3a68c # __rem_pio2_large+0x3ac>
	li	a5,1
	blez	s5,0x3a6c2 # __rem_pio2_large+0x3e2>
	li	a4,1
	beq	s5,a4,0x3a9ba # __rem_pio2_large+0x6da>
	li	a4,2
	bne	s5,a4,0x3a6c2 # __rem_pio2_large+0x3e2>
	addiw	a4,s3,-1
	slli	a4,a4,0x2
	addi	a3,sp,624
	add	a4,a4,a3
	lw	a0,-568(a4)
	slli	a0,a0,0x2a
	srli	a0,a0,0x2a
	sw	a0,-568(a4)
	li	a4,2
	bne	s8,a4,0x3a536 # __rem_pio2_large+0x256>
	fsub.d	fs4,fs2,fs4
	beqz	a5,0x3a536 # __rem_pio2_large+0x256>
	fmv.d	fa0,fs2
	mv	a0,s5
	jal	ra,0x32a30 # scalbn>
	fsub.d	fs4,fs4,fa0
	fmv.d.x	fa5,zero
	feq.d	a5,fs4,fa5
	bnez	a5,0x3a542 # __rem_pio2_large+0x262>
	lw	s0,44(sp)
	fmv.d	fa0,fs4
	negw	a0,s0
	jal	ra,0x32a30 # scalbn>
	auipc	a5,0xf
	fld	fa2,-1752(a5) # 0x49020 # debruijn32.0+0xe0>
	fle.d	a5,fa2,fa0
	beqz	a5,0x3aa3a # __rem_pio2_large+0x75a>
	auipc	a5,0xf
	fld	fa3,-1752(a5) # 0x49030 # debruijn32.0+0xf0>
	fmul.d	fa3,fa0,fa3
	addi	a5,sp,624
	slli	a4,s3,0x2
	addiw	t1,s3,1
	add	a4,a4,a5
	addi	a3,sp,624
	slli	a5,t1,0x2
	add	a5,a5,a3
	fcvt.w.d	a3,fa3,rtz
	addiw	s5,s0,24
	fcvt.d.w	fa4,a3
	fmul.d	fa4,fa4,fa2
	fsub.d	fa5,fa0,fa4
	fcvt.w.d	a2,fa5,rtz
	sw	a2,-568(a4)
	sw	a3,-568(a5)
	fmv.d	fa0,fs2
	mv	a0,s5
	sd	t1,8(sp)
	jal	ra,0x32a30 # scalbn>
	ld	t1,8(sp)
	bltz	t1,0x3a8ea # __rem_pio2_large+0x60a>
	slli	t5,t1,0x3
	addi	a1,sp,456
	slli	a5,t1,0x2
	add	a1,a1,t5
	add	a6,s7,a5
	addi	a3,sp,52
	mv	a5,a1
	auipc	a4,0xf
	fld	fa3,-1854(a4) # 0x49030 # debruijn32.0+0xf0>
	lw	a4,0(a6)
	addi	a5,a5,-8
	addi	a6,a6,-4
	fcvt.d.w	fa5,a4
	fmul.d	fa5,fa5,fa0
	fmul.d	fa0,fa0,fa3
	fsd	fa5,8(a5)
	bne	a6,a3,0x3a776 # __rem_pio2_large+0x496>
	addi	t6,sp,296
	mv	a6,t6
	mv	a0,t1
	li	t4,0
	auipc	a5,0xf
	fld	fa2,-1906(a5) # 0x49028 # debruijn32.0+0xe8>
	li	t0,-1
	bltz	s10,0x3a9d8 # __rem_pio2_large+0x6f8>
	fmv.d	fa5,fa2
	fmv.d.x	fa4,zero
	auipc	a3,0xf
	addi	a3,a3,-1896 # 0x49048 # PIo2>
	mv	a4,a1
	li	a5,0
	sext.w	a2,t4
	j	0x3a7cc # __rem_pio2_large+0x4ec>
	addi	a4,a4,8
	addi	a3,a3,8
	blt	a2,a5,0x3a7dc # __rem_pio2_large+0x4fc>
	fld	fa5,0(a3)
	fld	fa3,0(a4)
	addiw	a5,a5,1
	fmul.d	fa5,fa5,fa3
	fadd.d	fa4,fa4,fa5
	ble	a5,s10,0x3a7c2 # __rem_pio2_large+0x4e2>
	fsd	fa4,0(a6)
	addiw	a0,a0,-1
	addi	t4,t4,1
	addi	a6,a6,8
	addi	a1,a1,-8
	bne	a0,t0,0x3a7a4 # __rem_pio2_large+0x4c4>
	ld	a4,32(sp)
	li	a5,2
	blt	a5,a4,0x3a902 # __rem_pio2_large+0x622>
	bgtz	a4,0x3a9f2 # __rem_pio2_large+0x712>
	bnez	a4,0x3a81e # __rem_pio2_large+0x53e>
	fmv.d.x	fa5,zero
	add	a5,t6,t5
	addi	t5,t6,-8
	fld	fa4,0(a5)
	addi	a5,a5,-8
	fadd.d	fa5,fa5,fa4
	bne	t5,a5,0x3a806 # __rem_pio2_large+0x526>
	beqz	s8,0x3a81a # __rem_pio2_large+0x53a>
	fneg.d	fa5,fa5
	ld	a5,24(sp)
	fsd	fa5,0(a5)
	auipc	a5,0x13
	ld	a5,-1278(a5) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	ld	a4,616(sp)
	ld	a5,0(a5)
	andi	a0,s6,7
	bne	a4,a5,0x3aa8a # __rem_pio2_large+0x7aa>
	ld	ra,792(sp)
	ld	s0,784(sp)
	ld	s1,776(sp)
	ld	s2,768(sp)
	ld	s3,760(sp)
	ld	s4,752(sp)
	ld	s5,744(sp)
	ld	s6,736(sp)
	ld	s7,728(sp)
	ld	s8,720(sp)
	ld	s9,712(sp)
	ld	s10,704(sp)
	ld	s11,696(sp)
	fld	fs0,680(sp)
	fld	fs1,672(sp)
	fld	fs2,664(sp)
	fld	fs3,656(sp)
	fld	fs4,648(sp)
	fld	fs5,640(sp)
	fld	fs6,632(sp)
	addi	sp,sp,800
	ret
	li	t4,1
	li	a4,0
	j	0x3a64e # __rem_pio2_large+0x36e>
	fle.d	a5,fs3,fs4
	li	s8,0
	beqz	a5,0x3a536 # __rem_pio2_large+0x256>
	addiw	s6,a4,1
	li	s8,2
	bgtz	s3,0x3a628 # __rem_pio2_large+0x348>
	fsub.d	fs4,fs2,fs4
	j	0x3a536 # __rem_pio2_large+0x256>
	addiw	t3,s3,1
	mv	a0,t3
	mv	t1,t3
	j	0x3a59c # __rem_pio2_large+0x2bc>
	slli	a5,t1,0x2
	addi	a4,sp,624
	add	a4,a4,a5
	lw	a3,44(sp)
	lw	a4,-568(a4)
	addiw	s5,a3,-24
	bnez	a4,0x3a748 # __rem_pio2_large+0x468>
	addi	a5,a5,-4
	add	a5,a5,s7
	lw	a4,0(a5)
	addiw	t1,t1,-1
	addi	a5,a5,-4
	addiw	s5,s5,-24
	beqz	a4,0x3a8ce # __rem_pio2_large+0x5ee>
	fmv.d	fa0,fs2
	mv	a0,s5
	sd	t1,8(sp)
	jal	ra,0x32a30 # scalbn>
	ld	t1,8(sp)
	bgez	t1,0x3a75a # __rem_pio2_large+0x47a>
	ld	a4,32(sp)
	li	a5,2
	blt	a5,a4,0x3aa7c # __rem_pio2_large+0x79c>
	fmv.d.x	fa5,zero
	bgtz	a4,0x3aa08 # __rem_pio2_large+0x728>
	bnez	a4,0x3a81e # __rem_pio2_large+0x53e>
	beqz	s8,0x3a81a # __rem_pio2_large+0x53a>
	j	0x3a816 # __rem_pio2_large+0x536>
	ld	a4,32(sp)
	li	a5,3
	bne	a4,a5,0x3a81e # __rem_pio2_large+0x53e>
	beqz	t1,0x3a948 # __rem_pio2_large+0x668>
	addiw	a3,t1,-1
	slli	a3,a3,0x20
	addi	a5,sp,624
	add	a5,a5,t5
	srli	a3,a3,0x20
	addi	a4,sp,280
	fld	fa4,-328(a5)
	add	a4,a4,t5
	addi	a5,t5,-8
	slli	a3,a3,0x3
	add	a5,a5,t6
	sub	a4,a4,a3
	fld	fa5,0(a5)
	fmv.d	fa3,fa4
	addi	a5,a5,-8
	fadd.d	fa4,fa4,fa5
	fsub.d	fa5,fa5,fa4
	fsd	fa4,8(a5)
	fadd.d	fa5,fa5,fa3
	fsd	fa5,16(a5)
	bne	a4,a5,0x3a92c # __rem_pio2_large+0x64c>
	li	a5,1
	fmv.d.x	fa5,zero
	ble	t1,a5,0x3a9a8 # __rem_pio2_large+0x6c8>
	addiw	a3,t1,-2
	slli	a3,a3,0x20
	addi	a5,sp,624
	add	a5,a5,t5
	srli	a3,a3,0x20
	addi	a4,sp,280
	fld	fa4,-328(a5)
	slli	a3,a3,0x3
	addi	a5,t5,-8
	add	a4,a4,t5
	add	a5,a5,t6
	sub	a4,a4,a3
	fld	fa5,0(a5)
	fmv.d	fa3,fa4
	addi	a5,a5,-8
	fadd.d	fa4,fa4,fa5
	fsub.d	fa5,fa5,fa4
	fsd	fa4,8(a5)
	fadd.d	fa5,fa5,fa3
	fsd	fa5,16(a5)
	bne	a5,a4,0x3a970 # __rem_pio2_large+0x690>
	addi	a5,t6,-8
	fmv.d.x	fa5,zero
	add	a5,a5,t5
	sub	a5,a5,a3
	add	t5,t5,t6
	fld	fa4,0(t5)
	addi	t5,t5,-8
	fadd.d	fa5,fa5,fa4
	bne	a5,t5,0x3a99a # __rem_pio2_large+0x6ba>
	fld	fa3,296(sp)
	fld	fa4,304(sp)
	bnez	s8,0x3aa4e # __rem_pio2_large+0x76e>
	ld	a5,24(sp)
	fsd	fa3,0(a5)
	fsd	fa4,8(a5)
	fsd	fa5,16(a5)
	j	0x3a81e # __rem_pio2_large+0x53e>
	addiw	a4,s3,-1
	slli	a4,a4,0x2
	addi	a3,sp,624
	add	a4,a4,a3
	lw	a0,-568(a4)
	slli	a0,a0,0x29
	srli	a0,a0,0x29
	sw	a0,-568(a4)
	j	0x3a6c2 # __rem_pio2_large+0x3e2>
	li	s6,-24
	li	s2,0
	j	0x3a386 # __rem_pio2_large+0xa6>
	fmv.d.x	fa4,zero
	addiw	a0,a0,-1
	addi	t4,t4,1
	fsd	fa4,0(a6)
	addi	a1,a1,-8
	addi	a6,a6,8
	bne	a0,t0,0x3a7a4 # __rem_pio2_large+0x4c4>
	j	0x3a7ec # __rem_pio2_large+0x50c>
	li	a5,0
	j	0x3a69c # __rem_pio2_large+0x3bc>
	fmv.d.x	fa5,zero
	add	t5,t5,t6
	addi	a5,sp,288
	fld	fa4,0(t5)
	addi	t5,t5,-8
	fadd.d	fa5,fa5,fa4
	bne	a5,t5,0x3a9fa # __rem_pio2_large+0x71a>
	bnez	s8,0x3aa64 # __rem_pio2_large+0x784>
	ld	a5,24(sp)
	fld	fa4,296(sp)
	fsd	fa5,0(a5)
	fsub.d	fa5,fa4,fa5
	blez	t1,0x3aa34 # __rem_pio2_large+0x754>
	addi	a4,sp,304
	li	a5,1
	fld	fa4,0(a4)
	addiw	a5,a5,1
	addi	a4,a4,8
	fadd.d	fa5,fa5,fa4
	ble	a5,t1,0x3aa1e # __rem_pio2_large+0x73e>
	beqz	s8,0x3aa34 # __rem_pio2_large+0x754>
	fneg.d	fa5,fa5
	ld	a5,24(sp)
	fsd	fa5,8(a5)
	j	0x3a81e # __rem_pio2_large+0x53e>
	fcvt.w.d	a4,fa0,rtz
	slli	a5,s3,0x2
	addi	a3,sp,624
	add	a5,a5,a3
	sw	a4,-568(a5)
	mv	t1,s3
	j	0x3a748 # __rem_pio2_large+0x468>
	ld	a5,24(sp)
	fneg.d	fa3,fa3
	fneg.d	fa4,fa4
	fneg.d	fa5,fa5
	fsd	fa3,0(a5)
	fsd	fa4,8(a5)
	fsd	fa5,16(a5)
	j	0x3a81e # __rem_pio2_large+0x53e>
	fneg.d	fa4,fa5
	ld	a5,24(sp)
	fsd	fa4,0(a5)
	fld	fa4,296(sp)
	fsub.d	fa5,fa4,fa5
	bgtz	t1,0x3aa1a # __rem_pio2_large+0x73a>
	fneg.d	fa5,fa5
	j	0x3aa34 # __rem_pio2_large+0x754>
	ld	a4,32(sp)
	li	a5,3
	fmv.d.x	fa5,zero
	beq	a4,a5,0x3a9a8 # __rem_pio2_large+0x6c8>
	j	0x3a81e # __rem_pio2_large+0x53e>
	jal	ra,0x37f18 # __stack_chk_fail>

__signbitl:
	srli	a0,a1,0x3f
	ret

__sin:
	fmul.d	fa5,fa0,fa0
	auipc	a5,0xf
	fld	fa4,216(a5) # 0x49b70 # ipio2+0xad8>
	auipc	a5,0xf
	fld	fa2,192(a5) # 0x49b60 # ipio2+0xac8>
	auipc	a5,0xf
	fld	ft3,208(a5) # 0x49b78 # ipio2+0xae0>
	auipc	a5,0xf
	fld	ft2,184(a5) # 0x49b68 # ipio2+0xad0>
	auipc	a5,0xf
	fld	ft1,200(a5) # 0x49b80 # ipio2+0xae8>
	fmul.d	fa4,fa5,fa4
	fmul.d	fa3,fa5,fa5
	fmul.d	fa2,fa5,fa2
	fmul.d	ft0,fa0,fa5
	fsub.d	fa4,fa4,ft3
	fmul.d	fa3,fa3,fa5
	fsub.d	fa2,fa2,ft2
	fmul.d	fa4,fa4,fa5
	fmul.d	fa3,fa3,fa2
	fadd.d	fa4,fa4,ft1
	fadd.d	fa4,fa3,fa4
	bnez	a0,0x3ab08 # __sin+0x74>
	fmul.d	fa5,fa5,fa4
	auipc	a5,0xf
	fld	fa4,150(a5) # 0x49b88 # ipio2+0xaf0>
	fsub.d	fa5,fa5,fa4
	fmul.d	fa5,fa5,ft0
	fadd.d	fa0,fa5,fa0
	ret
	auipc	a5,0xb
	fld	fa3,1048(a5) # 0x45f20 # small_cnt_tab+0x88>
	fmul.d	fa3,fa1,fa3
	fmul.d	fa4,fa4,ft0
	auipc	a5,0xf
	fld	fa2,120(a5) # 0x49b90 # ipio2+0xaf8>
	fmul.d	ft0,ft0,fa2
	fsub.d	fa4,fa3,fa4
	fmul.d	fa5,fa4,fa5
	fsub.d	fa5,fa5,fa1
	fsub.d	fa5,fa5,ft0
	fsub.d	fa0,fa0,fa5
	ret

__tan:
	fmv.x.d	a5,fa0
	lui	a2,0x3fe59
	addi	a2,a2,1063 # 0x3fe59427 # __BSS_END__+0x3fe0b09f>
	srai	a1,a5,0x20
	slli	a4,a1,0x21
	srli	a4,a4,0x21
	li	a3,0
	bleu	a4,a2,0x3ab90 # __tan+0x56>
	srliw	a3,a1,0x1f
	beqz	a3,0x3ab68 # __tan+0x2e>
	fneg.d	fa5,fa0
	fneg.d	fa1,fa1
	fmv.x.d	a5,fa5
	fmv.d.x	fa3,a5
	auipc	a2,0xb
	fld	fa5,956(a2) # 0x45f28 # small_cnt_tab+0x90>
	auipc	a2,0xf
	fld	fa4,36(a2) # 0x49b98 # ipio2+0xb00>
	fsub.d	fa4,fa4,fa1
	fsub.d	fa5,fa5,fa3
	fmv.d.x	fa1,zero
	fadd.d	fa5,fa4,fa5
	fmv.x.d	a5,fa5
	fmv.d.x	fa5,a5
	auipc	a2,0xf
	fld	fa4,12(a2) # 0x49ba0 # ipio2+0xb08>
	auipc	a2,0xf
	fld	ft8,12(a2) # 0x49ba8 # ipio2+0xb10>
	fmul.d	ft0,fa5,fa5
	auipc	a2,0xf
	fld	fa3,40(a2) # 0x49bd0 # ipio2+0xb38>
	auipc	a2,0xf
	fld	fa7,40(a2) # 0x49bd8 # ipio2+0xb40>
	auipc	a2,0xf
	fld	fa6,-8(a2) # 0x49bb0 # ipio2+0xb18>
	auipc	a2,0xf
	fld	ft7,32(a2) # 0x49be0 # ipio2+0xb48>
	auipc	a2,0xf
	fld	fa5,-16(a2) # 0x49bb8 # ipio2+0xb20>
	auipc	a2,0xf
	fld	ft6,24(a2) # 0x49be8 # ipio2+0xb50>
	fmul.d	fa0,ft0,ft0
	auipc	a2,0xf
	fld	ft5,-28(a2) # 0x49bc0 # ipio2+0xb28>
	auipc	a2,0xf
	fld	ft4,12(a2) # 0x49bf0 # ipio2+0xb58>
	auipc	a2,0xf
	fld	ft3,-36(a2) # 0x49bc8 # ipio2+0xb30>
	auipc	a2,0xf
	fld	ft2,4(a2) # 0x49bf8 # ipio2+0xb60>
	fmv.d.x	fa2,a5
	fmul.d	fa4,fa0,fa4
	fmul.d	fa3,fa0,fa3
	fmul.d	ft1,fa2,ft0
	auipc	a2,0xf
	fld	fa2,-12(a2) # 0x49c00 # ipio2+0xb68>
	lui	a2,0x3fe59
	addi	a2,a2,1063 # 0x3fe59427 # __BSS_END__+0x3fe0b09f>
	fadd.d	fa4,fa4,ft8
	fadd.d	fa3,fa3,fa7
	fmul.d	fa2,ft1,fa2
	fmul.d	fa4,fa4,fa0
	fmul.d	fa3,fa3,fa0
	fadd.d	fa4,fa4,fa6
	fadd.d	fa3,fa3,ft7
	fmul.d	fa4,fa4,fa0
	fmul.d	fa3,fa3,fa0
	fadd.d	fa5,fa4,fa5
	fadd.d	fa4,fa3,ft6
	fmul.d	fa5,fa5,fa0
	fmul.d	fa4,fa4,fa0
	fadd.d	fa5,fa5,ft5
	fadd.d	fa4,fa4,ft4
	fmul.d	fa5,fa5,fa0
	fmul.d	fa4,fa4,fa0
	fadd.d	fa5,fa5,ft3
	fadd.d	fa4,fa4,ft2
	fmul.d	fa5,fa5,ft0
	fadd.d	fa5,fa5,fa4
	fmul.d	fa5,fa5,ft1
	fadd.d	fa5,fa5,fa1
	fmul.d	fa5,fa5,ft0
	fadd.d	fa1,fa5,fa1
	fmv.d.x	fa5,a5
	fadd.d	fa1,fa2,fa1
	fadd.d	fa5,fa5,fa1
	fmv.x.d	a1,fa5
	bltu	a2,a4,0x3acfe # __tan+0x1c4>
	beqz	a0,0x3acf8 # __tan+0x1be>
	fmv.d.x	fa4,a1
	auipc	a4,0xc
	fld	fa5,-1138(a4) # 0x46828 # __exp_data+0x888>
	li	a4,-1
	fdiv.d	fa5,fa5,fa4
	slli	a4,a4,0x20
	and	a1,a1,a4
	fmv.d.x	fa4,a5
	fmv.d.x	fa3,a1
	fmv.x.d	a3,fa5
	fmv.d.x	fa5,a1
	fsub.d	fa5,fa5,fa4
	auipc	a5,0x8
	fld	fa4,232(a5) # 0x42da8 # udatatypename+0x3e0>
	and	a5,a3,a4
	fsub.d	fa1,fa1,fa5
	fmv.d.x	fa5,a5
	fmul.d	fa5,fa5,fa3
	fmv.d.x	fa3,a5
	fmul.d	fa1,fa1,fa3
	fadd.d	fa4,fa5,fa4
	fmv.d.x	fa5,a3
	fadd.d	fa1,fa1,fa4
	fmul.d	fa1,fa1,fa5
	fadd.d	fa5,fa1,fa3
	fmv.x.d	a1,fa5
	fmv.d.x	fa0,a1
	ret
	slliw	a0,a0,0x1
	li	a4,1
	subw	a0,a4,a0
	fcvt.d.w	fa3,a0
	fmul.d	fa4,fa5,fa5
	fadd.d	fa5,fa5,fa3
	fdiv.d	fa5,fa4,fa5
	fsub.d	fa1,fa1,fa5
	fmv.d.x	fa5,a5
	fadd.d	fa1,fa1,fa5
	fadd.d	fa1,fa1,fa1
	fsub.d	fa5,fa3,fa1
	fmv.x.d	a1,fa5
	beqz	a3,0x3acf8 # __tan+0x1be>
	fneg.d	fa5,fa5
	fmv.x.d	a1,fa5
	fmv.d.x	fa0,a1
	ret

atan:
	fmv.x.d	a5,fa0
	addi	sp,sp,-48
	sd	s1,24(sp)
	srai	a3,a5,0x20
	slli	s1,a3,0x21
	sd	s0,32(sp)
	sd	ra,40(sp)
	lui	a4,0x44100
	srli	s1,s1,0x21
	slti	s0,a5,0
	bltu	s1,a4,0x3ad7c # atan+0x3c>
	slli	a3,a5,0x1
	li	a4,2047
	srli	a3,a3,0x1
	slli	a4,a4,0x34
	bleu	a3,a4,0x3ae90 # atan+0x150>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	addi	sp,sp,48
	ret
	lui	a4,0x3fdc0
	bleu	a4,s1,0x3aeae # atan+0x16e>
	lui	a2,0x3e400
	li	a4,-1
	bltu	s1,a2,0x3aeea # atan+0x1aa>
	fmv.d.x	fa2,a5
	auipc	a3,0xf
	fld	fa4,-386(a3) # 0x49c10 # ipio2+0xb78>
	auipc	a3,0xf
	fld	ft6,-386(a3) # 0x49c18 # ipio2+0xb80>
	fmul.d	fa1,fa2,fa2
	auipc	a3,0xf
	fld	fa3,-358(a3) # 0x49c40 # ipio2+0xba8>
	auipc	a3,0xf
	fld	ft5,-398(a3) # 0x49c20 # ipio2+0xb88>
	auipc	a3,0xf
	fld	fa0,-366(a3) # 0x49c48 # ipio2+0xbb0>
	auipc	a3,0xf
	fld	fa5,-406(a3) # 0x49c28 # ipio2+0xb90>
	auipc	a3,0xf
	fld	ft4,-374(a3) # 0x49c50 # ipio2+0xbb8>
	auipc	a3,0xf
	fld	ft2,-414(a3) # 0x49c30 # ipio2+0xb98>
	fmul.d	fa2,fa1,fa1
	auipc	a3,0xf
	fld	ft3,-386(a3) # 0x49c58 # ipio2+0xbc0>
	auipc	a3,0xf
	fld	ft0,-426(a3) # 0x49c38 # ipio2+0xba0>
	auipc	a3,0xf
	fld	ft1,-394(a3) # 0x49c60 # ipio2+0xbc8>
	li	a3,-1
	fmul.d	fa4,fa2,fa4
	fmul.d	fa3,fa2,fa3
	fadd.d	fa4,fa4,ft6
	fsub.d	fa0,fa3,fa0
	fmul.d	fa4,fa4,fa2
	fmul.d	fa0,fa0,fa2
	fadd.d	fa4,fa4,ft5
	fsub.d	fa0,fa0,ft4
	fmul.d	fa4,fa4,fa2
	fmul.d	fa0,fa0,fa2
	fadd.d	fa5,fa4,fa5
	fsub.d	fa0,fa0,ft3
	fmv.d.x	fa4,a5
	fmul.d	fa5,fa5,fa2
	fmul.d	fa0,fa0,fa2
	fadd.d	fa5,fa5,ft2
	fsub.d	fa0,fa0,ft1
	fmul.d	fa5,fa5,fa2
	fmul.d	fa0,fa0,fa2
	fadd.d	fa5,fa5,ft0
	fmul.d	fa5,fa5,fa1
	fadd.d	fa5,fa5,fa0
	fmul.d	fa5,fa5,fa4
	beq	a4,a3,0x3af2e # atan+0x1ee>
	slli	a4,a4,0x3
	auipc	a3,0xf
	addi	a3,a3,-462 # 0x49c88 # atanlo>
	add	a3,a3,a4
	fld	fa0,0(a3)
	auipc	a3,0xf
	addi	a3,a3,-506 # 0x49c68 # atanhi>
	add	a4,a4,a3
	fsub.d	fa0,fa5,fa0
	fmv.d.x	fa5,a5
	fld	fa4,0(a4)
	fsub.d	fa0,fa0,fa5
	fsub.d	fa0,fa4,fa0
	beqz	s0,0x3ad72 # atan+0x32>
	fneg.d	fa0,fa0
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	addi	sp,sp,48
	ret
	auipc	a5,0xb
	fld	fa0,128(a5) # 0x45f10 # small_cnt_tab+0x78>
	auipc	a5,0xb
	fld	fa5,112(a5) # 0x45f08 # small_cnt_tab+0x70>
	fadd.d	fa0,fa0,fa5
	beqz	s0,0x3ad72 # atan+0x32>
	fneg.d	fa0,fa0
	j	0x3ae86 # atan+0x146>
	jal	ra,0x32a24 # fabs>
	lui	a5,0x3ff30
	bleu	a5,s1,0x3aefe # atan+0x1be>
	lui	a5,0x3fe60
	bleu	a5,s1,0x3af48 # atan+0x208>
	fadd.d	fa5,fa0,fa0
	auipc	a5,0x8
	fld	fa4,-286(a5) # 0x42da8 # udatatypename+0x3e0>
	auipc	a5,0x7
	fld	fa3,506(a5) # 0x420c8 # log_2.0+0x178>
	fadd.d	fa0,fa0,fa3
	li	a4,0
	fsub.d	fa5,fa5,fa4
	fdiv.d	fa5,fa5,fa0
	fmv.x.d	a5,fa5
	j	0x3ad8e # atan+0x4e>
	lui	a4,0x7ff00
	and	a3,a3,a4
	bnez	a3,0x3ad72 # atan+0x32>
	fcvt.s.d	fa5,fa0
	fsw	fa5,12(sp)
	j	0x3ad72 # atan+0x32>
	lui	a5,0x40038
	bleu	a5,s1,0x3af34 # atan+0x1f4>
	auipc	a5,0xf
	fld	fa4,-766(a5) # 0x49c08 # ipio2+0xb70>
	fmul.d	fa5,fa0,fa4
	auipc	a5,0x8
	fld	fa3,-362(a5) # 0x42da8 # udatatypename+0x3e0>
	fsub.d	fa0,fa0,fa4
	li	a4,2
	fadd.d	fa5,fa5,fa3
	fdiv.d	fa5,fa0,fa5
	fmv.x.d	a5,fa5
	j	0x3ad8e # atan+0x4e>
	fsub.d	fa0,fa4,fa5
	j	0x3ad72 # atan+0x32>
	auipc	a5,0xc
	fld	fa5,-1804(a5) # 0x46828 # __exp_data+0x888>
	fdiv.d	fa5,fa5,fa0
	li	a4,3
	fmv.x.d	a5,fa5
	j	0x3ad8e # atan+0x4e>
	auipc	a5,0x8
	fld	fa5,-416(a5) # 0x42da8 # udatatypename+0x3e0>
	fsub.d	fa4,fa0,fa5
	fadd.d	fa0,fa0,fa5
	li	a4,1
	fdiv.d	fa5,fa4,fa0
	fmv.x.d	a5,fa5
	j	0x3ad8e # atan+0x4e>

copysignl:
	slli	a5,a1,0x1
	lui	a4,0xffff8
	srli	a3,a3,0x30
	and	a3,a3,a4
	srli	a5,a5,0x31
	or	a5,a5,a3
	slli	a1,a1,0x10
	slli	a5,a5,0x30
	srli	a1,a1,0x10
	or	a1,a1,a5
	ret

fabsl:
	slli	a5,a1,0x1
	srli	a5,a5,0x31
	slli	a1,a1,0x10
	slli	a5,a5,0x30
	srli	a1,a1,0x10
	or	a1,a1,a5
	ret

fmodl:
	addi	sp,sp,-96
	sd	s0,80(sp)
	sd	s9,8(sp)
	mv	s0,a3
	mv	s9,a2
	sd	s1,72(sp)
	sd	s3,56(sp)
	mv	s1,a1
	mv	s3,a0
	li	a2,0
	li	a3,0
	mv	a0,s9
	mv	a1,s0
	sd	ra,88(sp)
	sd	s2,64(sp)
	sd	s4,48(sp)
	sd	s5,40(sp)
	sd	s6,32(sp)
	sd	s7,24(sp)
	sd	s8,16(sp)
	sd	s10,0(sp)
	jal	ra,0x3f2cc # __eqtf2>
	bnez	a0,0x3afec # fmodl+0x60>
	mv	a2,s9
	mv	a3,s0
	mv	a0,s3
	mv	a1,s1
	jal	ra,0x3f4ca # __multf3>
	mv	a2,a0
	mv	a3,a1
	jal	ra,0x3ead4 # __divtf3>
	ld	ra,88(sp)
	ld	s0,80(sp)
	ld	s1,72(sp)
	ld	s2,64(sp)
	ld	s3,56(sp)
	ld	s4,48(sp)
	ld	s5,40(sp)
	ld	s6,32(sp)
	ld	s7,24(sp)
	ld	s8,16(sp)
	ld	s9,8(sp)
	ld	s10,0(sp)
	addi	sp,sp,96
	ret
	mv	a0,s9
	mv	a1,s0
	jal	ra,0x39eea # __fpclassifyl>
	beqz	a0,0x3afbc # fmodl+0x30>
	lui	a5,0x8
	srli	s5,s1,0x30
	addi	a5,a5,-1
	and	s8,s5,a5
	beq	s8,a5,0x3afbc # fmodl+0x30>
	srli	s7,s0,0x30
	li	a3,-1
	srli	a3,a3,0x10
	and	s7,s7,a5
	and	s0,s0,a3
	and	a5,s1,a3
	slli	a1,s7,0x30
	slli	s6,s8,0x30
	or	s0,s0,a1
	or	s6,a5,s6
	mv	a2,s9
	mv	a3,s0
	mv	a0,s3
	mv	a1,s6
	jal	ra,0x3f412 # __letf2>
	bgtz	a0,0x3b04a # fmodl+0xbe>
	mv	a2,s9
	mv	a3,s0
	mv	a0,s3
	mv	a1,s6
	jal	ra,0x3f2cc # __eqtf2>
	beqz	a0,0x3b0d0 # fmodl+0x144>
	mv	a0,s3
	mv	a1,s1
	j	0x3afd0 # fmodl+0x44>
	mv	s2,s3
	mv	s4,s9
	bnez	s8,0x3b072 # fmodl+0xe6>
	auipc	a5,0xf
	addi	a5,a5,-930 # 0x49cb0 # atanlo+0x28>
	ld	a2,0(a5)
	ld	a3,8(a5)
	mv	a1,s6
	mv	a0,s3
	jal	ra,0x3f4ca # __multf3>
	srli	s8,a1,0x30
	mv	s6,a1
	mv	s2,a0
	addiw	s8,s8,-120
	beqz	s7,0x3b138 # fmodl+0x1ac>
	sext.w	s7,s7
	li	a1,-1
	srli	a1,a1,0x10
	li	a4,1
	slli	a4,a4,0x30
	and	s6,s6,a1
	and	s0,s0,a1
	or	a5,s6,a4
	or	s0,s0,a4
	blt	s7,s8,0x3b0a2 # fmodl+0x116>
	j	0x3b0de # fmodl+0x152>
	beqz	a3,0x3b0d0 # fmodl+0x144>
	add	a5,a6,a1
	slli	s2,a2,0x1
	addiw	s8,s8,-1
	beq	s7,s8,0x3b0e0 # fmodl+0x154>
	sltu	a3,s2,s4
	sub	a4,a5,s0
	sub	a2,s2,s4
	sub	a4,a4,a3
	or	a3,a4,a2
	slli	a6,a4,0x1
	srli	a1,a2,0x3f
	srli	t1,s2,0x3f
	slli	a7,a5,0x1
	bgez	a4,0x3b092 # fmodl+0x106>
	add	a5,t1,a7
	slli	s2,s2,0x1
	j	0x3b09c # fmodl+0x110>
	li	a2,0
	li	a3,0
	mv	a0,s3
	mv	a1,s1
	jal	ra,0x3f4ca # __multf3>
	j	0x3afd0 # fmodl+0x44>
	mv	s7,s8
	sub	s0,a5,s0
	sltu	a4,s2,s4
	sub	s0,s0,a4
	bltz	s0,0x3b0fa # fmodl+0x16e>
	sub	s2,s2,s4
	or	a5,s0,s2
	beqz	a5,0x3b0d0 # fmodl+0x144>
	mv	a5,s0
	srli	a4,a5,0x30
	bnez	a4,0x3b112 # fmodl+0x186>
	slli	a5,a5,0x1
	srli	a3,s2,0x3f
	srli	a4,a5,0x30
	slli	s2,s2,0x1
	add	a5,a5,a3
	addiw	s7,s7,-1
	beqz	a4,0x3b100 # fmodl+0x174>
	lui	a4,0xffff8
	and	s5,s5,a4
	slliw	s5,s5,0x10
	sraiw	s5,s5,0x10
	blez	s7,0x3b15a # fmodl+0x1ce>
	or	s5,s5,s7
	slli	a1,a5,0x10
	slli	s5,s5,0x30
	srli	a1,a1,0x10
	mv	a0,s2
	or	a1,a1,s5
	j	0x3afd0 # fmodl+0x44>
	auipc	a5,0xf
	addi	a5,a5,-1160 # 0x49cb0 # atanlo+0x28>
	ld	a2,0(a5)
	ld	a3,8(a5)
	mv	a1,s0
	mv	a0,s9
	jal	ra,0x3f4ca # __multf3>
	srli	s7,a1,0x30
	mv	s0,a1
	mv	s4,a0
	addiw	s7,s7,-120
	j	0x3b078 # fmodl+0xec>
	auipc	a4,0xf
	addi	a4,a4,-1178 # 0x49cc0 # atanlo+0x38>
	addiw	s7,s7,120
	or	s5,s5,s7
	slli	a5,a5,0x10
	ld	a2,0(a4)
	ld	a3,8(a4)
	slli	s5,s5,0x30
	srli	a1,a5,0x10
	mv	a0,s2
	or	a1,a1,s5
	jal	ra,0x3f4ca # __multf3>
	j	0x3afd0 # fmodl+0x44>

frexpl:
	lui	a4,0x8
	addi	sp,sp,-32
	srli	a5,a1,0x30
	addi	a4,a4,-1
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	s2,0(sp)
	sd	ra,24(sp)
	and	a3,a5,a4
	mv	s0,a1
	mv	s1,a0
	mv	s2,a2
	beqz	a3,0x3b1d6 # frexpl+0x54>
	sext.w	a2,a3
	beq	a3,a4,0x3b1ca # frexpl+0x48>
	lui	a1,0xffff8
	and	a5,a5,a1
	lui	a1,0x4
	addi	a1,a1,-2
	lui	a4,0xffffc
	or	a5,a5,a1
	addiw	a4,a4,2
	slli	a1,s0,0x10
	addw	a2,a2,a4
	slli	a5,a5,0x30
	srli	s0,a1,0x10
	sw	a2,0(s2)
	or	a1,s0,a5
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret
	li	a2,0
	jal	ra,0x3f2cc # __eqtf2>
	bnez	a0,0x3b1f2 # frexpl+0x70>
	ld	ra,24(sp)
	mv	a1,s0
	ld	s0,16(sp)
	sw	zero,0(s2)
	mv	a0,s1
	ld	s2,0(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret
	auipc	a5,0xf
	addi	a5,a5,-1346 # 0x49cb0 # atanlo+0x28>
	ld	a2,0(a5)
	ld	a3,8(a5)
	mv	a0,s1
	mv	a1,s0
	jal	ra,0x3f4ca # __multf3>
	mv	a2,s2
	jal	ra,0x3b182 # frexpl>
	lw	a5,0(s2)
	ld	ra,24(sp)
	ld	s0,16(sp)
	addiw	a5,a5,-120
	sw	a5,0(s2)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret

scalbnl:
	addi	sp,sp,-32
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	ra,24(sp)
	sd	s2,0(sp)
	lui	s1,0x4
	mv	s0,a2
	blt	a2,s1,0x3b296 # scalbnl+0x72>
	auipc	s2,0xf
	addi	s2,s2,-1382 # 0x49cd0 # atanlo+0x48>
	ld	a3,8(s2)
	ld	a2,0(s2)
	jal	ra,0x3f4ca # __multf3>
	lui	a3,0xffffc
	addiw	a3,a3,1
	addw	a3,a3,s0
	mv	a4,a0
	mv	a5,a1
	blt	a3,s1,0x3b272 # scalbnl+0x4e>
	ld	a3,8(s2)
	ld	a2,0(s2)
	jal	ra,0x3f4ca # __multf3>
	lui	a3,0xffff8
	addiw	a3,a3,2
	addw	a3,a3,s0
	mv	a4,a0
	mv	a5,a1
	ble	s1,a3,0x3b2ec # scalbnl+0xc8>
	lui	a2,0x4
	addiw	a2,a2,-1
	addw	a3,a3,a2
	slli	a3,a3,0x30
	auipc	a2,0xd
	ld	a2,1574(a2) # 0x488a0 # app_mask+0x208>
	mv	a0,a4
	mv	a1,a5
	jal	ra,0x3f4ca # __multf3>
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	addi	sp,sp,32
	ret
	lui	s1,0xffffc
	addi	s1,s1,2
	mv	a4,a0
	mv	a5,a1
	mv	a3,a2
	ble	s1,a2,0x3b272 # scalbnl+0x4e>
	auipc	s2,0xf
	addi	s2,s2,-1476 # 0x49ce0 # atanlo+0x58>
	ld	a3,8(s2)
	ld	a2,0(s2)
	jal	ra,0x3f4ca # __multf3>
	lui	a5,0x4
	addiw	a5,a5,-115
	addw	a3,a5,s0
	mv	a4,a0
	mv	a5,a1
	ble	s1,a3,0x3b272 # scalbnl+0x4e>
	ld	a3,8(s2)
	ld	a2,0(s2)
	jal	ra,0x3f4ca # __multf3>
	lui	a5,0x8
	addiw	a5,a5,-230
	addw	a3,a5,s0
	mv	a4,a0
	mv	a5,a1
	ble	s1,a3,0x3b272 # scalbnl+0x4e>
	mv	a3,s1
	j	0x3b272 # scalbnl+0x4e>
	lui	a3,0x4
	addiw	a3,a3,-1
	j	0x3b272 # scalbnl+0x4e>

dummy3:
	ret

__mremap:
	addi	sp,sp,-96
	sd	s0,48(sp)
	auipc	s0,0x12
	ld	s0,40(s0) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	ld	t1,0(s0)
	sd	a5,72(sp)
	li	a5,-3
	sd	ra,56(sp)
	sd	a4,64(sp)
	sd	a6,80(sp)
	sd	a7,88(sp)
	sd	t1,40(sp)
	srli	a5,a5,0x1
	bltu	a5,a2,0x3b358 # __mremap+0x64>
	andi	a5,a3,2
	li	a4,0
	bnez	a5,0x3b33c # __mremap+0x48>
	li	a7,216
	ecall
	jal	ra,0x394da # __syscall_ret>
	ld	a4,40(sp)
	ld	a5,0(s0)
	bne	a4,a5,0x3b364 # __mremap+0x70>
	ld	ra,56(sp)
	ld	s0,48(sp)
	addi	sp,sp,96
	ret
	sd	a3,24(sp)
	sd	a2,16(sp)
	sd	a1,8(sp)
	sd	a0,0(sp)
	jal	ra,0x32e14 # __vm_wait>
	addi	a5,sp,64
	ld	a4,64(sp)
	ld	a3,24(sp)
	ld	a2,16(sp)
	ld	a1,8(sp)
	ld	a0,0(sp)
	sd	a5,32(sp)
	j	0x3b320 # __mremap+0x2c>
	jal	ra,0x2f900 # __errno_location>
	li	a5,12
	sw	a5,0(a0)
	li	a0,-1
	j	0x3b32c # __mremap+0x38>
	jal	ra,0x37f18 # __stack_chk_fail>

wctomb:
	beqz	a0,0x3b37c # wctomb+0x14>
	addi	sp,sp,-16
	li	a2,0
	sd	ra,8(sp)
	jal	ra,0x3deee # wcrtomb>
	ld	ra,8(sp)
	sext.w	a0,a0
	addi	sp,sp,16
	ret
	li	a0,0
	ret

child:
	auipc	a5,0x12
	ld	a5,-96(a5) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	addi	sp,sp,-400
	ld	a5,0(a5)
	sd	s1,376(sp)
	addi	s1,sp,144
	li	a2,152
	li	a1,0
	sd	s9,312(sp)
	mv	s9,a0
	mv	a0,s1
	sd	ra,392(sp)
	sd	a5,296(sp)
	sd	s0,384(sp)
	sd	s2,368(sp)
	sd	s3,360(sp)
	sd	s4,352(sp)
	sd	s5,344(sp)
	sd	s6,336(sp)
	sd	s7,328(sp)
	sd	s8,320(sp)
	sd	s10,304(sp)
	jal	ra,0x3683a # memset>
	lw	a0,0(s9)
	ld	s2,152(s9)
	lw	s8,4(s9)
	ld	s10,144(s9)
	addi	s4,sp,16
	jal	ra,0x37b70 # close>
	mv	a0,s4
	jal	ra,0x33244 # __get_handler_set>
	li	s0,1
	li	s6,2
	li	s5,1
	addi	s7,s2,8
	li	s3,65
	lw	a5,0(s2)
	andi	a5,a5,4
	beqz	a5,0x3b4b0 # child+0x130>
	mv	a1,s0
	mv	a0,s7
	jal	ra,0x3b954 # sigismember>
	beqz	a0,0x3b4b0 # child+0x130>
	sd	zero,144(sp)
	li	a2,0
	mv	a1,s1
	mv	a0,s0
	jal	ra,0x3324e # __libc_sigaction>
	addiw	s0,s0,1
	bne	s0,s3,0x3b3e2 # child+0x62>
	lw	a5,0(s2)
	andi	a4,a5,128
	beqz	a4,0x3b426 # child+0xa6>
	li	a7,157
	ecall
	sext.w	a5,a0
	sw	a5,12(sp)
	bltz	a5,0x3b4d8 # child+0x158>
	lw	a5,0(s2)
	andi	a4,a5,2
	beqz	a4,0x3b446 # child+0xc6>
	lw	a1,4(s2)
	li	a7,154
	li	a0,0
	ecall
	sext.w	a5,a0
	sw	a5,12(sp)
	bnez	a5,0x3b4d8 # child+0x158>
	lw	a5,0(s2)
	andi	a5,a5,1
	beqz	a5,0x3b47a # child+0xfa>
	li	a7,176
	ecall
	li	a7,144
	ecall
	sext.w	a5,a0
	sw	a5,12(sp)
	bnez	a5,0x3b4d8 # child+0x158>
	li	a7,174
	ecall
	li	a7,146
	ecall
	sext.w	a5,a0
	sw	a5,12(sp)
	bnez	a5,0x3b4d8 # child+0x158>
	beqz	s10,0x3b512 # child+0x192>
	ld	a4,8(s10)
	beqz	a4,0x3b512 # child+0x192>
	mv	a5,a4
	ld	a4,0(a4)
	bnez	a4,0x3b484 # child+0x104>
	li	t1,5
	auipc	a6,0xf
	addi	a6,a6,-1948 # 0x49cf0 # atanlo+0x68>
	lui	t3,0x8
	lw	a4,20(a5)
	beq	a4,s8,0x3b5e6 # child+0x266>
	lw	a4,16(a5)
	bltu	t1,a4,0x3b50e # child+0x18e>
	lwu	a4,16(a5)
	slli	a4,a4,0x2
	add	a4,a4,a6
	lw	a4,0(a4)
	add	a4,a4,a6
	jr	a4
	mv	a1,s0
	mv	a0,s4
	jal	ra,0x3b954 # sigismember>
	beqz	a0,0x3b400 # child+0x80>
	addiw	a5,s0,-32
	bleu	a5,s6,0x3b63a # child+0x2ba>
	mv	a2,s1
	li	a1,0
	mv	a0,s0
	jal	ra,0x3324e # __libc_sigaction>
	ld	a5,144(sp)
	bne	a5,s5,0x3b3f4 # child+0x74>
	j	0x3b400 # child+0x80>
	li	a5,-9
	sw	a5,12(sp)
	lw	a5,12(sp)
	negw	a5,a5
	sw	a5,12(sp)
	addi	a1,sp,12
	li	a7,64
	mv	a0,s8
	li	a2,4
	ecall
	bltz	a0,0x3b4e2 # child+0x162>
	li	a0,127
	jal	ra,0x3d6ea # _exit>
	lw	a0,20(a5)
	li	a7,50
	ecall
	sext.w	a4,a0
	sw	a4,12(sp)
	bltz	a4,0x3b4d8 # child+0x158>
	ld	a5,8(a5)
	bnez	a5,0x3b496 # child+0x116>
	li	a7,25
	mv	a0,s8
	li	a1,2
	li	a2,1
	ecall
	lw	a5,0(s2)
	addi	a1,s9,8
	andi	a5,a5,8
	bnez	a5,0x3b62a # child+0x2aa>
	li	a2,0
	li	a0,2
	jal	ra,0x3714a # pthread_sigmask>
	ld	a5,272(s2)
	beqz	a5,0x3b630 # child+0x2b0>
	ld	a2,168(s9)
	ld	a1,160(s9)
	ld	a0,136(s9)
	jalr	a5
	jal	ra,0x2f900 # __errno_location>
	lw	a5,0(a0)
	sw	a5,12(sp)
	beqz	a5,0x3b4f2 # child+0x172>
	j	0x3b4e0 # child+0x160>
	li	a7,49
	addi	a0,a5,36
	ecall
	sext.w	a4,a0
	sw	a4,12(sp)
	bgez	a4,0x3b50e # child+0x18e>
	j	0x3b4d8 # child+0x158>
	lw	a2,28(a5)
	lwu	a3,32(a5)
	li	a7,56
	or	a2,a2,t3
	li	a0,-100
	addi	a1,a5,36
	sext.w	a2,a2
	ecall
	sext.w	a4,a0
	sw	a4,12(sp)
	bltz	a4,0x3b4d8 # child+0x158>
	lw	a1,20(a5)
	beq	a1,a4,0x3b50e # child+0x18e>
	li	a7,24
	mv	a0,a4
	li	a2,0
	ecall
	sext.w	a3,a0
	sw	a3,12(sp)
	bltz	a3,0x3b4d8 # child+0x158>
	li	a7,57
	mv	a0,a4
	ecall
	j	0x3b50e # child+0x18e>
	lw	a0,24(a5)
	beq	s8,a0,0x3b4d4 # child+0x154>
	lw	a4,20(a5)
	beq	a4,a0,0x3b604 # child+0x284>
	li	a7,24
	mv	a1,a4
	li	a2,0
	ecall
	sext.w	a4,a0
	sw	a4,12(sp)
	bgez	a4,0x3b50e # child+0x18e>
	j	0x3b4d8 # child+0x158>
	lw	a0,20(a5)
	li	a7,57
	ecall
	j	0x3b50e # child+0x18e>
	li	a7,23
	mv	a0,s8
	ecall
	sext.w	a0,a0
	sw	a0,12(sp)
	bltz	a0,0x3b4d8 # child+0x158>
	li	a7,57
	mv	a0,s8
	ecall
	lw	s8,12(sp)
	j	0x3b49c # child+0x11c>
	li	a7,25
	mv	a0,a4
	li	a1,1
	ecall
	sext.w	a2,a0
	sw	a2,12(sp)
	mv	a0,a4
	li	a1,2
	andi	a2,a2,-2
	ecall
	sext.w	a4,a0
	sw	a4,12(sp)
	bgez	a4,0x3b50e # child+0x18e>
	j	0x3b4d8 # child+0x158>
	addi	a1,s2,136
	j	0x3b52c # child+0x1ac>
	auipc	a5,0x12
	ld	a5,-760(a5) # 0x4d338 # _GLOBAL_OFFSET_TABLE_+0x30>
	j	0x3b53a # child+0x1ba>
	sd	s5,144(sp)
	j	0x3b3f6 # child+0x76>

posix_spawn:
	addi	sp,sp,-1664
	sd	s5,1608(sp)
	lui	t1,0x1
	lui	t0,0xfffff
	auipc	s5,0x12
	ld	s5,-810(s5) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	sd	s0,1648(sp)
	sd	s1,1640(sp)
	sd	s2,1632(sp)
	sd	s3,1624(sp)
	sd	s4,1616(sp)
	sd	s6,1600(sp)
	sd	s7,1592(sp)
	sd	s8,1584(sp)
	sd	ra,1656(sp)
	ld	a6,0(s5)
	add	sp,sp,t0
	lui	s8,0xfffff
	addi	s0,t1,1584 # 0x1630 # exit-0xeaf0>
	mv	s3,a1
	addi	a1,t1,1584
	addi	a7,s8,-1568 # 0xffffffffffffe9e0 # __BSS_END__+0xfffffffffffb0658>
	add	s0,s0,sp
	add	a1,a1,sp
	mv	s4,a5
	addi	a5,t1,1576
	add	s0,s0,s8
	mv	s1,a2
	add	a5,a5,sp
	mv	s7,a0
	add	a1,a1,a7
	li	a0,1
	mv	s2,a3
	mv	s6,a4
	sd	a6,0(a5)
	sw	zero,-1572(s0)
	jal	ra,0x3c31c # __pthread_setcancelstate>
	sd	s3,-1408(s0)
	sd	s1,-1400(s0)
	beqz	s2,0x3b81a # posix_spawn+0x1dc>
	lui	a5,0x1
	lui	s3,0xfffff
	addi	a4,a5,1584 # 0x1630 # exit-0xeaf0>
	add	a4,a4,sp
	addi	s1,s3,-1544 # 0xffffffffffffe9f8 # __BSS_END__+0xfffffffffffb0670>
	add	s1,s1,a4
	addi	a4,a5,1584
	add	a4,a4,sp
	add	s0,a4,s3
	li	a5,-1
	addi	a1,s3,-1560
	add	a1,a1,a4
	addi	a2,s1,8 # 0xffffffffffffc008 # __BSS_END__+0xfffffffffffadc80>
	sd	a5,-1560(s0)
	sd	a5,-1552(s0)
	li	a0,0
	sd	s2,-1392(s0)
	sd	s6,-1384(s0)
	sd	s4,-1376(s0)
	jal	ra,0x3714a # pthread_sigmask>
	addi	a0,gp,-1952 # 0x4d3e8 # __abort_lock>
	jal	ra,0x36ffe # __lock>
	lui	a1,0x80
	mv	a0,s1
	jal	ra,0x37c14 # pipe2>
	bnez	a0,0x3b806 # posix_spawn+0x1c8>
	lui	s2,0x1
	addi	a5,s2,1576 # 0x1628 # exit-0xeaf8>
	lui	a2,0x4
	mv	a3,s1
	addi	a2,a2,273 # 0x4111 # exit-0xc00f>
	add	a1,sp,a5
	auipc	a0,0x0
	addi	a0,a0,-934 # 0x3b380 # child>
	jal	ra,0x3c34a # __clone>
	mv	s1,a0
	lw	a0,-1540(s0)
	jal	ra,0x37b70 # close>
	addi	a0,gp,-1952 # 0x4d3e8 # __abort_lock>
	jal	ra,0x370d4 # __unlock>
	bgtz	s1,0x3b7e4 # posix_spawn+0x1a6>
	negw	a5,s1
	sw	a5,-1572(s0)
	lui	a5,0x1
	addi	a5,a5,1584 # 0x1630 # exit-0xeaf0>
	add	a5,a5,sp
	lui	s0,0xfffff
	add	s0,s0,a5
	lw	a0,-1544(s0) # 0xffffffffffffe9f8 # __BSS_END__+0xfffffffffffb0670>
	jal	ra,0x37b70 # close>
	lw	a5,-1572(s0)
	bnez	a5,0x3b772 # posix_spawn+0x134>
	beqz	s7,0x3b772 # posix_spawn+0x134>
	sw	s1,0(s7)
	lui	s1,0x1
	addi	a5,s1,1584 # 0x1630 # exit-0xeaf0>
	add	a5,a5,sp
	lui	s0,0xfffff
	add	a1,a5,s0
	li	a2,0
	addi	a1,a1,-1536 # 0x7fa00 # __BSS_END__+0x31678>
	li	a0,2
	jal	ra,0x3714a # pthread_sigmask>
	addi	a5,s1,1584
	add	a5,a5,sp
	add	s0,s0,a5
	lw	a0,-1568(s0) # 0xffffffffffffe9e0 # __BSS_END__+0xfffffffffffb0658>
	li	a1,0
	jal	ra,0x3c31c # __pthread_setcancelstate>
	addi	a5,s1,1576
	add	a5,a5,sp
	ld	a4,0(a5)
	ld	a5,0(s5)
	lw	a0,-1572(s0)
	bne	a4,a5,0x3b854 # posix_spawn+0x216>
	lui	t0,0x1
	add	sp,sp,t0
	ld	ra,1656(sp)
	ld	s0,1648(sp)
	ld	s1,1640(sp)
	ld	s2,1632(sp)
	ld	s3,1624(sp)
	ld	s4,1616(sp)
	ld	s5,1608(sp)
	ld	s6,1600(sp)
	ld	s7,1592(sp)
	ld	s8,1584(sp)
	addi	sp,sp,1664
	ret
	lw	a0,-1544(s0)
	addi	a5,s2,1584
	add	a5,a5,sp
	addi	a1,s3,-1572
	add	a1,a1,a5
	li	a2,4
	jal	ra,0x3d718 # read>
	li	a5,4
	beq	a0,a5,0x3b838 # posix_spawn+0x1fa>
	sw	zero,-1572(s0)
	j	0x3b750 # posix_spawn+0x112>
	addi	a0,gp,-1952 # 0x4d3e8 # __abort_lock>
	jal	ra,0x370d4 # __unlock>
	jal	ra,0x2f900 # __errno_location>
	lw	a5,0(a0)
	sw	a5,-1572(s0)
	j	0x3b772 # posix_spawn+0x134>
	li	a2,336
	li	a1,0
	addi	a0,s0,-1368
	jal	ra,0x3683a # memset>
	lui	a5,0x1
	addi	a5,a5,1584 # 0x1630 # exit-0xeaf0>
	addi	s2,s8,-1368
	add	a5,a5,sp
	add	s2,s2,a5
	j	0x3b6be # posix_spawn+0x80>
	lui	a5,0x1
	addi	a5,a5,1584 # 0x1630 # exit-0xeaf0>
	addi	a1,s3,-1564
	add	a5,a5,sp
	li	a2,0
	add	a1,a1,a5
	mv	a0,s1
	sw	zero,-1564(s0)
	jal	ra,0x330b6 # waitpid>
	j	0x3b750 # posix_spawn+0x112>
	jal	ra,0x37f18 # __stack_chk_fail>

posix_spawn_file_actions_adddup2:
	addi	sp,sp,-32
	sd	s0,16(sp)
	mv	s0,a0
	li	a0,40
	sd	s1,8(sp)
	sd	s2,0(sp)
	sd	ra,24(sp)
	mv	s2,a1
	mv	s1,a2
	jal	ra,0x39a8e # malloc>
	beqz	a0,0x3b898 # posix_spawn_file_actions_adddup2+0x40>
	ld	a5,8(s0)
	li	a4,2
	sw	a4,16(a0)
	sw	s2,24(a0)
	sw	s1,20(a0)
	sd	a5,0(a0)
	beqz	a5,0x3b884 # posix_spawn_file_actions_adddup2+0x2c>
	sd	a0,8(a5)
	sd	zero,8(a0)
	sd	a0,8(s0)
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	li	a0,0
	addi	sp,sp,32
	ret
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	ld	s2,0(sp)
	li	a0,12
	addi	sp,sp,32
	ret

posix_spawn_file_actions_destroy:
	addi	sp,sp,-16
	sd	s0,0(sp)
	ld	s0,8(a0)
	sd	ra,8(sp)
	beqz	s0,0x3b8ba # posix_spawn_file_actions_destroy+0x14>
	mv	a0,s0
	ld	s0,0(s0)
	jal	ra,0x2fbca # free>
	bnez	s0,0x3b8b0 # posix_spawn_file_actions_destroy+0xa>
	ld	ra,8(sp)
	ld	s0,0(sp)
	li	a0,0
	addi	sp,sp,16
	ret

posix_spawn_file_actions_init:
	sd	zero,8(a0)
	li	a0,0
	ret

posix_spawnattr_destroy:
	li	a0,0
	ret

posix_spawnattr_init:
	addi	sp,sp,-16
	li	a2,336
	li	a1,0
	sd	ra,8(sp)
	jal	ra,0x3683a # memset>
	ld	ra,8(sp)
	li	a0,0
	addi	sp,sp,16
	ret

posix_spawnattr_setflags:
	andi	a5,a1,-256
	bnez	a5,0x3b8f2 # posix_spawnattr_setflags+0xc>
	sw	a1,0(a0)
	li	a0,0
	ret
	li	a0,22
	ret

posix_spawnattr_setsigdefault:
	addi	a0,a0,8
	addi	a5,a1,128
	ld	a6,0(a1)
	ld	a2,8(a1)
	ld	a3,16(a1)
	ld	a4,24(a1)
	sd	a6,0(a0)
	sd	a2,8(a0)
	sd	a3,16(a0)
	sd	a4,24(a0)
	addi	a1,a1,32
	addi	a0,a0,32
	bne	a1,a5,0x3b8fc # posix_spawnattr_setsigdefault+0x6>
	li	a0,0
	ret

posix_spawnattr_setsigmask:
	addi	a0,a0,136
	addi	a5,a1,128
	ld	a6,0(a1)
	ld	a2,8(a1)
	ld	a3,16(a1)
	ld	a4,24(a1)
	sd	a6,0(a0)
	sd	a2,8(a0)
	sd	a3,16(a0)
	sd	a4,24(a0)
	addi	a1,a1,32
	addi	a0,a0,32
	bne	a1,a5,0x3b928 # posix_spawnattr_setsigmask+0x8>
	li	a0,0
	ret

__restore:
	li	a7,139
	ecall

sigismember:
	addiw	a1,a1,-1
	li	a5,63
	bltu	a5,a1,0x3b96a # sigismember+0x16>
	ld	a0,0(a0)
	srl	a1,a0,a1
	andi	a0,a1,1
	ret
	li	a0,0
	ret

__fdopen:
	addi	sp,sp,-64
	sd	s1,40(sp)
	sd	s2,32(sp)
	sd	s3,24(sp)
	sd	ra,56(sp)
	sd	s0,48(sp)
	auipc	s2,0x12
	ld	s2,-1626(s2) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	ld	a5,0(s2)
	mv	s1,a1
	lbu	a1,0(a1)
	mv	s3,a0
	auipc	a0,0x9
	addi	a0,a0,-1758 # 0x442b0 # optsnum.0+0x468>
	sd	a5,8(sp)
	jal	ra,0x3690a # strchr>
	beqz	a0,0x3bab0 # __fdopen+0x142>
	li	a0,1264
	jal	ra,0x39a8e # malloc>
	mv	s0,a0
	beqz	a0,0x3ba50 # __fdopen+0xe2>
	li	a1,0
	li	a2,232
	jal	ra,0x3683a # memset>
	li	a1,43
	mv	a0,s1
	jal	ra,0x3690a # strchr>
	beqz	a0,0x3ba94 # __fdopen+0x126>
	li	a1,101
	mv	a0,s1
	jal	ra,0x3690a # strchr>
	beqz	a0,0x3b9da # __fdopen+0x6c>
	li	a7,25
	mv	a0,s3
	li	a1,2
	li	a2,1
	ecall
	lbu	a4,0(s1)
	li	a5,97
	beq	a4,a5,0x3ba6a # __fdopen+0xfc>
	lw	a5,0(s0)
	addi	a4,s0,240
	sd	a4,88(s0)
	li	a4,1024
	sd	a4,96(s0)
	li	a4,-1
	sw	s3,120(s0)
	sw	a4,144(s0)
	andi	a5,a5,8
	bnez	a5,0x3ba14 # __fdopen+0xa6>
	lui	a1,0x5
	li	a7,29
	mv	a0,s3
	addi	a1,a1,1043 # 0x5413 # exit-0xad0d>
	mv	a2,sp
	ecall
	beqz	a0,0x3baa8 # __fdopen+0x13a>
	auipc	a5,0x0
	addi	a5,a5,712 # 0x3bcdc # __stdio_read>
	sd	a5,64(s0)
	auipc	a5,0x0
	addi	a5,a5,898 # 0x3bda0 # __stdio_write>
	sd	a5,72(s0)
	auipc	a5,0x0
	addi	a5,a5,882 # 0x3bd9a # __stdio_seek>
	sd	a5,80(s0)
	auipc	a5,0x0
	addi	a5,a5,652 # 0x3bcbe # __stdio_close>
	sd	a5,24(s0)
	lbu	a5,-1927(gp) # 0x4d401 # __libc+0x1>
	bnez	a5,0x3ba48 # __fdopen+0xda>
	li	a5,-1
	sw	a5,140(s0)
	mv	a0,s0
	jal	ra,0x3bfb6 # __ofl_add>
	mv	s0,a0
	ld	a4,8(sp)
	ld	a5,0(s2)
	bne	a4,a5,0x3babc # __fdopen+0x14e>
	ld	ra,56(sp)
	mv	a0,s0
	ld	s0,48(sp)
	ld	s1,40(sp)
	ld	s2,32(sp)
	ld	s3,24(sp)
	addi	sp,sp,64
	ret
	li	a7,25
	mv	a0,s3
	li	a1,3
	ecall
	andi	a5,a0,1024
	sext.w	a2,a0
	bnez	a5,0x3ba8a # __fdopen+0x11c>
	mv	a0,s3
	li	a1,4
	ori	a2,a2,1024
	ecall
	lw	a5,0(s0)
	ori	a5,a5,128
	sw	a5,0(s0)
	j	0x3b9e8 # __fdopen+0x7a>
	lbu	a3,0(s1)
	li	a4,114
	li	a5,8
	beq	a3,a4,0x3baa4 # __fdopen+0x136>
	li	a5,4
	sw	a5,0(s0)
	j	0x3b9c2 # __fdopen+0x54>
	li	a5,10
	sw	a5,144(s0)
	j	0x3ba14 # __fdopen+0xa6>
	mv	s0,a0
	jal	ra,0x2f900 # __errno_location>
	li	a5,22
	sw	a5,0(a0)
	j	0x3ba50 # __fdopen+0xe2>
	jal	ra,0x37f18 # __stack_chk_fail>

__fmodeflags:
	addi	sp,sp,-32
	li	a1,43
	sd	s0,16(sp)
	sd	s1,8(sp)
	sd	ra,24(sp)
	mv	s1,a0
	jal	ra,0x3690a # strchr>
	li	s0,2
	beqz	a0,0x3bb34 # __fmodeflags+0x74>
	li	a1,120
	mv	a0,s1
	jal	ra,0x3690a # strchr>
	beqz	a0,0x3bae6 # __fmodeflags+0x26>
	ori	s0,s0,128
	li	a1,101
	mv	a0,s1
	jal	ra,0x3690a # strchr>
	beqz	a0,0x3baf8 # __fmodeflags+0x38>
	lui	a5,0x80
	or	s0,s0,a5
	lbu	a5,0(s1)
	li	a4,114
	beq	a5,a4,0x3bb10 # __fmodeflags+0x50>
	li	a4,119
	bne	a5,a4,0x3bb1c # __fmodeflags+0x5c>
	ori	s0,s0,576
	ld	ra,24(sp)
	mv	a0,s0
	ld	s0,16(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret
	li	a4,97
	bne	a5,a4,0x3bb42 # __fmodeflags+0x82>
	ori	s0,s0,1088
	ld	ra,24(sp)
	mv	a0,s0
	ld	s0,16(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret
	lbu	s0,0(s1)
	addi	s0,s0,-114
	snez	s0,s0
	j	0x3bad6 # __fmodeflags+0x16>
	ori	s0,s0,64
	j	0x3bb10 # __fmodeflags+0x50>

__lockfile:
	lw	a5,140(a0)
	sext.w	a5,a5
	mv	a4,tp
	lw	a6,-168(a4) # 0xffffffffffffbf58 # __BSS_END__+0xfffffffffffadbd0>
	lui	a4,0xc0000
	addi	a4,a4,-1
	and	a5,a5,a4
	beq	a5,a6,0x3bbf4 # __lockfile+0xac>
	addi	a4,a0,140
	li	a3,0
	lr.w.aqrl	a5,(a4)
	bne	a5,a3,0x3bb74 # __lockfile+0x2c>
	sc.w.aqrl	a2,a6,(a4)
	bnez	a2,0x3bb66 # __lockfile+0x1e>
	sext.w	a5,a5
	beqz	a5,0x3bbf0 # __lockfile+0xa8>
	lui	a5,0x40000
	or	a6,a6,a5
	lr.w.aqrl	a5,(a4)
	bne	a5,a3,0x3bb8e # __lockfile+0x46>
	sc.w.aqrl	a2,a6,(a4)
	bnez	a2,0x3bb80 # __lockfile+0x38>
	sext.w	a5,a5
	beqz	a5,0x3bbf0 # __lockfile+0xa8>
	lui	t1,0x40000
	li	t3,-38
	j	0x3bbc4 # __lockfile+0x7c>
	lr.w.aqrl	a3,(a4)
	bne	a3,a5,0x3bbaa # __lockfile+0x62>
	sc.w.aqrl	a1,a2,(a4)
	bnez	a1,0x3bb9c # __lockfile+0x54>
	sext.w	a3,a3
	beq	a3,a5,0x3bbd2 # __lockfile+0x8a>
	li	a3,0
	lr.w.aqrl	a5,(a4)
	bne	a5,a3,0x3bbc0 # __lockfile+0x78>
	sc.w.aqrl	a2,a6,(a4)
	bnez	a2,0x3bbb2 # __lockfile+0x6a>
	sext.w	a5,a5
	beqz	a5,0x3bbf0 # __lockfile+0xa8>
	and	a3,a5,t1
	or	a2,a5,t1
	sext.w	a3,a3
	sext.w	a2,a2
	beqz	a3,0x3bb9c # __lockfile+0x54>
	li	a7,98
	mv	a0,a4
	li	a1,128
	li	a3,0
	ecall
	bne	a0,t3,0x3bbb0 # __lockfile+0x68>
	mv	a0,a4
	li	a1,0
	ecall
	j	0x3bbb0 # __lockfile+0x68>
	li	a0,1
	ret
	li	a0,0
	ret

__unlockfile:
	addi	a3,a0,140
	li	a2,0
	lw	a5,140(a0)
	sext.w	a5,a5
	lr.w.aqrl	a4,(a3)
	bne	a4,a5,0x3bc12 # __unlockfile+0x1a>
	sc.w.aqrl	a1,a2,(a3)
	bnez	a1,0x3bc04 # __unlockfile+0xc>
	sext.w	a4,a4
	bne	a5,a4,0x3bbfe # __unlockfile+0x6>
	srli	a5,a5,0x1e
	andi	a5,a5,1
	bnez	a5,0x3bc20 # __unlockfile+0x28>
	ret
	li	a7,98
	mv	a0,a3
	li	a1,129
	li	a2,1
	ecall
	li	a5,-38
	bne	a0,a5,0x3bc1e # __unlockfile+0x26>
	mv	a0,a3
	li	a1,1
	ecall
	ret

__overflow:
	addi	sp,sp,-48
	sd	s1,24(sp)
	auipc	s1,0x11
	ld	s1,1754(s1) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	ld	a4,0(s1)
	ld	a5,32(a0)
	sd	s0,32(sp)
	sd	ra,40(sp)
	sd	a4,8(sp)
	sb	a1,7(sp)
	mv	s0,a0
	beqz	a5,0x3bcaa # __overflow+0x68>
	ld	a4,40(s0)
	beq	a4,a5,0x3bc76 # __overflow+0x34>
	lbu	a5,7(sp)
	lw	a3,144(s0)
	sext.w	a0,a5
	bne	a3,a5,0x3bc9e # __overflow+0x5c>
	ld	a5,72(s0)
	li	a2,1
	addi	a1,sp,7
	mv	a0,s0
	jalr	a5
	li	a5,1
	bne	a0,a5,0x3bcb4 # __overflow+0x72>
	lbu	a0,7(sp)
	ld	a4,8(sp)
	ld	a5,0(s1)
	bne	a4,a5,0x3bcb8 # __overflow+0x76>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	addi	sp,sp,48
	ret
	addi	a3,a4,1 # 0xffffffffc0000001 # __BSS_END__+0xffffffffbffb1c79>
	sd	a3,40(s0)
	sb	a5,0(a4)
	j	0x3bc8c # __overflow+0x4a>
	jal	ra,0x3bf2e # __towrite>
	bnez	a0,0x3bcb4 # __overflow+0x72>
	ld	a5,32(s0)
	j	0x3bc60 # __overflow+0x1e>
	li	a0,-1
	j	0x3bc8c # __overflow+0x4a>
	jal	ra,0x37f18 # __stack_chk_fail>

dummy4:
	ret

__stdio_close:
	lw	a0,120(a0)
	addi	sp,sp,-16
	sd	ra,8(sp)
	jal	ra,0x37b6e # __aio_close>
	li	a7,57
	ecall
	jal	ra,0x394da # __syscall_ret>
	ld	ra,8(sp)
	sext.w	a0,a0
	addi	sp,sp,16
	ret

__stdio_read:
	addi	sp,sp,-96
	ld	a4,96(a0)
	sd	s0,80(sp)
	sd	s3,56(sp)
	mv	s0,a0
	auipc	s3,0x11
	ld	s3,1594(s3) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	ld	a0,0(s3)
	ld	a3,88(s0)
	snez	a5,a4
	sub	a5,a2,a5
	sd	s1,72(sp)
	sd	s2,64(sp)
	sd	a0,40(sp)
	sd	ra,88(sp)
	sd	a1,8(sp)
	sd	a5,16(sp)
	sd	a3,24(sp)
	sd	a4,32(sp)
	lw	a0,120(s0)
	mv	s2,a2
	mv	s1,a1
	beqz	a5,0x3bd68 # __stdio_read+0x8c>
	li	a7,65
	addi	a1,sp,8
	li	a2,2
	ecall
	jal	ra,0x394da # __syscall_ret>
	blez	a0,0x3bd7c # __stdio_read+0xa0>
	ld	a5,16(sp)
	bleu	a0,a5,0x3bd50 # __stdio_read+0x74>
	ld	a4,88(s0)
	sub	a5,a0,a5
	ld	a3,96(s0)
	add	a5,a5,a4
	sd	a4,8(s0)
	sd	a5,16(s0)
	mv	a0,s2
	beqz	a3,0x3bd50 # __stdio_read+0x74>
	addi	a5,a4,1
	sd	a5,8(s0)
	lbu	a5,0(a4)
	add	s1,s1,s2
	sb	a5,-1(s1)
	ld	a4,40(sp)
	ld	a5,0(s3)
	bne	a4,a5,0x3bd96 # __stdio_read+0xba>
	ld	ra,88(sp)
	ld	s0,80(sp)
	ld	s1,72(sp)
	ld	s2,64(sp)
	ld	s3,56(sp)
	addi	sp,sp,96
	ret
	mv	a1,a3
	mv	a2,a4
	li	a7,63
	ecall
	jal	ra,0x394da # __syscall_ret>
	bgtz	a0,0x3bd28 # __stdio_read+0x4c>
	lw	a5,0(s0)
	li	a4,32
	beqz	a0,0x3bd8c # __stdio_read+0xb0>
	or	a5,a5,a4
	sw	a5,0(s0)
	li	a0,0
	j	0x3bd50 # __stdio_read+0x74>
	li	a4,16
	or	a5,a5,a4
	sw	a5,0(s0)
	li	a0,0
	j	0x3bd50 # __stdio_read+0x74>
	jal	ra,0x37f18 # __stack_chk_fail>

__stdio_seek:
	lw	a0,120(a0)
	j	0x3d6f2 # __lseek>

__stdio_write:
	addi	sp,sp,-112
	ld	a5,56(a0)
	sd	s1,88(sp)
	sd	s3,72(sp)
	ld	s1,40(a0)
	auipc	s3,0x11
	ld	s3,1398(s3) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	ld	a4,0(s3)
	sub	s1,s1,a5
	sd	s0,96(sp)
	sd	s2,80(sp)
	sd	s4,64(sp)
	sd	s5,56(sp)
	sd	s1,16(sp)
	sd	ra,104(sp)
	mv	s4,a0
	mv	s2,a2
	sd	a4,40(sp)
	sd	a5,8(sp)
	sd	a1,24(sp)
	sd	a2,32(sp)
	add	s1,s1,a2
	li	s5,2
	addi	s0,sp,8
	j	0x3bdf6 # __stdio_write+0x56>
	bltz	a0,0x3be42 # __stdio_write+0xa2>
	ld	a5,8(s0)
	sub	s1,s1,a0
	bleu	a0,a5,0x3bdec # __stdio_write+0x4c>
	sub	a0,a0,a5
	addiw	s5,s5,-1
	ld	a5,24(s0)
	addi	s0,s0,16
	ld	a4,0(s0)
	sub	a5,a5,a0
	sd	a5,8(s0)
	add	a0,a0,a4
	sd	a0,0(s0)
	lw	a0,120(s4)
	li	a7,66
	mv	a1,s0
	mv	a2,s5
	ecall
	jal	ra,0x394da # __syscall_ret>
	bne	s1,a0,0x3bdd8 # __stdio_write+0x38>
	ld	a5,88(s4)
	ld	a4,96(s4)
	mv	a0,s2
	sd	a5,56(s4)
	add	a4,a4,a5
	sd	a4,32(s4)
	sd	a5,40(s4)
	ld	a4,40(sp)
	ld	a5,0(s3)
	bne	a4,a5,0x3be6a # __stdio_write+0xca>
	ld	ra,104(sp)
	ld	s0,96(sp)
	ld	s1,88(sp)
	ld	s2,80(sp)
	ld	s3,72(sp)
	ld	s4,64(sp)
	ld	s5,56(sp)
	addi	sp,sp,112
	ret
	lw	a5,0(s4)
	sd	zero,32(s4)
	sd	zero,56(s4)
	ori	a5,a5,32
	sw	a5,0(s4)
	sd	zero,40(s4)
	li	a5,2
	li	a0,0
	beq	s5,a5,0x3be26 # __stdio_write+0x86>
	ld	a0,8(s0)
	sub	a0,s2,a0
	j	0x3be26 # __stdio_write+0x86>
	jal	ra,0x37f18 # __stack_chk_fail>

__stdout_write:
	addi	sp,sp,-32
	sd	s0,16(sp)
	auipc	s0,0x11
	ld	s0,1198(s0) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	ld	a3,0(s0)
	lw	a4,0(a0)
	sd	ra,24(sp)
	sd	a3,8(sp)
	auipc	a3,0x0
	addi	a3,a3,-226 # 0x3bda0 # __stdio_write>
	sd	a3,72(a0)
	mv	a5,a0
	andi	a0,a4,64
	mv	a3,a2
	mv	a4,a1
	bnez	a0,0x3beaa # __stdout_write+0x3c>
	lui	a1,0x5
	lw	a0,120(a5)
	li	a7,29
	addi	a1,a1,1043 # 0x5413 # exit-0xad0d>
	mv	a2,sp
	ecall
	bnez	a0,0x3bec4 # __stdout_write+0x56>
	mv	a1,a4
	mv	a0,a5
	mv	a2,a3
	jal	ra,0x3bda0 # __stdio_write>
	ld	a4,8(sp)
	ld	a5,0(s0)
	bne	a4,a5,0x3becc # __stdout_write+0x5e>
	ld	ra,24(sp)
	ld	s0,16(sp)
	addi	sp,sp,32
	ret
	li	a2,-1
	sw	a2,144(a5) # 0x40000090 # __BSS_END__+0x3ffb1d08>
	j	0x3beaa # __stdout_write+0x3c>
	jal	ra,0x37f18 # __stack_chk_fail>

__toread:
	lw	a5,136(a0)
	addi	sp,sp,-16
	ld	a3,40(a0)
	addiw	a2,a5,-1
	ld	a4,56(a0)
	sd	s0,0(sp)
	sd	ra,8(sp)
	or	a5,a5,a2
	sw	a5,136(a0)
	mv	s0,a0
	beq	a3,a4,0x3bef6 # __toread+0x26>
	ld	a5,72(a0)
	li	a2,0
	li	a1,0
	jalr	a5
	lw	a0,0(s0)
	sd	zero,32(s0)
	sd	zero,56(s0)
	sd	zero,40(s0)
	andi	a5,a0,4
	bnez	a5,0x3bf20 # __toread+0x50>
	ld	a5,88(s0)
	ld	a4,96(s0)
	slli	a0,a0,0x3b
	srai	a0,a0,0x3f
	add	a5,a5,a4
	sd	a5,16(s0)
	sd	a5,8(s0)
	ld	ra,8(sp)
	ld	s0,0(sp)
	addi	sp,sp,16
	ret
	ori	a0,a0,32
	sw	a0,0(s0)
	li	a0,-1
	j	0x3bf18 # __toread+0x48>

__toread_needs_stdio_exit:
	j	0x3e052 # __stdio_exit_needed>

__towrite:
	lw	a5,136(a0)
	lw	a4,0(a0)
	addiw	a3,a5,-1
	or	a5,a5,a3
	sw	a5,136(a0)
	andi	a5,a4,8
	bnez	a5,0x3bf5c # __towrite+0x2e>
	ld	a4,88(a0)
	ld	a5,96(a0)
	sd	zero,16(a0)
	sd	zero,8(a0)
	add	a5,a5,a4
	sd	a4,56(a0)
	sd	a4,40(a0)
	sd	a5,32(a0)
	li	a0,0
	ret
	ori	a4,a4,32
	sw	a4,0(a0)
	li	a0,-1
	ret

__towrite_needs_stdio_exit:
	j	0x3e052 # __stdio_exit_needed>

__uflow:
	addi	sp,sp,-48
	sd	s1,24(sp)
	auipc	s1,0x11
	ld	s1,946(s1) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	ld	a5,0(s1)
	sd	s0,32(sp)
	sd	ra,40(sp)
	mv	s0,a0
	sd	a5,8(sp)
	jal	ra,0x3bed0 # __toread>
	bnez	a0,0x3bfae # __uflow+0x44>
	ld	a5,64(s0)
	li	a2,1
	addi	a1,sp,7
	mv	a0,s0
	jalr	a5
	li	a5,1
	bne	a0,a5,0x3bfae # __uflow+0x44>
	lbu	a0,7(sp)
	ld	a4,8(sp)
	ld	a5,0(s1)
	bne	a4,a5,0x3bfb2 # __uflow+0x48>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	addi	sp,sp,48
	ret
	li	a0,-1
	j	0x3bf9c # __uflow+0x32>
	jal	ra,0x37f18 # __stack_chk_fail>

__ofl_add:
	addi	sp,sp,-16
	sd	s0,0(sp)
	sd	ra,8(sp)
	mv	s0,a0
	jal	ra,0x34184 # __ofl_lock>
	ld	a5,0(a0)
	sd	a5,112(s0)
	beqz	a5,0x3bfca # __ofl_add+0x14>
	sd	s0,104(a5)
	sd	s0,0(a0)
	jal	ra,0x3419a # __ofl_unlock>
	ld	ra,8(sp)
	mv	a0,s0
	ld	s0,0(sp)
	addi	sp,sp,16
	ret

strtoull:
	addi	sp,sp,-288
	sd	s4,240(sp)
	auipc	s4,0x11
	ld	s4,834(s4) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	ld	a5,0(s4)
	sd	s1,264(sp)
	mv	s1,sp
	sd	s0,272(sp)
	sd	s2,256(sp)
	mv	s0,a0
	mv	s2,a1
	mv	a0,s1
	li	a1,0
	sd	a5,232(sp)
	li	a5,-1
	sd	s3,248(sp)
	sd	ra,280(sp)
	mv	s3,a2
	sd	s0,8(sp)
	sd	s0,88(sp)
	sd	a5,16(sp)
	jal	ra,0x3944a # __shlim>
	li	a3,-1
	li	a2,1
	mv	a1,s3
	mv	a0,s1
	jal	ra,0x3d7cc # __intscan>
	beqz	s2,0x3c02e # strtoull+0x54>
	ld	a4,88(sp)
	ld	a5,8(sp)
	sub	a5,a5,a4
	ld	a4,200(sp)
	add	a5,a5,a4
	add	s0,s0,a5
	sd	s0,0(s2)
	ld	a4,232(sp)
	ld	a5,0(s4)
	bne	a4,a5,0x3c048 # strtoull+0x6e>
	ld	ra,280(sp)
	ld	s0,272(sp)
	ld	s1,264(sp)
	ld	s2,256(sp)
	ld	s3,248(sp)
	ld	s4,240(sp)
	addi	sp,sp,288
	ret
	jal	ra,0x37f18 # __stack_chk_fail>

strtoll:
	addi	sp,sp,-304
	sd	s4,256(sp)
	auipc	s4,0x11
	ld	s4,720(s4) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	ld	a5,0(s4)
	sd	s1,280(sp)
	mv	s1,sp
	sd	s0,288(sp)
	sd	s2,272(sp)
	sd	s5,248(sp)
	mv	s0,a0
	mv	s2,a1
	li	s5,-1
	li	a1,0
	mv	a0,s1
	sd	s3,264(sp)
	sd	ra,296(sp)
	mv	s3,a2
	sd	a5,232(sp)
	sd	s0,8(sp)
	sd	s0,88(sp)
	sd	s5,16(sp)
	jal	ra,0x3944a # __shlim>
	slli	a3,s5,0x3f
	li	a2,1
	mv	a1,s3
	mv	a0,s1
	jal	ra,0x3d7cc # __intscan>
	beqz	s2,0x3c0a4 # strtoll+0x58>
	ld	a4,88(sp)
	ld	a5,8(sp)
	sub	a5,a5,a4
	ld	a4,200(sp)
	add	a5,a5,a4
	add	s0,s0,a5
	sd	s0,0(s2)
	ld	a4,232(sp)
	ld	a5,0(s4)
	bne	a4,a5,0x3c0c0 # strtoll+0x74>
	ld	ra,296(sp)
	ld	s0,288(sp)
	ld	s1,280(sp)
	ld	s2,272(sp)
	ld	s3,264(sp)
	ld	s4,256(sp)
	ld	s5,248(sp)
	addi	sp,sp,304
	ret
	jal	ra,0x37f18 # __stack_chk_fail>

strtoul:
	addi	sp,sp,-288
	sd	s4,240(sp)
	auipc	s4,0x11
	ld	s4,600(s4) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	ld	a5,0(s4)
	sd	s1,264(sp)
	mv	s1,sp
	sd	s0,272(sp)
	sd	s2,256(sp)
	mv	s0,a0
	mv	s2,a1
	mv	a0,s1
	li	a1,0
	sd	a5,232(sp)
	li	a5,-1
	sd	s3,248(sp)
	sd	ra,280(sp)
	mv	s3,a2
	sd	s0,8(sp)
	sd	s0,88(sp)
	sd	a5,16(sp)
	jal	ra,0x3944a # __shlim>
	li	a3,-1
	li	a2,1
	mv	a1,s3
	mv	a0,s1
	jal	ra,0x3d7cc # __intscan>
	beqz	s2,0x3c118 # strtoul+0x54>
	ld	a4,88(sp)
	ld	a5,8(sp)
	sub	a5,a5,a4
	ld	a4,200(sp)
	add	a5,a5,a4
	add	s0,s0,a5
	sd	s0,0(s2)
	ld	a4,232(sp)
	ld	a5,0(s4)
	bne	a4,a5,0x3c132 # strtoul+0x6e>
	ld	ra,280(sp)
	ld	s0,272(sp)
	ld	s1,264(sp)
	ld	s2,256(sp)
	ld	s3,248(sp)
	ld	s4,240(sp)
	addi	sp,sp,288
	ret
	jal	ra,0x37f18 # __stack_chk_fail>

strtol:
	addi	sp,sp,-304
	sd	s4,256(sp)
	auipc	s4,0x11
	ld	s4,486(s4) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	ld	a5,0(s4)
	sd	s1,280(sp)
	mv	s1,sp
	sd	s0,288(sp)
	sd	s2,272(sp)
	sd	s5,248(sp)
	mv	s0,a0
	mv	s2,a1
	li	s5,-1
	li	a1,0
	mv	a0,s1
	sd	s3,264(sp)
	sd	ra,296(sp)
	mv	s3,a2
	sd	a5,232(sp)
	sd	s0,8(sp)
	sd	s0,88(sp)
	sd	s5,16(sp)
	jal	ra,0x3944a # __shlim>
	slli	a3,s5,0x3f
	li	a2,1
	mv	a1,s3
	mv	a0,s1
	jal	ra,0x3d7cc # __intscan>
	beqz	s2,0x3c18e # strtol+0x58>
	ld	a4,88(sp)
	ld	a5,8(sp)
	sub	a5,a5,a4
	ld	a4,200(sp)
	add	a5,a5,a4
	add	s0,s0,a5
	sd	s0,0(s2)
	ld	a4,232(sp)
	ld	a5,0(s4)
	bne	a4,a5,0x3c1aa # strtol+0x74>
	ld	ra,296(sp)
	ld	s0,288(sp)
	ld	s1,280(sp)
	ld	s2,272(sp)
	ld	s3,264(sp)
	ld	s4,256(sp)
	ld	s5,248(sp)
	addi	sp,sp,304
	ret
	jal	ra,0x37f18 # __stack_chk_fail>

strtoimax:
	j	0x3c04c # strtoll>

strtoumax:
	j	0x3bfda # strtoull>

strcspn:
	addi	sp,sp,-80
	sd	s2,48(sp)
	auipc	s2,0x11
	ld	s2,358(s2) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	sd	s0,64(sp)
	sd	s1,56(sp)
	ld	a5,0(s2)
	sd	ra,72(sp)
	mv	s0,a1
	lbu	a1,0(a1)
	sd	a5,40(sp)
	mv	s1,a0
	beqz	a1,0x3c1de # strcspn+0x28>
	lbu	a5,1(s0)
	bnez	a5,0x3c1fc # strcspn+0x46>
	mv	a0,s1
	jal	ra,0x3692c # __strchrnul>
	sub	a0,a0,s1
	ld	a4,40(sp)
	ld	a5,0(s2)
	bne	a4,a5,0x3c260 # strcspn+0xaa>
	ld	ra,72(sp)
	ld	s0,64(sp)
	ld	s1,56(sp)
	ld	s2,48(sp)
	addi	sp,sp,80
	ret
	li	a1,0
	li	a2,32
	addi	a0,sp,8
	jal	ra,0x3683a # memset>
	lbu	a4,0(s0)
	li	a1,1
	beqz	a4,0x3c230 # strcspn+0x7a>
	srli	a5,a4,0x6
	addi	a3,sp,48
	slli	a5,a5,0x3
	add	a5,a5,a3
	ld	a2,-40(a5)
	addi	s0,s0,1
	sll	a3,a1,a4
	lbu	a4,0(s0)
	or	a3,a3,a2
	sd	a3,-40(a5)
	bnez	a4,0x3c210 # strcspn+0x5a>
	lbu	a3,0(s1)
	mv	a2,s1
	li	a0,0
	bnez	a3,0x3c244 # strcspn+0x8e>
	j	0x3c1e6 # strcspn+0x30>
	lbu	a3,1(a2)
	addi	a2,a2,1
	beqz	a3,0x3c25a # strcspn+0xa4>
	srli	a4,a3,0x6
	addi	a5,sp,48
	slli	a4,a4,0x3
	add	a4,a4,a5
	ld	a5,-40(a4)
	srl	a5,a5,a3
	andi	a5,a5,1
	beqz	a5,0x3c23c # strcspn+0x86>
	sub	a0,a2,s1
	j	0x3c1e6 # strcspn+0x30>
	jal	ra,0x37f18 # __stack_chk_fail>

__mkostemps:
	addi	sp,sp,-48
	sd	s1,24(sp)
	sd	s2,16(sp)
	sd	s4,0(sp)
	sd	ra,40(sp)
	sd	s0,32(sp)
	sd	s3,8(sp)
	mv	s4,a0
	mv	s1,a1
	mv	s2,a2
	jal	ra,0x369fa # strlen>
	li	a5,5
	bleu	a0,a5,0x3c310 # __mkostemps+0xac>
	addi	a5,a0,-6
	bltu	a5,s1,0x3c310 # __mkostemps+0xac>
	sub	s1,a0,s1
	addi	s1,s1,-6
	add	s1,s1,s4
	li	a2,6
	auipc	a1,0xe
	addi	a1,a1,-1420 # 0x49d08 # atanlo+0x80>
	mv	a0,s1
	jal	ra,0x36306 # memcmp>
	bnez	a0,0x3c310 # __mkostemps+0xac>
	lui	a5,0xffe00
	addi	a5,a5,-4
	and	s2,s2,a5
	ori	s2,s2,194
	li	s0,100
	li	s3,17
	j	0x3c2c6 # __mkostemps+0x62>
	beqz	s0,0x3c2ee # __mkostemps+0x8a>
	jal	ra,0x2f900 # __errno_location>
	lw	a5,0(a0)
	bne	a5,s3,0x3c2ee # __mkostemps+0x8a>
	mv	a0,s1
	jal	ra,0x36f84 # __randname>
	li	a2,384
	mv	a1,s2
	mv	a0,s4
	jal	ra,0x3d738 # open>
	addiw	s0,s0,-1
	bltz	a0,0x3c2ba # __mkostemps+0x56>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	ld	s4,0(sp)
	addi	sp,sp,48
	ret
	mv	a0,s1
	li	a2,6
	auipc	a1,0xe
	addi	a1,a1,-1514 # 0x49d08 # atanlo+0x80>
	jal	ra,0x3632a # memcpy>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	ld	s4,0(sp)
	li	a0,-1
	addi	sp,sp,48
	ret
	jal	ra,0x2f900 # __errno_location>
	li	a5,22
	sw	a5,0(a0)
	li	a0,-1
	j	0x3c2de # __mkostemps+0x7a>

__pthread_setcancelstate:
	li	a5,2
	bltu	a5,a0,0x3c340 # __pthread_setcancelstate+0x24>
	mv	a5,tp
	addi	a5,a5,-200 # 0xffffffffffdfff38 # __BSS_END__+0xffffffffffdb1bb0>
	beqz	a1,0x3c334 # __pthread_setcancelstate+0x18>
	lbu	a4,48(a5)
	andi	a4,a4,255
	sw	a4,0(a1)
	andi	a0,a0,255
	sb	a0,48(a5)
	li	a0,0
	ret
	li	a0,22
	ret

__set_thread_area:
	mv	tp,a0
	li	a0,0
	ret

__clone:
	addi	a1,a1,-16
	sd	a0,0(a1)
	sd	a3,8(a1)
	mv	a0,a2
	mv	a2,a4
	mv	a3,a5
	mv	a4,a6
	li	a7,220
	ecall
	beqz	a0,0x3c364 # __clone+0x1a>
	ret
	ld	a1,0(sp)
	ld	a0,8(sp)
	jalr	a1
	li	a7,93
	ecall

__map_file:
	addi	sp,sp,-176
	sd	s2,144(sp)
	auipc	s2,0x11
	ld	s2,-86(s2) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	ld	a5,0(s2)
	lui	a2,0x89
	sd	s1,152(sp)
	sd	ra,168(sp)
	mv	s1,a1
	sd	s0,160(sp)
	mv	a1,a0
	sd	a5,136(sp)
	addi	a2,a2,-2048 # 0x88800 # __BSS_END__+0x3a478>
	li	a7,56
	li	a0,-100
	ecall
	jal	ra,0x394da # __syscall_ret>
	sext.w	s0,a0
	bltz	s0,0x3c408 # __map_file+0x96>
	li	a7,80
	mv	a0,s0
	addi	a1,sp,8
	ecall
	jal	ra,0x394da # __syscall_ret>
	beqz	a0,0x3c3e4 # __map_file+0x72>
	li	a7,57
	mv	a0,s0
	ecall
	li	a5,0
	ld	a3,136(sp)
	ld	a4,0(s2)
	bne	a3,a4,0x3c40c # __map_file+0x9a>
	ld	ra,168(sp)
	ld	s0,160(sp)
	ld	s1,152(sp)
	ld	s2,144(sp)
	mv	a0,a5
	addi	sp,sp,176
	ret
	ld	a1,56(sp)
	mv	a4,s0
	li	a5,0
	li	a3,1
	li	a2,1
	jal	ra,0x32e16 # __mmap>
	ld	a4,56(sp)
	mv	a5,a0
	li	a7,57
	sd	a4,0(s1)
	mv	a0,s0
	ecall
	li	a4,-1
	bne	a5,a4,0x3c3cc # __map_file+0x5a>
	li	a5,0
	j	0x3c3cc # __map_file+0x5a>
	jal	ra,0x37f18 # __stack_chk_fail>

__secs_to_tm:
	lui	a5,0x1e285
	slli	a5,a5,0x1b
	add	a5,a5,a0
	auipc	a4,0xc
	ld	a4,1720(a4) # 0x48ad0 # xdigits+0x30>
	bltu	a4,a5,0x3c5f4 # __secs_to_tm+0x1e4>
	lui	a5,0xc743a
	addi	a5,a5,640 # 0xffffffffc743a280 # __BSS_END__+0xffffffffc73ebef8>
	lui	a4,0x15
	add	a0,a0,a5
	addi	a4,a4,384 # 0x15180 # dumpSize+0x44>
	rem	a3,a0,a4
	div	a5,a0,a4
	sext.w	t1,a3
	bgez	a3,0x3c44a # __secs_to_tm+0x3a>
	addw	t1,t1,a4
	addi	a5,a5,-1
	addi	a4,a5,3
	li	a3,7
	rem	a4,a4,a3
	sext.w	t3,a4
	bgez	a4,0x3c45e # __secs_to_tm+0x4e>
	addiw	t3,t3,7
	lui	a4,0x24
	addi	a4,a4,-1359 # 0x23ab1 # luaK_code+0x41>
	div	a2,a5,a4
	rem	a5,a5,a4
	sext.w	a2,a2
	sext.w	a3,a5
	bgez	a5,0x3c47c # __secs_to_tm+0x6c>
	addw	a3,a3,a4
	addiw	a2,a2,-1
	lui	a7,0x9
	addiw	a7,a7,-340
	divw	a6,a3,a7
	li	a5,4
	beq	a6,a5,0x3c5ca # __secs_to_tm+0x1ba>
	lui	a5,0xffff7
	addiw	a5,a5,340
	mulw	a5,a6,a5
	li	a7,100
	li	t4,25
	addw	a5,a5,a3
	li	a3,1461
	divw	t5,a5,a3
	mulw	a7,a7,a6
	bne	t5,t4,0x3c57e # __secs_to_tm+0x16e>
	lui	a3,0xffff7
	li	a4,96
	addi	a3,a3,1800 # 0xffffffffffff7708 # __BSS_END__+0xfffffffffffa9380>
	li	t5,24
	addw	a5,a5,a3
	li	a3,365
	li	t4,4
	divw	a0,a5,a3
	beq	a0,t4,0x3c59a # __secs_to_tm+0x18a>
	li	t4,-365
	mulw	t4,t4,a0
	addw	a5,t4,a5
	bnez	a0,0x3c5ee # __secs_to_tm+0x1de>
	li	a0,1
	bnez	t5,0x3c4e4 # __secs_to_tm+0xd4>
	seqz	a0,a6
	li	a3,400
	mul	a2,a2,a3
	addw	a7,a7,a4
	li	a4,305
	add	a7,a7,a2
	ble	a5,a4,0x3c5b8 # __secs_to_tm+0x1a8>
	addiw	t4,a5,-306
	auipc	a3,0xe
	addi	a3,a3,-2028 # 0x49d12 # days_in_month.0+0x2>
	li	a4,30
	li	a6,0
	li	a0,31
	j	0x3c516 # __secs_to_tm+0x106>
	lbu	a4,0(a3)
	mv	a6,a2
	addi	a3,a3,1
	subw	a5,a5,a0
	addiw	a2,a6,1
	sext.w	a0,a4
	ble	a4,a5,0x3c50e # __secs_to_tm+0xfe>
	li	a4,9
	ble	a2,a4,0x3c530 # __secs_to_tm+0x120>
	addiw	a2,a6,-11
	addi	a7,a7,1
	li	a4,1
	slli	a4,a4,0x1f
	addi	a4,a4,100
	li	a3,-1
	add	a4,a4,a7
	srli	a3,a3,0x20
	bltu	a3,a4,0x3c5f4 # __secs_to_tm+0x1e4>
	li	a4,60
	divw	a3,t1,a4
	addiw	a5,a5,1
	sw	a5,12(a1)
	lui	a5,0x1
	addiw	a5,a5,-496
	addiw	a7,a7,100
	addiw	a2,a2,2
	sw	a7,20(a1)
	sw	a2,16(a1)
	sw	t3,24(a1)
	sw	t4,28(a1)
	li	a0,0
	remw	a3,a3,a4
	divw	a5,t1,a5
	sw	a3,4(a1)
	remw	a4,t1,a4
	sw	a5,8(a1)
	sw	a4,0(a1)
	ret
	li	a3,-1461
	mulw	a3,a3,t5
	li	t4,4
	slliw	a4,t5,0x2
	addw	a5,a5,a3
	li	a3,365
	divw	a0,a5,a3
	bne	a0,t4,0x3c4ca # __secs_to_tm+0xba>
	li	a3,400
	mul	a2,a2,a3
	addiw	a4,a4,3
	addw	a7,a7,a4
	addiw	a5,a5,-1095
	li	a4,305
	li	a0,0
	add	a7,a7,a2
	blt	a4,a5,0x3c4fa # __secs_to_tm+0xea>
	addiw	t4,a5,59
	li	a4,30
	addw	t4,t4,a0
	li	a2,0
	blt	a4,a5,0x3c4fe # __secs_to_tm+0xee>
	j	0x3c530 # __secs_to_tm+0x120>
	lui	a5,0xfffe5
	addiw	a5,a5,1020
	addw	a5,a5,a3
	li	a4,1461
	divw	t5,a5,a4
	li	a3,-1461
	li	a7,300
	li	a6,3
	mulw	a3,a3,t5
	slliw	a4,t5,0x2
	j	0x3c4ba # __secs_to_tm+0xaa>
	addw	a4,a4,a0
	li	a0,0
	j	0x3c4e4 # __secs_to_tm+0xd4>
	li	a0,-1
	ret

__tm_to_secs:
	addi	sp,sp,-48
	sd	s2,16(sp)
	auipc	s2,0x11
	ld	s2,-732(s2) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	ld	a4,0(s2)
	sd	s1,24(sp)
	lw	s1,16(a0)
	sd	s0,32(sp)
	sd	ra,40(sp)
	li	a5,11
	sd	a4,8(sp)
	mv	s0,a0
	lw	a0,20(a0)
	bleu	s1,a5,0x3c630 # __tm_to_secs+0x38>
	li	a5,12
	remw	a3,s1,a5
	divw	a4,s1,a5
	sext.w	s1,a3
	bltz	s1,0x3c68a # __tm_to_secs+0x92>
	add	a0,a0,a4
	addi	a1,sp,4
	jal	ra,0x3d5a4 # __year_to_secs>
	lw	a1,4(sp)
	mv	a4,a0
	mv	a0,s1
	mv	s1,a4
	jal	ra,0x3e094 # __month_to_secs>
	lw	a4,12(s0)
	lw	a2,4(s0)
	lui	a5,0x15
	addi	a5,a5,384 # 0x15180 # dumpSize+0x44>
	addiw	a4,a4,-1
	lw	a3,8(s0)
	add	a0,a0,s1
	lw	a1,0(s0)
	ld	a7,8(sp)
	ld	a6,0(s2)
	mul	a4,a4,a5
	slli	a5,a2,0x4
	sub	a5,a5,a2
	lui	a2,0x1
	addi	a2,a2,-496 # 0xe10 # exit-0xf310>
	slli	a5,a5,0x2
	mul	a3,a3,a2
	add	a4,a4,a0
	add	a4,a4,a3
	add	a0,a5,a4
	add	a0,a0,a1
	bne	a7,a6,0x3c692 # __tm_to_secs+0x9a>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	addi	sp,sp,48
	ret
	addiw	a4,a4,-1
	addiw	s1,a3,12
	j	0x3c62e # __tm_to_secs+0x36>
	jal	ra,0x37f18 # __stack_chk_fail>

getoff:
	ld	a4,0(a0)
	li	a5,45
	mv	a6,a0
	lbu	a3,0(a4)
	beq	a3,a5,0x3c7ba # getoff+0x124>
	li	a5,43
	li	t3,0
	beq	a3,a5,0x3c7a0 # getoff+0x10a>
	addiw	a5,a3,-48
	li	a2,9
	bltu	a2,a5,0x3c7b6 # getoff+0x120>
	addi	a1,a4,1
	li	a2,0
	li	a0,9
	slliw	a5,a2,0x2
	addw	a5,a5,a2
	sd	a1,0(a6)
	slliw	a5,a5,0x1
	addw	a5,a5,a3
	lbu	a3,0(a1)
	addiw	a2,a5,-48
	mv	a4,a1
	addiw	a5,a3,-48
	addi	a1,a1,1
	bleu	a5,a0,0x3c6c2 # getoff+0x2c>
	lui	a0,0x1
	addiw	a0,a0,-496
	mulw	a0,a0,a2
	li	a5,58
	beq	a3,a5,0x3c702 # getoff+0x6c>
	beqz	t3,0x3c700 # getoff+0x6a>
	negw	a0,a0
	ret
	addi	a1,a4,1
	sd	a1,0(a6)
	lbu	a7,1(a4)
	li	a5,9
	addiw	a3,a7,-48
	bltu	a5,a3,0x3c756 # getoff+0xc0>
	addi	a4,a4,2
	li	t1,0
	li	a2,9
	slliw	a3,t1,0x2
	mv	a1,a4
	addw	a3,a3,t1
	slliw	a4,a3,0x1
	sd	a1,0(a6)
	addw	a4,a4,a7
	lbu	a7,0(a1)
	addiw	t1,a4,-48
	addi	a4,a1,1
	addiw	a5,a7,-48
	bleu	a5,a2,0x3c71e # getoff+0x88>
	slliw	a3,t1,0x4
	subw	a3,a3,t1
	slliw	a3,a3,0x2
	addw	a0,a0,a3
	li	a5,58
	bne	a7,a5,0x3c6f8 # getoff+0x62>
	addi	a5,a1,1
	sd	a5,0(a6)
	lbu	a5,1(a1)
	li	a4,9
	addiw	a3,a5,-48
	bltu	a4,a3,0x3c6f8 # getoff+0x62>
	addi	a1,a1,2
	li	a3,0
	li	a2,9
	slliw	a4,a3,0x2
	addw	a4,a4,a3
	sd	a1,0(a6)
	slliw	a4,a4,0x1
	addw	a4,a4,a5
	lbu	a5,0(a1)
	addiw	a3,a4,-48
	addi	a1,a1,1
	addiw	a4,a5,-48
	bleu	a4,a2,0x3c77a # getoff+0xe4>
	addw	a0,a0,a3
	j	0x3c6f8 # getoff+0x62>
	addi	a5,a4,1
	sd	a5,0(a0)
	lbu	a3,1(a4)
	li	a2,9
	mv	a4,a5
	addiw	a5,a3,-48
	bleu	a5,a2,0x3c6ba # getoff+0x24>
	li	a0,0
	j	0x3c6f0 # getoff+0x5a>
	addi	a5,a4,1
	sd	a5,0(a0)
	lbu	a3,1(a4)
	li	t3,1
	mv	a4,a5
	j	0x3c6b0 # getoff+0x1a>

getrule:
	ld	a5,0(a0)
	addi	sp,sp,-16
	sd	s0,0(sp)
	sd	ra,8(sp)
	lbu	a3,0(a5)
	li	a2,77
	mv	s0,a1
	sw	a3,0(a1)
	beq	a3,a2,0x3c84e # getrule+0x84>
	li	a4,74
	beq	a3,a4,0x3c848 # getrule+0x7e>
	sw	zero,0(a1)
	lbu	a2,0(a5)
	li	a4,9
	addi	a1,a5,1
	addiw	a7,a2,-48
	li	a3,0
	li	a6,9
	bltu	a4,a7,0x3c936 # getrule+0x16c>
	slliw	a4,a3,0x2
	addw	a4,a4,a3
	sd	a1,0(a0)
	slliw	a4,a4,0x1
	addw	a4,a4,a2
	lbu	a2,0(a1)
	addiw	a3,a4,-48
	mv	a5,a1
	addiw	a4,a2,-48
	addi	a1,a1,1
	bleu	a4,a6,0x3c804 # getrule+0x3a>
	sext.w	a4,a3
	sw	a4,4(s0)
	lbu	a3,0(a5)
	li	a4,47
	beq	a3,a4,0x3c924 # getrule+0x15a>
	lui	a5,0x2
	addi	a5,a5,-992 # 0x1c20 # exit-0xe500>
	ld	ra,8(sp)
	sw	a5,16(s0)
	ld	s0,0(sp)
	addi	sp,sp,16
	ret
	addi	a5,a5,1
	sd	a5,0(a0)
	j	0x3c7ee # getrule+0x24>
	addi	a3,a5,1
	sd	a3,0(a0)
	lbu	a2,1(a5)
	li	a4,9
	addiw	a1,a2,-48
	bltu	a4,a1,0x3c940 # getrule+0x176>
	addi	a1,a5,2
	li	a4,0
	li	a6,9
	slliw	a5,a4,0x2
	addw	a5,a5,a4
	sd	a1,0(a0)
	slliw	a5,a5,0x1
	addw	a5,a5,a2
	lbu	a2,0(a1)
	addiw	a4,a5,-48
	mv	a3,a1
	addiw	a5,a2,-48
	addi	a1,a1,1
	bleu	a5,a6,0x3c86a # getrule+0xa0>
	sext.w	a5,a4
	sw	a5,4(s0)
	addi	a4,a3,1
	sd	a4,0(a0)
	lbu	a1,1(a3)
	li	a5,9
	addiw	a2,a1,-48
	bltu	a5,a2,0x3c944 # getrule+0x17a>
	addi	a3,a3,2
	li	a2,0
	li	a6,9
	slliw	a5,a2,0x2
	addw	a5,a5,a2
	sd	a3,0(a0)
	slliw	a5,a5,0x1
	addw	a5,a5,a1
	lbu	a1,0(a3)
	addiw	a2,a5,-48
	mv	a4,a3
	addiw	a5,a1,-48
	addi	a3,a3,1
	bleu	a5,a6,0x3c8ac # getrule+0xe2>
	sext.w	a5,a2
	sw	a5,8(s0)
	addi	a5,a4,1
	sd	a5,0(a0)
	lbu	a1,1(a4)
	li	a3,9
	addiw	a2,a1,-48
	bltu	a3,a2,0x3c93a # getrule+0x170>
	addi	a3,a4,2
	li	a2,0
	li	a6,9
	slliw	a4,a2,0x2
	addw	a4,a4,a2
	sd	a3,0(a0)
	slliw	a4,a4,0x1
	addw	a4,a4,a1
	lbu	a1,0(a3)
	addiw	a2,a4,-48
	mv	a5,a3
	addiw	a4,a1,-48
	addi	a3,a3,1
	bleu	a4,a6,0x3c8f0 # getrule+0x126>
	sext.w	a4,a2
	sw	a4,12(s0)
	lbu	a3,0(a5)
	li	a4,47
	bne	a3,a4,0x3c838 # getrule+0x6e>
	addi	a5,a5,1
	sd	a5,0(a0)
	jal	ra,0x3c696 # getoff>
	ld	ra,8(sp)
	sw	a0,16(s0)
	ld	s0,0(sp)
	addi	sp,sp,16
	ret
	li	a4,0
	j	0x3c82a # getrule+0x60>
	li	a4,0
	sw	a4,12(s0)
	j	0x3c918 # getrule+0x14e>
	li	a5,0
	j	0x3c890 # getrule+0xc6>
	li	a5,0
	j	0x3c8d2 # getrule+0x108>

getname:
	ld	a7,0(a1)
	li	a5,60
	lbu	a2,0(a7) # 0x9000 # exit-0x7120>
	beq	a2,a5,0x3c9ae # getname+0x66>
	ori	a4,a2,32
	addiw	a4,a4,-97
	li	a3,25
	li	a5,0
	li	t3,5
	li	t1,25
	bltu	a3,a4,0x3c9a0 # getname+0x58>
	addiw	a6,a5,1
	add	a4,a0,a5
	bltu	t3,a5,0x3c980 # getname+0x38>
	sb	a2,0(a4)
	ld	a7,0(a1)
	addi	a5,a5,1
	add	a3,a7,a5
	lbu	a2,0(a3)
	ori	a4,a2,32
	addiw	a4,a4,-97
	bleu	a4,t1,0x3c96c # getname+0x24>
	sd	a3,0(a1)
	li	a4,5
	ble	a6,a4,0x3c9a6 # getname+0x5e>
	addi	a0,a0,6
	sb	zero,0(a0) # 0x1000 # exit-0xf120>
	ret
	add	a0,a0,a5
	sb	zero,0(a0)
	ret
	addi	a2,a7,1
	sd	a2,0(a1)
	lbu	a4,1(a7)
	li	a5,0
	li	a7,62
	li	t1,5
	bnez	a4,0x3c9dc # getname+0x94>
	j	0x3c9a0 # getname+0x58>
	bltu	t1,a5,0x3c9cc # getname+0x84>
	sb	a4,0(a3)
	ld	a2,0(a1)
	addi	a5,a5,1
	addiw	a6,a6,1
	add	a3,a2,a5
	lbu	a4,0(a3)
	beqz	a4,0x3c996 # getname+0x4e>
	add	a3,a0,a5
	sext.w	a6,a5
	bne	a4,a7,0x3c9c4 # getname+0x7c>
	addi	a3,a6,1
	mv	a5,a6
	add	a3,a3,a2
	j	0x3c996 # getname+0x4e>

rule_to_secs:
	addi	sp,sp,-80
	sd	s2,48(sp)
	auipc	s2,0x11
	ld	s2,-1750(s2) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	ld	a5,0(s2)
	mv	a4,a1
	sd	s0,64(sp)
	addi	a1,sp,4
	mv	s0,a0
	mv	a0,a4
	sd	s1,56(sp)
	sd	a5,8(sp)
	sd	ra,72(sp)
	sd	s3,40(sp)
	sd	s4,32(sp)
	sd	s5,24(sp)
	sd	s6,16(sp)
	jal	ra,0x3d5a4 # __year_to_secs>
	lw	a4,0(s0)
	li	a5,77
	mv	s1,a0
	beq	a4,a5,0x3ca6e # rule_to_secs+0x7c>
	li	a5,74
	lw	a0,4(s0)
	beq	a4,a5,0x3ca62 # rule_to_secs+0x70>
	lui	a5,0x15
	addiw	a5,a5,384
	mulw	a5,a5,a0
	add	a5,a5,s1
	lw	a0,16(s0)
	ld	a3,8(sp)
	ld	a4,0(s2)
	add	a0,a0,a5
	bne	a3,a4,0x3cb02 # rule_to_secs+0x110>
	ld	ra,72(sp)
	ld	s0,64(sp)
	ld	s1,56(sp)
	ld	s2,48(sp)
	ld	s3,40(sp)
	ld	s4,32(sp)
	ld	s5,24(sp)
	ld	s6,16(sp)
	addi	sp,sp,80
	ret
	li	a5,59
	blt	a5,a0,0x3cad0 # rule_to_secs+0xde>
	addiw	a0,a0,-1
	j	0x3ca34 # rule_to_secs+0x42>
	lw	s5,4(s0)
	lw	a1,4(sp)
	lw	s4,12(s0)
	addiw	s6,s5,-1
	mv	a0,s6
	lw	s3,8(s0)
	jal	ra,0x3e094 # __month_to_secs>
	lui	a4,0x54
	add	a0,a0,s1
	addi	a4,a4,1536 # 0x54600 # __BSS_END__+0x6278>
	lui	a5,0x94
	addi	a5,a5,-1408 # 0x93a80 # __BSS_END__+0x456f8>
	add	a4,a4,a0
	rem	a4,a4,a5
	lui	a5,0x15
	addiw	a5,a5,384
	divw	a4,a4,a5
	subw	a5,s4,a4
	bltz	a5,0x3cad8 # rule_to_secs+0xe6>
	li	a4,5
	beq	s3,a4,0x3cadc # rule_to_secs+0xea>
	addiw	s3,s3,-1
	slliw	a4,s3,0x3
	subw	a4,a4,s3
	addw	a4,a4,a5
	lui	a5,0x15
	addiw	a5,a5,384
	mulw	a5,a5,a4
	add	a5,a5,a0
	j	0x3ca40 # rule_to_secs+0x4e>
	lw	a5,4(sp)
	bnez	a5,0x3ca34 # rule_to_secs+0x42>
	addiw	a0,a0,-1
	j	0x3ca34 # rule_to_secs+0x42>
	addiw	a5,a5,7
	j	0x3cab0 # rule_to_secs+0xbe>
	lw	a3,4(sp)
	li	a2,2
	addiw	a4,a5,28
	addiw	a3,a3,28
	beq	s5,a2,0x3caf8 # rule_to_secs+0x106>
	lui	a3,0x1
	addiw	a3,a3,-1323
	sraw	a3,a3,s6
	andi	a3,a3,1
	addi	a3,a3,30
	blt	a4,a3,0x3cac2 # rule_to_secs+0xd0>
	addiw	a4,a5,21
	j	0x3cac2 # rule_to_secs+0xd0>
	jal	ra,0x37f18 # __stack_chk_fail>

do_tzset:
	addi	sp,sp,-368
	sd	s0,352(sp)
	auipc	s0,0x11
	ld	s0,-2026(s0) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	ld	a5,0(s0)
	auipc	a0,0xd
	addi	a0,a0,524 # 0x49d20 # days_in_month.0+0x10>
	sd	ra,360(sp)
	sd	s1,344(sp)
	sd	s2,336(sp)
	sd	s3,328(sp)
	sd	s4,320(sp)
	sd	s5,312(sp)
	sd	s6,304(sp)
	sd	a5,296(sp)
	jal	ra,0x2f888 # getenv>
	sd	a0,0(sp)
	beqz	a0,0x3cd7a # do_tzset+0x274>
	lbu	a5,0(a0)
	bnez	a5,0x3cb46 # do_tzset+0x40>
	auipc	a5,0xd
	addi	a5,a5,524 # 0x49d48 # __utc>
	sd	a5,0(sp)
	auipc	s2,0x10
	addi	s2,s2,1962 # 0x4d2f0 # old_tz>
	ld	a1,0(s2)
	beqz	a1,0x3cb5e # do_tzset+0x58>
	ld	a0,0(sp)
	jal	ra,0x369dc # strcmp>
	beqz	a0,0x3ccba # do_tzset+0x1b4>
	auipc	s3,0x12
	addi	s3,s3,-2022 # 0x4e378 # zi>
	ld	a0,0(s3)
	sd	zero,1984(gp) # 0x4e348 # r1>
	sd	zero,1992(gp) # 0x4e350 # r1+0x8>
	sw	zero,2000(gp) # 0x4e358 # r1+0x10>
	sd	zero,1960(gp) # 0x4e330 # r0>
	sd	zero,1968(gp) # 0x4e338 # r0+0x8>
	sw	zero,1976(gp) # 0x4e340 # r0+0x10>
	beqz	a0,0x3cb8c # do_tzset+0x86>
	ld	a1,1920(gp) # 0x4e308 # map_size>
	jal	ra,0x32ed0 # __munmap>
	ld	a0,0(sp)
	jal	ra,0x369fa # strlen>
	lui	a5,0x1
	addi	a5,a5,1
	mv	s1,a0
	bleu	a0,a5,0x3cba8 # do_tzset+0xa2>
	auipc	a5,0xd
	addi	a5,a5,428 # 0x49d48 # __utc>
	sd	a5,0(sp)
	li	s1,3
	auipc	a5,0x10
	addi	a5,a5,1856 # 0x4d2e8 # old_tz_size>
	ld	a0,0(a5)
	bleu	a0,s1,0x3ccd6 # do_tzset+0x1d0>
	ld	a0,0(s2)
	ld	a5,0(sp)
	beqz	a0,0x3cbca # do_tzset+0xc4>
	mv	a1,a5
	addi	a2,s1,1
	jal	ra,0x3632a # memcpy>
	ld	a5,0(sp)
	lbu	a4,0(a5)
	li	s1,58
	bne	a4,s1,0x3ccec # do_tzset+0x1e6>
	addi	a0,a5,1
	sd	a0,0(sp)
	lbu	a5,1(a5)
	addiw	a5,a5,-46
	andi	a5,a5,255
	li	a4,1
	bltu	a4,a5,0x3cd94 # do_tzset+0x28e>
	lbu	a5,-1926(gp) # 0x4d402 # __libc+0x2>
	beqz	a5,0x3cc04 # do_tzset+0xfe>
	auipc	a1,0xd
	addi	a1,a1,308 # 0x49d28 # days_in_month.0+0x18>
	jal	ra,0x369dc # strcmp>
	bnez	a0,0x3cc26 # do_tzset+0x120>
	ld	a0,0(sp)
	addi	a1,gp,1920 # 0x4e308 # map_size>
	jal	ra,0x3c372 # __map_file>
	mv	s1,a0
	beqz	a0,0x3cc26 # do_tzset+0x120>
	addi	s2,gp,1920 # 0x4e308 # map_size>
	ld	a1,0(s2)
	li	a5,43
	bltu	a5,a1,0x3ce06 # do_tzset+0x300>
	mv	a0,s1
	jal	ra,0x32ed0 # __munmap>
	auipc	a5,0xd
	addi	a5,a5,290 # 0x49d48 # __utc>
	sd	a5,0(sp)
	auipc	a5,0x11
	sd	zero,1864(a5) # 0x4e378 # zi>
	mv	s1,sp
	addi	s4,gp,2008 # 0x4e360 # std_name>
	mv	a1,s1
	mv	a0,s4
	jal	ra,0x3c948 # getname>
	auipc	s3,0x10
	ld	s3,1770(s3) # 0x4d330 # _GLOBAL_OFFSET_TABLE_+0x28>
	sd	s4,0(s3)
	mv	a0,s1
	jal	ra,0x3c696 # getoff>
	addi	s2,gp,1888 # 0x4e2e8 # dst_name>
	mv	a5,a0
	auipc	s4,0x10
	ld	s4,1890(s4) # 0x4d3c0 # _GLOBAL_OFFSET_TABLE_+0xb8>
	mv	a1,s1
	mv	a0,s2
	sd	a5,0(s4)
	jal	ra,0x3c948 # getname>
	lbu	a5,0(s2)
	sd	s2,8(s3)
	beqz	a5,0x3cd30 # do_tzset+0x22a>
	ld	a5,0(sp)
	auipc	a4,0x10
	ld	a4,1682(a4) # 0x4d310 # _GLOBAL_OFFSET_TABLE_+0x8>
	li	a3,1
	sw	a3,0(a4)
	lbu	s2,0(a5)
	addiw	a4,s2,-43
	andi	a4,a4,253
	beqz	a4,0x3cca2 # do_tzset+0x19c>
	addiw	a4,s2,-48
	li	a3,9
	bltu	a3,a4,0x3ce1e # do_tzset+0x318>
	mv	a0,s1
	jal	ra,0x3c696 # getoff>
	ld	a5,0(sp)
	sw	a0,1896(gp) # 0x4e2f0 # dst_off>
	lbu	s2,0(a5)
	li	a4,44
	beq	s2,a4,0x3cd52 # do_tzset+0x24c>
	ld	a4,296(sp)
	ld	a5,0(s0)
	bne	a4,a5,0x3d0a4 # do_tzset+0x59e>
	ld	ra,360(sp)
	ld	s0,352(sp)
	ld	s1,344(sp)
	ld	s2,336(sp)
	ld	s3,328(sp)
	ld	s4,320(sp)
	ld	s5,312(sp)
	ld	s6,304(sp)
	addi	sp,sp,368
	ret
	slli	a0,a0,0x1
	bltu	s1,a0,0x3cd86 # do_tzset+0x280>
	addi	a0,s1,1
	sd	a0,0(a5)
	jal	ra,0x39a8a # __libc_malloc>
	sd	a0,0(s2)
	j	0x3cbba # do_tzset+0xb4>
	li	a1,47
	mv	a0,a5
	jal	ra,0x3690a # strchr>
	mv	a2,a0
	beqz	a0,0x3cd08 # do_tzset+0x202>
	ld	a0,0(sp)
	li	a1,44
	sub	a2,a2,a0
	jal	ra,0x36278 # memchr>
	beqz	a0,0x3cd22 # do_tzset+0x21c>
	ld	a5,0(sp)
	auipc	a4,0x11
	sd	zero,1646(a4) # 0x4e378 # zi>
	bnez	a5,0x3cc38 # do_tzset+0x132>
	auipc	a5,0xd
	addi	a5,a5,50 # 0x49d48 # __utc>
	sd	a5,0(sp)
	j	0x3cc38 # do_tzset+0x132>
	ld	a0,0(sp)
	lbu	a5,0(a0)
	bne	a5,s1,0x3cbe0 # do_tzset+0xda>
	mv	a5,a0
	j	0x3cbd6 # do_tzset+0xd0>
	ld	a5,0(sp)
	auipc	a3,0x10
	ld	a3,1502(a3) # 0x4d310 # _GLOBAL_OFFSET_TABLE_+0x8>
	ld	a4,0(s4)
	sw	zero,0(a3)
	lbu	s2,0(a5)
	sw	a4,1896(gp) # 0x4e2f0 # dst_off>
	li	a4,44
	bne	s2,a4,0x3ccba # do_tzset+0x1b4>
	addi	a5,a5,1
	addi	a1,gp,1960 # 0x4e330 # r0>
	mv	a0,s1
	sd	a5,0(sp)
	jal	ra,0x3c7ca # getrule>
	ld	a5,0(sp)
	lbu	a4,0(a5)
	bne	a4,s2,0x3ccba # do_tzset+0x1b4>
	addi	a5,a5,1
	addi	a1,gp,1984 # 0x4e348 # r1>
	mv	a0,s1
	sd	a5,0(sp)
	jal	ra,0x3c7ca # getrule>
	j	0x3ccba # do_tzset+0x1b4>
	auipc	a5,0xd
	addi	a5,a5,-82 # 0x49d28 # days_in_month.0+0x18>
	sd	a5,0(sp)
	j	0x3cb46 # do_tzset+0x40>
	lui	a4,0x1
	addi	a4,a4,2
	bleu	a0,a4,0x3d0a8 # do_tzset+0x5a2>
	sd	a4,0(a5)
	mv	a0,a4
	j	0x3cce2 # do_tzset+0x1dc>
	jal	ra,0x369fa # strlen>
	li	a5,255
	mv	s1,a0
	bltu	a5,a0,0x3cc26 # do_tzset+0x120>
	ld	a0,0(sp)
	li	a1,46
	jal	ra,0x3690a # strchr>
	bnez	a0,0x3cc26 # do_tzset+0x120>
	ld	a1,0(sp)
	addi	s5,sp,40
	addi	a2,s1,1
	mv	a0,s5
	jal	ra,0x3632a # memcpy>
	addi	a5,sp,304
	add	s1,s1,a5
	sb	zero,-264(s1)
	auipc	s4,0xd
	addi	s4,s4,-120 # 0x49d50 # search.0>
	addi	s6,gp,1920 # 0x4e308 # map_size>
	j	0x3cdde # do_tzset+0x2d8>
	lbu	a5,0(s4)
	beqz	a5,0x3cc26 # do_tzset+0x120>
	mv	a0,s4
	jal	ra,0x369fa # strlen>
	sub	s1,s5,a0
	mv	a2,a0
	mv	a1,s4
	mv	s2,a0
	mv	a0,s1
	jal	ra,0x3632a # memcpy>
	mv	a0,s1
	mv	a1,s6
	jal	ra,0x3c372 # __map_file>
	addi	s2,s2,1
	mv	s1,a0
	add	s4,s4,s2
	beqz	a0,0x3cdd6 # do_tzset+0x2d0>
	j	0x3cc10 # do_tzset+0x10a>
	li	a2,4
	auipc	a1,0xd
	addi	a1,a1,-208 # 0x49d38 # days_in_month.0+0x28>
	mv	a0,s1
	jal	ra,0x36306 # memcmp>
	beqz	a0,0x3ce30 # do_tzset+0x32a>
	ld	a1,0(s2)
	j	0x3cc20 # do_tzset+0x11a>
	ld	a4,0(s4)
	lui	a3,0xfffff
	addiw	a3,a3,496
	addw	a4,a4,a3
	sw	a4,1896(gp) # 0x4e2f0 # dst_off>
	j	0x3ccb2 # do_tzset+0x1ac>
	lbu	a4,4(s1)
	sd	s1,0(s3)
	li	a5,49
	beq	a4,a5,0x3d07c # do_tzset+0x576>
	auipc	a5,0xd
	addi	a5,a5,-256 # 0x49d40 # days_in_month.0+0x30>
	lw	a3,0(a5)
	lhu	a5,4(a5)
	addi	a4,s1,20
	sw	a3,8(sp)
	sh	a5,12(sp)
	addi	t3,s1,44
	li	a7,0
	addi	a6,sp,8
	lbu	a5,0(a4) # 0x1000 # exit-0xf120>
	lbu	t1,3(a4)
	lbu	a1,1(a4)
	lbu	a2,2(a4)
	slliw	a5,a5,0x18
	lbu	a3,0(a6)
	or	a5,a5,t1
	slliw	a1,a1,0x10
	or	a5,a5,a1
	slliw	a2,a2,0x8
	or	a5,a5,a2
	mulw	a5,a3,a5
	addi	a4,a4,4
	addi	a6,a6,1
	slli	a5,a5,0x20
	srli	a5,a5,0x20
	add	a7,a7,a5
	bne	a4,t3,0x3ce62 # do_tzset+0x35c>
	addi	a4,a7,88
	add	a4,a4,s1
	sd	a4,2016(gp) # 0x4e368 # trans>
	li	a7,3
	lbu	a5,-12(a4)
	lbu	t4,-9(a4)
	lbu	a3,-8(a4)
	lbu	t5,-11(a4)
	lbu	t3,-5(a4)
	lbu	t1,-7(a4)
	lbu	a6,-10(a4)
	lbu	a1,-6(a4)
	slliw	a5,a5,0x18
	or	a5,a5,t4
	slliw	a3,a3,0x18
	slliw	t5,t5,0x10
	lbu	a2,-4(a4)
	or	a3,a3,t3
	slliw	t1,t1,0x10
	slliw	a6,a6,0x8
	or	a5,a5,t5
	or	a5,a5,a6
	lbu	t4,-1(a4)
	lbu	t3,-3(a4)
	or	a3,a3,t1
	slliw	a1,a1,0x8
	lbu	t1,-2(a4)
	or	a3,a3,a1
	sllw	a7,a5,a7
	slliw	a6,a3,0x1
	slliw	a2,a2,0x18
	slli	a7,a7,0x20
	srli	a7,a7,0x20
	addw	a3,a6,a3
	ld	a1,0(s2)
	slliw	a6,t3,0x10
	or	a2,a2,t4
	add	a4,a4,a7
	or	a2,a2,a6
	slliw	a7,t1,0x8
	slli	a5,a5,0x20
	slliw	a3,a3,0x1
	or	a2,a2,a7
	srli	a5,a5,0x20
	slli	a3,a3,0x20
	add	a5,a5,a4
	addi	a6,a1,-1
	srli	a3,a3,0x20
	slli	a2,a2,0x20
	add	a3,a3,a5
	add	a6,a6,s1
	srli	a2,a2,0x20
	add	a2,a2,a3
	lbu	a7,0(a6)
	sd	a4,1904(gp) # 0x4e2f8 # index>
	sd	a5,2024(gp) # 0x4e370 # types>
	sd	a3,1872(gp) # 0x4e2d8 # abbrevs>
	sd	a2,1880(gp) # 0x4e2e0 # abbrevs_end>
	li	a4,10
	bne	a7,a4,0x3cf90 # do_tzset+0x48a>
	addi	a5,a1,-2
	add	a5,a5,s1
	sd	a5,0(sp)
	lbu	a4,0(a5)
	beq	a4,a7,0x3cf8c # do_tzset+0x486>
	li	a3,10
	mv	a6,a5
	addi	a5,a5,-1
	sd	a5,0(sp)
	lbu	a4,0(a5)
	bne	a4,a3,0x3cf7e # do_tzset+0x478>
	sd	a6,0(sp)
	j	0x3cc38 # do_tzset+0x132>
	auipc	a2,0x10
	ld	a2,928(a2) # 0x4d330 # _GLOBAL_OFFSET_TABLE_+0x28>
	auipc	t1,0x10
	ld	t1,1064(t1) # 0x4d3c0 # _GLOBAL_OFFSET_TABLE_+0xb8>
	auipc	a7,0x10
	ld	a7,880(a7) # 0x4d310 # _GLOBAL_OFFSET_TABLE_+0x8>
	sd	zero,8(a2)
	sd	zero,0(a2)
	sw	zero,1896(gp) # 0x4e2f0 # dst_off>
	sd	zero,0(t1)
	sw	zero,0(a7)
	li	a1,0
	li	t3,0
	li	t4,1
	bltu	a5,a3,0x3cfd0 # do_tzset+0x4ca>
	j	0x3d098 # do_tzset+0x592>
	beqz	a1,0x3d038 # do_tzset+0x532>
	addi	a5,a5,6
	bleu	a3,a5,0x3d018 # do_tzset+0x512>
	lbu	a4,4(a5)
	beqz	a4,0x3cfc8 # do_tzset+0x4c2>
	ld	a4,8(a2)
	bnez	a4,0x3cfca # do_tzset+0x4c4>
	lbu	a4,5(a5)
	addi	a5,a5,6
	li	t3,1
	add	a4,a4,a3
	sd	a4,8(a2)
	lbu	a0,-6(a5)
	lbu	t5,-3(a5)
	lbu	a6,-5(a5)
	lbu	a4,-4(a5)
	slliw	a0,a0,0x18
	or	a0,a0,t5
	slliw	a6,a6,0x10
	or	a0,a0,a6
	slliw	a4,a4,0x8
	or	a0,a0,a4
	sw	t4,0(a7)
	negw	a0,a0
	bltu	a5,a3,0x3cfd0 # do_tzset+0x4ca>
	beqz	t3,0x3d020 # do_tzset+0x51a>
	sw	a0,1896(gp) # 0x4e2f0 # dst_off>
	lw	a5,0(a7)
	beqz	a1,0x3d088 # do_tzset+0x582>
	bnez	a5,0x3ccba # do_tzset+0x1b4>
	ld	a4,0(a2)
	ld	a5,0(t1)
	sd	a4,8(a2)
	sw	a5,1896(gp) # 0x4e2f0 # dst_off>
	j	0x3ccba # do_tzset+0x1b4>
	lbu	a1,5(a5)
	add	a1,a1,a3
	sd	a1,0(a2)
	lbu	a4,0(a5)
	lbu	t6,3(a5)
	lbu	t5,1(a5)
	lbu	a6,2(a5)
	slliw	a4,a4,0x18
	or	a4,a4,t6
	slliw	t5,t5,0x10
	or	a4,a4,t5
	slliw	a6,a6,0x8
	or	a4,a4,a6
	negw	a4,a4
	slli	a4,a4,0x20
	srli	a4,a4,0x20
	sd	a4,0(t1)
	lbu	a4,4(a5)
	beqz	a4,0x3cfca # do_tzset+0x4c4>
	j	0x3cfd6 # do_tzset+0x4d0>
	addi	a4,s1,44
	sd	a4,2016(gp) # 0x4e368 # trans>
	li	a7,2
	j	0x3cea8 # do_tzset+0x3a2>
	ld	a4,8(a2)
	bnez	a4,0x3d094 # do_tzset+0x58e>
	auipc	a4,0xd
	addi	a4,a4,-836 # 0x49d48 # __utc>
	sd	a4,0(a2)
	j	0x3d026 # do_tzset+0x520>
	auipc	a5,0xd
	addi	a5,a5,-848 # 0x49d48 # __utc>
	sd	a5,0(a2)
	j	0x3d02a # do_tzset+0x524>
	jal	ra,0x37f18 # __stack_chk_fail>
	sd	a0,0(a5)
	j	0x3cce2 # do_tzset+0x1dc>

__secs_to_zone:
	addi	sp,sp,-80
	sd	s1,56(sp)
	mv	s1,a0
	addi	a0,gp,1912 # 0x4e300 # lock>
	sd	ra,72(sp)
	sd	s2,48(sp)
	sd	s3,40(sp)
	sd	s4,32(sp)
	sd	s5,24(sp)
	sd	s6,16(sp)
	mv	s2,a1
	mv	s6,a2
	mv	s5,a3
	mv	s3,a4
	mv	s4,a5
	sd	s0,64(sp)
	sd	s7,8(sp)
	sd	s8,0(sp)
	jal	ra,0x36ffe # __lock>
	jal	ra,0x3cb06 # do_tzset>
	auipc	a2,0x11
	ld	a2,670(a2) # 0x4e378 # zi>
	beqz	a2,0x3d20c # __secs_to_zone+0x160>
	ld	t1,2016(gp) # 0x4e368 # trans>
	addi	a2,a2,44
	sub	a2,t1,a2
	snez	a2,a2
	ld	t6,1904(gp) # 0x4e2f8 # index>
	addi	a2,a2,2
	sub	t3,t6,t1
	sra	t3,t3,a2
	beqz	t3,0x3d34e # __secs_to_zone+0x2a2>
	li	a5,1
	beq	t3,a5,0x3d20c # __secs_to_zone+0x160>
	ld	t5,2024(gp) # 0x4e370 # types>
	mv	a1,t3
	li	a5,0
	li	t4,0
	li	t2,3
	li	t0,1
	srli	a7,a1,0x1
	add	a0,a7,t4
	sll	a3,a0,a2
	add	a4,t1,a3
	lbu	a6,0(a4)
	lbu	s8,3(a4)
	lbu	s7,1(a4)
	lbu	a4,2(a4)
	slliw	a6,a6,0x18
	or	a6,a6,s8
	slliw	s7,s7,0x10
	slliw	a4,a4,0x8
	or	a6,a6,s7
	or	a6,a6,a4
	sext.w	a4,a6
	add	s0,t6,a0
	mv	a6,a4
	beq	a2,t2,0x3d2d4 # __secs_to_zone+0x228>
	beqz	s2,0x3d19c # __secs_to_zone+0xf0>
	lbu	a5,-1(s0)
	slliw	a3,a5,0x1
	addw	a3,a3,a5
	slliw	a3,a3,0x1
	add	a3,a3,t5
	lbu	a5,0(a3) # 0xfffffffffffff000 # __BSS_END__+0xfffffffffffb0c78>
	lbu	s0,3(a3)
	lbu	a6,1(a3)
	lbu	a3,2(a3)
	slliw	a5,a5,0x18
	or	a5,a5,s0
	slliw	a6,a6,0x10
	or	a5,a5,a6
	slliw	a3,a3,0x8
	or	a5,a5,a3
	sext.w	a5,a5
	sub	a3,s1,a5
	blt	a3,a4,0x3d30a # __secs_to_zone+0x25e>
	sub	a1,a1,a7
	mv	t4,a0
	bltu	t0,a1,0x3d11c # __secs_to_zone+0x70>
	addi	a5,t3,-1 # 0x7fff # exit-0x8121>
	beq	a5,t4,0x3d20c # __secs_to_zone+0x160>
	beqz	t4,0x3d3d6 # __secs_to_zone+0x32a>
	add	a5,t6,t4
	lbu	a1,0(a5)
	lbu	a5,-1(a5)
	ld	a2,1872(gp) # 0x4e2d8 # abbrevs>
	slliw	a4,a1,0x1
	slliw	a3,a5,0x1
	addw	a3,a3,a5
	addw	a4,a4,a1
	slliw	a3,a3,0x1
	slliw	a4,a4,0x1
	addiw	a3,a3,4
	addiw	a4,a4,4
	add	a3,a3,t5
	add	a4,a4,t5
	lbu	a0,0(a3)
	lbu	a3,0(a4)
	mv	a4,a1
	beq	a0,a3,0x3d4fa # __secs_to_zone+0x44e>
	mv	t3,a5
	slli	a5,a1,0x1
	add	a5,a5,a1
	slli	a5,a5,0x1
	addi	a4,a5,4
	add	a3,t5,a5
	add	a4,a4,t5
	addi	a5,a5,5
	j	0x3d35e # __secs_to_zone+0x2b2>
	auipc	a5,0x10
	ld	a5,260(a5) # 0x4d310 # _GLOBAL_OFFSET_TABLE_+0x8>
	lw	a5,0(a5)
	beqz	a5,0x3d282 # __secs_to_zone+0x1d6>
	lui	s0,0x1e18
	addi	s0,s0,1368 # 0x1e18558 # __BSS_END__+0x1dca1d0>
	div	s0,s1,s0
	addi	s0,s0,70
	j	0x3d22c # __secs_to_zone+0x180>
	addi	s0,s0,-1
	mv	a0,s0
	li	a1,0
	jal	ra,0x3d5a4 # __year_to_secs>
	blt	s1,a0,0x3d22a # __secs_to_zone+0x17e>
	mv	s7,s0
	addi	s0,s0,1
	li	a1,0
	mv	a0,s0
	jal	ra,0x3d5a4 # __year_to_secs>
	blt	a0,s1,0x3d238 # __secs_to_zone+0x18c>
	sext.w	s7,s7
	mv	a1,s7
	addi	a0,gp,1960 # 0x4e330 # r0>
	jal	ra,0x3c9f2 # rule_to_secs>
	mv	s0,a0
	mv	a1,s7
	addi	a0,gp,1984 # 0x4e348 # r1>
	jal	ra,0x3c9f2 # rule_to_secs>
	bnez	s2,0x3d276 # __secs_to_zone+0x1ca>
	auipc	a5,0x10
	ld	a5,348(a5) # 0x4d3c0 # _GLOBAL_OFFSET_TABLE_+0xb8>
	ld	a5,0(a5)
	lw	a4,1896(gp) # 0x4e2f0 # dst_off>
	add	a0,a0,a4
	add	s0,s0,a5
	ble	a0,s0,0x3d312 # __secs_to_zone+0x266>
	blt	s1,s0,0x3d282 # __secs_to_zone+0x1d6>
	blt	s1,a0,0x3d31a # __secs_to_zone+0x26e>
	auipc	a5,0x10
	ld	a5,318(a5) # 0x4d3c0 # _GLOBAL_OFFSET_TABLE_+0xb8>
	ld	a5,0(a5)
	sw	zero,0(s6)
	neg	a5,a5
	sd	a5,0(s5)
	beqz	s3,0x3d2a8 # __secs_to_zone+0x1fc>
	lw	a5,1896(gp) # 0x4e2f0 # dst_off>
	negw	a5,a5
	sd	a5,0(s3)
	auipc	a5,0x10
	ld	a5,136(a5) # 0x4d330 # _GLOBAL_OFFSET_TABLE_+0x28>
	ld	a5,0(a5)
	addi	a0,gp,1912 # 0x4e300 # lock>
	sd	a5,0(s4)
	ld	s0,64(sp)
	ld	ra,72(sp)
	ld	s1,56(sp)
	ld	s2,48(sp)
	ld	s3,40(sp)
	ld	s4,32(sp)
	ld	s5,24(sp)
	ld	s6,16(sp)
	ld	s7,8(sp)
	ld	s8,0(sp)
	addi	sp,sp,80
	j	0x370d4 # __unlock>
	addi	a3,a3,4
	add	a3,a3,t1
	lbu	a4,0(a3)
	lbu	s8,3(a3)
	lbu	s7,1(a3)
	lbu	a3,2(a3)
	slliw	a4,a4,0x18
	or	a4,a4,s8
	slliw	s7,s7,0x10
	or	a4,a4,s7
	slliw	a3,a3,0x8
	or	a4,a4,a3
	slli	a4,a4,0x20
	slli	a6,a6,0x20
	srli	a4,a4,0x20
	or	a4,a4,a6
	j	0x3d162 # __secs_to_zone+0xb6>
	mv	a1,a7
	bltu	t0,a1,0x3d11c # __secs_to_zone+0x70>
	j	0x3d1ae # __secs_to_zone+0x102>
	blt	s1,a0,0x3d31a # __secs_to_zone+0x26e>
	blt	s1,s0,0x3d282 # __secs_to_zone+0x1d6>
	li	a5,1
	sw	a5,0(s6)
	lw	a5,1896(gp) # 0x4e2f0 # dst_off>
	negw	a5,a5
	sd	a5,0(s5)
	beqz	s3,0x3d342 # __secs_to_zone+0x296>
	auipc	a5,0x10
	ld	a5,144(a5) # 0x4d3c0 # _GLOBAL_OFFSET_TABLE_+0xb8>
	ld	a5,0(a5)
	neg	a5,a5
	sd	a5,0(s3)
	auipc	a5,0x10
	ld	a5,-18(a5) # 0x4d330 # _GLOBAL_OFFSET_TABLE_+0x28>
	ld	a5,8(a5)
	j	0x3d2b2 # __secs_to_zone+0x206>
	ld	t5,2024(gp) # 0x4e370 # types>
	ld	a2,1872(gp) # 0x4e2d8 # abbrevs>
	mv	a3,t5
	li	a5,5
	addi	a4,t5,4
	lbu	a4,0(a4)
	add	a5,a5,t5
	sw	a4,0(s6)
	lbu	a4,0(a3)
	lbu	a0,3(a3)
	lbu	a1,1(a3)
	lbu	a3,2(a3)
	slliw	a4,a4,0x18
	or	a4,a4,a0
	slliw	a1,a1,0x10
	or	a4,a4,a1
	slliw	a3,a3,0x8
	or	a4,a4,a3
	sext.w	a4,a4
	sd	a4,0(s5)
	lbu	a5,0(a5)
	add	a2,a2,a5
	sd	a2,0(s4)
	beqz	s3,0x3d3d0 # __secs_to_zone+0x324>
	slli	a5,t3,0x1
	add	t3,t3,a5
	slli	t3,t3,0x1
	add	t5,t5,t3
	lbu	a5,0(t5)
	lbu	a2,3(t5)
	lbu	a3,1(t5)
	lbu	a4,2(t5)
	slliw	a5,a5,0x18
	or	a5,a5,a2
	slliw	a3,a3,0x10
	or	a5,a5,a3
	slliw	a4,a4,0x8
	or	a5,a5,a4
	sext.w	a5,a5
	sd	a5,0(s3)
	addi	a0,gp,1912 # 0x4e300 # lock>
	j	0x3d2ba # __secs_to_zone+0x20e>
	lbu	a5,0(t1)
	lbu	a0,3(t1)
	lbu	a1,1(t1)
	lbu	a4,2(t1)
	slliw	a5,a5,0x18
	slliw	a1,a1,0x10
	or	a5,a5,a0
	or	a5,a5,a1
	slliw	a4,a4,0x8
	or	a5,a5,a4
	sext.w	a1,a5
	li	a4,3
	mv	a5,a1
	beq	a2,a4,0x3d492 # __secs_to_zone+0x3e6>
	beqz	s2,0x3d440 # __secs_to_zone+0x394>
	lbu	a3,-1(t6)
	slliw	a4,a3,0x1
	addw	a4,a4,a3
	slliw	a4,a4,0x1
	add	a4,a4,t5
	lbu	a3,0(a4)
	lbu	a1,3(a4)
	lbu	a2,1(a4)
	lbu	a4,2(a4)
	slliw	a3,a3,0x18
	or	a3,a3,a1
	slliw	a2,a2,0x10
	or	a3,a3,a2
	slliw	a4,a4,0x8
	or	a3,a3,a4
	sext.w	a3,a3
	sub	a3,s1,a3
	ld	a2,1872(gp) # 0x4e2d8 # abbrevs>
	ble	a5,a3,0x3d4be # __secs_to_zone+0x412>
	sub	a3,a2,t5
	li	a5,6
	div	a3,a3,a5
	beqz	a3,0x3d504 # __secs_to_zone+0x458>
	lbu	a1,4(t5)
	addi	a5,t5,4
	li	t3,0
	j	0x3d466 # __secs_to_zone+0x3ba>
	addi	t3,t3,1
	beq	t3,a3,0x3d504 # __secs_to_zone+0x458>
	lbu	a4,0(a5)
	addi	a5,a5,6
	beq	a4,a1,0x3d460 # __secs_to_zone+0x3b4>
	beq	t3,a3,0x3d504 # __secs_to_zone+0x458>
	slli	a5,t3,0x1
	add	a5,a5,t3
	slli	a5,a5,0x1
	addi	a4,a5,4
	add	a4,a4,t5
	lbu	a3,0(a4)
	bnez	a3,0x3d510 # __secs_to_zone+0x464>
	add	a3,t5,a5
	li	t3,0
	addi	a5,a5,5
	j	0x3d35e # __secs_to_zone+0x2b2>
	lbu	a5,4(t1)
	lbu	a0,7(t1)
	lbu	a2,5(t1)
	lbu	a4,6(t1)
	slliw	a5,a5,0x18
	or	a5,a5,a0
	slliw	a2,a2,0x10
	or	a5,a5,a2
	slliw	a4,a4,0x8
	or	a5,a5,a4
	slli	a5,a5,0x20
	slli	a1,a1,0x20
	srli	a5,a5,0x20
	or	a5,a5,a1
	j	0x3d404 # __secs_to_zone+0x358>
	lbu	a4,0(t6)
	li	t4,1
	mv	a1,a4
	add	t4,t4,t6
	lbu	a3,0(t4)
	slliw	a5,a4,0x1
	addw	a5,a5,a4
	slliw	a4,a3,0x1
	addw	a4,a4,a3
	slliw	a4,a4,0x1
	slliw	a5,a5,0x1
	addiw	a4,a4,4
	addiw	a5,a5,4
	add	a4,a4,t5
	add	a5,a5,t5
	lbu	a4,0(a4)
	lbu	a5,0(a5)
	mv	t3,a1
	beq	a4,a5,0x3d1f6 # __secs_to_zone+0x14a>
	mv	t3,a3
	j	0x3d1f6 # __secs_to_zone+0x14a>
	addi	t4,t4,1
	bltu	t4,t3,0x3d4c6 # __secs_to_zone+0x41a>
	mv	t3,a1
	j	0x3d1f6 # __secs_to_zone+0x14a>
	mv	a3,t5
	li	t3,0
	li	a5,5
	addi	a4,t5,4
	j	0x3d35e # __secs_to_zone+0x2b2>
	mv	a3,t5
	li	a5,5
	addi	a4,t5,4
	j	0x3d35e # __secs_to_zone+0x2b2>

tzset:
	addi	sp,sp,-16
	sd	s0,0(sp)
	addi	s0,gp,1912 # 0x4e300 # lock>
	mv	a0,s0
	sd	ra,8(sp)
	jal	ra,0x36ffe # __lock>
	jal	ra,0x3cb06 # do_tzset>
	mv	a0,s0
	ld	s0,0(sp)
	ld	ra,8(sp)
	addi	sp,sp,16
	j	0x370d4 # __unlock>

__tm_to_tzname:
	addi	sp,sp,-16
	sd	s0,0(sp)
	ld	s0,48(a0)
	addi	a0,gp,1912 # 0x4e300 # lock>
	sd	ra,8(sp)
	jal	ra,0x36ffe # __lock>
	jal	ra,0x3cb06 # do_tzset>
	auipc	a5,0xc
	addi	a5,a5,2042 # 0x49d48 # __utc>
	beq	s0,a5,0x3d592 # __tm_to_tzname+0x58>
	auipc	a5,0x10
	ld	a5,-554(a5) # 0x4d330 # _GLOBAL_OFFSET_TABLE_+0x28>
	ld	a4,0(a5)
	beq	a4,s0,0x3d592 # __tm_to_tzname+0x58>
	ld	a5,8(a5)
	beq	a5,s0,0x3d592 # __tm_to_tzname+0x58>
	auipc	a5,0x11
	ld	a5,-502(a5) # 0x4e378 # zi>
	beqz	a5,0x3d58a # __tm_to_tzname+0x50>
	ld	a4,1872(gp) # 0x4e2d8 # abbrevs>
	ld	a5,1880(gp) # 0x4e2e0 # abbrevs_end>
	sub	a3,s0,a4
	sub	a5,a5,a4
	bltu	a3,a5,0x3d592 # __tm_to_tzname+0x58>
	auipc	s0,0x4
	addi	s0,s0,-938 # 0x411e0 # __clzdi2+0x318>
	addi	a0,gp,1912 # 0x4e300 # lock>
	jal	ra,0x370d4 # __unlock>
	ld	ra,8(sp)
	mv	a0,s0
	ld	s0,0(sp)
	addi	sp,sp,16
	ret

__year_to_secs:
	auipc	a7,0x10
	ld	a7,-644(a7) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	ld	a5,0(a7)
	addi	sp,sp,-32
	sd	ra,24(sp)
	sd	a5,8(sp)
	addi	a4,a0,-2
	li	a5,136
	bleu	a4,a5,0x3d658 # __year_to_secs+0xb4>
	beqz	a1,0x3d68c # __year_to_secs+0xe8>
	addi	a6,a0,-100
	li	a3,400
	div	a5,a6,a3
	rem	a3,a6,a3
	sext.w	a4,a5
	sext.w	a2,a3
	bltz	a3,0x3d630 # __year_to_secs+0x8c>
	bnez	a3,0x3d636 # __year_to_secs+0x92>
	li	a5,1
	sw	a5,0(a1)
	li	a3,1
	li	a0,0
	li	a2,0
	slliw	a5,a4,0x1
	addw	a5,a5,a4
	slliw	a5,a5,0x5
	addw	a5,a5,a4
	addw	a0,a0,a5
	subw	a0,a0,a3
	lui	a5,0x15
	addi	a5,a5,384 # 0x15180 # dumpSize+0x44>
	addw	a0,a0,a2
	mul	a0,a0,a5
	lui	a5,0x1e13
	addi	a5,a5,896 # 0x1e13380 # __BSS_END__+0x1dc4ff8>
	mul	a6,a6,a5
	lui	a5,0x386e9
	addi	a5,a5,1280 # 0x386e9500 # __BSS_END__+0x3869b178>
	add	a0,a0,a6
	add	a0,a0,a5
	ld	a4,8(sp)
	ld	a5,0(a7)
	bne	a4,a5,0x3d6e6 # __year_to_secs+0x142>
	ld	ra,24(sp)
	addi	sp,sp,32
	ret
	addiw	a4,a4,-1
	addiw	a2,a2,400
	li	a5,199
	ble	a2,a5,0x3d6b6 # __year_to_secs+0x112>
	li	a5,299
	ble	a2,a5,0x3d6dc # __year_to_secs+0x138>
	addiw	a2,a2,-300
	li	a0,72
	bnez	a2,0x3d6c8 # __year_to_secs+0x124>
	sw	zero,0(a1)
	li	a3,0
	j	0x3d5ec # __year_to_secs+0x48>
	addiw	a4,a0,-68
	andi	a3,a0,3
	sraiw	a5,a4,0x2
	sext.w	a0,a0
	beqz	a3,0x3d6ac # __year_to_secs+0x108>
	beqz	a1,0x3d66e # __year_to_secs+0xca>
	sw	zero,0(a1)
	lui	a4,0x1e13
	addiw	a4,a4,896
	addiw	a0,a0,-70
	mulw	a0,a0,a4
	lui	a4,0x15
	addiw	a4,a4,384
	mulw	a5,a5,a4
	addw	a0,a0,a5
	j	0x3d620 # __year_to_secs+0x7c>
	addi	a6,a0,-100
	li	a3,400
	div	a5,a6,a3
	addi	a1,sp,4
	rem	a3,a6,a3
	sext.w	a4,a5
	sext.w	a2,a3
	bgez	a3,0x3d5e0 # __year_to_secs+0x3c>
	j	0x3d630 # __year_to_secs+0x8c>
	addiw	a5,a5,-1
	beqz	a1,0x3d66e # __year_to_secs+0xca>
	li	a4,1
	sw	a4,0(a1)
	j	0x3d66e # __year_to_secs+0xca>
	li	a5,99
	ble	a2,a5,0x3d6c6 # __year_to_secs+0x122>
	addiw	a2,a2,-100
	li	a0,24
	j	0x3d64e # __year_to_secs+0xaa>
	li	a0,0
	andi	a3,a2,3
	seqz	a5,a3
	sw	a5,0(a1)
	seqz	a3,a3
	srliw	a2,a2,0x2
	j	0x3d5ec # __year_to_secs+0x48>
	addiw	a2,a2,-200
	li	a0,48
	j	0x3d64e # __year_to_secs+0xaa>
	jal	ra,0x37f18 # __stack_chk_fail>

_exit:
	addi	sp,sp,-16
	sd	ra,8(sp)
	jal	ra,0x37f1e # _Exit>

__lseek:
	li	a7,62
	ecall
	j	0x394da # __syscall_ret>

pipe:
	addi	sp,sp,-16
	sd	ra,8(sp)
	li	a7,59
	li	a1,0
	ecall
	jal	ra,0x394da # __syscall_ret>
	ld	ra,8(sp)
	sext.w	a0,a0
	addi	sp,sp,16
	ret

read:
	addi	sp,sp,-16
	mv	a3,a2
	li	a6,0
	mv	a2,a1
	li	a5,0
	mv	a1,a0
	li	a4,0
	li	a0,63
	sd	ra,8(sp)
	jal	ra,0x37146 # __syscall_cp>
	ld	ra,8(sp)
	addi	sp,sp,16
	j	0x394da # __syscall_ret>

open:
	addi	sp,sp,-96
	sd	s1,24(sp)
	auipc	s1,0x10
	ld	s1,-1052(s1) # 0x4d320 # _GLOBAL_OFFSET_TABLE_+0x18>
	ld	t1,0(s1)
	sd	s0,32(sp)
	sd	a2,48(sp)
	sd	a5,72(sp)
	sd	ra,40(sp)
	sd	a3,56(sp)
	sd	a4,64(sp)
	sd	a6,80(sp)
	sd	a7,88(sp)
	sd	t1,8(sp)
	andi	a5,a1,64
	mv	s0,a1
	mv	a2,a0
	bnez	a5,0x3d7b0 # open+0x78>
	lui	a5,0x410
	and	a5,a5,a1
	lui	a3,0x410
	li	a4,0
	beq	a5,a3,0x3d7b0 # open+0x78>
	lui	a3,0x8
	li	a5,0
	li	a6,0
	or	a3,a3,s0
	li	a1,-100
	li	a0,56
	jal	ra,0x37146 # __syscall_cp>
	sext.w	a5,a0
	bltz	a5,0x3d796 # open+0x5e>
	srli	s0,s0,0x13
	andi	s0,s0,1
	bnez	s0,0x3d7ba # open+0x82>
	mv	a0,a5
	jal	ra,0x394da # __syscall_ret>
	ld	a4,8(sp)
	ld	a5,0(s1)
	sext.w	a0,a0
	bne	a4,a5,0x3d7c8 # open+0x90>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	addi	sp,sp,96
	ret
	addi	a5,sp,48
	lwu	a4,48(sp)
	sd	a5,0(sp)
	j	0x3d774 # open+0x3c>
	li	a7,25
	mv	a0,a5
	li	a1,2
	li	a2,1
	ecall
	j	0x3d796 # open+0x5e>
	jal	ra,0x37f18 # __stack_chk_fail>

__intscan:
	addi	sp,sp,-80
	sd	ra,72(sp)
	sd	s0,64(sp)
	sd	s1,56(sp)
	sd	s2,48(sp)
	sd	s3,40(sp)
	sd	s4,32(sp)
	sd	s5,24(sp)
	sd	s6,16(sp)
	sd	s7,8(sp)
	li	a5,36
	bltu	a5,a1,0x3d8c4 # __intscan+0xf8>
	li	a5,1
	mv	s4,a1
	mv	s1,a0
	mv	s6,a2
	mv	s2,a3
	li	s3,32
	li	s5,4
	beq	a1,a5,0x3d8c4 # __intscan+0xf8>
	ld	a5,8(s1)
	ld	a4,184(s1)
	addi	a3,a5,1 # 0x410001 # __BSS_END__+0x3c1c79>
	beq	a5,a4,0x3d986 # __intscan+0x1ba>
	sd	a3,8(s1)
	lbu	a5,0(a5)
	addiw	a3,a5,-9
	beq	a5,s3,0x3d7fc # __intscan+0x30>
	sext.w	a4,a5
	bleu	a3,s5,0x3d7fc # __intscan+0x30>
	addiw	a4,a4,-43
	andi	a4,a4,-3
	sext.w	a4,a4
	li	s3,0
	beqz	a4,0x3d962 # __intscan+0x196>
	bnez	s4,0x3d8e4 # __intscan+0x118>
	li	a4,48
	beq	a5,a4,0x3d998 # __intscan+0x1cc>
	auipc	a4,0xc
	addi	a4,a4,1384 # 0x49da0 # table>
	add	a4,a4,a5
	lbu	a3,1(a4)
	li	a4,9
	bltu	a4,a3,0x3d8b0 # __intscan+0xe4>
	addiw	a3,a5,-48
	bltu	a4,a3,0x3dc1e # __intscan+0x452>
	lui	s4,0x1999a
	li	s0,0
	li	s5,9
	addi	s4,s4,-1640 # 0x19999998 # __BSS_END__+0x1994b610>
	j	0x3d874 # __intscan+0xa8>
	sd	a2,8(s1)
	lbu	a5,0(a4)
	addiw	a4,a5,-48
	bltu	s5,a4,0x3d9d0 # __intscan+0x204>
	bltu	s4,s0,0x3daa0 # __intscan+0x2d4>
	slliw	a0,s0,0x2
	addw	a0,a0,s0
	ld	a4,8(s1)
	ld	a3,184(s1)
	slliw	a0,a0,0x1
	addw	a0,a0,a5
	addi	a2,a4,1
	addiw	s0,a0,-48
	bne	a4,a3,0x3d862 # __intscan+0x96>
	mv	a0,s1
	jal	ra,0x39468 # __shgetc>
	mv	a5,a0
	j	0x3d868 # __intscan+0x9c>
	auipc	s5,0xc
	addi	s5,s5,1286 # 0x49da0 # table>
	add	a4,s5,a5
	lbu	a3,1(a4)
	li	a4,15
	bleu	a3,a4,0x3d90a # __intscan+0x13e>
	ld	a5,192(s1)
	bltz	a5,0x3d8bc # __intscan+0xf0>
	ld	a5,8(s1)
	addi	a5,a5,-1
	sd	a5,8(s1)
	li	a1,0
	mv	a0,s1
	jal	ra,0x3944a # __shlim>
	jal	ra,0x2f900 # __errno_location>
	li	a5,22
	sw	a5,0(a0)
	li	a0,0
	ld	ra,72(sp)
	ld	s0,64(sp)
	ld	s1,56(sp)
	ld	s2,48(sp)
	ld	s3,40(sp)
	ld	s4,32(sp)
	ld	s5,24(sp)
	ld	s6,16(sp)
	ld	s7,8(sp)
	addi	sp,sp,80
	ret
	li	a4,16
	beq	s4,a4,0x3d990 # __intscan+0x1c4>
	auipc	s5,0xc
	addi	s5,s5,1206 # 0x49da0 # table>
	add	s5,s5,a5
	lbu	a4,1(s5)
	bleu	s4,a4,0x3d8b0 # __intscan+0xe4>
	li	a4,10
	auipc	s5,0xc
	addi	s5,s5,1186 # 0x49da0 # table>
	beq	s4,a4,0x3dc14 # __intscan+0x448>
	addiw	a3,s4,-1
	and	a3,s4,a3
	add	a0,s5,a5
	sext.w	a3,a3
	lbu	a4,1(a0)
	beqz	a3,0x3db06 # __intscan+0x33a>
	lui	s6,0x71c7
	li	s0,0
	addi	s6,s6,454 # 0x71c71c6 # __BSS_END__+0x7178e3e>
	bltu	a4,s4,0x3d948 # __intscan+0x17c>
	j	0x3d9d4 # __intscan+0x208>
	sd	a2,8(s1)
	lbu	a0,0(a5)
	add	a0,a0,s5
	lbu	a5,1(a0)
	sext.w	a4,a5
	bleu	s4,a5,0x3d9d0 # __intscan+0x204>
	bltu	s6,s0,0x3d9ee # __intscan+0x222>
	mulw	s0,s4,s0
	ld	a5,8(s1)
	ld	a3,184(s1)
	addi	a2,a5,1
	addw	s0,s0,a4
	bne	a5,a3,0x3d930 # __intscan+0x164>
	mv	a0,s1
	jal	ra,0x39468 # __shgetc>
	j	0x3d936 # __intscan+0x16a>
	ld	a4,8(s1)
	ld	a3,184(s1)
	addi	s3,a5,-45
	seqz	s3,s3
	neg	s3,s3
	beq	a4,a3,0x3dbbc # __intscan+0x3f0>
	addi	a5,a4,1
	sd	a5,8(s1)
	lbu	a5,0(a4)
	beqz	s4,0x3d830 # __intscan+0x64>
	j	0x3d8e4 # __intscan+0x118>
	mv	a0,s1
	jal	ra,0x39468 # __shgetc>
	mv	a5,a0
	j	0x3d80e # __intscan+0x42>
	li	a4,48
	bne	a5,a4,0x3d89a # __intscan+0xce>
	ld	a5,8(s1)
	ld	a4,184(s1)
	beq	a5,a4,0x3dc0a # __intscan+0x43e>
	addi	a4,a5,1
	sd	a4,8(s1)
	lbu	a5,0(a5)
	ori	a4,a5,32
	sext.w	a4,a4
	li	a3,120
	beq	a4,a3,0x3dbda # __intscan+0x40e>
	bnez	s4,0x3d8fc # __intscan+0x130>
	auipc	s5,0xc
	addi	s5,s5,996 # 0x49da0 # table>
	add	a5,a5,s5
	lbu	a4,1(a5)
	li	s4,8
	li	a5,5
	j	0x3db1c # __intscan+0x350>
	slli	s0,s0,0x20
	srli	s0,s0,0x20
	ld	a5,192(s1)
	bltz	a5,0x3d9e0 # __intscan+0x214>
	ld	a5,8(s1)
	addi	a5,a5,-1
	sd	a5,8(s1)
	bleu	s2,s0,0x3da82 # __intscan+0x2b6>
	xor	s2,s3,s0
	sub	a0,s2,s3
	j	0x3d8ce # __intscan+0x102>
	slli	s6,s4,0x20
	slli	s0,s0,0x20
	srli	s6,s6,0x20
	srli	s0,s0,0x20
	mul	s0,s0,s6
	j	0x3da24 # __intscan+0x258>
	sd	a5,8(s1)
	lbu	a0,0(a4)
	add	a0,a0,s5
	lbu	a4,1(a0)
	mv	a5,a4
	not	a3,a4
	bleu	s4,a4,0x3d9d4 # __intscan+0x208>
	mulhu	a4,s0,s6
	bnez	a4,0x3da4a # __intscan+0x27e>
	mul	s0,s0,s6
	bltu	a3,s0,0x3da4a # __intscan+0x27e>
	ld	a4,8(s1)
	ld	a3,184(s1)
	add	s0,s0,a5
	addi	a5,a4,1
	bne	a4,a3,0x3da00 # __intscan+0x234>
	mv	a0,s1
	jal	ra,0x39468 # __shgetc>
	j	0x3da06 # __intscan+0x23a>
	sd	a3,8(s1)
	lbu	a0,0(a5)
	add	a0,a0,s5
	lbu	a5,1(a0)
	bleu	s4,a5,0x3da66 # __intscan+0x29a>
	ld	a5,8(s1)
	ld	a4,184(s1)
	addi	a3,a5,1
	bne	a5,a4,0x3da3a # __intscan+0x26e>
	mv	a0,s1
	jal	ra,0x39468 # __shgetc>
	add	a0,a0,s5
	lbu	a5,1(a0)
	bltu	a5,s4,0x3da4a # __intscan+0x27e>
	jal	ra,0x2f900 # __errno_location>
	li	a5,34
	sw	a5,0(a0)
	andi	a5,s2,1
	beqz	a5,0x3daf6 # __intscan+0x32a>
	ld	a5,192(s1)
	mv	s0,s2
	li	s3,0
	bgez	a5,0x3d9da # __intscan+0x20e>
	j	0x3d9e4 # __intscan+0x218>
	andi	a5,s2,1
	bnez	a5,0x3da8e # __intscan+0x2c2>
	beqz	s3,0x3dbca # __intscan+0x3fe>
	li	s3,-1
	bleu	s0,s2,0x3d9e4 # __intscan+0x218>
	jal	ra,0x2f900 # __errno_location>
	li	a5,34
	sw	a5,0(a0)
	mv	a0,s2
	j	0x3d8ce # __intscan+0x102>
	slli	a0,s0,0x20
	srli	a0,a0,0x20
	slli	a3,a0,0x2
	add	a3,a3,a0
	slli	a3,a3,0x1
	mv	a5,a4
	li	s4,9
	auipc	s5,0xc
	ld	s5,726(s5) # 0x49d88 # search.0+0x38>
	j	0x3dade # __intscan+0x312>
	sd	a5,8(s1)
	lbu	a0,0(a4)
	slli	a3,s0,0x2
	add	a3,a3,s0
	addiw	a5,a0,-48
	slli	a3,a3,0x1
	not	a4,a5
	bltu	s4,a5,0x3d9d4 # __intscan+0x208>
	bltu	s5,s0,0x3dba4 # __intscan+0x3d8>
	bltu	a4,a3,0x3dba4 # __intscan+0x3d8>
	ld	a4,8(s1)
	ld	a2,184(s1)
	add	s0,a5,a3
	addi	a5,a4,1
	bne	a4,a2,0x3dabc # __intscan+0x2f0>
	mv	a0,s1
	jal	ra,0x39468 # __shgetc>
	j	0x3dac2 # __intscan+0x2f6>
	ld	a5,192(s1)
	mv	s0,s2
	bgez	a5,0x3d9da # __intscan+0x20e>
	beqz	s3,0x3dbca # __intscan+0x3fe>
	li	s3,-1
	j	0x3d9e4 # __intscan+0x218>
	slliw	a5,s4,0x1
	addw	a5,a5,s4
	slliw	a5,a5,0x3
	subw	a5,a5,s4
	srliw	a5,a5,0x5
	andi	a5,a5,7
	auipc	a3,0xc
	addi	a3,a3,628 # 0x49d90 # search.0+0x40>
	add	a5,a5,a3
	lbu	s6,0(a5)
	bleu	s4,a4,0x3dc1e # __intscan+0x452>
	li	s0,0
	lui	s7,0x8000
	j	0x3db4e # __intscan+0x382>
	sd	a2,8(s1)
	lbu	a0,0(a5)
	add	a0,a0,s5
	lbu	a5,1(a0)
	sext.w	a4,a5
	bleu	s4,a5,0x3d9d0 # __intscan+0x204>
	bleu	s7,s0,0x3db6a # __intscan+0x39e>
	ld	a5,8(s1)
	ld	a3,184(s1)
	sllw	s0,s0,s6
	or	s0,s0,a4
	addi	a2,a5,1
	sext.w	s0,s0
	bne	a5,a3,0x3db36 # __intscan+0x36a>
	mv	a0,s1
	jal	ra,0x39468 # __shgetc>
	j	0x3db3c # __intscan+0x370>
	slli	s0,s0,0x20
	li	s7,-1
	srli	s0,s0,0x20
	srl	s7,s7,s6
	bltu	s7,s0,0x3da4a # __intscan+0x27e>
	ld	a4,8(s1)
	ld	a3,184(s1)
	sll	s0,s0,s6
	addi	a2,a4,1
	or	s0,s0,a5
	beq	a4,a3,0x3db9c # __intscan+0x3d0>
	sd	a2,8(s1)
	lbu	a0,0(a4)
	add	a0,a0,s5
	lbu	a5,1(a0)
	bltu	a5,s4,0x3db74 # __intscan+0x3a8>
	j	0x3d9d4 # __intscan+0x208>
	mv	a0,s1
	jal	ra,0x39468 # __shgetc>
	j	0x3db90 # __intscan+0x3c4>
	auipc	s5,0xc
	addi	s5,s5,508 # 0x49da0 # table>
	add	a0,a0,s5
	lbu	a4,1(a0)
	li	a5,9
	bltu	a5,a4,0x3d9d4 # __intscan+0x208>
	li	s4,10
	j	0x3da4a # __intscan+0x27e>
	mv	a0,s1
	jal	ra,0x39468 # __shgetc>
	mv	a5,a0
	beqz	s4,0x3d830 # __intscan+0x64>
	j	0x3d8e4 # __intscan+0x118>
	jal	ra,0x2f900 # __errno_location>
	li	a5,34
	sw	a5,0(a0)
	addi	a0,s2,-1
	j	0x3d8ce # __intscan+0x102>
	ld	a5,8(s1)
	ld	a4,184(s1)
	beq	a5,a4,0x3dc36 # __intscan+0x46a>
	addi	a4,a5,1
	sd	a4,8(s1)
	lbu	a5,0(a5)
	auipc	s5,0xc
	addi	s5,s5,436 # 0x49da0 # table>
	add	a5,a5,s5
	lbu	s0,1(a5)
	li	a5,15
	bltu	a5,s0,0x3dc22 # __intscan+0x456>
	sext.w	a4,s0
	li	s4,16
	li	s6,4
	j	0x3db2e # __intscan+0x362>
	mv	a0,s1
	jal	ra,0x39468 # __shgetc>
	mv	a5,a0
	j	0x3d9aa # __intscan+0x1de>
	addiw	a4,a5,-48
	li	a3,9
	bleu	a4,a3,0x3d854 # __intscan+0x88>
	li	s0,0
	j	0x3d9d4 # __intscan+0x208>
	ld	a5,192(s1)
	bltz	a5,0x3dc40 # __intscan+0x474>
	ld	a5,8(s1)
	beqz	s6,0x3dc52 # __intscan+0x486>
	addi	a5,a5,-2
	sd	a5,8(s1)
	li	a0,0
	j	0x3d8ce # __intscan+0x102>
	mv	a0,s1
	jal	ra,0x39468 # __shgetc>
	mv	a5,a0
	j	0x3dbec # __intscan+0x420>
	li	a0,0
	bnez	s6,0x3d8ce # __intscan+0x102>
	mv	a0,s1
	li	a1,0
	jal	ra,0x3944a # __shlim>
	li	a0,0
	j	0x3d8ce # __intscan+0x102>
	addi	a5,a5,-1
	sd	a5,8(s1)
	j	0x3dc46 # __intscan+0x47a>

__mo_lookup:
	addi	sp,sp,-128
	sd	s4,80(sp)
	lw	s4,0(a0)
	lui	a5,0x6afbf
	addiw	a5,a5,-734
	addw	s4,s4,a5
	lw	a5,16(a0)
	sd	s2,96(sp)
	sd	s6,64(sp)
	sd	s9,40(sp)
	sd	s10,32(sp)
	sd	s11,24(sp)
	sd	ra,120(sp)
	sd	s0,112(sp)
	sd	s1,104(sp)
	sd	s3,88(sp)
	sd	s5,72(sp)
	sd	s7,56(sp)
	sd	s8,48(sp)
	sd	a5,8(sp)
	lw	s10,8(a0)
	lw	s2,12(a0)
	mv	s9,a0
	mv	s11,a1
	mv	s6,a2
	beqz	s4,0x3dd18 # __mo_lookup+0xc0>
	mv	s0,a5
	lui	a2,0x10
	addi	a2,a2,-256 # 0xff00 # exit-0x220>
	srliw	a7,s10,0x8
	srliw	a6,s2,0x8
	srliw	a5,a5,0x18
	slliw	t1,s0,0x18
	srliw	a0,s0,0x8
	lui	a1,0xff0
	srliw	a3,s10,0x18
	slliw	t4,s10,0x18
	srliw	a4,s2,0x18
	slliw	t3,s2,0x18
	and	a7,a7,a2
	and	a6,a6,a2
	slliw	s5,s0,0x8
	or	a5,a5,t1
	and	a2,a2,a0
	or	a5,a5,a2
	slliw	s10,s10,0x8
	slliw	s2,s2,0x8
	or	a3,a3,t4
	or	a4,a4,t3
	and	s5,s5,a1
	or	a3,a3,a7
	and	s10,s10,a1
	or	a4,a4,a6
	and	s2,s2,a1
	or	s5,a5,s5
	or	s10,a3,s10
	or	s2,a4,s2
	sext.w	a5,s5
	sext.w	s10,s10
	sext.w	s2,s2
	sd	a5,8(sp)
	slli	a5,s10,0x20
	srli	a5,a5,0x20
	srli	a4,s11,0x2
	bleu	a4,a5,0x3de76 # __mo_lookup+0x21e>
	slliw	a5,s10,0x2
	slli	a5,a5,0x20
	srli	a5,a5,0x20
	slli	a4,s2,0x20
	sub	a5,s11,a5
	srli	a4,a4,0x20
	bleu	a5,a4,0x3de76 # __mo_lookup+0x21e>
	ld	a3,8(sp)
	slli	a4,a3,0x20
	srli	a4,a4,0x20
	bleu	a5,a4,0x3de76 # __mo_lookup+0x21e>
	or	s3,a3,s2
	andi	s3,s3,3
	bnez	s3,0x3de76 # __mo_lookup+0x21e>
	srliw	a5,s2,0x2
	lui	a6,0x10
	sd	a5,0(sp)
	addi	s5,a6,-256 # 0xff00 # exit-0x220>
	lui	s8,0xff0
	ld	a5,0(sp)
	srliw	s2,s10,0x1
	addw	s0,s2,s3
	slliw	s1,s0,0x1
	addw	a5,a5,s1
	addiw	a3,a5,1
	slli	a3,a3,0x20
	slli	a5,a5,0x20
	srli	a5,a5,0x20
	srli	a3,a3,0x20
	slli	a5,a5,0x2
	slli	a3,a3,0x2
	add	a5,a5,s9
	add	a3,a3,s9
	lw	a4,0(a5)
	lw	a5,0(a3)
	mv	a0,s6
	srliw	t0,a4,0x18
	slliw	a1,a4,0x18
	srliw	t5,a4,0x8
	srliw	a3,a5,0x18
	slliw	t6,a5,0x18
	srliw	t4,a5,0x8
	slliw	t3,a4,0x8
	slliw	t1,a5,0x8
	or	a1,t0,a1
	and	t5,t5,s5
	or	a3,a3,t6
	and	t4,t4,s5
	or	a1,a1,t5
	and	t3,t3,s8
	or	a3,a3,t4
	and	t1,t1,s8
	srliw	s7,s10,0x1
	or	a1,a1,t3
	or	a3,a3,t1
	beqz	s4,0x3dde6 # __mo_lookup+0x18e>
	sext.w	a4,a1
	sext.w	a5,a3
	addw	a3,a5,a4
	slli	a3,a3,0x20
	slli	a5,a5,0x20
	srli	a5,a5,0x20
	srli	a3,a3,0x20
	slli	a4,a4,0x20
	add	a3,a3,s9
	add	a1,s9,a5
	srli	a4,a4,0x20
	sub	t1,s11,a5
	bleu	s11,a5,0x3de76 # __mo_lookup+0x21e>
	bleu	t1,a4,0x3de76 # __mo_lookup+0x21e>
	lbu	a5,0(a3)
	bnez	a5,0x3de76 # __mo_lookup+0x21e>
	jal	ra,0x369dc # strcmp>
	beqz	a0,0x3de26 # __mo_lookup+0x1ce>
	li	a5,1
	beq	s10,a5,0x3de76 # __mo_lookup+0x21e>
	bltz	a0,0x3de96 # __mo_lookup+0x23e>
	subw	s10,s10,s2
	mv	s3,s0
	j	0x3dd64 # __mo_lookup+0x10c>
	ld	a5,8(sp)
	srliw	s5,a5,0x2
	addw	s1,s5,s1
	addiw	a4,s1,1
	slli	a4,a4,0x20
	slli	s1,s1,0x20
	srli	s1,s1,0x20
	srli	a4,a4,0x20
	slli	a5,s1,0x2
	slli	a4,a4,0x2
	add	a5,a5,s9
	add	a4,a4,s9
	lw	a3,0(a5)
	lw	a5,0(a4)
	bnez	s4,0x3de9a # __mo_lookup+0x242>
	slli	a0,a5,0x20
	srli	a0,a0,0x20
	bleu	s11,a0,0x3de76 # __mo_lookup+0x21e>
	slli	a4,a3,0x20
	srli	a4,a4,0x20
	sub	s11,s11,a0
	bleu	s11,a4,0x3de76 # __mo_lookup+0x21e>
	addw	a5,a5,a3
	slli	a5,a5,0x20
	srli	a5,a5,0x20
	add	a5,a5,s9
	lbu	a5,0(a5) # 0x6afbf000 # __BSS_END__+0x6af70c78>
	add	a0,a0,s9
	beqz	a5,0x3de78 # __mo_lookup+0x220>
	li	a0,0
	ld	ra,120(sp)
	ld	s0,112(sp)
	ld	s1,104(sp)
	ld	s2,96(sp)
	ld	s3,88(sp)
	ld	s4,80(sp)
	ld	s5,72(sp)
	ld	s6,64(sp)
	ld	s7,56(sp)
	ld	s8,48(sp)
	ld	s9,40(sp)
	ld	s10,32(sp)
	ld	s11,24(sp)
	addi	sp,sp,128
	ret
	mv	s10,s7
	j	0x3dd64 # __mo_lookup+0x10c>
	lui	a0,0x10
	srliw	a2,a5,0x18
	srliw	a1,a3,0x18
	slliw	t4,a3,0x18
	srliw	a7,a3,0x8
	addi	a0,a0,-256 # 0xff00 # exit-0x220>
	slliw	t3,a5,0x18
	srliw	a6,a5,0x8
	slliw	a4,a3,0x8
	lui	t1,0xff0
	and	a7,a7,a0
	or	a3,a2,t3
	slliw	a5,a5,0x8
	or	a1,a1,t4
	and	a0,a6,a0
	or	a3,a3,a0
	or	a2,a1,a7
	and	a4,a4,t1
	and	a5,a5,t1
	or	a5,a5,a3
	or	a4,a4,a2
	sext.w	a3,a4
	sext.w	a5,a5
	j	0x3de4e # __mo_lookup+0x1f6>

wcrtomb:
	beqz	a0,0x3df48 # wcrtomb+0x5a>
	li	a4,127
	sext.w	a5,a1
	bleu	a1,a4,0x3df44 # wcrtomb+0x56>
	addi	sp,sp,-16
	sd	ra,8(sp)
	mv	a3,tp
	ld	a3,-48(a3)
	ld	a3,0(a3)
	beqz	a3,0x3df4c # wcrtomb+0x5e>
	li	a4,2047
	bleu	a5,a4,0x3df94 # wcrtomb+0xa6>
	lui	a4,0xd
	addi	a4,a4,2047 # 0xd7ff # exit-0x2921>
	bleu	a5,a4,0x3df64 # wcrtomb+0x76>
	lui	a4,0xffff2
	addw	a4,a4,a5
	lui	a3,0x2
	bltu	a4,a3,0x3df64 # wcrtomb+0x76>
	lui	a4,0xffff0
	addw	a5,a5,a4
	lui	a4,0x100
	bltu	a5,a4,0x3dfb0 # wcrtomb+0xc2>
	jal	ra,0x2f900 # __errno_location>
	li	a5,84
	sw	a5,0(a0)
	li	a0,-1
	ld	ra,8(sp)
	addi	sp,sp,16
	ret
	sb	a1,0(a0)
	li	a0,1
	ret
	lui	a3,0xffff2
	addiw	a3,a3,128
	addw	a5,a5,a3
	bltu	a4,a5,0x3df32 # wcrtomb+0x44>
	sb	a1,0(a0)
	ld	ra,8(sp)
	li	a0,1
	addi	sp,sp,16
	ret
	sraiw	a5,a1,0x6
	sraiw	a4,a1,0xc
	andi	a5,a5,63
	andi	a1,a1,63
	ori	a4,a4,-32
	ori	a5,a5,-128
	ori	a1,a1,-128
	sb	a4,0(a0)
	sb	a5,1(a0)
	sb	a1,2(a0)
	ld	ra,8(sp)
	li	a0,3
	addi	sp,sp,16
	ret
	sraiw	a5,a1,0x6
	andi	a1,a1,63
	ori	a5,a5,-64
	ori	a1,a1,-128
	sb	a5,0(a0)
	sb	a1,1(a0)
	li	a0,2
	j	0x3df3e # wcrtomb+0x50>
	sraiw	a4,a1,0xc
	sraiw	a5,a1,0x6
	sraiw	a3,a1,0x12
	andi	a4,a4,63
	andi	a5,a5,63
	andi	a1,a1,63
	ori	a3,a3,-16
	ori	a4,a4,-128
	ori	a5,a5,-128
	ori	a1,a1,-128
	sb	a3,0(a0)
	sb	a4,1(a0)
	sb	a5,2(a0)
	sb	a1,3(a0)
	li	a0,4
	j	0x3df3e # wcrtomb+0x50>

execve:
	addi	sp,sp,-16
	sd	ra,8(sp)
	li	a7,221
	ecall
	jal	ra,0x394da # __syscall_ret>
	ld	ra,8(sp)
	sext.w	a0,a0
	addi	sp,sp,16
	ret

close_file:
	beqz	a0,0x3e050 # close_file+0x4c>
	lw	a5,140(a0)
	addi	sp,sp,-16
	sd	s0,0(sp)
	sd	ra,8(sp)
	sext.w	a5,a5
	mv	s0,a0
	bgez	a5,0x3e042 # close_file+0x3e>
	ld	a4,40(s0)
	ld	a5,56(s0)
	beq	a4,a5,0x3e02a # close_file+0x26>
	ld	a5,72(s0)
	li	a2,0
	li	a1,0
	mv	a0,s0
	jalr	a5
	ld	a1,8(s0)
	ld	a5,16(s0)
	beq	a1,a5,0x3e048 # close_file+0x44>
	ld	a4,80(s0)
	mv	a0,s0
	ld	s0,0(sp)
	ld	ra,8(sp)
	li	a2,1
	sub	a1,a1,a5
	addi	sp,sp,16
	jr	a4
	jal	ra,0x3bb48 # __lockfile>
	j	0x3e018 # close_file+0x14>
	ld	ra,8(sp)
	ld	s0,0(sp)
	addi	sp,sp,16
	ret
	ret

__stdio_exit_needed:
	addi	sp,sp,-16
	sd	s0,0(sp)
	sd	ra,8(sp)
	jal	ra,0x34184 # __ofl_lock>
	ld	s0,0(a0)
	beqz	s0,0x3e06a # __stdio_exit_needed+0x18>
	mv	a0,s0
	jal	ra,0x3e004 # close_file>
	ld	s0,112(s0)
	bnez	s0,0x3e060 # __stdio_exit_needed+0xe>
	auipc	a0,0xf
	ld	a0,382(a0) # 0x4d1e8 # __stdin_used>
	jal	ra,0x3e004 # close_file>
	auipc	a0,0xf
	ld	a0,610(a0) # 0x4d2d8 # __stdout_used>
	jal	ra,0x3e004 # close_file>
	ld	s0,0(sp)
	ld	ra,8(sp)
	auipc	a0,0xf
	ld	a0,114(a0) # 0x4d0f8 # __stderr_used>
	addi	sp,sp,16
	j	0x3e004 # close_file>

__month_to_secs:
	slli	a3,a0,0x2
	auipc	a4,0xc
	addi	a4,a4,-424 # 0x49ef0 # secs_through_month.0>
	add	a4,a4,a3
	mv	a5,a0
	lw	a0,0(a4)
	beqz	a1,0x3e0b6 # __month_to_secs+0x22>
	li	a4,1
	ble	a5,a4,0x3e0b6 # __month_to_secs+0x22>
	lui	a5,0x15
	addiw	a5,a5,384
	addw	a0,a0,a5
	ret

__addtf3:
	addi	sp,sp,-48
	sd	ra,40(sp)
	sd	s0,32(sp)
	sd	s1,24(sp)
	sd	s2,16(sp)
	sd	s3,8(sp)
	sd	s4,0(sp)
	mv	t4,a0
	frrm	s2
	li	t0,-1
	srli	a6,t0,0x10
	and	a4,a1,a6
	lui	s1,0x8
	and	a6,a3,a6
	addi	t6,s1,-1 # 0x7fff # exit-0x8121>
	srli	t5,a3,0x30
	srli	a0,a1,0x30
	slli	a4,a4,0x3
	srli	t1,t4,0x3d
	slli	a6,a6,0x3
	srli	a7,a2,0x3d
	srli	t3,a3,0x3f
	srli	s4,a1,0x3f
	and	a3,t5,t6
	sext.w	s2,s2
	and	s0,a0,t6
	or	t1,t1,a4
	slli	t2,t4,0x3
	or	a6,a7,a6
	slli	t5,a2,0x3
	beq	s4,t3,0x3e2e2 # __addtf3+0x22a>
	subw	a1,s0,a3
	sext.w	a7,a1
	blez	a7,0x3e298 # __addtf3+0x1e0>
	beqz	a3,0x3e334 # __addtf3+0x27c>
	beq	s0,t6,0x3e348 # __addtf3+0x290>
	li	a4,1
	slli	a4,a4,0x33
	or	a6,a6,a4
	li	a4,116
	blt	a4,a7,0x3e51c # __addtf3+0x464>
	li	a4,63
	blt	a4,a7,0x3e6a0 # __addtf3+0x5e8>
	li	a4,64
	subw	a4,a4,a7
	sll	s1,a6,a4
	srl	a3,t5,a7
	sll	t5,t5,a4
	or	s1,s1,a3
	snez	t5,t5
	srl	a6,a6,a7
	or	s1,s1,t5
	sub	t1,t1,a6
	sub	s1,t2,s1
	sltu	t2,t2,s1
	sub	t1,t1,t2
	srli	a4,t1,0x33
	andi	a4,a4,1
	beqz	a4,0x3e42e # __addtf3+0x376>
	slli	a1,t1,0xd
	srli	s3,a1,0xd
	beqz	s3,0x3e46e # __addtf3+0x3b6>
	mv	a0,s3
	jal	ra,0x40ec8 # __clzdi2>
	addiw	a0,a0,-12
	li	a1,64
	subw	a1,a1,a0
	sll	t1,s3,a0
	srl	a1,s1,a1
	or	a1,a1,t1
	sll	s3,s1,a0
	blt	a0,s0,0x3e420 # __addtf3+0x368>
	subw	a0,a0,s0
	addiw	a4,a0,1
	li	a3,63
	blt	a3,a4,0x3e676 # __addtf3+0x5be>
	li	a3,64
	subw	a3,a3,a4
	sll	s1,a1,a3
	srl	a2,s3,a4
	sll	a3,s3,a3
	or	s1,s1,a2
	snez	a3,a3
	or	s1,s1,a3
	srl	t1,a1,a4
	or	a1,s1,t1
	beqz	a1,0x3e3b4 # __addtf3+0x2fc>
	andi	a1,s1,7
	slli	a2,s1,0x1
	slli	a3,t1,0x1
	srli	a4,s1,0x3f
	andi	a0,a2,7
	add	a4,a4,a3
	li	a7,0
	beqz	a0,0x3e210 # __addtf3+0x158>
	li	a3,2
	beq	s2,a3,0x3e8ba # __addtf3+0x802>
	li	a3,3
	li	a7,1
	beq	s2,a3,0x3e8a6 # __addtf3+0x7ee>
	beqz	s2,0x3e88c # __addtf3+0x7d4>
	li	a2,1
	slli	a3,a2,0x34
	and	a4,a4,a3
	seqz	a3,a4
	li	s0,0
	beqz	a1,0x3e8e2 # __addtf3+0x82a>
	li	a4,2
	beq	s2,a4,0x3e4f8 # __addtf3+0x440>
	li	a4,3
	li	a7,1
	beq	s2,a4,0x3e50c # __addtf3+0x454>
	beqz	s2,0x3e4e0 # __addtf3+0x428>
	li	a2,1
	slli	a2,a2,0x33
	and	a2,t1,a2
	beqz	a3,0x3e242 # __addtf3+0x18a>
	ori	a7,a7,2
	beqz	a2,0x3e3f8 # __addtf3+0x340>
	lui	a4,0x8
	addi	a3,s0,1
	addi	a2,a4,-1 # 0x7fff # exit-0x8121>
	beq	a3,a2,0x3e44c # __addtf3+0x394>
	li	a4,-1
	slli	a1,a4,0x33
	addi	a1,a1,-1
	and	a1,t1,a1
	and	a3,a3,a2
	slli	a0,a1,0x3d
	srli	a4,a4,0x10
	srli	s1,s1,0x3
	srli	a1,a1,0x3
	slli	a3,a3,0x30
	and	a1,a1,a4
	or	a0,a0,s1
	srli	a3,a3,0x30
	mv	a4,s4
	slli	a5,a4,0xf
	slli	a1,a1,0x10
	or	a5,a5,a3
	slli	a5,a5,0x30
	srli	a1,a1,0x10
	or	a1,a1,a5
	bnez	a7,0x3e540 # __addtf3+0x488>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	ld	s4,0(sp)
	addi	sp,sp,48
	ret
	beqz	a7,0x3e360 # __addtf3+0x2a8>
	bnez	s0,0x3e5d4 # __addtf3+0x51c>
	or	a5,t1,t2
	beqz	a5,0x3e79e # __addtf3+0x6e6>
	not	a1,a1
	sext.w	a1,a1
	beqz	a1,0x3e97c # __addtf3+0x8c4>
	bne	a3,t6,0x3e5e4 # __addtf3+0x52c>
	or	t5,a6,t5
	beqz	t5,0x3e994 # __addtf3+0x8dc>
	srli	a5,t0,0x3
	srli	a4,a6,0x32
	and	a0,a2,a5
	slli	a3,a6,0x3d
	andi	a5,a4,1
	or	a0,a0,a3
	srli	a1,a6,0x3
	mv	s4,t3
	bnez	a5,0x3e84c # __addtf3+0x794>
	li	a7,16
	j	0x3e40c # __addtf3+0x354>
	subw	a4,s0,a3
	sext.w	a7,a4
	blez	a7,0x3e48a # __addtf3+0x3d2>
	beqz	a3,0x3e3c8 # __addtf3+0x310>
	beq	s0,t6,0x3e8fa # __addtf3+0x842>
	li	a4,1
	slli	a4,a4,0x33
	or	a6,a6,a4
	li	a4,116
	blt	a4,a7,0x3e630 # __addtf3+0x578>
	li	a4,63
	ble	a7,a4,0x3e756 # __addtf3+0x69e>
	addiw	s1,a7,-64
	li	a3,64
	srl	a4,a6,s1
	beq	a7,a3,0x3e32c # __addtf3+0x274>
	li	a3,128
	subw	a7,a3,a7
	sll	a6,a6,a7
	or	t5,t5,a6
	snez	s1,t5
	or	s1,s1,a4
	j	0x3e638 # __addtf3+0x580>
	or	a4,a6,t5
	beqz	a4,0x3e61a # __addtf3+0x562>
	addiw	a7,a1,-1
	beqz	a7,0x3e850 # __addtf3+0x798>
	bne	s0,t6,0x3e136 # __addtf3+0x7e>
	or	t2,t1,t2
	bnez	t2,0x3e720 # __addtf3+0x668>
	li	a7,0
	lui	a5,0x8
	mv	a4,s4
	addi	a3,a5,-1 # 0x7fff # exit-0x8121>
	li	a1,0
	li	a0,0
	j	0x3e276 # __addtf3+0x1be>
	addi	a1,s0,1
	addi	a4,s1,-2
	and	a4,a4,a1
	bnez	a4,0x3e5a4 # __addtf3+0x4ec>
	or	a4,t1,t2
	or	a1,a6,t5
	bnez	s0,0x3e526 # __addtf3+0x46e>
	beqz	a4,0x3e862 # __addtf3+0x7aa>
	beqz	a1,0x3e86e # __addtf3+0x7b6>
	sub	a2,t2,t5
	sltu	a3,t2,a2
	sub	a4,t1,a6
	sub	a4,a4,a3
	srli	a3,a4,0x33
	andi	a3,a3,1
	beqz	a3,0x3ea7a # __addtf3+0x9c2>
	sub	s1,t5,t2
	sub	a1,a6,t1
	sltu	t5,t5,s1
	sub	t1,a1,t5
	or	a1,s1,t1
	mv	s4,t3
	bnez	a1,0x3e1e4 # __addtf3+0x12c>
	li	a0,0
	li	s0,0
	li	a7,0
	slli	a1,a1,0x10
	slli	a3,s0,0x31
	srli	a1,a1,0x10
	srli	a3,a3,0x31
	mv	a4,s4
	j	0x3e276 # __addtf3+0x1be>
	or	a3,a6,t5
	beqz	a3,0x3e872 # __addtf3+0x7ba>
	addiw	a7,a4,-1
	beqz	a7,0x3e7c0 # __addtf3+0x708>
	bne	s0,t6,0x3e2fc # __addtf3+0x244>
	or	a4,t1,t2
	beqz	a4,0x3e350 # __addtf3+0x298>
	srli	a7,t1,0x32
	andi	a7,a7,1
	seqz	a7,a7
	slli	a7,a7,0x4
	lui	a3,0x8
	mv	s1,t2
	addi	s0,a3,-1 # 0x7fff # exit-0x8121>
	lui	a4,0x8
	slli	a0,t1,0x3d
	srli	s1,s1,0x3
	addi	a4,a4,-1
	or	a0,a0,s1
	srli	a1,t1,0x3
	bne	s0,a4,0x3e3ba # __addtf3+0x302>
	or	a1,a1,a0
	beqz	a1,0x3e352 # __addtf3+0x29a>
	lui	a5,0x8
	li	a1,1
	li	a4,0
	addi	a3,a5,-1 # 0x7fff # exit-0x8121>
	slli	a1,a1,0x2f
	li	a0,0
	j	0x3e276 # __addtf3+0x1be>
	li	a4,-1
	slli	a4,a4,0x33
	addi	a4,a4,-1
	sub	s0,s0,a0
	and	t1,a1,a4
	mv	s1,s3
	or	a1,s1,t1
	andi	a4,s1,7
	beqz	s0,0x3e1e0 # __addtf3+0x128>
	li	a3,0
	bnez	a4,0x3e222 # __addtf3+0x16a>
	li	a2,1
	slli	a2,a2,0x33
	and	a2,t1,a2
	li	a7,0
	j	0x3e242 # __addtf3+0x18a>
	beqz	s2,0x3e516 # __addtf3+0x45e>
	li	a3,3
	beq	s2,a3,0x3e742 # __addtf3+0x68a>
	li	a3,2
	beq	s2,a3,0x3e512 # __addtf3+0x45a>
	li	a0,-1
	lui	a3,0x8
	ori	a7,a7,5
	srli	a1,a0,0x3
	addi	s0,a3,-2 # 0x7ffe # exit-0x8122>
	j	0x3e3ba # __addtf3+0x302>
	mv	a0,s1
	jal	ra,0x40ec8 # __clzdi2>
	addiw	a1,a0,-12
	li	a4,63
	addiw	a0,a0,52
	sll	a1,s1,a1
	blt	a4,a0,0x3e1ac # __addtf3+0xf4>
	j	0x3e196 # __addtf3+0xde>
	beqz	a7,0x3e554 # __addtf3+0x49c>
	beqz	s0,0x3e6e2 # __addtf3+0x62a>
	beq	a3,t6,0x3e6f8 # __addtf3+0x640>
	li	a2,1
	slli	a2,a2,0x33
	negw	a4,a4
	or	t1,t1,a2
	li	a2,116
	blt	a2,a4,0x3e924 # __addtf3+0x86c>
	li	a2,63
	blt	a2,a4,0x3e9b6 # __addtf3+0x8fe>
	li	a2,64
	subw	a2,a2,a4
	sll	s1,t1,a2
	srl	a1,t2,a4
	sll	a2,t2,a2
	or	s1,s1,a1
	snez	a2,a2
	srl	a4,t1,a4
	or	s1,s1,a2
	add	a6,a6,a4
	add	s1,s1,t5
	sltu	a1,s1,t5
	add	t1,a1,a6
	mv	s0,a3
	j	0x3e640 # __addtf3+0x588>
	andi	a4,s1,15
	li	a2,4
	beq	a4,a2,0x3e234 # __addtf3+0x17c>
	addi	a4,s1,4
	sltu	s1,a4,s1
	add	t1,t1,s1
	mv	s1,a4
	j	0x3e234 # __addtf3+0x17c>
	li	a7,1
	beqz	s4,0x3e234 # __addtf3+0x17c>
	addi	a4,s1,8
	sltu	s1,a4,s1
	add	t1,t1,s1
	mv	s1,a4
	j	0x3e234 # __addtf3+0x17c>
	beqz	s4,0x3e4fe # __addtf3+0x446>
	j	0x3e234 # __addtf3+0x17c>
	beqz	s4,0x3e746 # __addtf3+0x68e>
	ori	a7,a7,5
	j	0x3e352 # __addtf3+0x29a>
	or	a6,a6,t5
	snez	s1,a6
	j	0x3e16c # __addtf3+0xb4>
	beq	s0,t6,0x3e7d2 # __addtf3+0x71a>
	beq	a3,t6,0x3e800 # __addtf3+0x748>
	bnez	a4,0x3e7e6 # __addtf3+0x72e>
	bnez	a1,0x3e812 # __addtf3+0x75a>
	lui	a1,0xffff
	li	a0,0
	slli	a1,a1,0x23
	li	a7,16
	csrs	fflags,a7
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	ld	s4,0(sp)
	addi	sp,sp,48
	ret
	addi	a1,s0,1
	addi	a4,s1,-2
	and	a0,a1,a4
	bnez	a0,0x3e77c # __addtf3+0x6c4>
	or	a4,t1,t2
	bnez	s0,0x3e956 # __addtf3+0x89e>
	or	a1,a6,t5
	beqz	a4,0x3e9b0 # __addtf3+0x8f8>
	beqz	a1,0x3e86e # __addtf3+0x7b6>
	add	s1,t2,t5
	add	a1,t1,a6
	sltu	t2,s1,t2
	add	t1,a1,t2
	srli	a4,t1,0x33
	andi	a4,a4,1
	beqz	a4,0x3e1dc # __addtf3+0x124>
	slli	a4,t0,0x33
	addi	a4,a4,-1
	and	t1,t1,a4
	li	s0,1
	andi	a4,s1,7
	j	0x3e43a # __addtf3+0x382>
	sub	s1,t2,t5
	sltu	a4,t2,s1
	sub	s3,t1,a6
	sub	s3,s3,a4
	srli	a4,s3,0x33
	andi	a4,a4,1
	bnez	a4,0x3e7ac # __addtf3+0x6f4>
	or	a1,s1,s3
	bnez	a1,0x3e18a # __addtf3+0xd2>
	addi	a4,s2,-2
	seqz	s4,a4
	li	a0,0
	li	s0,0
	j	0x3e3ba # __addtf3+0x302>
	beq	a3,t6,0x3e826 # __addtf3+0x76e>
	li	a5,1
	slli	a5,a5,0x33
	negw	a1,a1
	or	t1,t1,a5
	li	a5,116
	blt	a5,a1,0x3e6c8 # __addtf3+0x610>
	li	a5,63
	blt	a5,a1,0x3e92e # __addtf3+0x876>
	li	a5,64
	subw	a5,a5,a1
	srl	a4,t2,a1
	sll	s1,t1,a5
	sll	t2,t2,a5
	or	s1,s1,a4
	snez	t2,t2
	srl	a1,t1,a1
	or	s1,s1,t2
	sub	a6,a6,a1
	j	0x3e6d0 # __addtf3+0x618>
	mv	s1,t2
	bne	s0,t6,0x3e42e # __addtf3+0x376>
	or	a4,t1,t2
	bnez	a4,0x3e3e2 # __addtf3+0x32a>
	li	a0,0
	li	a1,0
	li	a7,0
	j	0x3e40c # __addtf3+0x354>
	or	a6,a6,t5
	snez	s1,a6
	add	s1,s1,t2
	sltu	t2,s1,t2
	add	t1,t1,t2
	srli	a4,t1,0x33
	andi	a4,a4,1
	beqz	a4,0x3e42e # __addtf3+0x376>
	lui	a4,0x8
	addi	s0,s0,1
	addi	a3,a4,-1 # 0x7fff # exit-0x8121>
	beq	s0,a3,0x3e8c2 # __addtf3+0x80a>
	li	a1,-1
	slli	a1,a1,0x33
	addi	a1,a1,-1
	and	a1,t1,a1
	srli	a4,s1,0x1
	andi	s1,s1,1
	or	a4,a4,s1
	slli	s1,a1,0x3f
	or	s1,s1,a4
	srli	t1,a1,0x1
	andi	a4,a4,7
	j	0x3e43a # __addtf3+0x382>
	addiw	a0,a0,-63
	li	a3,64
	srl	a0,a1,a0
	beq	a4,a3,0x3e694 # __addtf3+0x5dc>
	li	a3,128
	subw	a3,a3,a4
	sll	a1,a1,a3
	or	s3,s3,a1
	snez	a1,s3
	or	a1,a1,a0
	mv	s1,a1
	li	t1,0
	j	0x3e1e0 # __addtf3+0x128>
	addiw	s1,a7,-64
	li	a3,64
	srl	a4,a6,s1
	beq	a7,a3,0x3e6c0 # __addtf3+0x608>
	li	a3,128
	subw	a7,a3,a7
	sll	a6,a6,a7
	or	t5,t5,a6
	snez	s1,t5
	or	s1,s1,a4
	j	0x3e16c # __addtf3+0xb4>
	or	s1,t1,t2
	snez	s1,s1
	sub	s1,t5,s1
	sltu	a1,t5,s1
	sub	t1,a6,a1
	mv	s0,a3
	mv	s4,t3
	j	0x3e178 # __addtf3+0xc0>
	or	a1,t1,t2
	beqz	a1,0x3e998 # __addtf3+0x8e0>
	not	a4,a4
	sext.w	a4,a4
	beqz	a4,0x3ea2c # __addtf3+0x974>
	bne	a3,t6,0x3e4a2 # __addtf3+0x3ea>
	or	t5,a6,t5
	beqz	t5,0x3e350 # __addtf3+0x298>
	srli	a7,a6,0x32
	srli	a0,t0,0x3
	andi	a7,a7,1
	slli	a4,a6,0x3d
	and	a0,a0,a2
	seqz	a7,a7
	or	a0,a0,a4
	srli	a1,a6,0x3
	slli	a7,a7,0x4
	j	0x3e40c # __addtf3+0x354>
	srli	a7,t1,0x32
	srli	a0,t0,0x3
	andi	a7,a7,1
	slli	a4,t1,0x3d
	and	a0,t4,a0
	seqz	a7,a7
	or	a0,a0,a4
	srli	a1,t1,0x3
	slli	a7,a7,0x4
	j	0x3e40c # __addtf3+0x354>
	beqz	s4,0x3e516 # __addtf3+0x45e>
	li	a0,-1
	ori	a7,a7,5
	srli	a1,a0,0x3
	addi	s0,a4,-2
	j	0x3e3ba # __addtf3+0x302>
	li	a4,64
	subw	a4,a4,a7
	sll	s1,a6,a4
	srl	a3,t5,a7
	sll	t5,t5,a4
	or	s1,s1,a3
	snez	t5,t5
	srl	a6,a6,a7
	or	s1,s1,t5
	add	t1,t1,a6
	j	0x3e638 # __addtf3+0x580>
	beq	a1,t6,0x3e9de # __addtf3+0x926>
	add	a4,t2,t5
	sltu	t2,a4,t2
	add	t1,t1,a6
	add	t1,t1,t2
	srli	a4,a4,0x1
	slli	s1,t1,0x3f
	or	s1,s1,a4
	srli	t1,t1,0x1
	andi	a4,a4,7
	mv	s0,a1
	j	0x3e43a # __addtf3+0x382>
	beq	a3,t6,0x3e9fc # __addtf3+0x944>
	mv	t1,a6
	mv	s1,t5
	mv	s0,a3
	mv	s4,t3
	j	0x3e42e # __addtf3+0x376>
	sub	s1,t5,t2
	sub	a6,a6,t1
	sltu	t5,t5,s1
	sub	s3,a6,t5
	mv	s4,t3
	j	0x3e18a # __addtf3+0xd2>
	add	s1,t2,t5
	add	a4,t1,a6
	sltu	a1,s1,t2
	add	t1,a4,a1
	j	0x3e640 # __addtf3+0x588>
	beqz	a4,0x3e7fc # __addtf3+0x744>
	srli	a0,t1,0x32
	andi	a0,a0,1
	bnez	a0,0x3e7de # __addtf3+0x726>
	li	a7,16
	lui	a0,0x8
	addi	a0,a0,-1
	beq	a3,a0,0x3e800 # __addtf3+0x748>
	bnez	a1,0x3e96a # __addtf3+0x8b2>
	slli	a4,t4,0x3
	slli	a0,t1,0x3d
	srli	a4,a4,0x3
	or	a0,a0,a4
	srli	a1,t1,0x3
	j	0x3e40c # __addtf3+0x354>
	bne	a3,s0,0x3e532 # __addtf3+0x47a>
	beqz	a1,0x3e52e # __addtf3+0x476>
	srli	a5,a6,0x32
	andi	a5,a5,1
	bnez	a5,0x3e80e # __addtf3+0x756>
	li	a7,16
	bnez	a4,0x3e96a # __addtf3+0x8b2>
	slli	a0,a2,0x3
	srli	a0,a0,0x3
	slli	a5,a6,0x3d
	or	a0,a0,a5
	srli	a1,a6,0x3
	mv	s4,t3
	j	0x3e40c # __addtf3+0x354>
	or	t5,a6,t5
	beqz	t5,0x3e994 # __addtf3+0x8dc>
	srli	a5,t0,0x3
	srli	a4,a6,0x32
	and	a2,a2,a5
	slli	a0,a6,0x3d
	andi	a5,a4,1
	or	a0,a0,a2
	srli	a1,a6,0x3
	mv	s4,t3
	beqz	a5,0x3e2de # __addtf3+0x226>
	li	a7,0
	j	0x3e40c # __addtf3+0x354>
	sub	s1,t2,t5
	sub	a1,t1,a6
	sltu	t2,t2,s1
	sub	t1,a1,t2
	j	0x3e178 # __addtf3+0xc0>
	beqz	a1,0x3e9a4 # __addtf3+0x8ec>
	li	a1,0
	mv	t1,a6
	mv	t2,t5
	mv	s4,t3
	mv	s1,t2
	j	0x3e1e8 # __addtf3+0x130>
	mv	s1,t2
	bne	s0,t6,0x3e42e # __addtf3+0x376>
	or	a4,t1,t2
	beqz	a4,0x3e628 # __addtf3+0x570>
	srli	a7,t1,0x32
	seqz	a7,a7
	slli	a7,a7,0x4
	j	0x3e3f0 # __addtf3+0x338>
	andi	a3,a2,15
	li	a0,4
	beq	a3,a0,0x3e210 # __addtf3+0x158>
	sltiu	a3,a2,-4
	xori	a3,a3,1
	slli	a3,a3,0x20
	srli	a3,a3,0x20
	add	a4,a4,a3
	j	0x3e210 # __addtf3+0x158>
	bnez	s4,0x3e210 # __addtf3+0x158>
	sltiu	a3,a2,-8
	xori	a3,a3,1
	slli	a3,a3,0x20
	srli	a3,a3,0x20
	add	a4,a4,a3
	j	0x3e210 # __addtf3+0x158>
	li	a7,1
	beqz	s4,0x3e210 # __addtf3+0x158>
	j	0x3e8aa # __addtf3+0x7f2>
	beqz	s2,0x3e8f6 # __addtf3+0x83e>
	li	a3,3
	beq	s2,a3,0x3ea8e # __addtf3+0x9d6>
	li	a3,2
	li	a7,5
	bne	s2,a3,0x3e45c # __addtf3+0x3a4>
	bnez	s4,0x3e352 # __addtf3+0x29a>
	addi	s0,a4,-2
	li	t1,-1
	li	s1,-1
	j	0x3e246 # __addtf3+0x18e>
	slli	a2,a2,0x33
	and	a2,t1,a2
	bnez	a4,0x3e242 # __addtf3+0x18a>
	beqz	a7,0x3e242 # __addtf3+0x18a>
	ori	a7,a7,2
	j	0x3e242 # __addtf3+0x18a>
	li	a7,5
	j	0x3e352 # __addtf3+0x29a>
	or	t2,t1,t2
	beqz	t2,0x3e350 # __addtf3+0x298>
	srli	a7,t1,0x32
	srli	a4,t0,0x3
	andi	a7,a7,1
	and	a0,t4,a4
	seqz	a7,a7
	slli	a4,t1,0x3d
	or	a0,a0,a4
	srli	a1,t1,0x3
	slli	a7,a7,0x4
	j	0x3e40c # __addtf3+0x354>
	or	s1,t1,t2
	snez	s1,s1
	j	0x3e4d2 # __addtf3+0x41a>
	addiw	s1,a1,-64
	li	a4,64
	srl	a5,t1,s1
	beq	a1,a4,0x3e94e # __addtf3+0x896>
	li	a4,128
	subw	a1,a4,a1
	sll	a4,t1,a1
	or	t2,t2,a4
	snez	s1,t2
	or	s1,s1,a5
	j	0x3e6d0 # __addtf3+0x618>
	beq	s0,t6,0x3ea40 # __addtf3+0x988>
	beq	a3,t6,0x3eaa6 # __addtf3+0x9ee>
	beqz	a4,0x3ea68 # __addtf3+0x9b0>
	or	a6,a6,t5
	beqz	a6,0x3e7ea # __addtf3+0x732>
	lui	a5,0x8
	addi	a3,a5,-1 # 0x7fff # exit-0x8121>
	li	a5,1
	li	a4,0
	slli	a1,a5,0x2f
	li	a0,0
	j	0x3e276 # __addtf3+0x1be>
	sub	s1,t5,t2
	sub	a1,a6,t1
	sltu	t5,t5,s1
	sub	t1,a1,t5
	mv	s0,a3
	mv	s4,t3
	j	0x3e178 # __addtf3+0xc0>
	mv	s4,t3
	j	0x3e350 # __addtf3+0x298>
	beq	a3,t6,0x3ea14 # __addtf3+0x95c>
	mv	t1,a6
	mv	s1,t5
	mv	s0,a3
	j	0x3e42e # __addtf3+0x376>
	addi	a4,s2,-2
	seqz	s4,a4
	li	a0,0
	j	0x3e3ba # __addtf3+0x302>
	mv	t1,a6
	mv	s1,t5
	j	0x3e1e0 # __addtf3+0x128>
	addiw	a2,a4,-64
	li	a1,64
	srl	a2,t1,a2
	beq	a4,a1,0x3e9d6 # __addtf3+0x91e>
	li	a1,128
	subw	a4,a1,a4
	sll	a4,t1,a4
	or	t2,t2,a4
	snez	s1,t2
	or	s1,s1,a2
	j	0x3e4d2 # __addtf3+0x41a>
	beqz	s2,0x3e8f6 # __addtf3+0x83e>
	li	a3,3
	beq	s2,a3,0x3eac2 # __addtf3+0xa0a>
	li	a3,2
	li	a7,5
	bne	s2,a3,0x3e45c # __addtf3+0x3a4>
	bnez	s4,0x3e352 # __addtf3+0x29a>
	mv	s0,a4
	li	t1,-1
	li	s1,-1
	j	0x3e246 # __addtf3+0x18e>
	or	a5,a6,t5
	beqz	a5,0x3eaa2 # __addtf3+0x9ea>
	srli	a5,a6,0x32
	andi	a5,a5,1
	mv	t1,a6
	mv	t2,t5
	mv	s4,t3
	bnez	a5,0x3ea28 # __addtf3+0x970>
	li	a7,16
	j	0x3e3f0 # __addtf3+0x338>
	or	a4,a6,t5
	beqz	a4,0x3e628 # __addtf3+0x570>
	srli	a4,a6,0x32
	andi	a4,a4,1
	mv	t1,a6
	mv	t2,t5
	beqz	a4,0x3ea10 # __addtf3+0x958>
	li	a7,0
	j	0x3e3f0 # __addtf3+0x338>
	add	s1,t2,t5
	add	a1,t1,a6
	sltu	t5,s1,t5
	add	t1,a1,t5
	mv	s0,a3
	j	0x3e640 # __addtf3+0x588>
	beqz	a4,0x3eab4 # __addtf3+0x9fc>
	srli	a1,t1,0x32
	andi	a1,a1,1
	bnez	a1,0x3ea4c # __addtf3+0x994>
	li	a7,16
	lui	a1,0x8
	addi	a1,a1,-1
	bne	a3,a1,0x3e962 # __addtf3+0x8aa>
	or	t5,a6,t5
	beqz	t5,0x3e7ea # __addtf3+0x732>
	srli	a3,a6,0x32
	andi	a3,a3,1
	bnez	a3,0x3ea66 # __addtf3+0x9ae>
	li	a7,16
	bnez	a4,0x3e96a # __addtf3+0x8b2>
	slli	a4,a2,0x3
	slli	a0,a6,0x3d
	srli	a4,a4,0x3
	or	a0,a0,a4
	srli	a1,a6,0x3
	j	0x3e40c # __addtf3+0x354>
	or	a1,a2,a4
	beqz	a1,0x3e9a4 # __addtf3+0x8ec>
	mv	t2,a2
	andi	a1,a2,7
	mv	t1,a4
	mv	s1,t2
	j	0x3e1e8 # __addtf3+0x130>
	beqz	s4,0x3e8f6 # __addtf3+0x83e>
	addi	s0,a4,-2
	li	a3,0
	li	a7,5
	li	t1,-1
	li	s1,-1
	j	0x3e234 # __addtf3+0x17c>
	mv	s4,t3
	j	0x3e628 # __addtf3+0x570>
	or	t5,a6,t5
	bnez	t5,0x3ea5c # __addtf3+0x9a4>
	bnez	a4,0x3e7ea # __addtf3+0x732>
	j	0x3ea68 # __addtf3+0x9b0>
	bne	a3,s0,0x3ea68 # __addtf3+0x9b0>
	or	t5,a6,t5
	bnez	t5,0x3ea5c # __addtf3+0x9a4>
	j	0x3ea68 # __addtf3+0x9b0>
	beqz	s4,0x3e8f6 # __addtf3+0x83e>
	li	a3,0
	mv	s0,a4
	li	a7,5
	li	t1,-1
	li	s1,-1
	j	0x3e234 # __addtf3+0x17c>

__divtf3:
	addi	sp,sp,-128
	sd	s10,32(sp)
	sd	ra,120(sp)
	sd	s0,112(sp)
	sd	s1,104(sp)
	sd	s2,96(sp)
	sd	s3,88(sp)
	sd	s4,80(sp)
	sd	s5,72(sp)
	sd	s6,64(sp)
	sd	s7,56(sp)
	sd	s8,48(sp)
	sd	s9,40(sp)
	sd	s11,24(sp)
	mv	s10,a2
	frrm	s5
	lui	a4,0x8
	srli	a5,a1,0x30
	addi	a4,a4,-1
	slli	s0,a1,0x10
	and	a5,a5,a4
	sext.w	s5,s5
	mv	s6,a0
	srli	s0,s0,0x10
	srli	s2,a1,0x3f
	beqz	a5,0x3ec2e # __divtf3+0x15a>
	sext.w	s9,a5
	beq	a5,a4,0x3ec7a # __divtf3+0x1a6>
	srli	s8,a0,0x3d
	slli	s0,s0,0x3
	li	a4,1
	lui	s9,0xffffc
	or	s0,s8,s0
	slli	a4,a4,0x33
	addi	s9,s9,1
	or	s8,s0,a4
	slli	s6,a0,0x3
	add	s9,s9,a5
	li	s1,0
	li	s11,0
	li	s4,0
	lui	a4,0x8
	srli	a5,a3,0x30
	addi	a4,a4,-1
	slli	s0,a3,0x10
	and	a5,a5,a4
	mv	s3,s10
	srli	s0,s0,0x10
	srli	s7,a3,0x3f
	beqz	a5,0x3ebec # __divtf3+0x118>
	sext.w	a3,a5
	beq	a5,a4,0x3ebce # __divtf3+0xfa>
	slli	s0,s0,0x3
	srli	a4,s10,0x3d
	lui	a3,0xffffc
	or	a4,a4,s0
	addi	a3,a3,1
	li	s0,1
	add	a5,a5,a3
	slli	s0,s0,0x33
	or	s0,s0,a4
	slli	s3,s10,0x3
	sub	s9,s9,a5
	li	a2,0
	xor	a5,s2,s7
	li	a4,15
	mv	a6,a5
	bltu	a4,s1,0x3ed7a # __divtf3+0x2a6>
	auipc	a3,0xb
	addi	a3,a3,922 # 0x49f20 # secs_through_month.0+0x30>
	slli	s1,s1,0x2
	add	s1,s1,a3
	lw	a4,0(s1)
	add	a4,a4,a3
	jr	a4
	li	a3,0
	li	a4,0
	li	a0,0
	slli	a5,a5,0xf
	slli	a1,a4,0x10
	or	a5,a5,a3
	slli	a5,a5,0x30
	srli	a1,a1,0x10
	or	a1,a1,a5
	bnez	s4,0x3ed50 # __divtf3+0x27c>
	ld	ra,120(sp)
	ld	s0,112(sp)
	ld	s1,104(sp)
	ld	s2,96(sp)
	ld	s3,88(sp)
	ld	s4,80(sp)
	ld	s5,72(sp)
	ld	s6,64(sp)
	ld	s7,56(sp)
	ld	s8,48(sp)
	ld	s9,40(sp)
	ld	s10,32(sp)
	ld	s11,24(sp)
	addi	sp,sp,128
	ret
	or	a5,s10,s0
	sub	s9,s9,a3
	beqz	a5,0x3ed2e # __divtf3+0x25a>
	srli	a5,s0,0x2f
	andi	a5,a5,1
	ori	s1,s1,3
	li	a2,3
	bnez	a5,0x3eb7a # __divtf3+0xa6>
	li	s4,16
	j	0x3eb7a # __divtf3+0xa6>
	or	a5,s10,s0
	beqz	a5,0x3ed22 # __divtf3+0x24e>
	beqz	s0,0x3ef66 # __divtf3+0x492>
	mv	a0,s0
	jal	ra,0x40ec8 # __clzdi2>
	sext.w	a2,a0
	addiw	a4,a0,-15
	li	a3,61
	addiw	s3,a4,3
	subw	a4,a3,a4
	sll	s0,s0,s3
	srl	a4,s10,a4
	or	s0,s0,a4
	sll	s3,s10,s3
	lui	a5,0xffffc
	addi	a5,a5,17
	sub	a5,a5,a2
	sub	s9,s9,a5
	li	a2,0
	j	0x3eb7a # __divtf3+0xa6>
	or	s8,a0,s0
	mv	s1,a0
	beqz	s8,0x3ed16 # __divtf3+0x242>
	sd	a3,8(sp)
	beqz	s0,0x3ef88 # __divtf3+0x4b4>
	mv	a0,s0
	jal	ra,0x40ec8 # __clzdi2>
	ld	a3,8(sp)
	sext.w	s9,a0
	addiw	a4,a0,-15
	li	s8,61
	addiw	s6,a4,3
	subw	s8,s8,a4
	sll	s0,s0,s6
	srl	s8,s1,s8
	or	s8,s8,s0
	sll	s6,s1,s6
	lui	a5,0xffffc
	addi	a5,a5,17
	sub	s9,a5,s9
	li	s1,0
	li	s11,0
	li	s4,0
	j	0x3eb3c # __divtf3+0x68>
	or	s8,a0,s0
	beqz	s8,0x3ed0c # __divtf3+0x238>
	srli	a5,s0,0x2f
	mv	s8,s0
	li	s1,12
	li	s11,3
	li	s4,16
	beqz	a5,0x3eb3c # __divtf3+0x68>
	li	s4,0
	j	0x3eb3c # __divtf3+0x68>
	mv	a6,s2
	mv	s0,s8
	mv	s3,s6
	mv	a2,s11
	li	a4,1
	beq	a2,a4,0x3efaa # __divtf3+0x4d6>
	beqz	a2,0x3ecb2 # __divtf3+0x1de>
	li	a5,2
	beq	a2,a5,0x3f172 # __divtf3+0x69e>
	li	a5,3
	beq	a2,a5,0x3ef34 # __divtf3+0x460>
	lui	a3,0x4
	addi	a3,a3,-1
	add	t3,s9,a3
	blez	t3,0x3ef40 # __divtf3+0x46c>
	andi	a5,s3,7
	bnez	a5,0x3f114 # __divtf3+0x640>
	srli	s3,s3,0x3
	mv	a5,a6
	srli	a4,s0,0x34
	andi	a4,a4,1
	beqz	a4,0x3ece2 # __divtf3+0x20e>
	li	a4,-1
	slli	a4,a4,0x34
	addi	a4,a4,-1
	lui	a3,0x4
	and	s0,s0,a4
	add	t3,s9,a3
	lui	a4,0x8
	addi	a1,a4,-2 # 0x7ffe # exit-0x8122>
	blt	a1,t3,0x3efb4 # __divtf3+0x4e0>
	addi	a3,a4,-1
	and	a3,t3,a3
	slli	a0,s0,0x3d
	slli	a4,s0,0xd
	slli	a3,a3,0x30
	or	a0,a0,s3
	srli	a4,a4,0x10
	srli	a3,a3,0x30
	j	0x3eb9e # __divtf3+0xca>
	mv	a6,s7
	j	0x3ec9e # __divtf3+0x1ca>
	li	s6,0
	li	s1,8
	li	s11,2
	li	s4,0
	j	0x3eb3c # __divtf3+0x68>
	li	s6,0
	li	s1,4
	li	s9,0
	li	s11,1
	li	s4,0
	j	0x3eb3c # __divtf3+0x68>
	ori	s1,s1,1
	li	s0,0
	li	s3,0
	li	a2,1
	j	0x3eb7a # __divtf3+0xa6>
	ori	s1,s1,2
	li	s0,0
	li	s3,0
	li	a2,2
	j	0x3eb7a # __divtf3+0xa6>
	lui	a4,0x8
	li	a1,1
	addi	a4,a4,-1
	slli	a1,a1,0x2f
	li	a5,0
	li	s4,16
	slli	a5,a5,0xf
	or	a5,a5,a4
	slli	a5,a5,0x30
	li	a0,0
	or	a1,a1,a5
	csrs	fflags,s4
	j	0x3ebb0 # __divtf3+0xdc>
	lui	a3,0x8
	addi	a3,a3,-1
	li	a4,0
	li	a0,0
	j	0x3eb9e # __divtf3+0xca>
	lui	a4,0x8
	ori	s4,s4,8
	addi	a4,a4,-1
	li	a1,0
	j	0x3ed46 # __divtf3+0x272>
	lui	a3,0x8
	li	a4,1
	li	a5,0
	addi	a3,a3,-1
	slli	a4,a4,0x2f
	li	a0,0
	j	0x3eb9e # __divtf3+0xca>
	bltu	s0,s8,0x3f00a # __divtf3+0x536>
	beq	s8,s0,0x3f006 # __divtf3+0x532>
	mv	a4,s6
	addi	s9,s9,-1
	li	s6,0
	slli	s0,s0,0xc
	srli	a0,s0,0x20
	divu	a2,s8,a0
	srli	a1,s3,0x34
	or	a1,a1,s0
	slli	a7,a1,0x20
	srli	a7,a7,0x20
	srli	a3,a4,0x20
	slli	t1,s3,0xc
	remu	s8,s8,a0
	mul	t3,a7,a2
	slli	s8,s8,0x20
	or	a3,a3,s8
	bleu	t3,a3,0x3edcc # __divtf3+0x2f8>
	add	a3,a3,a1
	addi	t4,a2,-1
	bltu	a3,a1,0x3f09c # __divtf3+0x5c8>
	bleu	t3,a3,0x3f09c # __divtf3+0x5c8>
	addi	a2,a2,-2
	add	a3,a3,a1
	sub	a3,a3,t3
	divu	s0,a3,a0
	slli	a4,a4,0x20
	srli	a4,a4,0x20
	remu	a3,a3,a0
	mul	t2,a7,s0
	slli	a3,a3,0x20
	or	a3,a3,a4
	bleu	t2,a3,0x3edfa # __divtf3+0x326>
	add	a3,a3,a1
	addi	a4,s0,-1
	bltu	a3,a1,0x3f098 # __divtf3+0x5c4>
	bleu	t2,a3,0x3f098 # __divtf3+0x5c4>
	addi	s0,s0,-2
	add	a3,a3,a1
	slli	a2,a2,0x20
	li	t4,-1
	or	s0,s0,a2
	srli	t4,t4,0x20
	and	t3,s0,t4
	srli	t6,s0,0x20
	srli	t5,t1,0x20
	and	t4,t1,t4
	mul	t0,t3,t4
	sub	a4,a3,t2
	mul	a2,t6,t4
	srli	a3,t0,0x20
	mul	t3,t5,t3
	add	t3,t3,a2
	add	a3,a3,t3
	mul	t6,t6,t5
	bleu	a2,a3,0x3ee3a # __divtf3+0x366>
	li	a2,1
	slli	a2,a2,0x20
	add	t6,t6,a2
	li	t2,-1
	srli	t2,t2,0x20
	and	a2,a3,t2
	srli	t3,a3,0x20
	slli	a2,a2,0x20
	and	t0,t0,t2
	add	a3,t3,t6
	add	a2,a2,t0
	bltu	a4,a3,0x3efe8 # __divtf3+0x514>
	beq	a4,a3,0x3efe4 # __divtf3+0x510>
	sub	a2,s6,a2
	sub	a4,a4,a3
	sltu	s6,s6,a2
	lui	a3,0x4
	addi	a3,a3,-1
	sub	a4,a4,s6
	add	t3,s9,a3
	beq	a1,a4,0x3f14a # __divtf3+0x676>
	divu	a3,a4,a0
	srli	a5,a2,0x20
	remu	a4,a4,a0
	mul	t6,a7,a3
	slli	a4,a4,0x20
	or	a4,a4,a5
	bleu	t6,a4,0x3eea0 # __divtf3+0x3cc>
	add	a4,a4,a1
	addi	a5,a3,-1 # 0x3fff # exit-0xc121>
	bltu	a4,a1,0x3f16a # __divtf3+0x696>
	bleu	t6,a4,0x3f16a # __divtf3+0x696>
	addi	a3,a3,-2
	add	a4,a4,a1
	sub	a4,a4,t6
	divu	s3,a4,a0
	slli	a2,a2,0x20
	srli	a2,a2,0x20
	remu	a4,a4,a0
	mul	a7,a7,s3
	slli	a4,a4,0x20
	or	a4,a4,a2
	bleu	a7,a4,0x3eece # __divtf3+0x3fa>
	add	a4,a4,a1
	addi	a5,s3,-1
	bltu	a4,a1,0x3f16e # __divtf3+0x69a>
	bleu	a7,a4,0x3f16e # __divtf3+0x69a>
	addi	s3,s3,-2
	add	a4,a4,a1
	slli	a3,a3,0x20
	or	s3,a3,s3
	slli	a3,s3,0x20
	srli	a0,s3,0x20
	srli	a3,a3,0x20
	mul	a2,t4,a3
	sub	a4,a4,a7
	mul	a3,t5,a3
	srli	a5,a2,0x20
	mul	t4,a0,t4
	add	a3,a3,t4
	add	a5,a5,a3
	mul	t5,t5,a0
	bleu	t4,a5,0x3ef04 # __divtf3+0x430>
	li	a3,1
	slli	a3,a3,0x20
	add	t5,t5,a3
	li	a0,-1
	srli	a0,a0,0x20
	srli	a3,a5,0x20
	and	a5,a5,a0
	slli	a5,a5,0x20
	and	a2,a2,a0
	add	t5,t5,a3
	add	a5,a5,a2
	bleu	t5,a4,0x3f082 # __divtf3+0x5ae>
	add	a4,a4,a1
	addi	a3,s3,-1
	bltu	a4,a1,0x3f20a # __divtf3+0x736>
	bltu	a4,t5,0x3f1d0 # __divtf3+0x6fc>
	beq	a4,t5,0x3f2ba # __divtf3+0x7e6>
	mv	s3,a3
	ori	s3,s3,1
	j	0x3ecba # __divtf3+0x1e6>
	lui	a3,0x8
	li	a5,0
	addi	a3,a3,-1
	slli	a4,a4,0x2f
	li	a0,0
	j	0x3eb9e # __divtf3+0xca>
	mv	a5,a6
	beqz	t3,0x3f01c # __divtf3+0x548>
	li	a3,1
	sub	a3,a3,t3
	li	a4,116
	ble	a3,a4,0x3f0c4 # __divtf3+0x5f0>
	or	a0,s3,s0
	bnez	a0,0x3f1b4 # __divtf3+0x6e0>
	ori	s4,s4,2
	li	a3,0
	li	a4,0
	j	0x3efd0 # __divtf3+0x4fc>
	mv	a0,s10
	jal	ra,0x40ec8 # __clzdi2>
	addiw	a4,a0,49
	li	a5,60
	addiw	a2,a0,64
	ble	a4,a5,0x3ec06 # __divtf3+0x132>
	addiw	s0,a0,-12
	sll	s0,s10,s0
	li	s3,0
	j	0x3ec20 # __divtf3+0x14c>
	jal	ra,0x40ec8 # __clzdi2>
	addiw	a4,a0,49
	li	a5,60
	ld	a3,8(sp)
	addiw	s9,a0,64
	ble	a4,a5,0x3ec4e # __divtf3+0x17a>
	addiw	s0,a0,-12
	sll	s8,s6,s0
	li	s6,0
	j	0x3ec6a # __divtf3+0x196>
	mv	a5,a6
	li	a3,0
	li	a4,0
	li	a0,0
	j	0x3eb9e # __divtf3+0xca>
	li	a3,2
	beq	s5,a3,0x3f0a0 # __divtf3+0x5cc>
	li	a3,3
	beq	s5,a3,0x3f0ae # __divtf3+0x5da>
	beqz	s5,0x3f0a4 # __divtf3+0x5d0>
	li	a4,-1
	mv	a3,a1
	srli	a4,a4,0x10
	li	a0,-1
	ori	s4,s4,5
	slli	a5,a5,0xf
	slli	a1,a4,0x10
	or	a3,a3,a5
	slli	a3,a3,0x30
	srli	a1,a1,0x10
	or	a1,a1,a3
	csrs	fflags,s4
	j	0x3ebb0 # __divtf3+0xdc>
	bleu	a2,s6,0x3ee5c # __divtf3+0x388>
	add	s6,s6,t1
	sltu	t3,s6,t1
	add	t3,t3,a1
	add	a4,a4,t3
	addi	t3,s0,-1
	bleu	a4,a1,0x3f08c # __divtf3+0x5b8>
	bltu	a4,a3,0x3f106 # __divtf3+0x632>
	beq	a3,a4,0x3f102 # __divtf3+0x62e>
	mv	s0,t3
	j	0x3ee5c # __divtf3+0x388>
	bltu	s6,s3,0x3ed82 # __divtf3+0x2ae>
	slli	a3,s8,0x3f
	srli	a4,s6,0x1
	srli	s8,s8,0x1
	or	a4,a4,a3
	slli	s6,s6,0x3f
	j	0x3ed88 # __divtf3+0x2b4>
	andi	a4,s3,7
	mv	a3,s0
	bnez	a4,0x3f186 # __divtf3+0x6b2>
	srli	s0,s0,0x34
	xori	s0,s0,1
	andi	s0,s0,1
	li	a2,1
	li	a4,64
	subw	a4,a4,a2
	sll	a0,a3,a4
	srl	a1,s3,a2
	sll	s3,s3,a4
	or	a0,a0,a1
	snez	s3,s3
	or	a0,a0,s3
	andi	a4,a0,7
	srl	a3,a3,a2
	beqz	a4,0x3f06a # __divtf3+0x596>
	li	a4,2
	ori	s4,s4,1
	beq	s5,a4,0x3f29a # __divtf3+0x7c6>
	li	a4,3
	beq	s5,a4,0x3f288 # __divtf3+0x7b4>
	beqz	s5,0x3f270 # __divtf3+0x79c>
	srli	a4,a3,0x33
	andi	a4,a4,1
	beqz	a4,0x3f232 # __divtf3+0x75e>
	ori	s4,s4,1
	bnez	s0,0x3f226 # __divtf3+0x752>
	li	a4,1
	li	a1,0
	j	0x3ed46 # __divtf3+0x272>
	bne	a4,t5,0x3ef2e # __divtf3+0x45a>
	beqz	a5,0x3ecba # __divtf3+0x1e6>
	j	0x3ef1a # __divtf3+0x446>
	bne	a1,a4,0x3f002 # __divtf3+0x52e>
	bleu	t1,s6,0x3effa # __divtf3+0x526>
	mv	s0,t3
	j	0x3ee5c # __divtf3+0x388>
	mv	s0,a4
	j	0x3edfa # __divtf3+0x326>
	mv	a2,t4
	j	0x3edcc # __divtf3+0x2f8>
	beqz	a6,0x3efc4 # __divtf3+0x4f0>
	addi	a3,a4,-1 # 0x7fff # exit-0x8121>
	li	a0,0
	li	a4,0
	j	0x3efcc # __divtf3+0x4f8>
	bnez	a6,0x3efc4 # __divtf3+0x4f0>
	j	0x3f0a4 # __divtf3+0x5d0>
	li	a3,1
	sub	a3,a3,t3
	li	a4,116
	blt	a4,a3,0x3f1b4 # __divtf3+0x6e0>
	li	s3,-1
	li	a4,63
	sext.w	a2,a3
	ble	a3,a4,0x3f2c6 # __divtf3+0x7f2>
	addiw	a0,a2,-64
	li	a1,64
	srl	a4,s0,a0
	beq	a3,a1,0x3f0ee # __divtf3+0x61a>
	li	a3,128
	subw	a3,a3,a2
	sll	s0,s0,a3
	or	s3,s3,s0
	snez	a0,s3
	or	a0,a0,a4
	andi	a4,a0,7
	beqz	a4,0x3f212 # __divtf3+0x73e>
	li	s0,1
	li	a3,0
	j	0x3f056 # __divtf3+0x582>
	bleu	a2,s6,0x3f002 # __divtf3+0x52e>
	add	s6,s6,t1
	sltu	t3,s6,t1
	add	t3,t3,a1
	addi	s0,s0,-2
	add	a4,a4,t3
	j	0x3ee5c # __divtf3+0x388>
	li	a5,2
	ori	s4,s4,1
	beq	s5,a5,0x3f1fe # __divtf3+0x72a>
	li	a5,3
	beq	s5,a5,0x3f1f0 # __divtf3+0x71c>
	bnez	s5,0x3ecc6 # __divtf3+0x1f2>
	andi	a4,s3,15
	li	a3,4
	mv	a5,a6
	beq	a4,a3,0x3f164 # __divtf3+0x690>
	sltiu	a4,s3,-4
	xori	a4,a4,1
	slli	a4,a4,0x20
	addi	s3,s3,4
	srli	a4,a4,0x20
	srli	s3,s3,0x3
	add	s0,s0,a4
	j	0x3eccc # __divtf3+0x1f8>
	blez	t3,0x3f17e # __divtf3+0x6aa>
	li	a4,2
	ori	s4,s4,1
	beq	s5,a4,0x3f1fc # __divtf3+0x728>
	li	a4,3
	beq	s5,a4,0x3f1ee # __divtf3+0x71a>
	beqz	s5,0x3f268 # __divtf3+0x794>
	li	s3,-1
	srli	s3,s3,0x3
	j	0x3eccc # __divtf3+0x1f8>
	mv	a3,a5
	j	0x3eea0 # __divtf3+0x3cc>
	mv	s3,a5
	j	0x3eece # __divtf3+0x3fa>
	lui	a3,0x8
	mv	a5,a6
	addi	a3,a3,-1
	li	a4,0
	li	a0,0
	j	0x3eb9e # __divtf3+0xca>
	bnez	t3,0x3f0b4 # __divtf3+0x5e0>
	mv	a3,s0
	li	s3,-1
	li	a4,2
	ori	s4,s4,1
	beq	s5,a4,0x3f2b4 # __divtf3+0x7e0>
	li	a4,3
	beq	s5,a4,0x3f2a0 # __divtf3+0x7cc>
	bnez	s5,0x3f026 # __divtf3+0x552>
	andi	a4,s3,15
	li	a2,4
	beq	a4,a2,0x3f026 # __divtf3+0x552>
	sltiu	a4,s3,-4
	xori	a4,a4,1
	slli	a4,a4,0x20
	srli	a4,a4,0x20
	add	s0,s0,a4
	j	0x3f026 # __divtf3+0x552>
	li	a4,2
	ori	s4,s4,1
	mv	a0,a6
	beq	s5,a4,0x3ef5c # __divtf3+0x488>
	li	a4,3
	li	a0,0
	bne	s5,a4,0x3ef5c # __divtf3+0x488>
	li	a0,1
	sub	a0,a0,a6
	j	0x3ef5c # __divtf3+0x488>
	slli	a3,t1,0x1
	sltu	t1,a3,t1
	add	a1,a1,t1
	add	a4,a4,a1
	addi	s3,s3,-2
	mv	t1,a3
	bne	a4,t5,0x3ef2e # __divtf3+0x45a>
	beq	a5,t1,0x3ecba # __divtf3+0x1e6>
	ori	s3,s3,1
	j	0x3ecba # __divtf3+0x1e6>
	li	s3,-1
	beqz	a6,0x3f244 # __divtf3+0x770>
	srli	s3,s3,0x3
	li	a5,1
	j	0x3eccc # __divtf3+0x1f8>
	li	s3,-1
	bnez	a6,0x3f256 # __divtf3+0x782>
	srli	s3,s3,0x3
	li	a5,0
	j	0x3eccc # __divtf3+0x1f8>
	mv	s3,a3
	beq	a4,t5,0x3f1e4 # __divtf3+0x710>
	j	0x3ef2e # __divtf3+0x45a>
	srli	a0,a0,0x3
	li	a4,0
	andi	a2,s4,1
	li	a3,0
	beqz	a2,0x3eb9e # __divtf3+0xca>
	ori	s4,s4,2
	j	0x3efd0 # __divtf3+0x4fc>
	li	a3,1
	li	a4,0
	li	a0,0
	ori	s4,s4,2
	j	0x3efd0 # __divtf3+0x4fc>
	slli	a4,a3,0xd
	srli	a0,a0,0x3
	slli	a3,a3,0x3d
	srli	a4,a4,0x10
	or	a0,a0,a3
	bnez	s0,0x3f216 # __divtf3+0x742>
	li	a3,0
	j	0x3eb9e # __divtf3+0xca>
	addi	a0,s3,8
	sltu	s3,a0,s3
	add	s0,s0,s3
	li	a5,0
	srli	s3,a0,0x3
	j	0x3eccc # __divtf3+0x1f8>
	addi	a0,s3,8
	sltu	s3,a0,s3
	add	s0,s0,s3
	li	a5,1
	srli	s3,a0,0x3
	j	0x3eccc # __divtf3+0x1f8>
	li	a4,1
	li	s3,0
	add	s0,s0,a4
	j	0x3eccc # __divtf3+0x1f8>
	andi	a4,a0,15
	li	a2,4
	beq	a4,a2,0x3f06a # __divtf3+0x596>
	addi	a4,a0,4 # 0x8004 # exit-0x811c>
	sltu	a0,a4,a0
	add	a3,a3,a0
	mv	a0,a4
	j	0x3f06a # __divtf3+0x596>
	bnez	a6,0x3f06a # __divtf3+0x596>
	addi	a4,a0,8
	sltu	a0,a4,a0
	add	a3,a3,a0
	mv	a0,a4
	j	0x3f06a # __divtf3+0x596>
	beqz	a6,0x3f06a # __divtf3+0x596>
	j	0x3f28c # __divtf3+0x7b8>
	bnez	a6,0x3f026 # __divtf3+0x552>
	sltiu	a4,s3,-8
	xori	a4,a4,1
	slli	a4,a4,0x20
	srli	a4,a4,0x20
	add	s0,s0,a4
	j	0x3f026 # __divtf3+0x552>
	beqz	a6,0x3f026 # __divtf3+0x552>
	j	0x3f2a4 # __divtf3+0x7d0>
	bltu	t1,a5,0x3f1d0 # __divtf3+0x6fc>
	mv	s3,a3
	bne	a5,t1,0x3f1e8 # __divtf3+0x714>
	j	0x3ecba # __divtf3+0x1e6>
	mv	a3,s0
	li	s0,1
	j	0x3f030 # __divtf3+0x55c>

__eqtf2:
	mv	t1,a0
	frrm	a5
	lui	a4,0x8
	addi	a4,a4,-1
	srli	a6,a1,0x30
	li	a5,-1
	srli	a5,a5,0x10
	srli	a7,a3,0x30
	and	a6,a6,a4
	and	t3,a1,a5
	and	a7,a7,a4
	and	a5,a5,a3
	srli	a1,a1,0x3f
	srli	a3,a3,0x3f
	beq	a6,a4,0x3f314 # __eqtf2+0x48>
	beq	a7,a4,0x3f304 # __eqtf2+0x38>
	li	a0,1
	beq	a6,a7,0x3f326 # __eqtf2+0x5a>
	ret
	or	a2,a2,a5
	beqz	a2,0x3f310 # __eqtf2+0x44>
	srli	a5,a5,0x2f
	bnez	a5,0x3f310 # __eqtf2+0x44>
	csrsi	fflags,16
	li	a0,1
	ret
	or	a4,t3,a0
	bnez	a4,0x3f346 # __eqtf2+0x7a>
	li	a0,1
	bne	a7,a6,0x3f302 # __eqtf2+0x36>
	or	a4,a5,a2
	bnez	a4,0x3f308 # __eqtf2+0x3c>
	li	a0,1
	bne	t3,a5,0x3f302 # __eqtf2+0x36>
	bne	t1,a2,0x3f302 # __eqtf2+0x36>
	li	a0,0
	beq	a1,a3,0x3f302 # __eqtf2+0x36>
	li	a0,1
	bnez	a6,0x3f302 # __eqtf2+0x36>
	or	a0,t3,t1
	snez	a0,a0
	ret
	srli	t3,t3,0x2f
	beqz	t3,0x3f30c # __eqtf2+0x40>
	li	a0,1
	bne	a7,a6,0x3f302 # __eqtf2+0x36>
	or	a2,a2,a5
	bnez	a2,0x3f308 # __eqtf2+0x3c>
	ret

__getf2:
	mv	t1,a0
	frrm	a5
	lui	a4,0x8
	addi	a4,a4,-1
	srli	a6,a1,0x30
	li	a5,-1
	srli	a5,a5,0x10
	srli	a7,a3,0x30
	and	a6,a6,a4
	and	t3,a1,a5
	and	a7,a7,a4
	srli	a1,a1,0x3f
	and	a5,a5,a3
	srli	a0,a3,0x3f
	beq	a6,a4,0x3f3a4 # __getf2+0x4a>
	beq	a7,a4,0x3f3ae # __getf2+0x54>
	bnez	a6,0x3f3ce # __getf2+0x74>
	or	a4,t3,t1
	bnez	a7,0x3f3c8 # __getf2+0x6e>
	or	a3,a5,a2
	bnez	a3,0x3f3c8 # __getf2+0x6e>
	li	a0,0
	bnez	a4,0x3f3bc # __getf2+0x62>
	ret
	or	a4,t3,t1
	bnez	a4,0x3f3da # __getf2+0x80>
	bne	a7,a6,0x3f3ce # __getf2+0x74>
	or	a4,a5,a2
	bnez	a4,0x3f3da # __getf2+0x80>
	beqz	a6,0x3f3c4 # __getf2+0x6a>
	beq	a1,a0,0x3f3e2 # __getf2+0x88>
	li	a0,1
	beqz	a1,0x3f3a2 # __getf2+0x48>
	li	a0,-1
	ret
	or	a4,t3,t1
	bnez	a4,0x3f3b8 # __getf2+0x5e>
	beqz	a0,0x3f3c0 # __getf2+0x66>
	ret
	bnez	a7,0x3f3b8 # __getf2+0x5e>
	or	a4,a5,a2
	bnez	a4,0x3f3b8 # __getf2+0x5e>
	j	0x3f3bc # __getf2+0x62>
	csrsi	fflags,16
	li	a0,-2
	ret
	blt	a7,a6,0x3f3fc # __getf2+0xa2>
	blt	a6,a7,0x3f3ca # __getf2+0x70>
	bltu	a5,t3,0x3f3bc # __getf2+0x62>
	beq	t3,a5,0x3f406 # __getf2+0xac>
	bleu	a5,t3,0x3f402 # __getf2+0xa8>
	beqz	a1,0x3f3c0 # __getf2+0x66>
	mv	a0,a1
	ret
	bnez	a0,0x3f3c0 # __getf2+0x66>
	li	a0,1
	ret
	li	a0,0
	ret
	bltu	a2,t1,0x3f3bc # __getf2+0x62>
	li	a0,0
	bltu	t1,a2,0x3f3f6 # __getf2+0x9c>
	ret

__letf2:
	mv	t1,a0
	frrm	a5
	lui	a4,0x8
	addi	a4,a4,-1
	srli	a6,a1,0x30
	li	a5,-1
	srli	a5,a5,0x10
	srli	a7,a3,0x30
	and	a6,a6,a4
	and	t3,a1,a5
	and	a7,a7,a4
	srli	a1,a1,0x3f
	and	a5,a5,a3
	srli	a0,a3,0x3f
	beq	a6,a4,0x3f45c # __letf2+0x4a>
	beq	a7,a4,0x3f466 # __letf2+0x54>
	bnez	a6,0x3f47c # __letf2+0x6a>
	or	a4,t3,t1
	bnez	a7,0x3f474 # __letf2+0x62>
	or	a3,a5,a2
	bnez	a3,0x3f474 # __letf2+0x62>
	li	a0,0
	bnez	a4,0x3f484 # __letf2+0x72>
	ret
	or	a4,t3,t1
	bnez	a4,0x3f492 # __letf2+0x80>
	bne	a7,a6,0x3f47c # __letf2+0x6a>
	or	a4,a5,a2
	bnez	a4,0x3f492 # __letf2+0x80>
	or	a4,t3,t1
	bnez	a6,0x3f480 # __letf2+0x6e>
	bnez	a4,0x3f480 # __letf2+0x6e>
	bnez	a0,0x3f45a # __letf2+0x48>
	li	a0,-1
	ret
	beqz	a7,0x3f48a # __letf2+0x78>
	beq	a1,a0,0x3f49a # __letf2+0x88>
	li	a0,1
	bnez	a1,0x3f478 # __letf2+0x66>
	ret
	or	a4,a5,a2
	bnez	a4,0x3f480 # __letf2+0x6e>
	j	0x3f484 # __letf2+0x72>
	csrsi	fflags,16
	li	a0,2
	ret
	ble	a6,a7,0x3f4a4 # __letf2+0x92>
	bnez	a0,0x3f478 # __letf2+0x66>
	li	a0,1
	ret
	blt	a6,a7,0x3f476 # __letf2+0x64>
	bltu	a5,t3,0x3f484 # __letf2+0x72>
	beq	t3,a5,0x3f4be # __letf2+0xac>
	bleu	a5,t3,0x3f4ba # __letf2+0xa8>
	beqz	a1,0x3f478 # __letf2+0x66>
	mv	a0,a1
	ret
	li	a0,0
	ret
	bltu	a2,t1,0x3f484 # __letf2+0x72>
	li	a0,0
	bltu	t1,a2,0x3f4b4 # __letf2+0xa2>
	ret

__multf3:
	addi	sp,sp,-112
	sd	s2,80(sp)
	sd	s4,64(sp)
	sd	s9,24(sp)
	sd	ra,104(sp)
	sd	s0,96(sp)
	sd	s1,88(sp)
	sd	s3,72(sp)
	sd	s5,56(sp)
	sd	s6,48(sp)
	sd	s7,40(sp)
	sd	s8,32(sp)
	sd	s10,16(sp)
	sd	s11,8(sp)
	mv	s2,a0
	mv	s9,a2
	mv	s4,a3
	frrm	s6
	lui	a4,0x8
	srli	a5,a1,0x30
	addi	a4,a4,-1
	slli	s0,a1,0x10
	and	a5,a5,a4
	sext.w	s6,s6
	srli	s0,s0,0x10
	srli	s7,a1,0x3f
	beqz	a5,0x3f83e # __multf3+0x374>
	sext.w	s5,a5
	beq	a5,a4,0x3f880 # __multf3+0x3b6>
	slli	s0,s0,0x3
	srli	a4,a0,0x3d
	or	a4,a4,s0
	lui	s5,0xffffc
	li	s0,1
	slli	s0,s0,0x33
	addi	s5,s5,1
	or	s0,s0,a4
	slli	s1,a0,0x3
	add	s5,s5,a5
	li	s8,0
	li	s10,0
	li	s3,0
	lui	a3,0x8
	srli	a4,s4,0x30
	addi	a3,a3,-1
	slli	s2,s4,0x10
	and	a4,a4,a3
	mv	s11,s9
	srli	s2,s2,0x10
	srli	s4,s4,0x3f
	beqz	a4,0x3f7fe # __multf3+0x334>
	sext.w	a5,a4
	beq	a4,a3,0x3f89c # __multf3+0x3d2>
	slli	s2,s2,0x3
	srli	a5,s9,0x3d
	lui	a3,0xffffc
	or	a5,a5,s2
	addi	a3,a3,1
	li	s2,1
	add	a4,a4,a3
	slli	s2,s2,0x33
	or	s2,a5,s2
	slli	s11,s9,0x3
	add	s5,s5,a4
	li	a2,0
	xor	a4,s7,s4
	li	a3,15
	mv	a6,a4
	addi	a1,s5,1 # 0xffffffffffffc001 # __BSS_END__+0xfffffffffffadc79>
	bltu	a3,s8,0x3f5f6 # __multf3+0x12c>
	auipc	a3,0xb
	addi	a3,a3,-1572 # 0x49f60 # secs_through_month.0+0x70>
	slli	a5,s8,0x2
	add	a5,a5,a3
	lw	a5,0(a5)
	add	a5,a5,a3
	jr	a5
	mv	a6,s4
	mv	s0,s2
	mv	s1,s11
	mv	s10,a2
	li	a5,2
	beq	s10,a5,0x3f5ea # __multf3+0x120>
	li	a5,3
	beq	s10,a5,0x3f9ae # __multf3+0x4e4>
	li	a5,1
	mv	a4,a6
	bne	s10,a5,0x3f79e # __multf3+0x2d4>
	li	a3,0
	li	a5,0
	li	a0,0
	slli	a4,a4,0xf
	slli	a1,a5,0x10
	or	a4,a4,a3
	slli	a4,a4,0x30
	srli	a1,a1,0x10
	or	a1,a1,a4
	bnez	s3,0x3f9a8 # __multf3+0x4de>
	ld	ra,104(sp)
	ld	s0,96(sp)
	ld	s1,88(sp)
	ld	s2,80(sp)
	ld	s3,72(sp)
	ld	s4,64(sp)
	ld	s5,56(sp)
	ld	s6,48(sp)
	ld	s7,40(sp)
	ld	s8,32(sp)
	ld	s9,24(sp)
	ld	s10,16(sp)
	ld	s11,8(sp)
	addi	sp,sp,112
	ret
	lui	a3,0x8
	mv	a4,a6
	addi	a3,a3,-1
	li	a5,0
	li	a0,0
	j	0x3f5ba # __multf3+0xf0>
	li	a5,-1
	srli	a5,a5,0x20
	srli	a0,s11,0x20
	and	a3,s1,a5
	srli	s9,s1,0x20
	and	a5,s11,a5
	mul	a7,a5,a3
	add	t5,s11,s2
	add	t6,s0,s1
	sltu	t0,t6,s1
	sltu	t2,t5,s11
	mv	a2,t0
	mv	s11,t2
	mul	a5,s9,a5
	srli	t1,a7,0x20
	mul	a3,a0,a3
	add	a3,a3,a5
	add	t1,t1,a3
	mul	s9,s9,a0
	bleu	a5,t1,0x3f640 # __multf3+0x176>
	li	a5,1
	slli	a5,a5,0x20
	add	s9,s9,a5
	li	a0,-1
	srli	a0,a0,0x20
	srli	a5,t6,0x20
	and	s4,t6,a0
	srli	t3,t5,0x20
	and	s7,t5,a0
	and	s1,t1,a0
	and	a7,a7,a0
	mv	t4,a5
	mul	a0,a5,s7
	srli	t1,t1,0x20
	slli	s1,s1,0x20
	add	t1,t1,s9
	add	a7,a7,s1
	mul	s8,s7,s4
	mul	a5,t3,s4
	srli	a3,s8,0x20
	add	a5,a5,a0
	add	a3,a3,a5
	mul	a5,t4,t3
	bleu	a0,a3,0x3f68a # __multf3+0x1c0>
	li	a0,1
	slli	a0,a0,0x20
	add	a5,a5,a0
	li	t4,-1
	srli	t4,t4,0x20
	srli	s1,s2,0x20
	and	t3,s0,t4
	and	s2,s2,t4
	srli	s7,s0,0x20
	mul	s4,t3,s2
	and	a0,a3,t4
	slli	a0,a0,0x20
	and	t4,s8,t4
	add	t4,t4,a0
	srli	a3,a3,0x20
	mul	s2,s7,s2
	srli	a0,s4,0x20
	mul	t3,s1,t3
	add	t3,t3,s2
	add	a0,a0,t3
	mul	s7,s7,s1
	bleu	s2,a0,0x3f6d0 # __multf3+0x206>
	li	t3,1
	slli	t3,t3,0x20
	add	s7,s7,t3
	add	t4,t4,t1
	sltu	s0,t4,t1
	add	a3,a3,s0
	neg	s11,s11
	add	a3,a3,a5
	neg	s1,a2
	and	t6,s11,t6
	li	s2,-1
	add	t6,t6,a3
	srli	s2,s2,0x20
	sltu	s0,a3,s0
	and	t5,s1,t5
	and	t0,t0,t2
	add	t5,t5,t6
	sltu	a3,t6,a3
	and	a5,a0,s2
	add	s0,s0,t0
	sub	t3,t4,a7
	sub	a2,t5,t1
	add	s0,s0,a3
	sltu	t6,t5,t6
	srli	a0,a0,0x20
	slli	a5,a5,0x20
	and	s4,s4,s2
	sltu	a3,t4,t3
	add	s0,s0,t6
	add	a0,a0,s7
	sltu	t6,t5,a2
	add	a5,a5,s4
	sub	a2,a2,a3
	bleu	t3,t4,0x3f734 # __multf3+0x26a>
	beq	t1,t5,0x3fab4 # __multf3+0x5ea>
	sub	t4,t3,a5
	sub	a3,a2,a0
	sltu	t1,t3,t4
	add	s0,s0,a0
	sltu	a2,a2,a3
	sub	a0,a5,t1
	bleu	t4,t3,0x3f756 # __multf3+0x28c>
	seqz	t1,a3
	or	a2,t1,a2
	add	a3,a3,a0
	sltu	a5,a3,a5
	add	s0,s0,a5
	sub	s0,s0,t6
	sub	s0,s0,a2
	slli	s1,t4,0xd
	slli	s0,s0,0xd
	or	s1,s1,a7
	srli	a5,t4,0x33
	srli	a2,s0,0x34
	snez	s1,s1
	srli	a0,a3,0x33
	or	s1,s1,a5
	slli	a3,a3,0xd
	andi	a5,a2,1
	or	s0,s0,a0
	or	s1,s1,a3
	beqz	a5,0x3fa5e # __multf3+0x594>
	srli	a5,s1,0x1
	andi	s1,s1,1
	slli	a3,s0,0x3f
	or	s1,s1,a5
	or	s1,s1,a3
	srli	s0,s0,0x1
	lui	a3,0x4
	addi	a3,a3,-1
	add	a2,a1,a3
	blez	a2,0x3f8f0 # __multf3+0x426>
	andi	a5,s1,7
	beqz	a5,0x3f7c4 # __multf3+0x2fa>
	li	a5,2
	ori	s3,s3,1
	beq	s6,a5,0x3faf4 # __multf3+0x62a>
	li	a5,3
	beq	s6,a5,0x3faa2 # __multf3+0x5d8>
	beqz	s6,0x3fa8a # __multf3+0x5c0>
	srli	a5,s0,0x34
	andi	a5,a5,1
	beqz	a5,0x3f7da # __multf3+0x310>
	li	a5,-1
	slli	a5,a5,0x34
	addi	a5,a5,-1
	lui	a3,0x4
	and	s0,s0,a5
	add	a2,a1,a3
	lui	a5,0x8
	addi	a1,a5,-2 # 0x7ffe # exit-0x8122>
	blt	a1,a2,0x3fa40 # __multf3+0x576>
	addi	a3,a5,-1
	and	a3,a3,a2
	srli	s1,s1,0x3
	slli	a0,s0,0x3d
	slli	a5,s0,0xd
	slli	a3,a3,0x30
	or	a0,a0,s1
	srli	a5,a5,0x10
	srli	a3,a3,0x30
	j	0x3f5ba # __multf3+0xf0>
	or	a5,s9,s2
	beqz	a5,0x3f8e4 # __multf3+0x41a>
	beqz	s2,0x3f9da # __multf3+0x510>
	mv	a0,s2
	jal	ra,0x40ec8 # __clzdi2>
	sext.w	a2,a0
	addiw	a4,a0,-15
	li	a3,61
	addiw	s11,a4,3
	subw	a4,a3,a4
	sll	s2,s2,s11
	srl	a4,s9,a4
	or	s2,a4,s2
	sll	s11,s9,s11
	lui	a5,0xffffc
	addi	a5,a5,17
	sub	a5,a5,a2
	add	s5,s5,a5
	li	a2,0
	j	0x3f574 # __multf3+0xaa>
	or	s1,s0,a0
	beqz	s1,0x3f8d8 # __multf3+0x40e>
	beqz	s0,0x3f9bc # __multf3+0x4f2>
	mv	a0,s0
	jal	ra,0x40ec8 # __clzdi2>
	sext.w	s5,a0
	addiw	a4,a0,-15
	li	a3,61
	addiw	s1,a4,3
	subw	a4,a3,a4
	sll	s0,s0,s1
	srl	a4,s2,a4
	or	s0,s0,a4
	sll	s1,s2,s1
	lui	a5,0xffffc
	addi	a5,a5,17
	sub	s5,a5,s5
	li	s8,0
	li	s10,0
	li	s3,0
	j	0x3f530 # __multf3+0x66>
	or	s1,s0,a0
	beqz	s1,0x3f8ce # __multf3+0x404>
	srli	a5,s0,0x2f
	andi	a5,a5,1
	mv	s1,a0
	li	s8,12
	li	s10,3
	li	s3,16
	beqz	a5,0x3f530 # __multf3+0x66>
	li	s3,0
	j	0x3f530 # __multf3+0x66>
	or	a4,s9,s2
	add	s5,s5,a5
	beqz	a4,0x3f8c2 # __multf3+0x3f8>
	srli	a5,s2,0x2f
	andi	a5,a5,1
	ori	s8,s8,3
	li	a2,3
	bnez	a5,0x3f574 # __multf3+0xaa>
	li	s3,16
	j	0x3f574 # __multf3+0xaa>
	li	a5,2
	mv	a6,s7
	bne	s10,a5,0x3f5a6 # __multf3+0xdc>
	j	0x3f5ea # __multf3+0x120>
	ori	s8,s8,2
	li	s2,0
	li	s11,0
	li	a2,2
	j	0x3f574 # __multf3+0xaa>
	li	s0,0
	li	s8,8
	li	s10,2
	li	s3,0
	j	0x3f530 # __multf3+0x66>
	li	s0,0
	li	s8,4
	li	s5,0
	li	s10,1
	li	s3,0
	j	0x3f530 # __multf3+0x66>
	ori	s8,s8,1
	li	s2,0
	li	s11,0
	li	a2,1
	j	0x3f574 # __multf3+0xaa>
	li	a5,1
	sub	a1,a5,a2
	bnez	a2,0x3f9fc # __multf3+0x532>
	andi	a3,s1,7
	mv	a5,s0
	beqz	a3,0x3f92e # __multf3+0x464>
	li	a3,2
	ori	s3,s3,1
	beq	s6,a3,0x3fb40 # __multf3+0x676>
	li	a3,3
	beq	s6,a3,0x3fb2c # __multf3+0x662>
	bnez	s6,0x3f92e # __multf3+0x464>
	andi	a3,s1,15
	li	a2,4
	beq	a3,a2,0x3f92e # __multf3+0x464>
	sltiu	a5,s1,-4
	xori	a5,a5,1
	slli	a5,a5,0x20
	srli	a5,a5,0x20
	add	a5,a5,s0
	srli	a5,a5,0x34
	xori	a5,a5,1
	andi	a3,a5,1
	sext.w	a5,a1
	li	a2,64
	subw	a2,a2,a5
	sll	a0,s0,a2
	srl	a1,s1,a5
	sll	s1,s1,a2
	or	a0,a0,a1
	snez	s1,s1
	or	a0,a0,s1
	andi	a2,a0,7
	srl	s0,s0,a5
	beqz	a2,0x3f98a # __multf3+0x4c0>
	li	a5,2
	ori	s3,s3,1
	beq	s6,a5,0x3fb58 # __multf3+0x68e>
	li	a5,3
	beq	s6,a5,0x3fb46 # __multf3+0x67c>
	bnez	s6,0x3f98a # __multf3+0x4c0>
	andi	a5,a0,15
	li	a2,4
	beq	a5,a2,0x3f98a # __multf3+0x4c0>
	addi	a5,a0,4
	sltu	a0,a5,a0
	add	s0,s0,a0
	mv	a0,a5
	li	a5,1
	slli	a2,a5,0x33
	and	a2,a2,s0
	beqz	a2,0x3fb1a # __multf3+0x650>
	ori	s3,s3,1
	bnez	a3,0x3fb0e # __multf3+0x644>
	slli	a4,a4,0x3f
	slli	a5,a5,0x30
	li	a0,0
	or	a1,a4,a5
	csrs	fflags,s3
	j	0x3f5cc # __multf3+0x102>
	lui	a3,0x8
	li	a5,1
	li	a4,0
	addi	a3,a3,-1
	slli	a5,a5,0x2f
	li	a0,0
	j	0x3f5ba # __multf3+0xf0>
	jal	ra,0x40ec8 # __clzdi2>
	addiw	a4,a0,49
	li	a5,60
	addiw	s5,a0,64
	ble	a4,a5,0x3f856 # __multf3+0x38c>
	addiw	a0,a0,-12
	li	s1,0
	sll	s0,s2,a0
	j	0x3f870 # __multf3+0x3a6>
	mv	a0,s9
	jal	ra,0x40ec8 # __clzdi2>
	addiw	a4,a0,49
	li	a5,60
	addiw	a2,a0,64
	ble	a4,a5,0x3f816 # __multf3+0x34c>
	addiw	s2,a0,-12
	sll	s2,s9,s2
	li	s11,0
	j	0x3f832 # __multf3+0x368>
	li	a3,116
	ble	a1,a3,0x3fab8 # __multf3+0x5ee>
	or	a0,s0,s1
	beqz	a0,0x3fa22 # __multf3+0x558>
	li	a3,2
	ori	s3,s3,1
	mv	a0,a6
	beq	s6,a3,0x3fa22 # __multf3+0x558>
	li	a3,3
	li	a0,0
	bne	s6,a3,0x3fa22 # __multf3+0x558>
	sub	a0,a5,a6
	ori	s3,s3,2
	li	a3,0
	li	a5,0
	slli	a1,a5,0x10
	srli	a1,a1,0x10
	slli	a5,a3,0x30
	slli	a4,a4,0x3f
	or	a1,a1,a5
	or	a1,a1,a4
	csrs	fflags,s3
	j	0x3f5cc # __multf3+0x102>
	li	a3,2
	beq	s6,a3,0x3fa72 # __multf3+0x5a8>
	li	a3,3
	beq	s6,a3,0x3fa84 # __multf3+0x5ba>
	beqz	s6,0x3fa76 # __multf3+0x5ac>
	li	a5,-1
	mv	a3,a1
	srli	a5,a5,0x10
	li	a0,-1
	ori	s3,s3,5
	j	0x3fa2a # __multf3+0x560>
	mv	a1,s5
	j	0x3f79e # __multf3+0x2d4>
	lui	a1,0xffff
	li	a0,0
	slli	a1,a1,0x23
	li	s3,16
	csrs	fflags,s3
	j	0x3f5cc # __multf3+0x102>
	beqz	a6,0x3fa50 # __multf3+0x586>
	addi	a3,a5,-1 # 0xffffffffffffbfff # __BSS_END__+0xfffffffffffadc77>
	li	a0,0
	li	a5,0
	ori	s3,s3,5
	j	0x3fa2a # __multf3+0x560>
	bnez	a6,0x3fa50 # __multf3+0x586>
	j	0x3fa76 # __multf3+0x5ac>
	andi	a5,s1,15
	li	a3,4
	beq	a5,a3,0x3f7c4 # __multf3+0x2fa>
	addi	a5,s1,4
	sltu	s1,a5,s1
	add	s0,s0,s1
	mv	s1,a5
	j	0x3f7c4 # __multf3+0x2fa>
	bnez	a6,0x3f7c4 # __multf3+0x2fa>
	addi	a5,s1,8
	sltu	s1,a5,s1
	add	s0,s0,s1
	mv	s1,a5
	j	0x3f7c4 # __multf3+0x2fa>
	li	t6,1
	j	0x3f734 # __multf3+0x26a>
	li	a3,63
	sext.w	a5,a1
	ble	a1,a3,0x3fb5e # __multf3+0x694>
	addiw	a0,a5,-64
	li	a2,64
	srl	a3,s0,a0
	beq	a1,a2,0x3fae2 # __multf3+0x618>
	li	a2,128
	subw	a5,a2,a5
	sll	s0,s0,a5
	or	s1,s1,s0
	snez	a0,s1
	or	a0,a0,a3
	andi	a5,a0,7
	beqz	a5,0x3fafa # __multf3+0x630>
	li	a3,1
	li	s0,0
	j	0x3f960 # __multf3+0x496>
	beqz	a6,0x3f7c4 # __multf3+0x2fa>
	j	0x3faa6 # __multf3+0x5dc>
	srli	a0,a0,0x3
	li	a5,0
	andi	a2,s3,1
	li	a3,0
	beqz	a2,0x3f5ba # __multf3+0xf0>
	ori	s3,s3,2
	j	0x3fa2a # __multf3+0x560>
	li	a3,1
	li	a5,0
	li	a0,0
	ori	s3,s3,2
	j	0x3fa2a # __multf3+0x560>
	slli	a5,s0,0xd
	srli	a0,a0,0x3
	slli	s0,s0,0x3d
	srli	a5,a5,0x10
	or	a0,a0,s0
	beqz	a3,0x3f5ba # __multf3+0xf0>
	j	0x3fafe # __multf3+0x634>
	bnez	a6,0x3f92e # __multf3+0x464>
	sltiu	a5,s1,-8
	xori	a5,a5,1
	slli	a5,a5,0x20
	srli	a5,a5,0x20
	add	a5,a5,s0
	j	0x3f92e # __multf3+0x464>
	beqz	a6,0x3f92e # __multf3+0x464>
	j	0x3fb30 # __multf3+0x666>
	bnez	a6,0x3f98a # __multf3+0x4c0>
	addi	a5,a0,8
	sltu	a0,a5,a0
	add	s0,s0,a0
	mv	a0,a5
	j	0x3f98a # __multf3+0x4c0>
	beqz	a6,0x3f98a # __multf3+0x4c0>
	j	0x3fb4a # __multf3+0x680>
	li	a3,1
	j	0x3f93c # __multf3+0x472>

__subtf3:
	addi	sp,sp,-48
	sd	ra,40(sp)
	sd	s0,32(sp)
	sd	s1,24(sp)
	sd	s2,16(sp)
	sd	s3,8(sp)
	sd	s4,0(sp)
	mv	t5,a0
	frrm	s3
	lui	a4,0x8
	li	a5,-1
	addi	a4,a4,-1
	srli	a5,a5,0x10
	srli	a6,a3,0x30
	srli	s0,a1,0x30
	and	t1,a1,a5
	and	s0,s0,a4
	and	a5,a5,a3
	and	a6,a6,a4
	slli	a7,t1,0x3
	srli	t3,a2,0x3d
	srli	t1,a0,0x3d
	slli	a5,a5,0x3
	subw	t4,s0,a6
	or	t1,t1,a7
	or	a5,t3,a5
	sext.w	s3,s3
	srli	s1,a1,0x3f
	slli	t6,a0,0x3
	srli	a3,a3,0x3f
	slli	t3,a2,0x3
	sext.w	a7,t4
	beq	a6,a4,0x3fda6 # __subtf3+0x244>
	xori	a3,a3,1
	beq	s1,a3,0x3fdd6 # __subtf3+0x274>
	blez	a7,0x3fd5a # __subtf3+0x1f8>
	bnez	a6,0x3fdb6 # __subtf3+0x254>
	or	a4,a5,t3
	beqz	a4,0x4001a # __subtf3+0x4b8>
	addiw	a7,t4,-1
	beqz	a7,0x4034e # __subtf3+0x7ec>
	lui	a4,0x8
	addi	a4,a4,-1
	beq	s0,a4,0x40064 # __subtf3+0x502>
	li	a4,116
	blt	a4,a7,0x3fdcc # __subtf3+0x26a>
	li	a4,63
	blt	a4,a7,0x401ea # __subtf3+0x688>
	li	a4,64
	subw	a4,a4,a7
	sll	s2,a5,a4
	srl	a3,t3,a7
	sll	a4,t3,a4
	or	s2,s2,a3
	snez	a4,a4
	srl	a5,a5,a7
	or	s2,s2,a4
	sub	t1,t1,a5
	sub	s2,t6,s2
	sltu	t6,t6,s2
	sub	t1,t1,t6
	srli	a5,t1,0x33
	andi	a5,a5,1
	beqz	a5,0x3feee # __subtf3+0x38c>
	slli	a1,t1,0xd
	srli	s4,a1,0xd
	beqz	s4,0x3ff2c # __subtf3+0x3ca>
	mv	a0,s4
	jal	ra,0x40ec8 # __clzdi2>
	addiw	a0,a0,-12
	li	a1,64
	subw	a1,a1,a0
	sll	t1,s4,a0
	srl	a1,s2,a1
	or	a1,a1,t1
	sll	s4,s2,a0
	blt	a0,s0,0x3fee0 # __subtf3+0x37e>
	subw	a0,a0,s0
	addiw	t1,a0,1
	li	a5,63
	mv	a4,t1
	blt	a5,t1,0x401be # __subtf3+0x65c>
	li	a5,64
	subw	a5,a5,t1
	sll	s2,a1,a5
	srl	a4,s4,t1
	sll	a5,s4,a5
	or	s2,s2,a4
	snez	a5,a5
	or	s2,s2,a5
	srl	t1,a1,t1
	or	a1,s2,t1
	beqz	a1,0x3fe7c # __subtf3+0x31a>
	andi	a1,s2,7
	slli	a3,s2,0x1
	slli	a5,t1,0x1
	srli	a4,s2,0x3f
	andi	a2,a3,7
	add	a4,a4,a5
	li	a7,0
	beqz	a2,0x3fcd0 # __subtf3+0x16e>
	li	a5,2
	beq	s3,a5,0x4039e # __subtf3+0x83c>
	li	a5,3
	li	a7,1
	beq	s3,a5,0x4038a # __subtf3+0x828>
	beqz	s3,0x40370 # __subtf3+0x80e>
	li	a5,1
	slli	a3,a5,0x34
	and	a4,a4,a3
	seqz	a3,a4
	li	s0,0
	beqz	a1,0x403c6 # __subtf3+0x864>
	li	a5,2
	beq	s3,a5,0x3ffd2 # __subtf3+0x470>
	li	a5,3
	beq	s3,a5,0x3fff2 # __subtf3+0x490>
	beqz	s3,0x3ffa8 # __subtf3+0x446>
	li	a5,1
	slli	a5,a5,0x33
	and	a5,t1,a5
	li	a7,1
	beqz	a3,0x3fd02 # __subtf3+0x1a0>
	ori	a7,a7,2
	beqz	a5,0x3fec6 # __subtf3+0x364>
	lui	a4,0x8
	addi	s0,s0,1
	addi	a4,a4,-1
	beq	s0,a4,0x3ff0c # __subtf3+0x3aa>
	li	a5,-1
	slli	a1,a5,0x33
	addi	a1,a1,-1
	and	a1,t1,a1
	and	s0,s0,a4
	slli	a0,a1,0x3d
	slli	a4,s0,0x30
	srli	s2,s2,0x3
	srli	a1,a1,0x3
	srli	a5,a5,0x10
	or	a0,a0,s2
	and	a1,a1,a5
	srli	a4,a4,0x30
	andi	s0,s1,1
	slli	s0,s0,0xf
	slli	a1,a1,0x10
	or	s0,s0,a4
	slli	s0,s0,0x30
	srli	a1,a1,0x10
	or	a1,a1,s0
	bnez	a7,0x40050 # __subtf3+0x4ee>
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	ld	s4,0(sp)
	addi	sp,sp,48
	ret
	beqz	a7,0x3fe26 # __subtf3+0x2c4>
	bnez	s0,0x400f4 # __subtf3+0x592>
	or	a4,t1,t6
	beqz	a4,0x402c0 # __subtf3+0x75e>
	not	t4,t4
	sext.w	t4,t4
	beqz	t4,0x40438 # __subtf3+0x8d6>
	lui	a4,0x8
	addi	a4,a4,-1
	bne	a6,a4,0x40108 # __subtf3+0x5a6>
	or	t3,a5,t3
	beqz	t3,0x4009c # __subtf3+0x53a>
	slli	a0,a2,0x3
	srli	a4,a5,0x32
	srli	a0,a0,0x3
	slli	a2,a5,0x3d
	andi	a4,a4,1
	or	a0,a0,a2
	srli	a1,a5,0x3
	mv	s1,a3
	li	a7,0
	bnez	a4,0x4008a # __subtf3+0x528>
	li	a7,16
	j	0x4008a # __subtf3+0x528>
	or	a4,a5,t3
	beqz	a4,0x3fbc4 # __subtf3+0x62>
	beq	s1,a3,0x3ff48 # __subtf3+0x3e6>
	blez	a7,0x3fd5a # __subtf3+0x1f8>
	lui	a4,0x8
	addi	a4,a4,-1
	beq	s0,a4,0x40064 # __subtf3+0x502>
	li	a4,1
	slli	a4,a4,0x33
	or	a5,a5,a4
	li	a4,116
	ble	a7,a4,0x3fbf4 # __subtf3+0x92>
	or	t3,a5,t3
	snez	s2,t3
	j	0x3fc24 # __subtf3+0xc2>
	blez	a7,0x3ff48 # __subtf3+0x3e6>
	beqz	a6,0x3fe92 # __subtf3+0x330>
	lui	a4,0x8
	addi	a4,a4,-1
	beq	s0,a4,0x40064 # __subtf3+0x502>
	li	a4,1
	slli	a4,a4,0x33
	or	a5,a5,a4
	li	a4,116
	blt	a4,a7,0x40172 # __subtf3+0x610>
	li	a4,63
	ble	a7,a4,0x40270 # __subtf3+0x70e>
	addiw	s2,a7,-64
	li	a3,64
	srl	a4,a5,s2
	beq	a7,a3,0x3fe1c # __subtf3+0x2ba>
	li	a3,128
	subw	a7,a3,a7
	sll	a5,a5,a7
	or	t3,t3,a5
	snez	s2,t3
	or	s2,s2,a4
	j	0x4017a # __subtf3+0x618>
	lui	a0,0x8
	addi	a4,s0,1
	addi	a1,a0,-2 # 0x7ffe # exit-0x8122>
	and	a4,a4,a1
	bnez	a4,0x40142 # __subtf3+0x5e0>
	or	a4,t1,t6
	or	a1,a5,t3
	bnez	s0,0x40034 # __subtf3+0x4d2>
	beqz	a4,0x40360 # __subtf3+0x7fe>
	beqz	a1,0x4036c # __subtf3+0x80a>
	sub	a0,t6,t3
	sltu	a2,t6,a0
	sub	a4,t1,a5
	sub	a4,a4,a2
	srli	a2,a4,0x33
	andi	a2,a2,1
	beqz	a2,0x4054e # __subtf3+0x9ec>
	sub	s2,t3,t6
	sltu	a1,t3,s2
	sub	a5,a5,t1
	sub	t1,a5,a1
	or	a1,s2,t1
	mv	s1,a3
	bnez	a1,0x3fca4 # __subtf3+0x142>
	li	a0,0
	li	s0,0
	li	a7,0
	slli	s0,s0,0x31
	slli	a1,a1,0x10
	srli	a4,s0,0x31
	srli	a1,a1,0x10
	andi	s0,s1,1
	j	0x3fd3a # __subtf3+0x1d8>
	or	a4,a5,t3
	beqz	a4,0x4001a # __subtf3+0x4b8>
	addiw	a7,t4,-1
	beqz	a7,0x402e6 # __subtf3+0x784>
	lui	a4,0x8
	addi	a4,a4,-1
	bne	s0,a4,0x3fdec # __subtf3+0x28a>
	or	a5,t1,t6
	beqz	a5,0x4009e # __subtf3+0x53c>
	srli	a7,t1,0x32
	andi	a7,a7,1
	seqz	a7,a7
	slli	a7,a7,0x4
	lui	s0,0x8
	mv	s2,t6
	addi	s0,s0,-1
	lui	a5,0x8
	slli	a0,t1,0x3d
	srli	s2,s2,0x3
	addi	a5,a5,-1
	or	a0,a0,s2
	srli	a1,t1,0x3
	beq	s0,a5,0x4008a # __subtf3+0x528>
	j	0x3fe82 # __subtf3+0x320>
	li	t1,-1
	slli	t1,t1,0x33
	addi	t1,t1,-1
	sub	s0,s0,a0
	and	t1,a1,t1
	mv	s2,s4
	or	a1,s2,t1
	andi	a5,s2,7
	beqz	s0,0x3fca0 # __subtf3+0x13e>
	li	a3,0
	bnez	a5,0x3fce2 # __subtf3+0x180>
	li	a5,1
	slli	a5,a5,0x33
	and	a5,t1,a5
	li	a7,0
	j	0x3fd02 # __subtf3+0x1a0>
	beqz	s3,0x40008 # __subtf3+0x4a6>
	li	a5,3
	beq	s3,a5,0x40006 # __subtf3+0x4a4>
	li	a5,2
	beq	s3,a5,0x402f6 # __subtf3+0x794>
	li	a0,-1
	lui	s0,0x8
	ori	a7,a7,5
	srli	a1,a0,0x3
	addi	s0,s0,-2
	j	0x3fe82 # __subtf3+0x320>
	mv	a0,s2
	jal	ra,0x40ec8 # __clzdi2>
	addiw	a1,a0,-12
	li	a5,63
	addiw	a0,a0,52
	sll	a1,s2,a1
	blt	a5,a0,0x3fc64 # __subtf3+0x102>
	j	0x3fc4e # __subtf3+0xec>
	beqz	a7,0x400a2 # __subtf3+0x540>
	beqz	s0,0x4022e # __subtf3+0x6cc>
	lui	a4,0x8
	addi	a4,a4,-1
	beq	a6,a4,0x40562 # __subtf3+0xa00>
	li	a4,1
	slli	a4,a4,0x33
	negw	t4,t4
	or	t1,t1,a4
	li	a4,116
	blt	a4,t4,0x403de # __subtf3+0x87c>
	li	a4,63
	blt	a4,t4,0x40488 # __subtf3+0x926>
	li	a4,64
	subw	a4,a4,t4
	sll	s2,t1,a4
	srl	a3,t6,t4
	sll	a4,t6,a4
	or	s2,s2,a3
	snez	a4,a4
	srl	t4,t1,t4
	or	s2,s2,a4
	add	a5,a5,t4
	add	s2,s2,t3
	sltu	a1,s2,t3
	add	t1,a1,a5
	mv	s0,a6
	j	0x40182 # __subtf3+0x620>
	andi	a5,s2,15
	li	a4,4
	beq	a5,a4,0x3fcf2 # __subtf3+0x190>
	sltiu	a5,s2,-4
	xori	a5,a5,1
	slli	a5,a5,0x20
	srli	a5,a5,0x20
	add	t1,t1,a5
	li	a5,1
	slli	a5,a5,0x33
	and	a5,t1,a5
	addi	s2,s2,4
	li	a7,1
	bnez	a3,0x3fcfe # __subtf3+0x19c>
	j	0x3fd02 # __subtf3+0x1a0>
	beqz	s1,0x3fcf2 # __subtf3+0x190>
	addi	a4,s2,8
	sltu	s2,a4,s2
	li	a5,1
	add	t1,t1,s2
	slli	a5,a5,0x33
	and	a5,t1,a5
	mv	s2,a4
	li	a7,1
	bnez	a3,0x3fcfe # __subtf3+0x19c>
	j	0x3fd02 # __subtf3+0x1a0>
	beqz	s1,0x3ffd6 # __subtf3+0x474>
	li	a7,1
	li	a5,1
	slli	a5,a5,0x33
	and	a5,t1,a5
	li	s1,1
	bnez	a3,0x3fcfe # __subtf3+0x19c>
	j	0x3fd02 # __subtf3+0x1a0>
	bnez	s1,0x3ff1c # __subtf3+0x3ba>
	ori	a7,a7,5
	lui	a4,0x8
	andi	s0,s1,1
	addi	a4,a4,-1
	li	a1,0
	li	a0,0
	j	0x3fd3a # __subtf3+0x1d8>
	lui	a5,0x8
	addi	a5,a5,-1
	mv	s2,t6
	bne	s0,a5,0x3feee # __subtf3+0x38c>
	or	a5,t1,t6
	bnez	a5,0x3feb2 # __subtf3+0x350>
	li	a0,0
	li	a1,0
	li	a7,0
	j	0x4008a # __subtf3+0x528>
	addi	a0,a0,-1
	beq	s0,a0,0x402fc # __subtf3+0x79a>
	beq	a6,a0,0x4032a # __subtf3+0x7c8>
	bnez	a4,0x40310 # __subtf3+0x7ae>
	bnez	a1,0x4033a # __subtf3+0x7d8>
	lui	a1,0xffff
	li	a0,0
	slli	a1,a1,0x23
	li	a7,16
	csrs	fflags,a7
	ld	ra,40(sp)
	ld	s0,32(sp)
	ld	s1,24(sp)
	ld	s2,16(sp)
	ld	s3,8(sp)
	ld	s4,0(sp)
	addi	sp,sp,48
	ret
	or	t6,t1,t6
	beqz	t6,0x4009e # __subtf3+0x53c>
	srli	a7,t1,0x32
	slli	a0,t5,0x3
	andi	a7,a7,1
	srli	a0,a0,0x3
	slli	a5,t1,0x3d
	seqz	a7,a7
	or	a0,a0,a5
	srli	a1,t1,0x3
	slli	a7,a7,0x4
	or	a1,a1,a0
	beqz	a1,0x4000c # __subtf3+0x4aa>
	lui	a4,0x8
	li	a1,1
	li	s0,0
	addi	a4,a4,-1
	slli	a1,a1,0x2f
	li	a0,0
	j	0x3fd3a # __subtf3+0x1d8>
	mv	s1,a3
	li	a7,0
	j	0x4000c # __subtf3+0x4aa>
	lui	a4,0x8
	addi	a3,s0,1 # 0x8001 # exit-0x811f>
	addi	a1,a4,-2 # 0x7ffe # exit-0x8122>
	and	a0,a3,a1
	bnez	a0,0x40298 # __subtf3+0x736>
	or	a3,t1,t6
	bnez	s0,0x40412 # __subtf3+0x8b0>
	or	a1,a5,t3
	beqz	a3,0x40482 # __subtf3+0x920>
	beqz	a1,0x4036c # __subtf3+0x80a>
	add	s2,t6,t3
	add	a1,t1,a5
	sltu	t6,s2,t6
	add	t1,a1,t6
	srli	a5,t1,0x33
	andi	a5,a5,1
	beqz	a5,0x3fc9c # __subtf3+0x13a>
	li	a5,-1
	slli	a5,a5,0x33
	addi	a5,a5,-1
	and	t1,t1,a5
	li	s0,1
	andi	a5,s2,7
	j	0x3fefa # __subtf3+0x398>
	lui	a4,0x8
	addi	a4,a4,-1
	beq	a6,a4,0x40450 # __subtf3+0x8ee>
	li	a4,1
	slli	a4,a4,0x33
	negw	t4,t4
	or	t1,t1,a4
	li	a4,116
	blt	a4,t4,0x40214 # __subtf3+0x6b2>
	li	a4,63
	blt	a4,t4,0x403e8 # __subtf3+0x886>
	li	a4,64
	subw	a4,a4,t4
	srl	a2,t6,t4
	sll	s2,t1,a4
	sll	t6,t6,a4
	or	s2,s2,a2
	snez	t6,t6
	srl	t4,t1,t4
	or	s2,s2,t6
	sub	a5,a5,t4
	j	0x4021c # __subtf3+0x6ba>
	sub	s2,t6,t3
	sub	s4,t1,a5
	sltu	a1,t6,s2
	sub	s4,s4,a1
	srli	a4,s4,0x33
	andi	a4,a4,1
	bnez	a4,0x402d2 # __subtf3+0x770>
	or	a1,s2,s4
	bnez	a1,0x3fc42 # __subtf3+0xe0>
	addi	s0,s3,-2
	seqz	s1,s0
	li	a0,0
	li	s0,0
	j	0x3fe82 # __subtf3+0x320>
	or	t3,a5,t3
	snez	s2,t3
	add	s2,s2,t6
	sltu	t6,s2,t6
	add	t1,t1,t6
	srli	a5,t1,0x33
	andi	a5,a5,1
	beqz	a5,0x3feee # __subtf3+0x38c>
	lui	a5,0x8
	addi	s0,s0,1
	addi	a4,a5,-1 # 0x7fff # exit-0x8121>
	beq	s0,a4,0x403a6 # __subtf3+0x844>
	li	a1,-1
	slli	a1,a1,0x33
	addi	a1,a1,-1
	and	a1,t1,a1
	srli	a5,s2,0x1
	andi	s2,s2,1
	or	a5,a5,s2
	slli	s2,a1,0x3f
	or	s2,s2,a5
	srli	t1,a1,0x1
	andi	a5,a5,7
	j	0x3fefa # __subtf3+0x398>
	addiw	a0,a0,-63
	li	a5,64
	srl	a0,a1,a0
	beq	t1,a5,0x401de # __subtf3+0x67c>
	li	t1,128
	subw	t1,t1,a4
	sll	t1,a1,t1
	or	s4,s4,t1
	snez	a1,s4
	or	a1,a1,a0
	mv	s2,a1
	li	t1,0
	j	0x3fca0 # __subtf3+0x13e>
	addiw	s2,a7,-64
	li	a3,64
	srl	a4,a5,s2
	beq	a7,a3,0x4020a # __subtf3+0x6a8>
	li	a3,128
	subw	a7,a3,a7
	sll	a5,a5,a7
	or	t3,t3,a5
	snez	s2,t3
	or	s2,s2,a4
	j	0x3fc24 # __subtf3+0xc2>
	or	s2,t1,t6
	snez	s2,s2
	sub	s2,t3,s2
	sltu	a1,t3,s2
	sub	t1,a5,a1
	mv	s0,a6
	mv	s1,a3
	j	0x3fc30 # __subtf3+0xce>
	or	a4,t1,t6
	beqz	a4,0x40466 # __subtf3+0x904>
	not	t4,t4
	sext.w	t4,t4
	beqz	t4,0x40500 # __subtf3+0x99e>
	lui	a4,0x8
	addi	a4,a4,-1
	bne	a6,a4,0x3ff64 # __subtf3+0x402>
	or	t3,a5,t3
	beqz	t3,0x4009e # __subtf3+0x53c>
	srli	a7,a5,0x32
	slli	a0,a2,0x3
	andi	a7,a7,1
	srli	a0,a0,0x3
	slli	a4,a5,0x3d
	seqz	a7,a7
	or	a0,a0,a4
	srli	a1,a5,0x3
	slli	a7,a7,0x4
	j	0x4008a # __subtf3+0x528>
	li	a4,64
	subw	a4,a4,a7
	sll	s2,a5,a4
	srl	a3,t3,a7
	sll	a4,t3,a4
	or	s2,s2,a3
	snez	a4,a4
	srl	a5,a5,a7
	or	s2,s2,a4
	add	t1,t1,a5
	j	0x4017a # __subtf3+0x618>
	addi	a4,a4,-1
	beq	a3,a4,0x404b2 # __subtf3+0x950>
	add	a4,t6,t3
	add	a5,a5,t1
	sltu	a1,a4,t6
	add	a1,a1,a5
	slli	s2,a1,0x3f
	srli	a5,a4,0x1
	or	s2,s2,a5
	srli	t1,a1,0x1
	andi	a5,a5,7
	mv	s0,a3
	j	0x3fefa # __subtf3+0x398>
	lui	a4,0x8
	addi	a4,a4,-1
	beq	a6,a4,0x404d0 # __subtf3+0x96e>
	mv	t1,a5
	mv	s2,t3
	mv	s0,a6
	mv	s1,a3
	j	0x3feee # __subtf3+0x38c>
	sub	s2,t3,t6
	sub	a5,a5,t1
	sltu	t3,t3,s2
	sub	s4,a5,t3
	mv	s1,a3
	j	0x3fc42 # __subtf3+0xe0>
	add	s2,t6,t3
	add	a5,a5,t1
	sltu	a1,s2,t6
	add	t1,a5,a1
	j	0x40182 # __subtf3+0x620>
	beqz	s1,0x3ff1c # __subtf3+0x3ba>
	j	0x40008 # __subtf3+0x4a6>
	beqz	a4,0x40326 # __subtf3+0x7c4>
	srli	a0,t1,0x32
	andi	a0,a0,1
	bnez	a0,0x40308 # __subtf3+0x7a6>
	li	a7,16
	lui	a0,0x8
	addi	a0,a0,-1
	beq	a6,a0,0x4032a # __subtf3+0x7c8>
	bnez	a1,0x40428 # __subtf3+0x8c6>
	slli	a5,t5,0x3
	slli	a0,t1,0x3d
	srli	a5,a5,0x3
	or	a0,a0,a5
	srli	a1,t1,0x3
	j	0x4008a # __subtf3+0x528>
	bne	a6,s0,0x40042 # __subtf3+0x4e0>
	beqz	a1,0x4003e # __subtf3+0x4dc>
	srli	a1,a5,0x32
	andi	a1,a1,1
	bnez	a1,0x40338 # __subtf3+0x7d6>
	li	a7,16
	bnez	a4,0x40428 # __subtf3+0x8c6>
	slli	a0,a2,0x3
	srli	a0,a0,0x3
	slli	a4,a5,0x3d
	or	a0,a0,a4
	srli	a1,a5,0x3
	mv	s1,a3
	j	0x4008a # __subtf3+0x528>
	sub	s2,t6,t3
	sub	a1,t1,a5
	sltu	t6,t6,s2
	sub	t1,a1,t6
	j	0x3fc30 # __subtf3+0xce>
	beqz	a1,0x40476 # __subtf3+0x914>
	li	a1,0
	mv	t1,a5
	mv	t6,t3
	mv	s1,a3
	mv	s2,t6
	j	0x3fca8 # __subtf3+0x146>
	andi	a5,a3,15
	li	a2,4
	beq	a5,a2,0x3fcd0 # __subtf3+0x16e>
	sltiu	a5,a3,-4
	xori	a5,a5,1
	slli	a5,a5,0x20
	srli	a5,a5,0x20
	add	a4,a4,a5
	j	0x3fcd0 # __subtf3+0x16e>
	bnez	s1,0x3fcd0 # __subtf3+0x16e>
	sltiu	a5,a3,-8
	xori	a5,a5,1
	slli	a5,a5,0x20
	srli	a5,a5,0x20
	add	a4,a4,a5
	j	0x3fcd0 # __subtf3+0x16e>
	li	a7,1
	beqz	s1,0x3fcd0 # __subtf3+0x16e>
	j	0x4038e # __subtf3+0x82c>
	beqz	s3,0x403da # __subtf3+0x878>
	li	a4,3
	beq	s3,a4,0x4058a # __subtf3+0xa28>
	li	a4,2
	li	a7,5
	bne	s3,a4,0x3ff10 # __subtf3+0x3ae>
	bnez	s1,0x4000c # __subtf3+0x4aa>
	addi	s0,a5,-2
	li	t1,-1
	li	s2,-1
	j	0x3fd06 # __subtf3+0x1a4>
	slli	a5,a5,0x33
	and	a5,t1,a5
	bnez	a4,0x3fd02 # __subtf3+0x1a0>
	beqz	a7,0x3fd02 # __subtf3+0x1a0>
	ori	a7,a7,2
	j	0x3fd02 # __subtf3+0x1a0>
	li	a7,5
	j	0x4000c # __subtf3+0x4aa>
	or	s2,t1,t6
	snez	s2,s2
	j	0x3ff9a # __subtf3+0x438>
	addiw	s2,t4,-64
	li	a2,64
	srl	a4,t1,s2
	beq	t4,a2,0x40408 # __subtf3+0x8a6>
	li	a1,128
	subw	t4,a1,t4
	sll	a1,t1,t4
	or	t6,t6,a1
	snez	s2,t6
	or	s2,s2,a4
	j	0x4021c # __subtf3+0x6ba>
	addi	a4,a4,-1
	beq	s0,a4,0x40512 # __subtf3+0x9b0>
	beq	a6,a4,0x405a0 # __subtf3+0xa3e>
	beqz	a3,0x4053c # __subtf3+0x9da>
	or	a5,a5,t3
	beqz	a5,0x40314 # __subtf3+0x7b2>
	lui	a4,0x8
	li	a5,1
	li	s0,0
	addi	a4,a4,-1
	slli	a1,a5,0x2f
	li	a0,0
	j	0x3fd3a # __subtf3+0x1d8>
	sub	s2,t3,t6
	sub	a5,a5,t1
	sltu	a1,t3,s2
	sub	t1,a5,a1
	mv	s0,a6
	mv	s1,a3
	j	0x3fc30 # __subtf3+0xce>
	or	t3,a5,t3
	beqz	t3,0x4009c # __subtf3+0x53a>
	slli	a2,a2,0x3
	srli	a4,a5,0x32
	slli	a0,a5,0x3d
	srli	a2,a2,0x3
	j	0x3fd92 # __subtf3+0x230>
	lui	a4,0x8
	addi	a4,a4,-1
	beq	a6,a4,0x404e8 # __subtf3+0x986>
	mv	t1,a5
	mv	s2,t3
	mv	s0,a6
	j	0x3feee # __subtf3+0x38c>
	addi	s1,s3,-2
	seqz	s1,s1
	li	a0,0
	j	0x3fe82 # __subtf3+0x320>
	mv	t1,a5
	mv	s2,t3
	j	0x3fca0 # __subtf3+0x13e>
	addiw	a4,t4,-64
	li	a3,64
	srl	a4,t1,a4
	beq	t4,a3,0x404a8 # __subtf3+0x946>
	li	a1,128
	subw	t4,a1,t4
	sll	a1,t1,t4
	or	t6,t6,a1
	snez	s2,t6
	or	s2,s2,a4
	j	0x3ff9a # __subtf3+0x438>
	beqz	s3,0x403da # __subtf3+0x878>
	li	a5,3
	beq	s3,a5,0x405bc # __subtf3+0xa5a>
	li	a5,2
	li	a7,5
	bne	s3,a5,0x3ff1c # __subtf3+0x3ba>
	bnez	s1,0x4000c # __subtf3+0x4aa>
	mv	s0,a1
	li	t1,-1
	li	s2,-1
	j	0x3fd06 # __subtf3+0x1a4>
	or	a4,a5,t3
	beqz	a4,0x4059c # __subtf3+0xa3a>
	srli	a4,a5,0x32
	andi	a4,a4,1
	mv	t1,a5
	mv	t6,t3
	mv	s1,a3
	bnez	a4,0x404fc # __subtf3+0x99a>
	li	a7,16
	j	0x3fec0 # __subtf3+0x35e>
	or	a4,a5,t3
	beqz	a4,0x4002c # __subtf3+0x4ca>
	srli	a4,a5,0x32
	andi	a4,a4,1
	mv	t1,a5
	mv	t6,t3
	beqz	a4,0x404e4 # __subtf3+0x982>
	li	a7,0
	j	0x3fec0 # __subtf3+0x35e>
	add	s2,t6,t3
	add	a5,a5,t1
	sltu	a1,s2,t3
	add	t1,a5,a1
	mv	s0,a6
	j	0x40182 # __subtf3+0x620>
	beqz	a3,0x405ae # __subtf3+0xa4c>
	srli	a4,t1,0x32
	andi	a4,a4,1
	bnez	a4,0x4051e # __subtf3+0x9bc>
	li	a7,16
	lui	a4,0x8
	addi	a4,a4,-1
	bne	a6,a4,0x40420 # __subtf3+0x8be>
	or	t3,a5,t3
	beqz	t3,0x40314 # __subtf3+0x7b2>
	srli	a4,a5,0x32
	andi	a4,a4,1
	bnez	a4,0x40538 # __subtf3+0x9d6>
	li	a7,16
	bnez	a3,0x40428 # __subtf3+0x8c6>
	slli	a4,a2,0x3
	slli	a0,a5,0x3d
	srli	a4,a4,0x3
	or	a0,a0,a4
	srli	a1,a5,0x3
	j	0x4008a # __subtf3+0x528>
	or	a1,a0,a4
	beqz	a1,0x40476 # __subtf3+0x914>
	mv	t6,a0
	andi	a1,a0,7
	mv	t1,a4
	mv	s2,t6
	j	0x3fca8 # __subtf3+0x146>
	or	t3,a5,t3
	beqz	t3,0x4009e # __subtf3+0x53c>
	srli	a7,a5,0x32
	slli	a4,a2,0x3
	andi	a7,a7,1
	slli	a0,a5,0x3d
	srli	a4,a4,0x3
	seqz	a7,a7
	or	a0,a0,a4
	srli	a1,a5,0x3
	slli	a7,a7,0x4
	j	0x4008a # __subtf3+0x528>
	li	a7,5
	beqz	s1,0x4000c # __subtf3+0x4aa>
	li	a3,0
	addi	s0,a5,-2
	li	s2,-1
	li	t1,-1
	j	0x3fff6 # __subtf3+0x494>
	mv	s1,a3
	j	0x4002c # __subtf3+0x4ca>
	or	t3,a5,t3
	bnez	t3,0x4052e # __subtf3+0x9cc>
	bnez	a3,0x40314 # __subtf3+0x7b2>
	j	0x4053c # __subtf3+0x9da>
	bne	a6,s0,0x4053c # __subtf3+0x9da>
	or	t3,a5,t3
	bnez	t3,0x4052e # __subtf3+0x9cc>
	j	0x4053c # __subtf3+0x9da>
	beqz	s1,0x403da # __subtf3+0x878>
	li	a3,0
	li	a7,5
	mv	s0,a1
	li	s2,-1
	li	t1,-1
	j	0x3fff6 # __subtf3+0x494>

__fixtfsi:
	mv	a6,a0
	frrm	a5
	lui	a2,0x4
	slli	a5,a1,0x1
	slli	a4,a1,0x10
	srli	a5,a5,0x31
	addi	a3,a2,-2 # 0x3ffe # exit-0xc122>
	srli	a4,a4,0x10
	srli	a1,a1,0x3f
	blt	a3,a5,0x405fa # __fixtfsi+0x2e>
	bnez	a5,0x4065c # __fixtfsi+0x90>
	or	a4,a4,a0
	li	a0,0
	beqz	a4,0x40666 # __fixtfsi+0x9a>
	li	a3,1
	csrs	fflags,a3
	ret
	addi	a3,a2,29
	ble	a5,a3,0x4062a # __fixtfsi+0x5e>
	lui	a3,0x80000
	not	a3,a3
	addw	a0,a3,a1
	beqz	a1,0x40668 # __fixtfsi+0x9c>
	addi	a2,a2,30
	li	a3,16
	bne	a5,a2,0x405f4 # __fixtfsi+0x28>
	srli	a5,a4,0x11
	bnez	a5,0x405f4 # __fixtfsi+0x28>
	slli	a3,a4,0x2f
	or	a5,a3,a6
	bnez	a5,0x405f2 # __fixtfsi+0x26>
	ret
	li	a3,1
	slli	a3,a3,0x30
	or	a4,a4,a3
	lui	a2,0x4
	lui	a3,0xffffc
	addiw	a3,a3,17
	addiw	a2,a2,47
	addw	a3,a3,a5
	subw	a5,a2,a5
	sll	a3,a4,a3
	srl	a4,a4,a5
	or	a5,a3,a0
	sext.w	a0,a4
	beqz	a1,0x40656 # __fixtfsi+0x8a>
	negw	a0,a0
	sext.w	a0,a0
	bnez	a5,0x405f2 # __fixtfsi+0x26>
	ret
	li	a0,0
	li	a3,1
	csrs	fflags,a3
	j	0x405f8 # __fixtfsi+0x2c>
	ret
	li	a3,16
	csrs	fflags,a3
	j	0x405f8 # __fixtfsi+0x2c>

__fixunstfsi:
	frrm	a5
	lui	a2,0x4
	slli	a3,a1,0x1
	slli	a5,a1,0x10
	srli	a3,a3,0x31
	addi	a4,a2,-2 # 0x3ffe # exit-0xc122>
	srli	a5,a5,0x10
	srli	a1,a1,0x3f
	blt	a4,a3,0x4069c # __fixunstfsi+0x2c>
	bnez	a3,0x40692 # __fixunstfsi+0x22>
	or	a5,a5,a0
	beqz	a5,0x406ea # __fixunstfsi+0x7a>
	li	a5,1
	li	a0,0
	csrs	fflags,a5
	ret
	seqz	a4,a1
	add	a4,a4,a2
	addi	a4,a4,30
	blt	a3,a4,0x406b4 # __fixunstfsi+0x44>
	addi	a0,a1,-1 # 0xfffefff # __BSS_END__+0xffb0c77>
	li	a5,16
	csrs	fflags,a5
	j	0x4069a # __fixunstfsi+0x2a>
	beqz	a1,0x406c0 # __fixunstfsi+0x50>
	li	a5,16
	li	a0,0
	csrs	fflags,a5
	j	0x4069a # __fixunstfsi+0x2a>
	li	a4,1
	slli	a4,a4,0x30
	or	a5,a5,a4
	lui	a4,0xffffc
	addiw	a4,a4,17
	lui	a2,0x4
	addw	a4,a4,a3
	addiw	a2,a2,47
	sll	a4,a5,a4
	subw	a3,a2,a3
	srl	a5,a5,a3
	or	a4,a4,a0
	sext.w	a0,a5
	li	a5,1
	bnez	a4,0x40696 # __fixunstfsi+0x26>
	ret
	li	a0,0
	ret

__floatsitf:
	addi	sp,sp,-32
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	beqz	a0,0x40740 # __floatsitf+0x52>
	sext.w	a1,a0
	srliw	s1,a0,0x1f
	bltz	a0,0x40748 # __floatsitf+0x5a>
	slli	s0,a1,0x20
	srli	s0,s0,0x20
	mv	a0,s0
	jal	ra,0x40ec8 # __clzdi2>
	lui	a5,0x4
	addiw	a1,a0,-15
	addiw	a5,a5,62
	sll	a1,s0,a1
	subw	a5,a5,a0
	slli	a1,a1,0x10
	slli	a5,a5,0x31
	srli	a1,a1,0x10
	srli	a5,a5,0x31
	ld	ra,24(sp)
	ld	s0,16(sp)
	slli	s1,s1,0xf
	slli	a1,a1,0x10
	or	s1,s1,a5
	slli	s1,s1,0x30
	srli	a1,a1,0x10
	or	a1,a1,s1
	li	a0,0
	ld	s1,8(sp)
	addi	sp,sp,32
	ret
	li	s1,0
	li	a5,0
	li	a1,0
	j	0x40728 # __floatsitf+0x3a>
	negw	a1,a1
	j	0x40704 # __floatsitf+0x16>

__floatunsitf:
	beqz	a0,0x4078c # __floatunsitf+0x3e>
	addi	sp,sp,-16
	sd	s0,0(sp)
	slli	s0,a0,0x20
	srli	s0,s0,0x20
	mv	a0,s0
	sd	ra,8(sp)
	jal	ra,0x40ec8 # __clzdi2>
	addiw	a1,a0,-15
	lui	a5,0x4
	sll	a1,s0,a1
	addiw	a5,a5,62
	subw	a5,a5,a0
	slli	a1,a1,0x10
	ld	ra,8(sp)
	ld	s0,0(sp)
	slli	a5,a5,0x31
	srli	a1,a1,0x10
	srli	a5,a5,0x31
	slli	a1,a1,0x10
	slli	a5,a5,0x30
	srli	a1,a1,0x10
	li	a0,0
	or	a1,a1,a5
	addi	sp,sp,16
	ret
	li	a1,0
	li	a5,0
	slli	a1,a1,0x10
	slli	a5,a5,0x30
	srli	a1,a1,0x10
	li	a0,0
	or	a1,a1,a5
	ret

__extendsftf2:
	addi	sp,sp,-32
	fmv.x.w	a1,fa0
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	frrm	a5
	srliw	a5,a1,0x17
	andi	a5,a5,255
	addi	a4,a5,1 # 0x4001 # exit-0xc11f>
	slli	a0,a1,0x29
	srli	a3,a0,0x29
	andi	a4,a4,254
	mv	s0,a3
	srliw	s1,a1,0x1f
	beqz	a4,0x407fa # __extendsftf2+0x5e>
	lui	a1,0x4
	addi	a1,a1,-128 # 0x3f80 # exit-0xc1a0>
	add	a1,a1,a5
	slli	a1,a1,0x31
	slli	s0,a3,0x19
	srli	a1,a1,0x31
	slli	a1,a1,0x31
	slli	s0,s0,0x10
	srli	a5,a1,0x1
	srli	a1,s0,0x10
	slli	s1,s1,0x3f
	or	a1,a1,a5
	or	a1,a1,s1
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	li	a0,0
	addi	sp,sp,32
	ret
	bnez	a5,0x40804 # __extendsftf2+0x68>
	bnez	a3,0x4082a # __extendsftf2+0x8e>
	li	a1,0
	li	s0,0
	j	0x407dc # __extendsftf2+0x40>
	beqz	a3,0x4084c # __extendsftf2+0xb0>
	li	s0,1
	slli	a0,a3,0x19
	slli	s0,s0,0x2f
	li	a1,-1
	or	a0,a0,s0
	srli	a1,a1,0x10
	srli	a3,a3,0x16
	and	a0,a0,a1
	beqz	a3,0x40856 # __extendsftf2+0xba>
	and	a0,a0,a1
	lui	a1,0x7fff
	slli	a1,a1,0x24
	slli	s1,s1,0x3f
	or	a1,a1,a0
	or	a1,a1,s1
	j	0x407ee # __extendsftf2+0x52>
	mv	a0,a3
	jal	ra,0x40ec8 # __clzdi2>
	addiw	a5,a0,-15
	sll	s0,s0,a5
	lui	a5,0x4
	addiw	a5,a5,-87
	subw	a5,a5,a0
	slli	s0,s0,0x10
	slli	a5,a5,0x31
	srli	s0,s0,0x10
	srli	a1,a5,0x31
	j	0x407dc # __extendsftf2+0x40>
	lui	a5,0x8
	addi	a1,a5,-1 # 0x7fff # exit-0x8121>
	li	s0,0
	j	0x407dc # __extendsftf2+0x40>
	and	a0,a0,a1
	lui	a1,0x7fff
	slli	a1,a1,0x24
	slli	s1,s1,0x3f
	or	a1,a1,a0
	or	a1,a1,s1
	csrsi	fflags,16
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	li	a0,0
	addi	sp,sp,32
	ret

__extenddftf2:
	addi	sp,sp,-32
	fmv.x.d	a1,fa0
	sd	ra,24(sp)
	sd	s0,16(sp)
	sd	s1,8(sp)
	frrm	a5
	srli	a5,a1,0x34
	andi	a5,a5,2047
	li	a2,-1
	addi	a3,a5,1
	srli	s0,a2,0xc
	andi	a3,a3,2046
	and	s0,s0,a1
	srli	s1,a1,0x3f
	beqz	a3,0x408cc # __extenddftf2+0x58>
	lui	a4,0x4
	addi	a4,a4,-1024 # 0x3c00 # exit-0xc520>
	add	a5,a5,a4
	slli	a5,a5,0x31
	srli	a1,s0,0x4
	srli	a5,a5,0x31
	slli	s0,s0,0x3c
	slli	a5,a5,0x31
	srli	a5,a5,0x1
	slli	s1,s1,0x3f
	or	a5,a5,a1
	mv	a0,s0
	or	a1,a5,s1
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret
	bnez	a5,0x40904 # __extenddftf2+0x90>
	beqz	s0,0x40932 # __extenddftf2+0xbe>
	mv	a0,s0
	jal	ra,0x40ec8 # __clzdi2>
	sext.w	a4,a0
	li	a5,14
	blt	a5,a4,0x4095e # __extenddftf2+0xea>
	li	a4,15
	subw	a4,a4,a0
	addiw	a5,a0,49
	srl	a4,s0,a4
	sll	s0,s0,a5
	lui	a5,0x4
	addiw	a5,a5,-1012
	subw	a5,a5,a0
	slli	a4,a4,0x10
	slli	a5,a5,0x31
	srli	a1,a4,0x10
	srli	a5,a5,0x31
	j	0x408b4 # __extenddftf2+0x40>
	beqz	s0,0x40938 # __extenddftf2+0xc4>
	li	a5,1
	slli	a1,a5,0x2f
	srli	a4,s0,0x4
	slli	a5,a5,0x33
	or	a4,a4,a1
	and	a5,a5,s0
	srli	a1,a2,0x10
	slli	s0,s0,0x3c
	and	a4,a4,a1
	beqz	a5,0x40940 # __extenddftf2+0xcc>
	and	a4,a4,a1
	lui	a1,0x7fff
	slli	a1,a1,0x24
	slli	s1,s1,0x3f
	or	a1,a1,a4
	mv	a0,s0
	or	a1,a1,s1
	j	0x408c2 # __extenddftf2+0x4e>
	li	a5,0
	li	a1,0
	j	0x408b4 # __extenddftf2+0x40>
	lui	a5,0x8
	addi	a5,a5,-1
	li	a1,0
	j	0x408b4 # __extenddftf2+0x40>
	and	a4,a4,a1
	lui	a1,0x7fff
	slli	a1,a1,0x24
	slli	s1,s1,0x3f
	or	a1,a1,a4
	mv	a0,s0
	or	a1,a1,s1
	csrsi	fflags,16
	ld	ra,24(sp)
	ld	s0,16(sp)
	ld	s1,8(sp)
	addi	sp,sp,32
	ret
	addiw	a4,a0,-15
	sll	a4,s0,a4
	li	s0,0
	j	0x408f0 # __extenddftf2+0x7c>

__trunctfsf2:
	frrm	t1
	lui	a3,0x8
	srli	a4,a1,0x30
	addi	a7,a3,-1 # 0x7fff # exit-0x8121>
	and	a4,a4,a7
	slli	a5,a1,0x10
	addi	a2,a4,1
	addi	a3,a3,-2
	srli	a6,a5,0xd
	and	a3,a3,a2
	srli	a5,a0,0x3d
	sext.w	t1,t1
	srli	a1,a1,0x3f
	or	a5,a5,a6
	slli	a0,a0,0x3
	beqz	a3,0x40a3c # __trunctfsf2+0xd2>
	lui	a3,0xffffc
	addi	a3,a3,128 # 0xffffffffffffc080 # __BSS_END__+0xfffffffffffadcf8>
	add	a4,a4,a3
	li	a3,254
	ble	a4,a3,0x409e0 # __trunctfsf2+0x76>
	beqz	t1,0x40aa8 # __trunctfsf2+0x13e>
	li	a5,3
	beq	t1,a5,0x40ba0 # __trunctfsf2+0x236>
	li	a5,2
	li	a2,5
	beq	t1,a5,0x40bb2 # __trunctfsf2+0x248>
	li	a5,3
	beq	t1,a5,0x40bae # __trunctfsf2+0x244>
	li	a5,2
	beq	t1,a5,0x40b98 # __trunctfsf2+0x22e>
	slliw	a5,a1,0x1f
	lui	a1,0x7f800
	addiw	a1,a1,-1
	or	a1,a1,a5
	csrs	fflags,a2
	fmv.w.x	fa0,a1
	ret
	blez	a4,0x40ab6 # __trunctfsf2+0x14c>
	slli	a3,a5,0x27
	or	a0,a0,a3
	snez	a0,a0
	srli	a5,a5,0x19
	or	a5,a5,a0
	andi	a3,a5,7
	li	a2,0
	beqz	a3,0x40b7a # __trunctfsf2+0x210>
	li	a3,2
	beq	t1,a3,0x40b50 # __trunctfsf2+0x1e6>
	li	a3,3
	beq	t1,a3,0x40b36 # __trunctfsf2+0x1cc>
	beqz	t1,0x40b10 # __trunctfsf2+0x1a6>
	lui	a3,0x4000
	and	a3,a3,a5
	beqz	a2,0x40bf6 # __trunctfsf2+0x28c>
	ori	a2,a2,2
	sext.w	a2,a2
	beqz	a3,0x40b7a # __trunctfsf2+0x210>
	addi	a4,a4,1
	li	a3,255
	beq	a4,a3,0x40b1e # __trunctfsf2+0x1b4>
	slli	a5,a5,0x26
	srli	a5,a5,0x29
	slliw	a4,a4,0x17
	or	a4,a4,a5
	slliw	a1,a1,0x1f
	or	a1,a1,a4
	j	0x409d6 # __trunctfsf2+0x6c>
	or	a0,a0,a5
	bnez	a4,0x40a60 # __trunctfsf2+0xf6>
	beqz	a0,0x40a9e # __trunctfsf2+0x134>
	li	a5,2
	beq	t1,a5,0x40bc4 # __trunctfsf2+0x25a>
	li	a5,1
	li	a4,2
	li	a3,1
	li	a2,3
	beq	t1,a2,0x40b88 # __trunctfsf2+0x21e>
	beqz	t1,0x40b58 # __trunctfsf2+0x1ee>
	li	a4,0
	li	a2,1
	bnez	a3,0x40a02 # __trunctfsf2+0x98>
	j	0x40a16 # __trunctfsf2+0xac>
	beqz	a0,0x40a8e # __trunctfsf2+0x124>
	li	a2,0
	bne	a4,a7,0x40a70 # __trunctfsf2+0x106>
	srli	a5,a5,0x32
	seqz	a2,a5
	slli	a2,a2,0x4
	li	a1,0
	li	a4,255
	lui	a3,0x400
	slliw	a4,a4,0x17
	or	a4,a4,a3
	slliw	a1,a1,0x1f
	or	a1,a1,a4
	bnez	a2,0x409d6 # __trunctfsf2+0x6c>
	fmv.w.x	fa0,a1
	ret
	lui	a5,0x7f800
	slliw	a1,a1,0x1f
	or	a1,a1,a5
	fmv.w.x	fa0,a1
	ret
	slliw	a1,a1,0x1f
	fmv.w.x	fa0,a1
	ret
	slliw	a1,a1,0x1f
	lui	a5,0x7f800
	or	a1,a1,a5
	li	a2,5
	j	0x409d6 # __trunctfsf2+0x6c>
	li	a3,-23
	ble	a3,a4,0x40ad6 # __trunctfsf2+0x16c>
	li	a5,2
	beq	t1,a5,0x40b48 # __trunctfsf2+0x1de>
	li	a5,3
	beq	t1,a5,0x40b8e # __trunctfsf2+0x224>
	beqz	t1,0x40b90 # __trunctfsf2+0x226>
	li	a5,1
	li	a3,0
	li	a2,1
	li	a4,0
	j	0x40a16 # __trunctfsf2+0xac>
	li	a3,1
	slli	a3,a3,0x33
	or	a5,a5,a3
	addiw	a3,a4,38
	sll	a3,a5,a3
	or	a0,a0,a3
	li	a3,26
	subw	a4,a3,a4
	srl	a5,a5,a4
	snez	a0,a0
	or	a5,a5,a0
	slli	a4,a5,0x1
	andi	a2,a4,7
	andi	a3,a5,7
	bnez	a2,0x40bfa # __trunctfsf2+0x290>
	li	a4,0
	li	a2,1
	bnez	a3,0x409fc # __trunctfsf2+0x92>
	li	a2,0
	j	0x40b7a # __trunctfsf2+0x210>
	andi	a3,a5,15
	li	a0,4
	beq	a3,a0,0x40a0c # __trunctfsf2+0xa2>
	addi	a5,a5,4
	j	0x40a0c # __trunctfsf2+0xa2>
	ori	a5,a2,5
	sext.w	a2,a5
	bnez	t1,0x409be # __trunctfsf2+0x54>
	slliw	a1,a1,0x1f
	lui	a5,0x7f800
	or	a1,a1,a5
	j	0x409d6 # __trunctfsf2+0x6c>
	bnez	a1,0x40b3a # __trunctfsf2+0x1d0>
	addi	a5,a5,8
	li	a0,1
	lui	a3,0x4000
	and	a3,a3,a5
	beqz	a2,0x40c06 # __trunctfsf2+0x29c>
	mv	a2,a0
	j	0x40bce # __trunctfsf2+0x264>
	beqz	a1,0x40acc # __trunctfsf2+0x162>
	li	a4,0
	li	a2,1
	li	a5,1
	beqz	a1,0x40a0c # __trunctfsf2+0xa2>
	addi	a5,a5,8
	j	0x40a0c # __trunctfsf2+0xa2>
	andi	a2,a4,15
	li	a0,4
	addi	a4,a4,4
	beq	a2,a0,0x40a58 # __trunctfsf2+0xee>
	srli	a2,a4,0x1b
	xori	a2,a2,1
	andi	a2,a2,1
	li	a4,0
	bnez	a3,0x40a02 # __trunctfsf2+0x98>
	bnez	a2,0x40ace # __trunctfsf2+0x164>
	li	a2,1
	li	a4,0
	srli	a3,a5,0x3
	slli	a3,a3,0x29
	srli	a3,a3,0x29
	andi	a4,a4,255
	j	0x40a7a # __trunctfsf2+0x110>
	addi	a4,a4,8
	beqz	a1,0x40b64 # __trunctfsf2+0x1fa>
	j	0x40ace # __trunctfsf2+0x164>
	bnez	a1,0x40acc # __trunctfsf2+0x162>
	li	a4,0
	li	a2,1
	li	a5,1
	j	0x40a02 # __trunctfsf2+0x98>
	beqz	a1,0x409ca # __trunctfsf2+0x60>
	li	a1,1
	j	0x40b2a # __trunctfsf2+0x1c0>
	beqz	a1,0x40bbc # __trunctfsf2+0x252>
	li	a0,5
	li	a2,0
	li	a5,-1
	li	a4,254
	j	0x40b3c # __trunctfsf2+0x1d2>
	beqz	a1,0x40b2a # __trunctfsf2+0x1c0>
	j	0x409ca # __trunctfsf2+0x60>
	bnez	a1,0x40bd8 # __trunctfsf2+0x26e>
	li	a5,-1
	li	a4,254
	j	0x40a20 # __trunctfsf2+0xb6>
	lui	a1,0x7f800
	li	a2,5
	j	0x409d6 # __trunctfsf2+0x6c>
	bnez	a1,0x40bde # __trunctfsf2+0x274>
	li	a4,0
	li	a3,0
	li	a5,1
	li	a2,1
	andi	a0,a2,1
	beqz	a0,0x40a1c # __trunctfsf2+0xb2>
	j	0x40a16 # __trunctfsf2+0xac>
	lui	a1,0xff800
	j	0x409d6 # __trunctfsf2+0x6c>
	li	a3,1
	li	a4,2
	li	a5,1
	addi	a2,a4,8
	srli	a2,a2,0x1b
	xori	a2,a2,1
	andi	a2,a2,1
	beqz	a3,0x40b74 # __trunctfsf2+0x20a>
	li	a4,0
	j	0x409fc # __trunctfsf2+0x92>
	li	a2,1
	j	0x40a1c # __trunctfsf2+0xb2>
	li	a2,2
	bne	t1,a2,0x40a4e # __trunctfsf2+0xe4>
	beqz	a1,0x40ace # __trunctfsf2+0x164>
	j	0x40be4 # __trunctfsf2+0x27a>
	mv	a2,a0
	j	0x40a1c # __trunctfsf2+0xb2>

__trunctfdf2:
	frrm	a7
	lui	a2,0x8
	srli	a4,a1,0x30
	addi	t3,a2,-1 # 0x7fff # exit-0x8121>
	li	a5,-1
	and	a4,a4,t3
	srli	a3,a5,0x10
	and	a3,a3,a1
	addi	t1,a4,1
	addi	a2,a2,-2
	srli	a6,a0,0x3d
	slli	a3,a3,0x3
	and	a2,t1,a2
	or	a3,a6,a3
	sext.w	a7,a7
	srli	a1,a1,0x3f
	slli	a6,a0,0x3
	beqz	a2,0x40cf2 # __trunctfdf2+0xe8>
	lui	a2,0xffffc
	addi	a2,a2,1024 # 0xffffffffffffc400 # __BSS_END__+0xfffffffffffae078>
	add	a4,a4,a2
	li	a2,2046
	ble	a4,a2,0x40c88 # __trunctfdf2+0x7e>
	beqz	a7,0x40d58 # __trunctfdf2+0x14e>
	li	a4,3
	beq	a7,a4,0x40e8c # __trunctfdf2+0x282>
	li	a4,2
	li	a6,5
	beq	a7,a4,0x40e9e # __trunctfdf2+0x294>
	li	a5,3
	beq	a7,a5,0x40e9a # __trunctfdf2+0x290>
	li	a5,2
	beq	a7,a5,0x40e76 # __trunctfdf2+0x26c>
	li	a4,2047
	slli	a4,a4,0x34
	slli	a5,a1,0x3f
	addi	a4,a4,-1
	or	a5,a5,a4
	csrs	fflags,a6
	fmv.d.x	fa0,a5
	ret
	blez	a4,0x40d6c # __trunctfdf2+0x162>
	slli	a0,a0,0x7
	srli	a6,a6,0x3c
	snez	a0,a0
	or	a0,a0,a6
	slli	a3,a3,0x4
	andi	a2,a0,7
	or	a3,a3,a0
	li	a5,0
	li	a6,0
	beqz	a2,0x40cd6 # __trunctfdf2+0xcc>
	li	a2,2
	beq	a7,a2,0x40df2 # __trunctfdf2+0x1e8>
	li	a2,3
	beq	a7,a2,0x40dfa # __trunctfdf2+0x1f0>
	beqz	a7,0x40dca # __trunctfdf2+0x1c0>
	li	a2,1
	slli	a2,a2,0x37
	and	a2,a2,a3
	li	a6,1
	beqz	a5,0x40cca # __trunctfdf2+0xc0>
	ori	a5,a5,2
	sext.w	a6,a5
	beqz	a2,0x40cd6 # __trunctfdf2+0xcc>
	addi	a4,a4,1
	li	a5,2047
	beq	a4,a5,0x40dd8 # __trunctfdf2+0x1ce>
	slli	a5,a3,0x9
	srli	a5,a5,0xc
	andi	a4,a4,2047
	slli	a4,a4,0x34
	or	a5,a5,a4
	slli	a1,a1,0x3f
	or	a5,a5,a1
	bnez	a6,0x40c7e # __trunctfdf2+0x74>
	fmv.d.x	fa0,a5
	ret
	or	a6,a3,a6
	bnez	a4,0x40d28 # __trunctfdf2+0x11e>
	slli	a5,a1,0x3f
	beqz	a6,0x40c82 # __trunctfdf2+0x78>
	li	a4,1
	li	a3,1
	li	a5,2
	li	a2,2
	beq	a7,a2,0x40e84 # __trunctfdf2+0x27a>
	li	a2,3
	beq	a7,a2,0x40e56 # __trunctfdf2+0x24c>
	beqz	a7,0x40e5e # __trunctfdf2+0x254>
	srli	a5,a5,0x38
	xori	a5,a5,1
	andi	a5,a5,1
	li	a6,1
	beqz	a4,0x40ec4 # __trunctfdf2+0x2ba>
	li	a4,0
	j	0x40ca8 # __trunctfdf2+0x9e>
	beqz	a6,0x40d46 # __trunctfdf2+0x13c>
	li	a6,0
	bne	a4,t3,0x40d3a # __trunctfdf2+0x130>
	srli	a3,a3,0x32
	seqz	a6,a3
	slli	a6,a6,0x4
	li	a5,1
	li	a1,0
	li	a4,2047
	slli	a5,a5,0x33
	j	0x40ce0 # __trunctfdf2+0xd6>
	li	a4,2047
	slli	a5,a1,0x3f
	slli	a4,a4,0x34
	or	a5,a5,a4
	fmv.d.x	fa0,a5
	ret
	li	a4,2047
	slli	a5,a1,0x3f
	slli	a4,a4,0x34
	or	a5,a5,a4
	li	a6,5
	csrs	fflags,a6
	j	0x40c82 # __trunctfdf2+0x78>
	li	a5,-52
	blt	a4,a5,0x40e16 # __trunctfdf2+0x20c>
	li	a5,61
	li	a2,1
	sub	a5,a5,a4
	slli	a2,a2,0x33
	li	a0,63
	or	a3,a3,a2
	sext.w	a4,a4
	ble	a5,a0,0x40e2a # __trunctfdf2+0x220>
	li	a2,-3
	subw	a2,a2,a4
	li	a0,64
	srl	a2,a3,a2
	beq	a5,a0,0x40da6 # __trunctfdf2+0x19c>
	addiw	a4,a4,67
	sll	a3,a3,a4
	or	a6,a6,a3
	snez	a3,a6
	or	a3,a3,a2
	beqz	a3,0x40ebe # __trunctfdf2+0x2b4>
	slli	a5,a3,0x1
	andi	a2,a5,7
	andi	a4,a3,7
	bnez	a2,0x40d06 # __trunctfdf2+0xfc>
	srli	a5,a5,0x38
	xori	a5,a5,1
	andi	a5,a5,1
	li	a6,0
	j	0x40d20 # __trunctfdf2+0x116>
	andi	a2,a3,15
	li	a0,4
	beq	a2,a0,0x40cb8 # __trunctfdf2+0xae>
	addi	a3,a3,4
	j	0x40cb8 # __trunctfdf2+0xae>
	ori	a6,a6,5
	bnez	a7,0x40c64 # __trunctfdf2+0x5a>
	li	a4,2047
	slli	a5,a1,0x3f
	slli	a4,a4,0x34
	or	a5,a5,a4
	csrs	fflags,a6
	j	0x40c82 # __trunctfdf2+0x78>
	beqz	a1,0x40cb8 # __trunctfdf2+0xae>
	addi	a3,a3,8
	j	0x40cb8 # __trunctfdf2+0xae>
	bnez	a1,0x40dfe # __trunctfdf2+0x1f4>
	addi	a3,a3,8
	li	a6,1
	li	a2,1
	slli	a2,a2,0x37
	and	a2,a2,a3
	beqz	a5,0x40cca # __trunctfdf2+0xc0>
	andi	a5,a6,1
	beqz	a5,0x40cca # __trunctfdf2+0xc0>
	mv	a5,a6
	j	0x40cc2 # __trunctfdf2+0xb8>
	li	a5,2
	beq	a7,a5,0x40e7e # __trunctfdf2+0x274>
	li	a5,3
	beq	a7,a5,0x40e50 # __trunctfdf2+0x246>
	li	a3,1
	li	a4,0
	li	a5,1
	j	0x40cae # __trunctfdf2+0xa4>
	addiw	a2,a4,3
	li	a5,61
	subw	a4,a5,a4
	sll	a5,a6,a2
	snez	a5,a5
	srl	a6,a6,a4
	or	a6,a6,a5
	sll	a3,a3,a2
	or	a3,a3,a6
	j	0x40dac # __trunctfdf2+0x1a2>
	li	a4,1
	li	a3,1
	li	a5,2
	bnez	a1,0x40d16 # __trunctfdf2+0x10c>
	addi	a5,a5,8
	j	0x40d16 # __trunctfdf2+0x10c>
	andi	a2,a5,15
	li	a0,4
	beq	a2,a0,0x40d16 # __trunctfdf2+0x10c>
	addi	a5,a5,4
	srli	a5,a5,0x38
	xori	a5,a5,1
	andi	a5,a5,1
	li	a6,1
	j	0x40d20 # __trunctfdf2+0x116>
	beqz	a1,0x40c70 # __trunctfdf2+0x66>
	li	a1,1
	j	0x40de0 # __trunctfdf2+0x1d6>
	li	a4,1
	li	a3,1
	li	a5,2
	beqz	a1,0x40d16 # __trunctfdf2+0x10c>
	addi	a5,a5,8
	j	0x40d16 # __trunctfdf2+0x10c>
	beqz	a1,0x40ea8 # __trunctfdf2+0x29e>
	li	a5,0
	li	a3,-1
	li	a6,5
	li	a4,2046
	j	0x40e00 # __trunctfdf2+0x1f6>
	beqz	a1,0x40de0 # __trunctfdf2+0x1d6>
	j	0x40c70 # __trunctfdf2+0x66>
	bnez	a1,0x40eb6 # __trunctfdf2+0x2ac>
	li	a3,-1
	li	a4,2046
	j	0x40ccc # __trunctfdf2+0xc2>
	li	a5,2047
	slli	a5,a5,0x34
	li	a6,5
	csrs	fflags,a6
	j	0x40c82 # __trunctfdf2+0x78>
	slli	a5,a5,0x34
	csrs	fflags,a6
	j	0x40c82 # __trunctfdf2+0x78>
	slli	a5,a1,0x3f
	j	0x40c82 # __trunctfdf2+0x78>
	li	a4,0
	j	0x40e00 # __trunctfdf2+0x1f6>

__clzdi2:
	li	a5,56
	srl	a4,a0,a5
	andi	a3,a4,255
	bnez	a3,0x40ef2 # __clzdi2+0x2a>
	addi	a5,a5,-8
	bnez	a5,0x40ecc # __clzdi2+0x4>
	auipc	a4,0xc
	ld	a4,1230(a4) # 0x4d3a8 # _GLOBAL_OFFSET_TABLE_+0xa0>
	add	a0,a0,a4
	lbu	a0,0(a0) # 0x8000 # exit-0x8120>
	li	a5,64
	subw	a0,a5,a0
	ret
	li	a0,64
	sub	a5,a0,a5
	mv	a0,a4
	auipc	a4,0xc
	ld	a4,1196(a4) # 0x4d3a8 # _GLOBAL_OFFSET_TABLE_+0xa0>
	add	a0,a0,a4
	lbu	a0,0(a0)
	subw	a0,a5,a0
	ret
